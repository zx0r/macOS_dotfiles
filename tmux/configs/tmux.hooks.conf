# NOTE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#  ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
#  ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#     ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#     ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#     ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#     ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
#
#  Author       : zx0r
#  License      : MIT License
#  Description  : Stay hungry; Stay foolish
#  Contact Info : https://github.com/zx0r/hyprdots-gentoo

# ━━━ Hooks ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# show-hooks [-gpw]    [-t target-pane]
# set-hook   [-agpRuw] [-t target-pane] hook-name command
#   -a  → append to hook
#   -g  → add hook to global list
#   -p  → set pane hooks
#   -R  → run hook immediately
#   -t  → specify target session
#   -u  → unset a hook
#   -w  → set window hooks

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# client-active           when a client becomes the latest active client of its session.
# client-focus-in         when focus enters a client
# client-focus-out        when focus exits a client
# client-resized          when a client is resized.
# client-session-changed  when a client's attached session is changed.
# pane-died               when the program running in a pane exits, but remain-on-exit is on so the pane has not closed.
# pane-exited             when the program running in a pane exits.
# pane-focus-in           when the focus enters a pane, if the focus-events option is on.
# pane-focus-out          when the focus exits a pane, if the focus-events option is on.
# pane-set-clipboard      when the terminal clipboard is set using the xterm(1) escape sequence.
# session-created         when a new session created.
# session-closed          when a session closed.
# window-linked           when a window is linked into a session.
# window-renamed          when a window is renamed.
# window-resized          when a window is resized.  This may be after the client-resized hook is run.
# window-unlinked         when a window is unlinked from a session.

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g after-new-session  { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }
set-hook -g after-new-window   { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }

set-hook -wg window-linked      { if -F '#{==:#{window_panes},1}' 'display "link one"' 'display "link two"' }
set-hook -wg window-unlinked    { if -F '#{==:#{window_panes},1}' 'display "unlink one"' 'display "unlink two"' }

set-hook -g after-kill-pane    { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }
set-hook -g pane-exited        { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }

# Set hook to adjust pane border status after splitting a window
set-hook -g after-split-window { if -F '#{window_panes} -gt 1' 'set pane-border-status top' }

set-hook -g after-resize-pane {
  if -F '#{||:#{==:#{window_panes},1},#{window_zoomed_flag}}' {
    set -g pane-border-status off
  } {
    set -g pane-border-status top
  }
}

# set-hook -g after-split-window { select-pane -T "" }
# set-hook -g after-new-window   { select-pane -T "" }
# set-hook -g after-new-session  { select-pane -T "" }

# Allow for respawning windows after the command has exited
set-hook -g session-created 'set remain-on-exit on'

# set-hook -ga client-focus-in  { set -w status on }
# set-hook -ga client-focus-out { set -w status off }
set-hook -ga client-focus-in[0]  { setw -g  window-status-format "#[fg=$baseWaveRed] #I #W " }
set-hook -ga client-focus-out[0] { setw -g  window-status-format "#[fg=$base03] #I #W " }

# #Cursor shape of terminal is reverted back to block after exiting tmux session
set-hook -g after-copy-mode 'set -g cursor-style blinking-underline'

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Allow for respawning windows after the command has exited
# set-hook -g session-created 'set remain-on-exit on'
#
# # Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
# set-hook -g after-new-session  { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }
# set-hook -g after-new-window   { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }
# set-hook -g after-kill-pane    { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }
# # set-hook -wg window-linked      { if -F '#{==:#{window_panes},1}' 'display "link one"' 'display "link two"' }
# # set-hook -wg window-unlinked    { if -F '#{==:#{window_panes},1}' 'display "unlink one"' 'display "unlink two"' }
# # set-hook -p after-join-pane    { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }
# # set-hook -p after-break-pane    { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }
# set-hook -g pane-exited        { if -F '#{==:#{window_panes},1}' 'set pane-border-status off' 'set pane-border-status on' }
# set-hook -g after-split-window { run -b "if [ #{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi" }
##
# # set-hook -g after-split-window { select-pane -T "" }
# # set-hook -g after-new-window   { select-pane -T "" }
# # set-hook -g after-new-session  { select-pane -T "" }
#
# # set-hook -ga client-focus-in  { set -w status on }
# # set-hook -ga client-focus-out { set -w status off }
# set-hook -ga client-focus-in[0]  { set -g  window-status-format "#[fg=$baseWaveRed] #I #W " }
# set-hook -ga client-focus-out[0] { set -g  window-status-format "#[fg=$base03] #I #W " }

# set-hook -g after-resize-pane {
#   if -F '#{||:#{==:#{window_panes},1},#{window_zoomed_flag}}' {
#     set -g pane-border-status off
#   } {
#     set -g pane-border-status top
#   }
# }

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━



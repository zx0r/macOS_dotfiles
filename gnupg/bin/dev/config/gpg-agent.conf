# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                                                                           ║
# ║  Gpg Agent Configuration ($GNUPGHOME/gpg-agent.conf)                      ║
# ║  Author: zx0r                                                             ║
# ║  Date: 2025-01-30                                                         ║
# ║  Contact: https://github.com/zx0r                                         ║
# ║                                                                           ║
# ║  After changing the configuration, reload the agent:                      ║
# ║       `$ gpg-connect-agent reloadagent /bye`                              ║
# ║                                                                           ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

# Note:
# This script installs and configures GnuPG (GPG) for macOS, sets up Git 
# to use GPG for signing commits,
# and ensures security settings are applied. It also auto-detects the user's
# shell, configures VSCode/VSCodium
# to use GPG for commits, and sets up a launch agent for gpg-agent.

# ┌───────────────────────────────────────────────────────────────────────────┐
# │ GPG Cache & TTL Settings                                                  │
# └───────────────────────────────────────────────────────────────────────────┘

# Cache time for normal entries (seconds)
default-cache-ttl 600

# Cache time for SSH keys (seconds)
default-cache-ttl-ssh 600

# Max cache time for normal and SSH keys (seconds)
max-cache-ttl 7200
max-cache-ttl-ssh 7200

# ┌───────────────────────────────────────────────────────────────────────────┐
# │ GPG Agent Settings                                                        │
# └───────────────────────────────────────────────────────────────────────────┘

# Enable SSH support to allow GPG to work as an SSH agent
enable-ssh-support

# Ensure the correct TTY is used, for passphrase input and other features
ttyname $GPG_TTY

# Refresh gpg-agent's TTY when switching into an X session
# gpg-connect-agent updatestartuptty /bye > /dev/null

# ┌───────────────────────────────────────────────────────────────────────────┐
# │ Key Handling and Security Features                                        │
# └───────────────────────────────────────────────────────────────────────────┘

# Keyboard control: disable grabbing for better compatibility with terminal-based apps
# no-grab

# Allow preset passphrases (to cache passphrase between uses)
allow-preset-passphrase

# Ignore cached passphrases for signing (useful for secure signing operations)
ignore-cache-for-signing

# Write environment variables to a file (important for other tools like VSCode)
write-env-file ~/.gnupg/gpg-agent.env

# ┌───────────────────────────────────────────────────────────────────────────┐
# │ Pinentry Program Configuration                                            │
# └───────────────────────────────────────────────────────────────────────────┘

# Select the pinentry program for handling passphrase prompts
allow-loopback-pinentry

# Update the Pinentry Timeout
pinentry-timeout 30

# This is crucial for GUI integration (e.g., for macOS graphical pinentry)
# brew install pinentry-mac
#pinentry-program /usr/local/bin/pinentry-mac

# This is crucial for GUI integration (e.g., for macOS graphical pinentry)
# brew install gpg-suite
pinentry-program /usr/local/MacGPG2/libexec/pinentry-mac.app/Contents/MacOS/pinentry-mac

# ┌───────────────────────────────────────────────────────────────────────────┐
# │ Default key and recipient                                                 │
# └───────────────────────────────────────────────────────────────────────────┘

# Use GnuPG agent for SSH keys (instead of ssh-agent)
# Note: Make sure that gpg-agent is always started with login.

# Adding the following to your shell config (.bashrc, .zshrc, config.fish)

# Check if gpg-agent is running
# if ! pgrep -x -u "${USER}" gpg-agent &> /dev/null; then
#     # If not running, make sure gpg-agent is terminated (cleanup)
#     gpg-connect-agent /bye &> /dev/null
# fi

# # Set SSH to use gpg-agent (based on 'man gpg-agent', section EXAMPLES)
# unset SSH_AGENT_PID

# # Check if the current SSH_AUTH_SOCK is not pointing to the gpg-agent socket
# if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
#     export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
# fi





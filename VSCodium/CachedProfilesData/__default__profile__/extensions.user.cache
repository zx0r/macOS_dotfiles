{"input":{"location":{"$mid":1,"external":"vscode-userdata:/Users/x0r/.vscode-oss/extensions/extensions.json","path":"/Users/x0r/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1746046216946,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.99.32846","productDate":"2025-04-28T14:57:04.833Z","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"github.copilot-chat","uuid":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f"},"manifest":{"name":"copilot-chat","displayName":"GitHub Copilot Chat","description":"AI chat features powered by Copilot","version":"0.26.7","build":"1","internalAIKey":"1058ec22-3c95-4951-8443-f26c1f325911","ariaKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","buildType":"prod","publisher":"GitHub","homepage":"https://github.com/features/copilot?editor=vscode","license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/microsoft/vscode-copilot-release"},"bugs":{"url":"https://aka.ms/microsoft/vscode-copilot-release"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","engines":{"vscode":"^1.99.0","npm":">=9.0.0","node":">=20.18.1"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished","onLanguageModelChat:copilot","onUri","onFileSystem:ccreq","onFileSystem:ccsettings"],"main":"./dist/extension","l10n":"./l10n","enabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","codeActionAI","activeComment","commentReveal","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findTextInFiles2","findFiles2@2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","chatParticipantAdditions","chatEditing","defaultChatParticipant@3","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider@2","chatParticipantPrivate@6","chatProvider","contribDebugCreateConfiguration","chatReferenceDiagnostic","textSearchProvider2","chatReferenceBinaryData","languageModelSystem","languageModelCapabilities","inlineCompletionsAdditions","languageModelDataPart","chatStatusItem"],"contributes":{"languageModelTools":[{"name":"copilot_searchCodebase","toolReferenceName":"codebase","displayName":"Codebase","icon":"$(folder)","canBeReferencedInPrompt":true,"userDescription":"Reference relevant file chunks, symbols, and other information in your codebase.","modelDescription":"Run a natural language search for relevant code or documentation comments from the user's current workspace. Returns relevant code snippets from the user's current workspace if it is large, or the full contents of the workspace if it is small."},{"name":"copilot_semanticSearch","toolReferenceName":"codebase","displayName":"Codebase","icon":"$(folder)","userDescription":"Reference relevant file chunks, symbols, and other information in your codebase.","modelDescription":"Run a natural language search for relevant code or documentation comments from the user's current workspace. Returns relevant code snippets from the user's current workspace if it is large, or the full contents of the workspace if it is small.","tags":["vscode_editing","codesearch","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search the codebase for. Should contain all relevant context. Should ideally be text that might appear in the codebase, such as function names, variable names, or comments."}},"required":["query"]}},{"name":"copilot_searchWorkspaceSymbols","toolReferenceName":"symbols","displayName":"Workspace Symbols","icon":"$(symbol)","userDescription":"Search for workspace symbols using language services.","modelDescription":"Search the user's workspace for code symbols using language services. Limited to 20 results. Use this tool when the user is looking for a specific symbol in their workspace.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"symbolName":{"type":"string","description":"The symbol to search for, such as a function name, class name, or variable name."}},"required":["symbolName"]}},{"name":"copilot_listCodeUsages","toolReferenceName":"usages","displayName":"Find Usages","icon":"$(references)","canBeReferencedInPrompt":true,"userDescription":"Find references, definitions, and other usages of a symbol.","modelDescription":"Request to list all usages (references, definitions, implementations etc) of a function, class, method, variable etc. Use this tool when \n1. Looking for a sample implementation of an interface or class\n2. Checking how a function is used throughout the codebase.\n3. Including and updating all usages when changing a function, method, or constructor","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"symbolName":{"type":"string","description":"The name of the symbol, such as a function name, class name, method name, variable name, etc."},"filePaths":{"type":"array","description":"One or more file paths which likely contain the definition of the symbol. For instance the file which declares a class or function. This is optional but will speed up the invocation of this tool and improve the quality of its output.","items":{"type":"string"}}},"required":["symbolName"]}},{"name":"copilot_getVSCodeAPI","toolReferenceName":"vscodeAPI","displayName":"Get VS Code API References","icon":"$(references)","userDescription":"Use VS Code API references to answer questions about VS Code extension development.","modelDescription":"Get relevant VS Code API references to answer questions about VS Code extension development. Use this tool when the user asks about VS Code APIs, capabilities, or best practices related to developing VS Code extensions. Use it in all VS Code extension development workspaces.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search vscode documentation for. Should contain all relevant context."}},"required":["query"]},"tags":["vscode_editing"],"canBeReferencedInPrompt":true},{"displayName":"Think","name":"copilot_think","tags":["vscode_editing"],"when":"config.github.copilot.chat.agent.thinkingTool","modelDescription":"Think deeply about the user's request. Use this tool to take a moment to think about the user's request before generating a response. Use this to improve the quality of the response by allowing the model to consider the user's request more carefully.","inputSchema":{"type":"object","properties":{"thoughts":{"type":"string","description":"Thoughts about the user's request. This should not include any code or other output. Use this field to think deeply about the user's request, review the available context and any actions that have already been performed, and decide on next steps."}},"required":["thoughts"]}},{"name":"copilot_findFiles","displayName":"Find Files","modelDescription":"Search for files in the workspace by glob pattern. This only returns the paths of matching files. Limited to 20 results. Use this tool when you know the exact filename pattern of the files you're searching for. Glob patterns match from the root of the workspace folder. Examples:\n- **/*.{js,ts} to match all js/ts files in the workspace.\n- src/** to match all files under the top-level src folder.\n- **/foo/**/*.js to match all js files under any foo folder in the workspace.","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"Search for files with names or paths matching this query. Can be a glob pattern."}},"required":["query"]}},{"name":"copilot_findTextInFiles","displayName":"Find Text In Files","modelDescription":"Do a text search in the workspace. Limited to 20 results. Use this tool when you know the exact string you're searching for.","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The pattern to search for in files in the workspace. Can be a regex or plain text pattern"},"isRegexp":{"type":"boolean","description":"Whether the pattern is a regex. False by default."},"includePattern":{"type":"string","description":"Search files matching this glob pattern. Will be applied to the relative path of files within the workspace."}},"required":["query"]}},{"name":"copilot_readFile","displayName":"Read File","modelDescription":"Read the contents of a file.\n\nYou must specify the line range you're interested in, and if the file is larger, you will be given an outline of the rest of the file. If the file contents returned are insufficient for your task, you may call this tool again to retrieve more content.","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"filePath":{"description":"The absolute path of the file to read.","type":"string"},"startLineNumberBaseZero":{"type":"number","description":"The line number to start reading from, 0-based."},"endLineNumberBaseZero":{"type":"number","description":"The inclusive line number to end reading at, 0-based."}},"required":["filePath","startLineNumberBaseZero","endLineNumberBaseZero"]}},{"name":"copilot_listDirectory","displayName":"List Dir","modelDescription":"List the contents of a directory. Result will have the name of the child. If the name ends in /, it's a folder, otherwise a file","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"path":{"type":"string","description":"The absolute path to the directory to list."}},"required":["path"]}},{"name":"copilot_runInTerminal","displayName":"Run In Terminal","modelDescription":"Run a shell command in a terminal. State is persistent across tool calls.\n- Use this tool instead of printing a shell codeblock and asking the user to run it.\n- If the command is a long-running background process, you MUST pass isBackground=true. Background terminals will return a terminal ID which you can use to check the output of a background process with copilot_getTerminalOutput.\n- If a command may use a pager, you must something to disable it. For example, you can use `git --no-pager`. Otherwise you should add something like ` | cat`. Examples: git, less, man, etc.","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"command":{"type":"string","description":"The command to run in the terminal."},"explanation":{"type":"string","description":"A one-sentence description of what the command does. This will be shown to the user before the command is run."},"isBackground":{"type":"boolean","description":"Whether the command starts a background process. If true, the command will run in the background and you will not see the output. If false, the tool call will block on the command finishing, and then you will get the output. Examples of backgrond processes: building in watch mode, starting a server. You can check the output of a backgrond process later on by using copilot_getTerminalOutput."}},"required":["command","explanation","isBackground"]}},{"name":"copilot_getTerminalOutput","displayName":"Get terminal output","modelDescription":"Get the output of a terminal command previous started with copilot_runInTerminal","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the terminal command output to check."}},"required":["id"]}},{"name":"copilot_getErrors","displayName":"Get Errors","toolReferenceName":"problems","icon":"$(error)","when":"config.chat.agent.enabled","modelDescription":"Get any compile or lint errors in a code file. If the user mentions errors or problems in a file, they may be referring to these. Use the tool to see the same errors that the user is seeing. Also use this tool after editing a file to validate the change.","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"filePaths":{"type":"array","items":{"type":"string"}}},"required":["filePaths"]}},{"name":"copilot_readProjectStructure","displayName":"Project Structure","modelDescription":"Get a file tree representation of the workspace.","tags":[]},{"name":"copilot_getChangedFiles","displayName":"Git Changes","toolReferenceName":"changes","icon":"$(diff)","canBeReferencedInPrompt":true,"modelDescription":"Get git diffs of current file changes in the active git repository. Don't forget that you can use copilot_runInTerminal to run git commands in a terminal as well.","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"repositoryPath":{"type":"string","description":"The absolute path to the git repository to look for changes in."},"sourceControlState":{"type":"array","items":{"type":"string","enum":["staged","unstaged","merge-conflicts"]},"description":"The kinds of git state to filter by. Allowed values are: 'staged', 'unstaged', and 'merge-conflicts'. If not provided, all states will be included."}},"required":["repositoryPath"]}},{"name":"copilot_testFailure","toolReferenceName":"testFailure","displayName":"Test Failure","icon":"$(beaker)","userDescription":"Includes information about the last unit test failure.","modelDescription":"Includes test failure information in the prompt.","inputSchema":{},"tags":["vscode_editing_with_tests","enable_other_tool_copilot_readFile","enable_other_tool_copilot_listDirectory","enable_other_tool_copilot_findFiles","enable_other_tool_copilot_runTests"],"when":"config.chat.agent.enabled","canBeReferencedInPrompt":true},{"name":"copilot_updateUserPreferences","toolReferenceName":"updateUserPreferences","displayName":"Update User Preferences","modelDescription":"Update the user's preferences file with new information about the user and their coding preferences, based on the current chat history.","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"facts":{"type":"array","items":{"type":"string"},"description":"An array of new user preferences to remember."}},"required":["facts"]},"when":"config.github.copilot.chat.enableUserPreferences"},{"name":"copilot_runTests","toolReferenceName":"runTests","displayName":"Run Tests","modelDescription":"Runs tests in workspace.","inputSchema":{"type":"object","properties":{"filter":{"type":"string","description":"Specifies which tests to run, either\n- `all` to run all tests\n- `failed` to run failed tests\n- `last` to re-run the last set of tests","enum":["all","failed","last"]}},"required":["filter"]},"tags":["vscode_editing_with_tests","enable_other_tool_copilot_readFile","enable_other_tool_copilot_listDirectory","enable_other_tool_copilot_findFiles","enable_other_tool_copilot_runTests"],"when":"config.chat.agent.enabled"},{"name":"copilot_getTerminalSelection","toolReferenceName":"terminalSelection","displayName":"Terminal Selection","modelDescription":"Get the user's current selection in the active terminal.","userDescription":"The active terminal's selection","canBeReferencedInPrompt":true,"icon":"$(terminal)"},{"name":"copilot_getTerminalLastCommand","toolReferenceName":"terminalLastCommand","displayName":"Terminal Last Command","modelDescription":"Get the user's current selection in the active terminal.","userDescription":"The active terminal's last run command","canBeReferencedInPrompt":true,"icon":"$(terminal)"},{"name":"copilot_createNewWorkspace","displayName":"Create New Workspace","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","modelDescription":"Get steps to help the user create any project in a VS Code workspace. Use this tool to help users set up new projects, including TypeScript-based projects, Model Context Protocol (MCP) servers, VS Code extensions, Next.js projects, Vite projects, or any other project.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to use to generate the new workspace. This should be a clear and concise description of the workspace the user wants to create."}},"required":["query"]},"tags":["vscode_editing","enable_other_tool_copilot_installExtension","enable_other_tool_copilot_getProjectSetupInfo"]},{"name":"copilot_getProjectSetupInfo","displayName":"Get Project Setup Info","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","modelDescription":"Do not call this tool without first calling the tool to create a workspace. This tool provides a project setup information for a Visual Studio Code workspace based on a project type and programming language.","inputSchema":{"type":"object","properties":{"projectType":{"type":"string","description":"The type of project to create. Supported values are: 'basic', 'mcp-server', 'model-context-protocol-server', 'vscode-extension', 'next-js', 'vite' and 'other'"},"language":{"type":"string","description":"The programming language for the project. Supported: 'javascript', 'typescript', 'python' and 'other'."}},"required":["projectType"]},"tags":["vscode_editing"]},{"name":"copilot_installExtension","displayName":"Install Extension in VS Code","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","modelDescription":"Install an extension in VS Code. Use this tool to install an extension in Visual Studio Code as part of a new workspace creation process only.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the extension to install. This should be in the format <publisher>.<extension>."},"name":{"type":"string","description":"The name of the extension to install. This should be a clear and concise description of the extension."}},"required":["id","name"]},"tags":["vscode_editing"]},{"name":"copilot_createNewJupyterNotebook","displayName":"Create New Jupyter Notebook","when":"","modelDescription":"Generates a new Jupyter Notebook (.ipynb) in VS Code. Jupyter Notebooks are interactive documents commonly used for data exploration, analysis, visualization, and combining code with narrative text. This tool should only be called when the user explicitly requests to create a new Jupyter Notebook.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to use to generate the jupyter notebook. This should be a clear and concise description of the notebook the user wants to create."}},"required":["query"]},"tags":["vscode_editing"]},{"name":"copilot_runVsCodeTask","displayName":"runVsCodeTask","modelDescription":"Runs a VS Code task.\n\n- If you see that an appropriate task exists for building or running code, prefer to use this tool to run the task instead of using the run_in_terminal tool.\n- Make sure that any appropriate build or watch task is running before trying to run tests or execute code.\n- If the user asks to run a task, use this tool to do so.","inputSchema":{"type":"object","properties":{"workspaceFolder":{"type":"string","description":"The workspace folder path containing the task"},"id":{"type":"string","description":"The task ID to run."}},"required":["workspaceFolder","id"]}},{"name":"copilot_insertEdit","displayName":"Edit File","modelDescription":"Insert new code into an existing file in the workspace. Use this tool once per file that needs to be modified, even if there are multiple changes for a file. Generate the \"explanation\" property first.\nThe system is very smart and can understand how to apply your edits to the files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. Be as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\treturn this.age;\n\t}\n}","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"explanation":{"type":"string","description":"A short explanation of the edit being made."},"filePath":{"type":"string","description":"An absolute path to the file to edit."},"code":{"type":"string","description":"The code change to apply to the file.\nThe system is very smart and can understand how to apply your edits to the files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. Be as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\t\treturn this.age;\n\t}\n}"}},"required":["explanation","filePath","code"]}},{"name":"copilot_createFile","displayName":"Create File","modelDescription":"This is a tool for creating a new file in the workspace. The file will be created with the specified content.","tags":["vscode_editing"],"when":"config.github.copilot.chat.advanced.swebench.useEditToolset","inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"The absolute path to the file to create."},"content":{"type":"string","description":"The content to write to the file."}},"required":["filePath","content"]}},{"name":"copilot_replaceString","displayName":"Replace String in File","modelDescription":"This is a tool for making small edits in an existing file in the workspace. For moving or renaming files, use run in terminal tool with the 'mv' command instead. For larger edits, split them into smaller edits and call the edit tool multiple times to ensure accuracy. Before editing, always use the read file tool to understand the file's contents and context. To edit a file, provide: 1) filePath (absolute path), 2) oldString (must exactly match, including whitespace and indentation, uniquely identifying a single occurrence), and 3) newString (replacement text). Each use of this tool replaces exactly ONE occurrence of oldString. Ensure oldString uniquely identifies the change by including at least 3-5 lines of context both before and after the target text, preserving whitespace and indentation exactly. Never use ...existing code... comments in the oldString or newString. The result of the replace operation must be syntactically valid!","tags":["vscode_claude_editing"],"when":"config.github.copilot.chat.advanced.swebench.useEditToolset","inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the file to edit, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1."},"oldString":{"type":"string","description":"The string to be replaced in the file. If specified, newString must also be provided. Never use ...existing code... comments in the oldString."},"newString":{"type":"string","description":"The replacement string. If specified, oldString must also be provided."}},"required":["filePath","oldString","newString"]}},{"name":"copilot_fetchWebPage","displayName":"Fetch Web Page","toolReferenceName":"fetch","canBeReferencedInPrompt":true,"icon":"$(globe)","userDescription":"Fetch the main content from a web page. You should include the URL of the page you want to fetch.","modelDescription":"Fetches the main content from a web page. This tool is useful for summarizing or analyzing the content of a webpage. You should use this tool when you think the user is looking for information from a specific webpage.","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"urls":{"type":"array","items":{"type":"string"},"description":"An array of URLs to fetch content from."},"query":{"type":"string","description":"The query to search for in the web page's content. This should be a clear and concise description of the content you want to find."}},"required":["urls","query"]}},{"name":"copilot_findTestFiles","displayName":"Find Test Files","icon":"$(beaker)","canBeReferencedInPrompt":true,"toolReferenceName":"findTestFiles","userDescription":"For a source code file, find the file that contains the tests. For a test file find the file that contains the code under test.","modelDescription":"For a source code file, find the file that contains the tests. For a test file find the file that contains the code under test.","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"filePaths":{"type":"array","items":{"type":"string"}}},"required":["filePaths"]}},{"name":"copilot_getSearchResults","toolReferenceName":"searchResults","displayName":"Get results from the search view","icon":"$(search)","modelDescription":"The results from the search view","canBeReferencedInPrompt":true}],"chatParticipants":[{"id":"github.copilot.default","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask Copilot","isDefault":true,"locations":["panel"],"disambiguation":[{"category":"generate_code_sample","description":"The user wants to generate code snippets without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Write an example of computing a SHA256 hash."]},{"category":"add_feature_to_file","description":"The user wants to change code in a file that is provided in their request, without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Add a refresh button to the table widget."]},{"category":"question_about_specific_files","description":"The user has a question about a specific file or code snippet that they have provided as part of their query, and the question does not require additional workspace context to answer.","examples":["What does this file do?"]}]},{"id":"github.copilot.editingSession","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["editing-session"],"when":"!config.chat.edits2.enabled"},{"id":"github.copilot.editingSessionEditor","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"when":"config.github.copilot.chat.advanced.inlineChat2","locations":["editor","notebook"],"commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code","when":"config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"fix","description":"Propose a fix for the problems in the selected code","examples":["There is a problem in this code. Rewrite the code to show it with the bug fixed."]}]},{"name":"tests","description":"Generate unit tests for the selected code","when":"config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"tests","description":"Help writing tests for the selected code","examples":["Help me write tests for the selected code."]}]}]},{"id":"github.copilot.editingSession2","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["editing-session"],"when":"config.chat.edits2.enabled"},{"id":"github.copilot.editsAgent","name":"agent","fullName":"GitHub Copilot","description":"Edit files in your workspace in agent mode","locations":["editing-session"],"isDefault":true,"isAgent":true,"when":"config.chat.agent.enabled && !chatAgentModeDisallowed","commands":[{"name":"list","when":"github.copilot.chat.debug"}]},{"id":"github.copilot.editor","name":"Copilot","fullName":"GitHub Copilot","description":"Ask Copilot","isDefault":true,"locations":["editor"],"when":"!config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"unknown","description":"Intent of this command is unclear or is not related to information technologies","examples":["Add a dog to this comment."]}],"commands":[{"name":"generate","description":"Generate new code","disambiguation":[{"category":"generate","description":"Generate new code","examples":["Add a function that returns the sum of two numbers"]}]},{"name":"edit","description":"Edit the selected code in your active editor","disambiguation":[{"category":"edit","description":"Make changes to existing code","examples":["Change this method to use async/await"]}]},{"name":"doc","description":"Add documentation comment for this symbol","disambiguation":[{"category":"doc","description":"Add documentation comment for this symbol","examples":["Add jsdoc to this method"]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","disambiguation":[{"category":"fix","description":"Propose a fix for the problems in the selected code","examples":["There is a problem in this code. Rewrite the code to show it with the bug fixed."]}]},{"name":"explain","description":"Explain how the code in your active editor works","disambiguation":[{"category":"explain","description":"Explain how the code in your active editor works","examples":["Write an explanation for the code above as paragraphs of text."]}]},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"tests","description":"Generate unit tests for the selected code. The user does not want to fix their existing tests.","examples":["Write a set of detailed unit test functions for the code above."]}]}]},{"id":"github.copilot.notebook","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask Copilot","isDefault":true,"locations":["notebook"],"when":"!config.github.copilot.chat.advanced.inlineChat2","commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"}]},{"id":"github.copilot.workspace","name":"workspace","fullName":"Workspace","description":"Ask about your workspace","sampleRequest":"How do I build this project?","locations":["panel"],"disambiguation":[{"category":"workspace_project_questions","description":"The user wants to learn about or update the code or files in their current workspace. Questions in this category may be about understanding what the whole workspace does or locating the implementation of some code. This does not include generating or updating tests.","examples":["What does this project do?"]},{"category":"find_code_in_workspace","description":"The user wants to locate the implementation of some functionality in their current workspace.","examples":["Where is the tree widget implemented?"]},{"category":"generate_with_workspace_context","description":"The user wants to generate code based on multiple files in the workspace and did not specify which files to reference.","examples":["Create a README for this project."]}],"commands":[{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"create_tests","description":"The user wants to generate unit tests.","examples":["Generate tests for my selection using pytest."]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","sampleRequest":"There is a problem in this code. Rewrite the code to show it with the bug fixed."},{"name":"new","description":"Scaffold code for a new file or project in a workspace","sampleRequest":"Create a RESTful API server using typescript","isSticky":true,"disambiguation":[{"category":"create_new_workspace_or_extension","description":"The user wants to create a complete Visual Studio Code workspace from scratch, such as a new application or a Visual Studio Code extension. Use this category only if the question relates to generating or creating new workspaces in Visual Studio Code. Do not use this category for updating existing code or generating sample code snippets","examples":["Scaffold a Node server.","Create a sample project which uses the fileSystemProvider API.","react application"]}]},{"name":"newNotebook","description":"Create a new Jupyter Notebook","sampleRequest":"How do I create a notebook to load data from a csv file?","disambiguation":[{"category":"create_jupyter_notebook","description":"The user wants to create a new Jupyter notebook in Visual Studio Code.","examples":["Create a notebook to analyze this CSV file."]}]},{"name":"semanticSearch","description":"Find relevant code to your query","sampleRequest":"Where is the toolbar code?","when":"config.github.copilot.semanticSearch.enabled"},{"name":"setupTests","description":"Set up tests in your project (Experimental)","sampleRequest":"add playwright tests to my project","when":"config.github.copilot.chat.setupTests.enabled","disambiguation":[{"category":"set_up_tests","description":"The user wants to configure project test setup, framework, or test runner. The user does not want to fix their existing tests.","examples":["Set up tests for this project."]}]}]},{"id":"github.copilot.vscode","name":"vscode","fullName":"VS Code","description":"Ask questions about VS Code","sampleRequest":"What is the command to open the integrated terminal?","locations":["panel"],"disambiguation":[{"category":"vscode_configuration_questions","description":"The user wants to learn about, use, or configure the Visual Studio Code. Use this category if the users question is specifically about commands, settings, keybindings, extensions and other features available in Visual Studio Code. Do not use this category to answer questions about generating code or creating new projects including Visual Studio Code extensions.","examples":["Switch to light mode.","Keyboard shortcut to toggle terminal visibility.","Settings to enable minimap.","Whats new in the latest release?"]},{"category":"configure_python_environment","description":"The user wants to set up their Python environment.","examples":["Create a virtual environment for my project."]}],"commands":[{"name":"search","description":"Generate query parameters for workspace search","sampleRequest":"Search for 'foo' in all files under my 'src' directory"},{"name":"startDebugging","description":"Generate launch config and start debugging in VS Code (Experimental)","sampleRequest":"Attach to node app at port 9229","when":"config.github.copilot.chat.startDebugging.enabled"}]},{"id":"github.copilot.terminal","name":"terminal","fullName":"Terminal","description":"Ask Copilot","sampleRequest":"How do I view all files within a directory including sub-directories?","isDefault":true,"locations":["terminal"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command"}]},{"id":"github.copilot.terminalPanel","name":"terminal","fullName":"Terminal","description":"Ask how to do something in the terminal","sampleRequest":"How do I view all files within a directory including sub-directories?","locations":["panel"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command","disambiguation":[{"category":"terminal_state_questions","description":"The user wants to learn about specific state such as the selection, command, or failed command in the integrated terminal in Visual Studio Code.","examples":["Why did the latest terminal command fail?"]}]}]}],"languageModels":[{"vendor":"copilot"},{"vendor":"copilot-byok"}],"interactiveSession":[{"label":"GitHub Copilot","id":"copilot","icon":"","when":"!github.copilot.interactiveSession.disabled"}],"viewsWelcome":[{"view":"debug","when":"github.copilot-chat.activated","contents":"GitHub Copilot Chat can help you start debugging, either based on a [terminal command](command:github.copilot.chat.startCopilotDebugCommand) or with [interactive chat](command:workbench.action.chat.open?%7B%22query%22%3A%22%40vscode%20%2FstartDebugging%20%22%2C%22isPartialQuery%22%3Atrue%7D)."}],"chatViewsWelcome":[{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Sign in with GitHub to use GitHub Copilot, your AI pair programmer.\n\n[Sign in to GitHub.com](command:github.copilotChat.signIn)\n\n[Sign in with a GHE.com account](command:github.copilotChat.signInGHE)\n\nOr explore the [Copilot walkthrough](command:github.copilot.open.walkthrough) to learn more!","when":"config.github.copilot.advanced.authProvider != 'github-enterprise' && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled && !github.copilot.interactiveSession.switchToReleaseChannel"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Sign in with GitHub to use GitHub Copilot, your AI pair programmer.\n\n[Sign in to GHE.com](command:github.copilotChat.signInGHE)\n\n[Sign in with a GitHub.com account](command:github.copilotChat.signIn)\n\nOr explore the [Copilot walkthrough](command:github.copilot.open.walkthrough) to learn more!","when":"config.github.copilot.advanced.authProvider == 'github-enterprise' && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled && !github.copilot.interactiveSession.switchToReleaseChannel"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Get started with GitHub Copilot.\n\n[Start GitHub Copilot Free](https://github.com/github-copilot/signup)\n\nIf you have a different account with a Copilot subscription, you can [sign in to that account](command:github.copilotChat.signInChoose?%22force%22).\n\nOr explore the [Copilot walkthrough](command:github.copilot.open.walkthrough) to learn more!","when":"github.copilot.interactiveSession.individual.disabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Your Copilot subscription has expired.\n\n[Review Copilot Settings](https://github.com/settings/copilot?editor=vscode)","when":"github.copilot.interactiveSession.individual.expired"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Contact your GitHub organization administrator to enable Copilot.","when":"github.copilot.interactiveSession.enterprise.disabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"You are currently offline. Please connect to the internet to use GitHub Copilot.\n\n[Retry Connection](command:github.copilot.refreshToken)","when":"github.copilot.offline"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"There seems to be a problem with your account. Please contact GitHub support.\n\n[Contact Support](https://support.github.com/?editor=vscode)","when":"github.copilot.interactiveSession.contactSupport"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"GitHub Copilot Chat is currently disabled for your account by an organization administrator. Contact an organization administrator to enable chat.\n\n[Learn More](https://docs.github.com/en/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-github-copilot-features-in-your-organization/managing-policies-for-copilot-in-your-organization)","when":"github.copilot.interactiveSession.chatDisabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"The Pre-Release version of the GitHub Copilot Chat extension is not currently supported in the stable version of VS Code. Please switch to the release version for GitHub Copilot Chat or try VS Code Insiders.\n\n[Switch to Release Version and Reload](command:runCommands?%7B%22commands%22%3A%5B%7B%22command%22%3A%22workbench.extensions.action.switchToRelease%22%2C%22args%22%3A%5B%22GitHub.copilot-chat%22%5D%7D%2C%22workbench.action.reloadWindow%22%5D%7D)\n\n[Switch to VS Code Insiders](https://aka.ms/vscode-insiders)","when":"github.copilot.interactiveSession.switchToReleaseChannel"}],"commands":[{"command":"github.copilotChat.signIn","title":"Sign in to GitHub.com","enablement":"false"},{"command":"github.copilotChat.signInGHE","title":"Sign in to GHE.com","enablement":"false"},{"command":"github.copilotChat.signInChoose","title":"Sign in to...","enablement":"false"},{"command":"github.copilot.chat.explain","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.explain.palette","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.review","title":"Review and Comment","enablement":"github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.apply","title":"Apply","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.applyAndNext","title":"Apply and Go to Next","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discard","title":"Discard","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAndNext","title":"Discard and Go to Next","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAll","title":"Discard All","icon":"$(close-all)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.stagedChanges","title":"Copilot Code Review - Staged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.unstagedChanges","title":"Copilot Code Review - Unstaged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.changes","title":"Copilot Code Review - Uncommitted Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.changes.cancel","title":"Copilot Code Review - Cancel","icon":"$(stop-circle)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.previous","title":"Previous Suggestion","icon":"$(arrow-up)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.next","title":"Next Suggestion","icon":"$(arrow-down)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInInlineChat","title":"Discard and Copy to Inline Chat","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInChat","title":"View in Chat Panel","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!(commentThread =~ /markedAsHelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.openUserPreferences","title":"Open User Preferences","category":"GitHub Copilot","enablement":"config.github.copilot.chat.enableUserPreferences"},{"command":"github.copilot.chat.review.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!(commentThread =~ /markedAsUnhelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.generate","title":"Generate This","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateDocs","title":"Generate Docs","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateTests","title":"Generate Tests","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.fix","title":"Fix","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveSession.feedback","title":"Send Chat Feedback","enablement":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled","icon":"$(feedback)","category":"GitHub Copilot"},{"command":"github.copilot.debug.workbenchState","title":"Log Workbench State","category":"Developer"},{"command":"github.copilot.terminal.explainTerminalSelection","title":"Explain Terminal Selection","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","title":"Explain","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalLastCommand","title":"Explain Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.terminal.attachTerminalSelection","title":"Add Terminal Selection to Chat","category":"GitHub Copilot"},{"command":"github.copilot.git.generateCommitMessage","title":"Generate Commit Message with Copilot","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","title":"Generate Dev Container Configuration with Copilot","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure","icon":"$(sparkle)","title":"Fix Test Failure","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure.fromInline","icon":"$(sparkle)","title":"Fix Test Failure"},{"command":"github.copilot.chat.attachFile","title":"Add File to Chat","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'"},{"command":"github.copilot.chat.attachFolder","title":"Add Folder to Chat","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.attachSelection","title":"Add Selection to Chat","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.edits.attachSelection","title":"Add Selection to Copilot Edits","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"(resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata') && !config.chat.unifiedChatView"},{"command":"github.copilot.edits.attachFile","title":"Add File to Copilot Edits","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"(resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata') && !config.chat.unifiedChatView"},{"command":"github.copilot.edits.attachFolder","title":"Add Folder to Copilot Edits","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"(resourceScheme == 'file' || resourceScheme =='vscode-remote') && !config.chat.unifiedChatView"},{"command":"github.copilot.debug.collectDiagnostics","title":"GitHub Copilot Chat Diagnostics","category":"Developer"},{"command":"github.copilot.debug.generateSTest","title":"Generate STest From Last Chat Request","enablement":"github.copilot.debugReportFeedback","category":"GitHub Copilot Developer"},{"command":"github.copilot.debug.generateConfiguration","title":"Generate Debug Configuration with GitHub Copilot","category":"GitHub Copilot","enablement":"config.github.copilot.chat.startDebugging.enabled","tags":["experimental"]},{"command":"github.copilot.open.walkthrough","title":"Open Walkthrough","category":"GitHub Copilot"},{"command":"github.copilot.debug.generateInlineEditTests","title":"Generate Inline Edit Tests","category":"GitHub Copilot","enablement":"resourceScheme == 'ccreq'"},{"command":"github.copilot.buildLocalWorkspaceIndex","title":"Build Local Workspace Index","category":"GitHub Copilot","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.buildRemoteWorkspaceIndex","title":"Build Remote Workspace Index","category":"GitHub Copilot","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.report","title":"Report Issue","category":"GitHub Copilot"},{"command":"github.copilot.chat.rerunWithCopilotDebug","title":"Debug Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.chat.startCopilotDebugCommand","title":"Start Copilot Debug"},{"command":"github.copilot.chat.clearTemporalContext","title":"Clear Temporal Context","category":"GitHub Copilot (Developer)"},{"command":"github.copilot.search.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.feedback","title":"Feedback","icon":"$(feedback)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.chat.manageModels","title":"Manage Models...","icon":"$(settings-gear)","category":"GitHub Copilot","enablement":"github.copilot.byokEnabled"},{"command":"github.copilot.chat.debug.showElements","title":"Show Rendered Elements"},{"command":"github.copilot.chat.debug.hideElements","title":"Hide Rendered Elements"},{"command":"github.copilot.chat.debug.showTools","title":"Show Tools"},{"command":"github.copilot.chat.debug.hideTools","title":"Hide Tools"},{"command":"github.copilot.debug.collectWorkspaceIndexDiagnostics","title":"Collect Workspace Index Diagnostics","category":"Developer"},{"command":"github.copilot.chat.mcp.setup.check","title":"MCP Check: is supported"},{"command":"github.copilot.chat.mcp.setup.validatePackage","title":"MCP Check: validate package"},{"command":"github.copilot.chat.mcp.setup.flow","title":"MCP Check: do prompts"}],"configuration":[{"title":"GitHub Copilot Chat","id":"stable","properties":{"github.copilot.chat.codeGeneration.useInstructionFiles":{"type":"boolean","default":true,"markdownDescription":"Controls whether code instructions from `.github/copilot-instructions.md` are added to Copilot requests.\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance. [Learn more](https://aka.ms/github-copilot-custom-instructions) about customizing Copilot."},"github.copilot.editor.enableCodeActions":{"type":"boolean","default":true,"description":"Controls if Copilot commands are shown as Code Actions when available"},"github.copilot.renameSuggestions.triggerAutomatically":{"type":"boolean","default":true,"description":"Controls whether Copilot generates suggestions for renaming"},"github.copilot.chat.localeOverride":{"type":"string","enum":["auto","en","fr","it","de","es","ru","zh-CN","zh-TW","ja","ko","cs","pt-br","tr","pl"],"enumDescriptions":["Use VS Code's configured display language","English","français","italiano","Deutsch","español","русский","中文(简体)","中文(繁體)","日本語","한국어","čeština","português","Türkçe","polski"],"default":"auto","markdownDescription":"Specify a locale that Copilot should respond in, e.g. `en` or `fr`. By default, Copilot will respond using VS Code's configured display language locale."},"github.copilot.chat.terminalChatLocation":{"type":"string","default":"chatView","markdownDescription":"Controls where chat queries from the terminal should be opened.","markdownEnumDescriptions":["Open the chat view.","Open quick chat.","Open terminal inline chat"],"enum":["chatView","quickChat","terminal"]},"github.copilot.chat.scopeSelection":{"type":"boolean","default":false,"markdownDescription":"Whether to prompt the user to select a specific symbol scope if the user uses `/explain` and the active editor has no selection."},"github.copilot.chat.followUps":{"type":"string","default":"firstOnly","enum":["always","firstOnly","never"],"markdownDescription":"Whether to suggest follow-up messages in the chat.","markdownEnumDescriptions":["On every chat response","Only on the first response","Disables follow-up suggestions"]},"github.copilot.chat.useProjectTemplates":{"type":"boolean","default":true,"markdownDescription":"Use relevant GitHub projects as starter projects when using `/new`"},"github.copilot.chat.agent.runTasks":{"type":"boolean","default":true,"description":"Configures whether Copilot Edits can run workspace tasks in agent mode."},"github.copilot.nextEditSuggestions.enabled":{"type":"boolean","default":false,"tags":["nextEditSuggestions","onExp"],"description":"Whether to enable Next Edit Suggestions (NES).","scope":"language-overridable"}}},{"title":"Preview","id":"preview","properties":{"github.copilot.chat.startDebugging.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/startDebugging` intent in panel chat. Generates or finds launch config to match the query (if any), project structure, and more.","tags":["preview"]},"github.copilot.chat.reviewSelection.enabled":{"type":"boolean","default":true,"description":"Enables code review on current selection.","tags":["preview"]},"github.copilot.chat.reviewSelection.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-review-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-review-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Resolve all TODO tasks."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that provide code review for the current selection.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's effectiveness.","examples":[[{"file":".copilot-review-instructions.md"},{"text":"Resolve all TODO tasks."}]],"tags":["preview"]},"github.copilot.chat.copilotDebugCommand.enabled":{"type":"boolean","default":true,"tags":["preview"],"description":"Whether the `copilot-debug` command is enabled in the terminal."},"github.copilot.chat.codesearch.enabled":{"type":"boolean","default":false,"tags":["preview"],"markdownDescription":"Whether to enable agentic codesearch when using `#codebase`."},"github.copilot.chat.edits.codesearch.enabled":{"tags":["preview"],"markdownDeprecationMessage":"This setting is deprecated in favor of `#github.copilot.chat.codesearch.enabled#`."}}},{"title":"Experimental","id":"experimental","properties":{"github.copilot.chat.agent.thinkingTool":{"type":"boolean","default":false,"tags":["experimental"],"markdownDescription":"Enables the thinking tool that allows Copilot to think deeply about your request before generating a response in agent mode."},"github.copilot.chat.edits.suggestRelatedFilesFromGitHistory":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest related files from git history for the Copilot Edits working set."},"github.copilot.chat.edits.suggestRelatedFilesForTests":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest source files from test files for the Copilot Edits working set."},"github.copilot.chat.codeGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-codeGeneration-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-codeGeneration-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Always add a comment: 'Generated by Copilot'."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate code.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-codeGeneration-instructions.md"},{"text":"Always add a comment: 'Generated by Copilot'."}]],"tags":["experimental"]},"github.copilot.chat.testGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-test-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-test-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use suite and test instead of describe and it."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Always try uniting related tests in a suite."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate tests.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-test-instructions.md"},{"text":"Always try uniting related tests in a suite."}]],"tags":["experimental"]},"github.copilot.chat.commitMessageGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate commit messages.","properties":{"file":{"type":"string","examples":[".copilot-commit-message-instructions.md"]}},"examples":[{"file":".copilot-commit-message-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate commit messages.","properties":{"text":{"type":"string","examples":["Use conventional commit message format."]}},"required":["text"],"examples":[{"text":"Use conventional commit message format."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate commit messages.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use conventional commit message format.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-commit-message-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.pullRequestDescriptionGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"file":{"type":"string","examples":[".copilot-pull-request-description-instructions.md"]}},"examples":[{"file":".copilot-pull-request-description-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"text":{"type":"string","examples":["Include every commit message in the pull request description."]}},"required":["text"],"examples":[{"text":"Include every commit message in the pull request description."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate pull request titles and descriptions.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Always include a list of key changes.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-pull-request-description-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.generateTests.codeLens":{"type":"boolean","default":false,"description":"Show 'Generate tests' code lens for symbols that are not covered by current test coverage information.","tags":["experimental"]},"github.copilot.chat.edits.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making edits request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental","onExp"]},"github.copilot.chat.editor.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making inline chat request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental","onExp"]},"github.copilot.chat.setupTests.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/setupTests` intent and prompting in `/tests` generation.","tags":["experimental"]},"github.copilot.chat.search.semanticTextResults":{"type":"boolean","description":"Enables semantic search results in the search view. Disabling this setting requires reloading the window for the change to take effect.","default":true,"tags":["experimental"]},"github.copilot.chat.completionContext.typescript.mode":{"type":"string","scope":"resource","enum":["off","sidecar","on"],"tags":["experimental"],"markdownDescription":"The execution mode of the TypeScript Copilot context provider."},"github.copilot.chat.languageContext.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for inline completions"},"github.copilot.chat.languageContext.fix.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for /fix commands"},"github.copilot.chat.languageContext.inline.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for inline chats (both generate and edit)"},"github.copilot.chat.newWorkspaceCreation.enabled":{"type":"boolean","default":true,"tags":["experimental"],"description":"Whether to enable new agentic workspace creation."},"github.copilot.chat.edits.newNotebook.enabled":{"type":"boolean","default":true,"tags":["experimental","onExp"],"description":"Whether to enable the new notebook tool in Copilot Edits."}}}],"submenus":[{"id":"copilot","label":"Copilot"},{"id":"explorer/copilot","label":"Copilot"},{"id":"terminal/copilot","label":"Copilot"},{"id":"copilot/reviewComment/additionalActions/applyAndNext","label":"Apply and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discardAndNext","label":"Discard and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discard","label":"Discard"},{"id":"github.copilot.chat.debug.filter","label":"Filter","icon":"$(filter)"}],"menus":{"chat/modelPicker":[{"command":"github.copilot.chat.manageModels","when":"github.copilot.byokEnabled"}],"explorer/context":[{"submenu":"explorer/copilot","group":"5_copilot@0","when":"!github.copilot.interactiveSession.disabled"}],"editor/context":[{"submenu":"copilot","when":"!github.copilot.interactiveSession.disabled","group":"1_copilot@0"}],"editor/title":[{"command":"github.copilot.debug.generateInlineEditTests","when":"resourceScheme == 'ccreq'"}],"explorer/copilot":[{"command":"github.copilot.chat.attachFile","when":"!explorerResourceIsFolder && (resourceScheme == 'file' || resourceScheme =='vscode-remote')","group":"chat@1"},{"command":"github.copilot.edits.attachFile","when":"!explorerResourceIsFolder && !config.chat.unifiedChatView && (resourceScheme == 'file' || resourceScheme =='vscode-remote')","group":"chat@2"},{"command":"github.copilot.chat.attachFolder","when":"explorerResourceIsFolder && (resourceScheme == 'file' || resourceScheme =='vscode-remote')","group":"chat@1"},{"command":"github.copilot.edits.attachFolder","when":"explorerResourceIsFolder && !config.chat.unifiedChatView && (resourceScheme == 'file' || resourceScheme =='vscode-remote')","group":"chat@2"}],"copilot":[{"command":"github.copilot.chat.attachFile","when":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'","group":"zContext@2"},{"command":"github.copilot.chat.attachSelection","when":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'","group":"zContext@1"},{"command":"github.copilot.edits.attachSelection","when":"(resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata') && !config.chat.unifiedChatView","group":"zEditContext@1"},{"command":"github.copilot.edits.attachFile","when":"(resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata') && !config.chat.unifiedChatView","group":"zEditContext@2"},{"command":"inlineChat.start","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilot@1"},{"command":"github.copilot.chat.explain","when":"!github.copilot.interactiveSession.disabled","group":"copilotAction@1"},{"command":"github.copilot.chat.fix","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@2"},{"command":"github.copilot.chat.review","when":"github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled && resourceScheme != 'vscode-chat-code-block'","group":"copilotAction@3"},{"command":"github.copilot.chat.generateDocs","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@4"},{"command":"github.copilot.chat.generateTests","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@5"}],"terminal/context":[{"submenu":"terminal/copilot","when":"!github.copilot.interactiveSession.disabled","group":"2_copilot@0"}],"terminal/copilot":[{"command":"workbench.action.terminal.chat.start","group":"copilot@1"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","group":"copilotAction@1"},{"command":"github.copilot.terminal.attachTerminalSelection","group":"zEditContext@1"}],"testing/item/result":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated","group":"inline@2"}],"testing/item/context":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated","group":"inline@2"}],"commandPalette":[{"command":"github.copilot.interactiveSession.feedback","when":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.debug.workbenchState","when":"true"},{"command":"github.copilot.chat.rerunWithCopilotDebug","when":"false"},{"command":"github.copilot.chat.startCopilotDebugCommand","when":"false"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","when":"false"},{"command":"github.copilot.git.generateCommitMessage","when":"false"},{"command":"github.copilot.chat.explain","when":"false"},{"command":"github.copilot.chat.attachFolder","when":"false"},{"command":"github.copilot.edits.attachFolder","when":"false"},{"command":"github.copilot.chat.review","when":"!github.copilot.interactiveSession.disabled"},{"command":"github.copilot.chat.review.apply","when":"false"},{"command":"github.copilot.chat.review.applyAndNext","when":"false"},{"command":"github.copilot.chat.review.discard","when":"false"},{"command":"github.copilot.chat.review.discardAndNext","when":"false"},{"command":"github.copilot.chat.review.discardAll","when":"false"},{"command":"github.copilot.chat.review.stagedChanges","when":"false"},{"command":"github.copilot.chat.review.unstagedChanges","when":"false"},{"command":"github.copilot.chat.review.changes","when":"false"},{"command":"github.copilot.chat.review.changes.cancel","when":"false"},{"command":"github.copilot.chat.review.previous","when":"false"},{"command":"github.copilot.chat.review.next","when":"false"},{"command":"github.copilot.chat.review.continueInInlineChat","when":"false"},{"command":"github.copilot.chat.review.continueInChat","when":"false"},{"command":"github.copilot.chat.review.markHelpful","when":"false"},{"command":"github.copilot.chat.review.markUnhelpful","when":"false"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","when":"false"},{"command":"github.copilot.tests.fixTestFailure","when":"false"},{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"false"},{"command":"github.copilot.search.markHelpful","when":"false"},{"command":"github.copilot.search.markUnhelpful","when":"false"},{"command":"github.copilot.search.feedback","when":"false"},{"command":"github.copilot.chat.debug.showElements","when":"false"},{"command":"github.copilot.chat.debug.hideElements","when":"false"},{"command":"github.copilot.chat.debug.showTools","when":"false"},{"command":"github.copilot.chat.debug.hideTools","when":"false"},{"command":"github.copilot.chat.mcp.setup.check","when":"false"},{"command":"github.copilot.chat.mcp.setup.validatePackage","when":"false"},{"command":"github.copilot.chat.mcp.setup.flow","when":"false"}],"view/title":[{"submenu":"github.copilot.chat.debug.filter","when":"view == copilot-chat","group":"navigation"}],"searchPanel/aiResults/commands":[{"command":"github.copilot.search.markHelpful","group":"inline@0","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.markUnhelpful","group":"inline@1","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.feedback","group":"inline@2","when":"aiResultsTitle && aiResultsRequested && github.copilot.debugReportFeedback"}],"comments/comment/title":[{"command":"github.copilot.chat.review.markHelpful","group":"inline@0","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.markUnhelpful","group":"inline@1","when":"commentController == github-copilot-review"}],"commentsView/commentThread/context":[{"command":"github.copilot.chat.review.apply","group":"context@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"context@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"context@3","when":"commentController == github-copilot-review"}],"comments/commentThread/additionalActions":[{"submenu":"copilot/reviewComment/additionalActions/applyAndNext","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"command":"github.copilot.chat.review.apply","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"},{"submenu":"copilot/reviewComment/additionalActions/discardAndNext","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"submenu":"copilot/reviewComment/additionalActions/discard","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"}],"copilot/reviewComment/additionalActions/applyAndNext":[{"command":"github.copilot.chat.review.applyAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.apply","group":"inline@2","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discardAndNext":[{"command":"github.copilot.chat.review.discardAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discard":[{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"comments/commentThread/title":[{"command":"github.copilot.chat.review.previous","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.next","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInChat","group":"inline@3","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"inline@4","when":"commentController == github-copilot-review"}],"scm/title":[{"command":"github.copilot.chat.review.changes","group":"navigation","when":"github.copilot.chat.reviewDiff.enabled && !github.copilot.chat.review.sourceControlProgress && scmProvider == git && scmProviderRootUri in github.copilot.chat.reviewDiff.enabledRootUris"},{"command":"github.copilot.chat.review.changes.cancel","group":"navigation","when":"github.copilot.chat.reviewDiff.enabled && github.copilot.chat.review.sourceControlProgress && scmProvider == git && scmProviderRootUri in github.copilot.chat.reviewDiff.enabledRootUris"}],"scm/inputBox":[{"command":"github.copilot.git.generateCommitMessage","when":"scmProvider == git"}],"testing/message/context":[{"command":"github.copilot.tests.fixTestFailure","when":"testing.testItemHasUri","group":"inline@1"}],"debug/createConfiguration":[{"command":"github.copilot.debug.generateConfiguration","group":"z_commands","when":"config.github.copilot.chat.startDebugging.enabled"}],"issue/reporter":[{"command":"github.copilot.report"}],"github.copilot.chat.debug.filter":[{"command":"github.copilot.chat.debug.showElements","when":"github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.hideElements","when":"!github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.showTools","when":"github.copilot.chat.debug.toolsHidden","group":"commands@1"},{"command":"github.copilot.chat.debug.hideTools","when":"!github.copilot.chat.debug.toolsHidden","group":"commands@1"}]},"icons":{"copilot-logo":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"terminalQuickFixes":[{"id":"copilot-chat.fixWithCopilot","commandLineMatcher":".+","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0},"kind":"explain"},{"id":"copilot-chat.generateCommitMessage","commandLineMatcher":"git add .+","commandExitResult":"success","kind":"explain","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0}},{"id":"copilot-chat.terminalToDebugging","commandLineMatcher":".+","kind":"explain","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}},{"id":"copilot-chat.terminalToDebuggingSuccess","commandLineMatcher":".+","kind":"explain","commandExitResult":"success","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}}],"languages":[{"id":"ignore","filenamePatterns":[".copilotignore"],"aliases":[]},{"id":"markdown","extensions":[".copilotmd"]}],"views":{"copilot-chat":[{"id":"copilot-chat","name":"Copilot Chat Debug","icon":"assets/debug-icon.svg","when":"github.copilot.chat.debug"}]},"viewsContainers":{"activitybar":[{"id":"copilot-chat","title":"Copilot Chat Debug","icon":"assets/debug-icon.svg","when":"github.copilot.chat.debug"}]},"configurationDefaults":{"workbench.editorAssociations":{"*.copilotmd":"vscode.markdown.preview.editor"}},"keybindings":[{"command":"github.copilot.chat.rerunWithCopilotDebug","key":"ctrl+alt+.","mac":"cmd+alt+.","when":"github.copilot-chat.activated && terminalShellIntegrationEnabled && terminalFocus && !terminalAltBufferActive"}],"walkthroughs":[{"id":"copilotWelcome","title":"GitHub Copilot","description":"Your AI pair programmer to write code faster and smarter","when":"!isWeb","steps":[{"id":"copilot.setup.signIn","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Use Copilot for Free](command:workbench.action.chat.triggerSetup)","when":"chatSetupSignedOut && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signInNoAction","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatSetupSignedOut && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signUp","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Use Copilot for Free](command:workbench.action.chat.triggerSetup)","when":"chatPlanCanSignUp && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signUpNoAction","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatPlanCanSignUp && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.panelChat","title":"Chat about your code","description":"Ask Copilot programming questions or get help with your code using **@workspace**.\n Type **@** to see all available chat participants that you can chat with directly, each with their own expertise.\n[Chat with Copilot](command:workbench.action.chat.open?%7B%22mode%22%3A%22ask%22%7D)","when":"!chatSetupSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Copilot Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.edits","title":"Make changes using natural language","description":"Use **Copilot Edits** to select files you want to work with and describe changes you want to make. Copilot applies them directly to your files.\n[Edit with Copilot](command:workbench.action.chat.open?%7B%22mode%22%3A%22edit%22%7D)","when":"!chatSetupSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-hclight.mp4"},"altText":"The video shows the user dragging and dropping files into the Copilot Edits input box located in the secondary sidebar. Copilot then updates the file according to the user’s request"}},{"id":"copilot.firstSuggest","title":"AI-suggested code completions","description":"As you type in the editor, Copilot suggests code to help you complete what you started.","when":"!chatSetupSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-hclight.mp4"},"altText":"The video shows different Copilot completions, where Copilot suggests code to help the user complete their code"}},{"id":"copilot.inlineChatNotMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Ctrl+I``** to open **Inline Chat**.","when":"!isMac && (!chatSetupSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hclight.mp4"},"altText":"Inline Chat view in the editor. The video shows the user invoking the inline chat widget and asking Copilot to make a change in the file using natural language. Copilot then makes the requested change"}},{"id":"copilot.inlineChatMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Cmd+I``** to open **Inline Chat**.","when":"isMac && (!chatSetupSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hclight.mp4"},"altText":"The video shows the user invoking the inline chat widget and asking Copilot to make a change in the file using natural language. Copilot then makes the requested change"}},{"id":"copilot.sparkle","title":"Look out for smart actions","description":"Copilot enhances your coding experience with AI-powered smart actions throughout the VS Code interface.\nLook for $(sparkle) icons, such as in the [Source Control view](command:workbench.view.scm), where Copilot generates commit messages and PR descriptions based on code changes.\n\n[Discover Tips and Tricks](https://code.visualstudio.com/docs/copilot/copilot-vscode-features)","when":"!chatSetupSignedOut || chatIsEnabled","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-hclight.mp4"},"altText":"The video shows the sparkle icon in the source control input box being clicked, triggering GitHub Copilot to generate a commit message automatically"}}]}],"jsonValidation":[{"fileMatch":"settings.json","url":"ccsettings://root/schema.json"}],"typescriptServerPlugins":[{"name":"@vscode/copilot-typescript-server-plugin","enableForWorkspaceTypeScriptVersions":true}]},"extensionPack":["GitHub.copilot"],"overrides":{"@aminya/node-gyp-build":"npm:node-gyp-build@4.8.1","string_decoder":"npm:string_decoder@1.2.0"},"isPreRelease":false},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/github.copilot-chat-0.26.7","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"installedTimestamp":1745949458594,"source":"gallery","id":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":35347351},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"github.copilot","uuid":"23c4aeee-f844-43cd-b53e-1113e483f1a6"},"manifest":{"name":"copilot","displayName":"GitHub Copilot","description":"Your AI pair programmer","version":"1.311.0","build":"1539","buildType":"prod","publisher":"GitHub","preview":false,"homepage":"https://github.com/features/copilot?editor=vscode","license":"https://docs.github.com/en/site-policy/github-terms/github-terms-for-additional-products-and-features","bugs":{"url":"https://github.com/microsoft/vscode-copilot-release/issues"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","extensionPack":["GitHub.copilot-chat"],"engines":{"vscode":"^1.98.0","node":">=20.0.0","npm":">=9.0.0"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished"],"main":"./dist/extension","enabledApiProposals":["inlineCompletionsAdditions"],"contributes":{"commands":[{"command":"github.copilot.toggleStatusMenu","title":"Open Status Menu","category":"GitHub Copilot"},{"command":"github.copilot.signIn","title":"Sign In","category":"GitHub Copilot","enablement":"!github.copilot.activated"},{"command":"github.copilot.acceptCursorPanelSolution","title":"Accept Panel Suggestion at the Cursor","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.previousPanelSolution","title":"Navigate to the Previous Panel Suggestion","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.nextPanelSolution","title":"Navigate to the Next Panel Suggestion","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.generate","title":"Open Completions Panel","enablement":"github.copilot.activated","category":"GitHub Copilot"},{"command":"github.copilot.completions.disable","title":"Disable Completions","enablement":"github.copilot.activated && config.editor.inlineSuggest.enabled && github.copilot.completions.enabled","category":"GitHub Copilot"},{"command":"github.copilot.completions.enable","title":"Enable Completions","enablement":"github.copilot.activated && !(config.editor.inlineSuggest.enabled && github.copilot.completions.enabled)","category":"GitHub Copilot"},{"command":"github.copilot.completions.toggle","title":"Toggle (Enable/Disable) Completions","enablement":"github.copilot.activated","category":"GitHub Copilot"},{"command":"github.copilot.sendFeedback","title":"Send Feedback","category":"GitHub Copilot"},{"command":"github.copilot.collectDiagnostics","title":"Collect Diagnostics","category":"GitHub Copilot"},{"command":"github.copilot.openLogs","title":"Open Logs","category":"GitHub Copilot"},{"command":"github.copilot.openModelPicker","title":"Change Completions Model","category":"GitHub Copilot"},{"command":"github.copilot.sendCompletionFeedback","title":"Send Copilot Completion Feedback","category":"GitHub Copilot"}],"keybindings":[{"command":"github.copilot.generate","key":"ctrl+enter","mac":"ctrl+enter","when":"editorTextFocus && !commentEditorFocused"},{"command":"github.copilot.acceptCursorPanelSolution","key":"ctrl+/","mac":"ctrl+/","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.previousPanelSolution","key":"alt+[","mac":"alt+[","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.nextPanelSolution","key":"alt+]","mac":"alt+]","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"editor.action.inlineSuggest.trigger","key":"alt+\\","when":"editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"}],"configuration":[{"title":"GitHub Copilot","properties":{"github.copilot.selectedCompletionModel":{"type":"string","default":"","markdownDescription":"The currently selected completion model ID. To select from a list of available models, use the __\"Change Completion Model\"__ command or open the model picker from the Copilot menu. The value must be a valid model ID. An empty value indicates that the default model will be used."},"github.copilot.advanced":{"type":"object","title":"Advanced Settings","properties":{"authProvider":{"type":"string","enum":["github","github-enterprise"],"enumDescriptions":["GitHub.com","GitHub Enterprise"],"default":"github","description":"The GitHub identity to use for Copilot"},"authPermissions":{"type":"string","enum":["default","minimal"],"markdownEnumDescriptions":["Default (recommended) - The default permissions enable the best that Copilot has to offer including, but not limited to, faster repo indexing and the power of the `@github` agent.","Minimal - The minimal permissions required for Copilot functionality."],"default":"default","markdownDescription":"Controls what kind of permissions are asked for when signing in to Copilot. The options are\n* `default` - (strongly recommended) The default permissions enable the best that Copilot has to offer including, but not limited to, faster repo indexing and the power of the `@github` agent.\n* `minimal` - The minimal permissions are the least that Copilot needs to function. Some features may behave slower or not at all."},"useLanguageServer":{"type":"boolean","default":false,"description":"Experimental: Use language server"},"debug.overrideEngine":{"type":"string","default":"","description":"Override engine name"},"debug.overrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy full URL"},"debug.testOverrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy URL when running tests"},"debug.overrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API full URL"},"debug.testOverrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API URL when running tests"},"debug.filterLogCategories":{"type":"array","default":[],"deprecationMessage":"Set overrideLogLevels.* to ERROR to filter out unwanted categories.","description":"Show only log categories listed in this setting. If an array is empty, show all loggers"}}},"github.copilot.enable":{"type":"object","scope":"window","default":{"*":true,"plaintext":false,"markdown":false,"scminput":false},"additionalProperties":{"type":"boolean"},"markdownDescription":"Enable or disable Copilot completions for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)"},"github.copilot.inlineSuggest.enable":{"type":"boolean","default":true,"deprecationMessage":"This setting has no effect. Please use github.copilot.enable instead.","description":"Show inline suggestions"},"github.copilot.editor.enableAutoCompletions":{"type":"boolean","scope":"language-overridable","default":true,"deprecationMessage":"This setting is deprecated. Please use github.copilot.enable instead.","description":"Automatically show inline completions"}}}],"configurationDefaults":{"editor.tokenColorCustomizations":{"[*Light*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#000"}}]},"[*Dark*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#fff"}}]}}},"languages":[{"id":"code-referencing"}],"grammars":[{"language":"code-referencing","scopeName":"text.ref","path":"./syntaxes/ref.tmGrammar.json"}],"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}]},"scripts":{"build":"tsx esbuild.ts","clean":"./script/build/clean.sh","compress":"tsx ./script/compressTokenizer.ts","forbid-sources-content:extension":"node script/forbid-sources-content.js --extension","generate_languages":"tsx script/generateLanguages.ts && prettier --write lib/src/language/generatedLanguages.ts","get_token":"tsx script/getToken.ts","lint":"run-p --aggregate-output \"lint:*\"","lint:deps":"depcruise -c .dependency-cruiser.js .","lint:eslint":"eslint -f visualstudio --quiet --cache .","lint:prettier":"prettier --check . 2>&1","lint:types":"tsc --noEmit && tsc --noEmit -p extension/src/copilotPanel/webview","prebuild":"npm install","pretest":"npm run build","pretest:headless":"npm run build","pretest:extension":"npm run build","pretest:lsp-client":"npm run build","pretest:lib-e2e":"npm run build","prewatch":"npm run build","prewatch:esbuild":"npm run build","start":"npm run watch","test":"npm-run-all \"test:extension --ignore-scripts\" \"test:headless --ignore-scripts\" lint","test:headless":"npm-run-all test:lib test:agent \"test:lib-e2e --ignore-scripts\" test:prompt \"test:lsp-client --ignore-scripts\" lint","test:agent":"mocha \"agent/src/**/*.test.{ts,tsx}\"","test:extension":"tsx extension/test/runTest.ts","test:lib":"mocha \"lib/src/**/*.test.{ts,tsx}\"","test:lib-e2e":"mocha \"lib/e2e/src/**/*.test.{ts,tsx}\" --exclude \"lib/e2e/src/prompt/**/*.test.ts\"","test:lib-e2e-no-ci":"mocha \"lib/e2e/no-ci/**/*.test.{ts,tsx}\"","test:lib-prompt-e2e":"mocha \"lib/e2e/src/prompt/prompt.test.ts\"","test:lib-prompt-e2e-perf":"INCLUDE_PERFORMANCE=true npm run test:lib-prompt-e2e","test:lsp-client":"mocha \"lsp-client/test/*.test.{ts,tsx}\"","test:prompt":"npm -C prompt run test","vscode-dts":"vscode-dts dev && mv vscode.proposed.*.ts extension/src","vscode:prepublish":"run-s \"build --ignore-scripts\" forbid-sources-content:extension","vscode:uninstall":"node dist/extensionUninstalled.js","vsix":"vsce package --allow-missing-repository","watch":"run-p \"watch:esbuild --ignore-scripts\" \"watch:types -- --preserveWatchOutput\"","watch:esbuild":"tsx esbuild.ts --watch","watch:types":"tsc --noEmit --watch"},"devDependencies":{"@datadog/datadog-ci":"^3.4.0","@github/prettier-config":"0.0.6","@limegrass/eslint-plugin-import-alias":"^1.5.0","@parcel/watcher":"^2.5.1","@types/benchmark":"^2.1.5","@types/crypto-js":"^4.2.2","@types/diff":"^7.0.2","@types/git-url-parse":"^16.0.0","@types/js-yaml":"^4.0.6","@types/kerberos":"^1.1.2","@types/mocha":"^10.0.10","@types/node":"~20.8.0","@types/semver":"^7.7.0","@types/sinon":"^17.0.4","@types/uuid":"^10.0.0","@types/vscode":"1.98.0","@types/yargs":"^17.0.24","@vscode/test-electron":"^2.5.2","@vscode/vsce":"^3.3.2","@yao-pkg/pkg":"^6.4.0","benchmark":"^2.1.4","boxen":"^8.0.1","chalk":"^5.4.1","dependency-cruiser":"^16.10.0","electron":"^28.1.4","esbuild":"^0.25.2","esbuild-plugin-copy":"^2.1.1","eslint":"^9.24.0","eslint-formatter-visualstudio":"^8.40.0","eslint-plugin-mocha":"^10.5.0","fantasticon":"^3.0.0","glob":"^11.0.1","globals":"^16.0.0","js-yaml":"^4.1.0","mocha":"^11.1.0","mocha-junit-reporter":"^2.2.1","mocha-multi-reporters":"^1.5.1","npm-run-all":"^4.1.5","prettier":"^3.5.3","prettier-plugin-organize-imports":"^4.1.0","proxy":"^2.1.1","sinon":"^20.0.0","ts-dedent":"^2.2.0","ts-node":"^10.9.1","tsconfig-paths":"^4.2.0","tsx":"^4.19.3","typescript":"^5.8.3","typescript-eslint":"^8.30.1","vscode-dts":"^0.3.3"},"dependencies":{"@adobe/helix-fetch":"github:devm33/helix-fetch#1088e599270f36632703f138d88c2100cbe468db","@github/memoize":"1.1.5","@microsoft/1ds-post-js":"^4.3.6","@microsoft/applicationinsights-web-basic":"^3.3.6","@microsoft/tiktokenizer":"^1.0.9","@sinclair/typebox":"^0.34.33","@types/vscode-webview":"^1.57.4","@vscode/codicons":"^0.0.36","@vscode/prompt-tsx":"0.3.0-alpha.21","@vscode/webview-ui-toolkit":"^1.3.1","await-lock":"^2.2.2","crypto-js":"^4.2.0","diff":"^7.0.0","dldr":"^0.0.10","get-stream":"^6.0.1","git-url-parse":"^16.0.3","kerberos":"^2.2.0","mac-ca":"^3.1.1","microjob":"^0.7.0","minimatch":"^9.0.3","open":"^10.1.0","semver":"^7.7.1","shiki":"~1.15.0","source-map-support":"^0.5.21","sqlite3":"^5.1.7","uuid":"^11.1.0","vscode-languageclient":"^9.0.0","vscode-languageserver":"^9.0.0","vscode-languageserver-protocol":"^3.17","vscode-languageserver-textdocument":"~1.0.11","vscode-uri":"^3.1.0","web-tree-sitter":"^0.20.8","windows-ca-certs":"^0.1.0","yargs":"^17.7.2"},"overrides":{"fsevents":"<0","bindings":"npm:bundled-bindings@^1.5.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/github.copilot-1.311.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"installedTimestamp":1745949458594,"source":"gallery","id":"23c4aeee-f844-43cd-b53e-1113e483f1a6","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":58259647},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"endormi.2077-theme","uuid":"9a2c5b90-283b-4454-87b6-96c05146d7ba"},"manifest":{"name":"2077-theme","displayName":"2077 theme","publisher":"Endormi","description":"Cyberpunk 2077 inspired theme","version":"1.5.3","engines":{"vscode":"^1.17.0"},"categories":["Themes"],"repository":{"type":"git","url":"https://github.com/endormi/vscode-2077-theme"},"icon":"image/icon.PNG","contributes":{"themes":[{"label":"2077","uiTheme":"vs-dark","path":"./theme/2077 theme-color-theme.json"}]}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/endormi.2077-theme-1.5.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Endormi","metadata":{"installedTimestamp":1745949874300,"source":"gallery","id":"9a2c5b90-283b-4454-87b6-96c05146d7ba","publisherId":"44f5b8f1-6396-4d9f-9305-364de5bf3798","publisherDisplayName":"Endormi","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":530149},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"max-ss.cyberpunk","uuid":"d2ef4ecf-344b-4514-abc4-6d4eb2b6a33c"},"manifest":{"name":"Cyberpunk","displayName":"Cyberpunk","description":"A crazy cyberpunk theme","version":"1.2.14","publisher":"max-SS","galleryBanner":{"color":"#0a0126","theme":"dark"},"engines":{"vscode":"^1.18.0"},"license":"MIT","icon":"cyberpunk_logo_2021.png","categories":["Themes"],"contributes":{"themes":[{"label":"Cyberpunk","uiTheme":"vs-dark","path":"./themes/cyberpunk-color-theme.json"},{"label":"Activate UMBRA protocol","uiTheme":"vs-dark","path":"./themes/cyberpunk-umbra-color-theme.json"},{"label":"Activate SCARLET protocol (beta)","uiTheme":"vs-dark","path":"./themes/cyberpunk-scarlet-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/prometheux-ar/cyberpunk"},"bugs":{"url":"https://github.com/prometheux-ar/cyberpunk/issues","email":"cyberpunk.vsc@outlook.com"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/max-ss.cyberpunk-1.2.14","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Max","metadata":{"installedTimestamp":1745949878662,"source":"gallery","id":"d2ef4ecf-344b-4514-abc4-6d4eb2b6a33c","publisherId":"55b5be4e-553d-4035-b421-3cd6baea3744","publisherDisplayName":"Max","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":6743265},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"miguelsolorio.fluent-icons","uuid":"41aac8eb-b4f4-408d-9708-320d033a17f8"},"manifest":{"name":"fluent-icons","displayName":"Fluent Icons","version":"0.0.19","publisher":"miguelsolorio","description":"Fluent product icons for Visual Studio Code","icon":"icon.png","categories":["Themes"],"engines":{"vscode":"^1.53.0"},"keywords":["icon","theme","fluent","product"],"contributes":{"productIconThemes":[{"id":"fluent-icons","label":"Fluent Icons","path":"./theme/fluent-icons.json"}]},"scripts":{"release":"release-it","clean":"rm -rf dist && mkdir dist","svgo":"svgo -f src/icons/ --config config.yml","move":"sh util.sh","export-to-csv":"node src/export/index.js -f dist/fluent-icons.ttf > dist/fluent-icons.csv","fonts":"icon-font-generator src/icons/*.svg -o dist -n fluent-icons -p fluent-icons --csstp src/template/styles.hbs --height=1000 --center --codepoints src/template/mapping.json --json false --types 'ttf'","dev":"npm run clean && npm run move && npm run svgo && npm run fonts -- --html true --htmltp src/template/preview.hbs && npm run export-to-csv && cp -R dist/fluent-icons.ttf theme/fluent-icons.ttf"},"repository":{"type":"git","url":"https://github.com/misolori/vscode-fluent-icons.git"},"bugs":{"url":"https://github.com/misolori/vscode-fluent-icons/issues"},"author":{"name":"Miguel Solorio"},"devDependencies":{"handlebars":">=4.7.7","icon-font-generator":"^2.1.10","lodash":">=4.17.21","minimist":"^1.2.3","opentype.js":"^0.6.6","release-it":"^14.3.0","svgo":"^1.3.2","underscore":">=1.12.1","xmldom":">=0.5.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/miguelsolorio.fluent-icons-0.0.19","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Miguel Solorio","metadata":{"installedTimestamp":1745949883288,"source":"gallery","id":"41aac8eb-b4f4-408d-9708-320d033a17f8","publisherId":"f1903af7-ceb4-410f-b269-cd514b33bea2","publisherDisplayName":"Miguel Solorio","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1687410},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"miguelsolorio.symbols","uuid":"cb54c3b9-1c64-4c4a-8b5a-887270ffe4b6"},"manifest":{"name":"symbols","displayName":"Symbols","description":"A simple file icon theme for VS Code","version":"0.0.22","publisher":"miguelsolorio","icon":"symbols.png","preview":true,"main":"./src/extension.js","engines":{"vscode":"^1.88.0"},"categories":["Themes"],"extensionKind":["ui","workspace"],"keywords":["icons","theme","icon-theme","file-icon-theme","file icons"],"repository":{"type":"git","url":"https://github.com/miguelsolorio/vscode-symbols.git"},"bugs":{"url":"https://github.com/miguelsolorio/vscode-symbols/issues"},"author":{"name":"Miguel Solorio"},"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["onStartupFinished"],"contributes":{"iconThemes":[{"id":"symbols","label":"Symbol Icons","path":"./src/symbol-icon-theme.modified.json","_watch":true}],"configuration":{"type":"object","title":"Symbols","properties":{"symbols.hidesExplorerArrows":{"type":"boolean","default":false,"description":"Hide arrow icons in the explorer section."},"symbols.defaultAssociations":{"type":"boolean","default":true,"description":"Allows you to use the default icons for files and folders or disable them and specify your own via symbols.files.associations and symbols.folders.associations."},"symbols.folders.associations":{"type":"object","default":{},"description":"With this configuration can customize the folder icons."},"symbols.files.associations":{"type":"object","default":{},"description":"With this configuration can customize the files icons."}}}},"scripts":{"format":"biome format --write .","lint":"biome lint .","lint:fix":"biome lint --apply .","check-format":"biome check .","check-format:fix":"biome check --apply .","precommit":"npm run check-format && npm run lint","release":"release-it"},"devDependencies":{"@biomejs/biome":"1.7.2","@types/vscode":"^1.88.0","release-it":"^17.2.1"},"release-it":{"git":{"commitMessage":"chore: release v${version}"},"npm":{"publish":false},"github":{"release":true}}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/miguelsolorio.symbols-0.0.22","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Miguel Solorio","metadata":{"installedTimestamp":1745949887052,"source":"gallery","id":"cb54c3b9-1c64-4c4a-8b5a-887270ffe4b6","publisherId":"f1903af7-ceb4-410f-b269-cd514b33bea2","publisherDisplayName":"Miguel Solorio","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2096902},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"tabnine.tabnine-vscode","uuid":"75da638c-c45a-44ea-aa3b-8570a3559810"},"manifest":{"publisher":"TabNine","name":"tabnine-vscode","version":"3.262.0","displayName":"Tabnine AI","description":"Tabnine is the AI code assistant that accelerates and simplifies software development while keeping your code private, secure, and compliant. It provides accurate, highly personalized results for generating code, writing unit tests, creating documentation, explaining legacy code, fixing code, and much more. ","icon":"icons/small_logo.png","author":"Tabnine <support@tabnine.com> (https://tabnine.com/)","license":"License at https://tabnine.com/eula","galleryBanner":{"color":"#100f11","theme":"dark"},"badges":[{"url":"https://img.shields.io/github/stars/codota/Tabnine?style=social","description":"Star Tabnine on Github","href":"https://github.com/codota/TabNine"},{"url":"https://img.shields.io/twitter/follow/Tabnine?style=social","description":"Follow Tabnine on Twitter","href":"https://x.com/Tabnine"},{"url":"https://img.shields.io/visual-studio-marketplace/r/TabNine.tabnine-vscode?logo=visual-studio-code&style=social","description":"Rate us in VSCode Marketplace","href":"https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode"},{"url":"https://img.shields.io/youtube/channel/views/UC3ZLFXRRmK3XbT5Oq0qPLqA?style=social","description":"Watch Tabnine demo video","href":"https://www.youtube.com/watch?v=KuuitKbia4g"}],"homepage":"https://tabnine.com","repository":{"type":"git","url":"https://github.com/codota/tabnine-vscode"},"bugs":{"url":"https://github.com/codota/tabnine-vscode/issues","email":"support@tabnine.com"},"engines":{"vscode":"^1.50.0"},"categories":["Programming Languages","Snippets","Machine Learning","Education","Other"],"keywords":["javascript","python","typescript","php","autocomplete","chat","code completion","ruby","java","go","golang","bash","kotlin","html","css","ocaml","perl","rust","julia","lua","haskell","c","cpp","c++","csharp","c#","react","swift","objective-c","objectivec","ai","method completion","intellicode","intellisense","snippets","kite","nodejs","node","node.js","jupyter","documentation","refactor","AI-assisted code completion","AI-powered code completion","AI copilot","AI code snippets","code suggestion","code prediction","code hinting","content assist","unit test generation","documentation generation"],"activationEvents":["onStartupFinished"],"main":"./out/extension","scripts":{"analyze:bundle":"webpack --env analyzeBundle","vscode:prepublish":"yarn --frozen-lockfile && yarn clear-out && webpack --mode production --env ${MODE:-public}","compile":"webpack --mode development --watch","build":"webpack --mode development","build:enterprise":"webpack --mode development --env enterprise","test:copyassets":"ncp ./src/test/fixture ./out/test/fixture/","prettier":"prettier --write .","prettier:check":"prettier --check .","lint":"eslint . --max-warnings 0","lint:fix":"eslint . --fix","pretest":"yarn clear-out && tsc && yarn test:copyassets","test":"node ./out/test/runTest.js","vsce:package":"vsce package","vsce:package:enterprise":"MODE=enterprise vsce package","vsce:publish":"vsce publish","ovsx:publish":"ovsx publish","clear-out":"rimraf ./out","verify-package-metadata":"node ./verify-package-metadata.js","prepare":"husky install"},"peerDependencies":{"vscode":"^1.1.37"},"devDependencies":{"@types/chai":"^4.2.14","@types/debounce":"^1.2.1","@types/diff":"^5.0.2","@types/glob":"^7.1.3","@types/mime":"^3.0.0","@types/mocha":"^8.2.2","@types/mock-fs":"^4.13.0","@types/ncp":"^2.0.4","@types/node":"^12.0.10","@types/node-fetch":"^2.6.11","@types/rimraf":"^3.0.0","@types/semver":"^7.3.4","@types/sinon":"^9.0.11","@types/tmp":"^0.2.0","@types/underscore":"^1.11.15","@types/vscode":"^1.50.0","@types/yauzl":"^2.9.1","@typescript-eslint/eslint-plugin":"^5.45.0","@typescript-eslint/parser":"^4.18.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.22.0","assert":"^2.0.0","chai":"^4.2.0","chai-shallow-deep-equal":"^1.4.6","deep-object-diff":"^1.1.0","eslint":"^8.28.0","eslint-config-airbnb-typescript":"^12.3.1","eslint-config-prettier":"^8.2.0","eslint-import-resolver-typescript":"^3.5.2","eslint-plugin-import":"^2.26.0","glob":"^7.1.6","husky":"^5.1.2","lint-staged":"^13.0.4","mocha":"^10.1.0","mocha-teamcity-reporter":"^3.0.0","mock-fs":"^4.13.0","ncp":"^2.0.0","ovsx":"^0.8.3","prettier":"2.2.1","rimraf":"^3.0.2","sinon":"^10.0.0","terser-webpack-plugin":"^5.3.6","ts-loader":"^9.4.1","ts-mockito":"^2.6.1","typescript":"^4.2.2","webpack":"^5.75.0","webpack-bundle-analyzer":"^4.7.0","webpack-cli":"^5.0.0"},"dependencies":{"@ai-zen/node-fetch-event-source":"^2.1.4","await-semaphore":"^0.1.3","axios":"^0.21.0","debounce":"^1.2.1","diff":"^5.0.0","eslint-plugin-no-only-tests":"^3.1.0","extract-zip":"^2.0.1","https-proxy-agent":"^5.0.1","mime":"^3.0.0","node-fetch":"^2.6.12","semver":"^7.3.2","systeminformation":"^5.6.10","tmp":"^0.2.1","underscore":"^1.13.6","vscode-extension-telemetry":"^0.1.7"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"submenus":[{"id":"tabnine.chat.submenu","label":"Tabnine"}],"viewsContainers":{"activitybar":[{"id":"tabnine","title":"Tabnine AI","icon":"icons/small_logo.png"}]},"viewsWelcome":[{"view":"tabnine.loading","contents":"Loading please wait..."}],"views":{"tabnine":[{"type":"webview","id":"tabnine.chat","name":"Chat","when":"tabnine.chat.webview == 'chat'"},{"id":"tabnine.chat.authenticate","type":"webview","name":"Please log in","when":"tabnine.chat.webview == 'authnetication_required'"},{"id":"tabnine.chat.not_part_of_a_team","type":"webview","name":"Please join a team","when":"tabnine.chat.webview == 'part_of_a_team_required'"},{"id":"tabnine.loading","name":"Loading","when":"tabnine.chat.webview == 'loading'"}]},"commands":[{"command":"tabnine.diff.reject","title":"Discard Changes","icon":{"light":"icons/reject-icon.svg","dark":"icons/reject-icon.svg"}},{"command":"tabnine.diff.accept","title":"Accept Changes","icon":{"light":"icons/accept-icon.svg","dark":"icons/accept-icon.svg"}},{"command":"tabnine.chat.commands.explain-code","title":"Explain this code","category":"command"},{"command":"tabnine.chat.commands.generate-tests","title":"Generate tests","category":"command"},{"command":"tabnine.chat.commands.document-code","title":"Document this code","category":"command"},{"command":"tabnine.chat.commands.fix-code","title":"Fix this code","category":"command"},{"command":"tabnine.chat.submit-message","title":"Submit message","when":"tabnine.chat.eval && tabnine.chat.ready"},{"command":"tabnine.chat.state","title":"Chat global state","when":"tabnine.chat.eval && tabnine.chat.ready"},{"command":"tabnine.chat.clear-all-conversations","title":"Clear all tabnine chat conversations","when":"tabnine.chat.eval && tabnine.chat.ready"},{"command":"TabNine::config","title":"Tabnine: Open Settings"},{"command":"TabNine::configExternal","title":"Tabnine: Open Settings in external viewer"},{"command":"TabNine::assistantClearCache","title":"Tabnine: Clear Assistant Cache"},{"command":"TabNine::assistantSetThreshold","title":"Tabnine: Set Assistant Threshold"},{"command":"TabNine::assistantToggle","title":"Tabnine: Toggle Assistant"},{"command":"Tabnine.hideSuggestion","title":"Hide","icon":{"dark":"assets/close_inverse.svg","light":"assets/close.svg"}},{"command":"Tabnine.applySuggestion","title":"Apply","icon":{"dark":"assets/approve_inverse.svg","light":"assets/approve.svg"}},{"command":"tabnine.logs","title":"Tabnine: Open Logs"},{"command":"tabnine.recent-suggestions","title":"Tabnine: Recent suggestions"},{"command":"tabnine.signInUsingAuthToken","title":"Tabnine: Sign in using auth token"},{"command":"tabnine.chat.toggle-focus","title":"Focus chat input"},{"command":"tabnine.instruct","title":"Edit with Tabnine"}],"menus":{"editor/title":[{"command":"tabnine.diff.accept","group":"navigation","when":"resourceScheme == tabnine-diff-view"},{"command":"tabnine.diff.reject","group":"navigation","when":"resourceScheme == tabnine-diff-view"}],"editor/context":[{"submenu":"tabnine.chat.submenu","group":"0__Tabnine","when":"tabnine.chat.ready"}],"tabnine.chat.submenu":[{"command":"tabnine.chat.commands.explain-code"},{"command":"tabnine.chat.commands.generate-tests"},{"command":"tabnine.chat.commands.document-code"},{"command":"tabnine.chat.commands.fix-code"},{"command":"tabnine.instruct"}],"commandPalette":[{"command":"TabNine::assistantClearCache","when":"tabnine-assistant:enabled && tabnine-assistant:background"},{"command":"TabNine::assistantSetThreshold","when":"tabnine-assistant:enabled && tabnine-assistant:background"},{"command":"TabNine::assistantToggle","when":"tabnine-assistant:capability"},{"command":"TabNine::configExternal","when":"!tabnine.enterprise"}],"comments/commentThread/title":[{"command":"Tabnine.hideSuggestion","group":"navigation","when":"commentController == tabnine.commentController"},{"command":"Tabnine.applySuggestion","group":"navigation","when":"commentController == tabnine.commentController"}]},"configuration":[{"title":"Tabnine","properties":{"tabnine.disableLineRegex":{"type":"array","default":[],"description":"Disable Tabnine when the current line contains a match of any of the provided regexes. For example, add \"require\" to disable Tabnine when the current line contains the word 'require'."},"tabnine.disableFileRegex":{"type":"array","default":[],"description":"Disable Tabnine when the file path contains a match of any of the provided regexes. For example, add \"[.]js$\" to disable Tabnine in JavaScript files."},"tabnine.experimentalAutoImports":{"type":["boolean",null,"number"],"default":null,"description":"Experimental: Enable modules auto-import following applying Tabnine suggestions"},"tabnine.logFilePath":{"type":"string","description":"Tabnine's log file (Visual Studio Code must be restarted for this setting to take effect)"},"tabnine.logLevel":{"type":"string","description":"Tabnine's log level (Visual Studio Code must be restarted for this setting to take effect)"},"tabnine.receiveBetaChannelUpdates":{"type":"boolean","default":false,"description":"Receive Tabnine VSCode extention beta updates"},"tabnine.debounceMilliseconds":{"type":"number","default":0,"description":"debounce milliseconds before rendering tabnine suggestion"},"tabnine.snoozeDuration":{"type":"number","default":1,"description":"Hours to disable inline completions when clicking the snooze button","minimum":1,"maximum":24},"tabnine.useProxySupport":{"type":"boolean","default":true,"description":"Use the proxy support for Tabnine (Visual Studio Code must be restarted for this setting to take effect)"},"tabnine.ignoreCertificateErrors":{"type":"boolean","default":false,"description":"Ignore SSL certificate errors when calling Tabnine API (restart to take effect)"},"tabnine.cloudHost":{"type":"string","default":null,"description":"The tabnine cloud host to connect to (restart to take effect)","when":"tabnine.enterprise"},"tabnine.logEngine":{"type":"boolean","default":false,"description":"Log Tabnine engine process (Visual Studio Code must be restarted for this setting to take effect)"},"tabnine.codeLensEnabled":{"type":"boolean","default":true,"description":"Enable/Disable Tabnine code actions (Visual Studio Code must be restarted for this setting to take effect)"},"tabnine.completionsLoadingIndicatorEnabled":{"type":"boolean","default":true,"description":"Enable/Disable Tabnine completions loading indicator (Visual Studio Code must be restarted for this setting to take effect)"}}}],"keybindings":[{"key":"tab","command":"tabnine.tab-override","when":"tabnine.tab-override && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"},{"key":"tab","command":"editor.action.inlineSuggest.commit","when":"tabnine.tab-override && inlineSuggestionVisible && !editorTabMovesFocus"},{"key":"alt+cmd+i","mac":"alt+cmd+i","win":"ctrl+alt+i","linux":"ctrl+alt+i","command":"tabnine.chat.toggle-focus"},{"command":"tabnine.diff.accept","args":"keybinding","key":"alt+a","when":"resourceScheme == tabnine-diff-view"},{"command":"tabnine.diff.reject","args":"keybinding","key":"alt+r","when":"resourceScheme == tabnine-diff-view"},{"command":"tabnine.chat.commands.refine","key":"alt+f","when":"editorTextFocus"},{"key":"ctrl+i","mac":"cmd+i","command":"tabnine.instruct","when":"editorTextFocus","args":{"trigger":"keybinding"}}]},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{ts,js,css,md}":"prettier --write src/"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/tabnine.tabnine-vscode-3.262.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"TabNine","metadata":{"installedTimestamp":1745949891677,"source":"gallery","id":"75da638c-c45a-44ea-aa3b-8570a3559810","publisherId":"1924b661-7c19-45d9-9800-edeb32848fd7","publisherDisplayName":"TabNine","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":7640106},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"sourcegraph.cody-ai","uuid":"20d12578-788a-48ca-96b6-43abf885dc34"},"manifest":{"$schema":"package.schema.json","name":"cody-ai","private":true,"displayName":"Cody: AI Code Assistant","version":"1.88.0","publisher":"sourcegraph","license":"Apache-2.0","icon":"resources/sourcegraph.png","description":"Sourcegraph’s AI code assistant goes beyond individual dev productivity, helping enterprises achieve consistency and quality at scale with AI. & codebase context to help you write code faster. Cody brings you autocomplete, chat, and commands, so you can generate code, write unit tests, create docs, and explain complex code using AI. Choose from the best LLMs, including GPT-4o and Claude 3.5 Sonnet.","scripts":{"build:root":"pnpm -C .. run -s build","postinstall":"pnpm download-wasm && pnpm download-fonts && pnpm copy-win-ca-roots","dev":"pnpm run -s dev:desktop","dev:insiders":"pnpm run -s dev:desktop:insiders","start:dev:desktop":"ts-node scripts/run-with-extension-development-path.ts code --disable-extension=sourcegraph.cody-ai --disable-extension=github.copilot --inspect-extensions=9333 --new-window . --goto ./src/completions/inline-completion-item-provider.ts:16:5","dev:desktop":"pnpm run -s build:dev:desktop && pnpm run start:dev:desktop","dev:desktop:insiders":"pnpm run -s build:dev:desktop && ts-node scripts/run-with-extension-development-path.ts code-insiders --disable-extension=sourcegraph.cody-ai --disable-extension=github.copilot --inspect-extensions=9333 --new-window . --goto ./src/completions/inline-completion-item-provider.ts:16:5","dev:web":"pnpm run -s build:dev:web && pnpm run -s _dev:vscode-test-web --browserType none","watch:dev:web":"concurrently \"pnpm run -s watch:build:dev:web\" \"pnpm run -s _dev:vscode-test-web --browserType none\"","_dev:vscode-test-web":"vscode-test-web --extensionDevelopmentPath=. ${WORKSPACE-test/fixtures/workspace}","build":"pnpm run -s check:build && tsc --build && pnpm run -s _build:esbuild:desktop && pnpm run -s _build:esbuild:web && pnpm run -s _build:webviews --mode production && pnpm run measure-bundle-size","check:build":"pnpm run -s check:typehacks && pnpm run -s check:manifest","check:typehacks":"ts-node-transpile-only ./scripts/enable-typehacks.ts && tsc -p tsconfig.typehacks.json","check:manifest":"ts-node-transpile-only ./scripts/validate-package-json.ts","_build:desktop":"pnpm run -s _build:esbuild:desktop && pnpm run -s _build:webviews --mode production","_build:web":"pnpm run -s _build:esbuild:web && pnpm run -s _build:webviews --mode production","build:dev:desktop":"concurrently \"pnpm run -s _build:esbuild:desktop\" \"pnpm run -s _build:webviews --mode development\"","build:dev:web":"concurrently \"pnpm run -s _build:esbuild:web\" \"pnpm run -s _build:webviews --mode development\"","build:prod:webviews":"pnpm run -s _build:webviews --mode production","watch:build:dev:web":"concurrently \"pnpm run -s _build:esbuild:web --watch\" \"pnpm run -s _build:webviews --mode development --watch\"","watch:build:dev:desktop":"concurrently \"pnpm run -s _build:esbuild:desktop --watch\" \"pnpm run -s _build:webviews --mode development --watch\"","_build:esbuild:desktop":"pnpm download-wasm && pnpm download-fonts && pnpm run -s _build:esbuild:uninstall && pnpm run -s _build:esbuild:node","_build:esbuild:node":"esbuild ./src/extension.node.ts --bundle --outfile=dist/extension.node.js --loader:.node=copy --external:vscode --external:typescript --alias:@sourcegraph/cody-shared=@sourcegraph/cody-shared/src/index --alias:@sourcegraph/cody-shared/src=@sourcegraph/cody-shared/src --alias:lexical=./build/lexical-package-fix --format=cjs --platform=node --sourcemap --target=es2022","_build:esbuild:web":"esbuild ./src/extension.web.ts --platform=browser --bundle --outfile=dist/extension.web.js --alias:@sourcegraph/cody-shared=@sourcegraph/cody-shared/src/index --alias:@sourcegraph/cody-shared/src=@sourcegraph/cody-shared/src --alias:path=path-browserify --external:typescript --alias:node:path=path-browserify --alias:node:os=os-browserify --alias:os=os-browserify --external:vscode  --external:node:child_process  --external:node:util --external:node:fs --external:node:fs/promises --external:node:process --define:process='{\"env\":{}}' --define:window=self --format=cjs --sourcemap","_build:esbuild:uninstall":"node ./uninstall/esbuild.mjs","_build:webviews":"vite -c webviews/vite.config.mts build","_build:vsix_for_test":"vsce package --no-dependencies --out dist/cody.e2e.vsix","release":"ts-node-transpile-only ./scripts/release.ts","download-wasm":"ts-node-transpile-only ./scripts/download-wasm-modules.ts","download-fonts":"ts-node-transpile-only ./scripts/download-fonts.ts","copy-win-ca-roots":"ts-node-transpile-only ./scripts/copy-win-ca-roots.ts","release:dry-run":"pnpm run download-wasm && pnpm run download-fonts && cross-env CODY_RELEASE_DRY_RUN=1 ts-node ./scripts/release.ts","storybook":"storybook dev -p 6007 --no-open --no-version-updates","test:e2e":"playwright install && tsc --build && node dist/tsc/test/e2e/install-deps.js && pnpm run -s _build:vsix_for_test && pnpm run -s build:dev:desktop && pnpm run -s test:e2e:run","test:e2e:run":"playwright test","test:e2e2":"pnpm -s test:e2e2:deps && pnpm -s build:root && pnpm -s build:dev:desktop && pnpm -s test:e2e2:run","test:e2e2:run":"playwright test -c playwright.v2.config.ts","test:e2e2:deps":"playwright install chromium --with-deps","test:integration":"tsc --build ./test/integration && pnpm run -s build:dev:desktop && node --inspect -r ts-node/register dist/tsc/test/integration/main.js","test:unit":"vitest","bench":"vitest bench","vscode:prepublish":"pnpm -s run build","vscode:uninstall":"node ./dist/post-uninstall.js","test:unit:tree-sitter-queries":"vitest ./src/tree-sitter/query-tests/*.test.ts","release-notes":"ts-node-transpile-only ./scripts/release-notes.ts","measure-bundle-size":"cross-env LOG_BUNDLE_SIZE=true ts-node-transpile-only ./scripts/measure-bundle-size.ts"},"categories":["AI","Chat","Programming Languages","Machine Learning","Snippets","Education"],"keywords":["cody","codey","sourcegraph","chop","autocomplete","chat","chatbot","codegen","code completion","code analysis","code generation","documentation","refactor","test","generate","openai","anthropic","gemini","gpt-4","claude","intellisense","openai","ai","assistant","llm","bot","model","typescript","javascript","python","golang","rust","go","html","css","java","php","swift","kotlin","ollama"],"repository":{"type":"git","url":"https://github.com/sourcegraph/cody","directory":"vscode"},"bugs":{"url":"https://github.com/sourcegraph/cody/issues"},"homepage":"https://sourcegraph.com/docs/cody","badges":[{"url":"https://img.shields.io/discord/969688426372825169?color=5765F2","href":"https://srcgr.ph/discord","description":"Discord"}],"engines":{"vscode":"^1.79.0","node":">=20.0.0"},"main":"./dist/extension.node.js","browser":"./dist/extension.web.js","activationEvents":["onLanguage","onStartupFinished","onWebviewPanel:cody.editorPanel"],"contributes":{"walkthroughs":[{"id":"welcome","title":"Getting Started with Cody","description":"Discover how Cody can help you write, understand and fix code faster","steps":[{"id":"autocomplete","title":"Code Autocomplete","description":"Start writing code and Cody will complete the line (or the entire function) for you. Hit tab to accept the suggestion.","media":{"markdown":"walkthroughs/autocomplete.md"}},{"id":"chat","title":"Cody Chat","description":"Answer questions about general programming topics, or specific to your codebase, with Cody chat.\n[Open Chat](command:cody.chat.newEditorPanel)","media":{"markdown":"walkthroughs/chat.md"}},{"id":"edit","title":"Edit Code","description":"Ask Cody to perform code edits with your instructions.","media":{"markdown":"walkthroughs/edit.md"}},{"id":"fix","title":"Fix Code","description":"Use Cody to fix or explain problems in your code.","media":{"markdown":"walkthroughs/fix.md"}},{"id":"commands","title":"Cody Commands","description":"Discover all the built-in Cody commands, and create your own custom commands.\n[Show Commands](command:cody.menu.commands)","media":{"markdown":"walkthroughs/commands.md"}},{"id":"keyboard","title":"Keyboard Shortcuts","description":"Easily customize the default keyboard shortcuts to suit your workflow.\n[Show Keyboard Shortcuts Editor](command:cody.sidebar.keyboardShortcuts)","media":{"markdown":"walkthroughs/keyboard.md"}},{"id":"ollama","title":"Ollama (Experimental)","description":"Learn how to use your local models with Cody.","media":{"markdown":"walkthroughs/ollama.md"}}]}],"colors":[{"id":"cody.fixup.conflictBackground","description":"The background of text Cody will edit where there is a specific conflict with your changes.","defaults":{"light":"mergeEditor.conflictingLines.background","dark":"mergeEditor.conflictingLines.background"}},{"id":"cody.fixup.conflictBorder","description":"The border of text Cody will edit, if there is a conflict with your changes.","defaults":{"light":"mergeEditor.conflict.unhandledFocused.border","dark":"mergeEditor.conflict.unhandledFocused.border"}},{"id":"cody.fixup.conflictedBackground","description":"The background of text Cody will edit, if there is a conflict with your changes.","defaults":{"light":"#ffffff00","dark":"#00000000"}},{"id":"cody.fixup.conflictedBorder","description":"The border of text Cody will edit, if there is a conflict with your changes.","defaults":{"light":"mergeEditor.conflict.unhandledUnfocused.border","dark":"mergeEditor.conflict.unhandledUnfocused.border"}},{"id":"cody.fixup.incomingBackground","description":"The background of text Cody will edit.","defaults":{"light":"merge.incomingContentBackground","dark":"merge.incomingContentBackground"}},{"id":"cody.fixup.incomingBorder","description":"The border around text Cody will edit.","defaults":{"light":"#436EB1","dark":"#436EB1"}}],"viewsContainers":{"activitybar":[{"id":"cody","title":"Cody","icon":"resources/cody.svg"}]},"views":{"cody":[{"type":"webview","id":"cody.chat","name":"Chat"}]},"commands":[{"command":"cody.welcome","title":"Getting Started Guide","category":"Cody","group":"Cody","icon":"$(book)"},{"command":"cody.feedback","title":"Feedback","category":"Cody","group":"Cody","icon":"$(feedback)"},{"command":"cody.command.autoedit.open-debug-panel","title":"Debug Auto-Edit","category":"Cody","group":"Cody","icon":"$(debug)","enablement":"cody.activated"},{"command":"cody.command.explain-output","title":"Ask Cody to Explain","category":"Cody Command","icon":"$(cody-logo)","enablement":"cody.activated && terminalTabsSingularSelection"},{"command":"cody.command.edit-code","category":"Cody Command","title":"Edit Code","enablement":"cody.activated","icon":"$(wand)"},{"command":"cody.command.explain-code","category":"Cody Command","title":"Explain Code","icon":"$(output)","enablement":"cody.activated"},{"command":"cody.command.unit-tests","category":"Cody Command","title":"Generate Unit Tests","icon":"$(package)","enablement":"cody.activated"},{"command":"cody.command.document-code","category":"Cody Command","title":"Document Code","icon":"$(book)","enablement":"cody.activated"},{"command":"cody.command.smell-code","category":"Cody Command","title":"Find Code Smells","icon":"$(checklist)","enablement":"cody.activated"},{"command":"cody.menu.custom-commands","category":"Cody Menu","title":"Custom Commands","icon":"$(tools)","enablement":"cody.activated && workspaceFolderCount > 0"},{"command":"cody.menu.commands-settings","category":"Cody Settings","title":"Custom Commands Settings","icon":"$(gear)","enablement":"cody.activated"},{"command":"cody.command.explain-history","category":"Cody Command","title":"Explain Code History","enablement":"cody.activated && config.cody.experimental.noodle"},{"command":"cody.command.generate-commit","category":"Cody Command","group":"Commit","title":"Generate Commit Message (Experimental)","icon":"$(cody-logo)","when":"cody.activated && config.git.enabled && !cody.isGeneratingCommit"},{"command":"cody.command.abort-commit","category":"Cody Command","group":"Commit","title":"Stop Generating","icon":"$(debug-stop)","when":"cody.activated && cody.isGeneratingCommit"},{"command":"cody.auth.signout","category":"Cody","title":"Sign Out","icon":"$(sign-out)","enablement":"cody.activated"},{"command":"cody.auth.signin","category":"Cody","title":"Switch Account…"},{"command":"cody.auth.refresh","category":"Cody","title":"Refresh Settings (Debug)","enablement":"config.cody.internal.unstable"},{"command":"cody.auth.requestEndpointSettings","category":"Cody","title":"Schedule export endpoint settings to Sourcegraph plugin"},{"command":"cody.settings.extension","category":"Cody","title":"Extension Settings","group":"Cody","icon":"$(gear)"},{"command":"cody.settings.extension.chat","category":"Cody","title":"Chat Settings","group":"Cody","icon":"$(gear)"},{"command":"cody.status-bar.interacted","category":"Cody","title":"Cody Settings","group":"Cody","icon":"$(settings-gear)","enablement":"cody.activated"},{"command":"cody.show-page","category":"Cody","title":"Open Account Page","group":"Cody","enablement":"cody.activated"},{"command":"cody.menu.commands","category":"Cody Menu","title":"Cody Commands","enablement":"cody.activated","icon":"$(cody-logo)"},{"command":"cody.autocomplete.openTraceView","category":"Cody","title":"Open Autocomplete Trace View","enablement":"cody.activated && config.cody.suggestions.mode === 'autocomplete'"},{"command":"cody.autocomplete.manual-trigger","category":"Cody","title":"Trigger Autocomplete at Cursor","enablement":"cody.activated && config.cody.suggestions.mode === 'autocomplete' && !editorReadonly && !editorHasSelection && !inlineSuggestionsVisible"},{"command":"cody.chat.signIn","category":"Cody","group":"Cody","title":"Sign In","enablement":"!cody.activated"},{"command":"cody.chat.new","category":"Cody","title":"New Chat","enablement":"cody.activated","group":"Cody","icon":"$(new-comment-icon)"},{"command":"cody.chat.newEditorPanel","category":"Cody","title":"New Chat in Editor","enablement":"cody.activated","group":"Cody","icon":"$(new-comment-icon)"},{"command":"cody.chat.newPanel","category":"Cody","group":"Cody","title":"New Chat in Sidebar","enablement":"cody.activated","icon":"$(new-comment-icon)"},{"command":"cody.chat.moveFromEditor","category":"Cody","title":"Move Chat from Editor to Main Cody Panel","when":"cody.activated && view == cody.chat","enablement":"cody.activated","group":"Cody","icon":"$(layout-sidebar-left)"},{"command":"cody.chat.view.popOut","category":"Cody","title":"Pop out","enablement":"cody.activated","group":"Cody","icon":"$(link-external)"},{"command":"cody.chat.history.clear","category":"Cody","title":"Delete All Chats","group":"Cody","icon":"$(trash)","enablement":"cody.activated"},{"command":"cody.chat.history.delete","category":"Cody","title":"Delete Chat","group":"Cody","icon":"$(trash)","enablement":"cody.activated"},{"command":"cody.chat.history.export","category":"Cody","title":"Export Chats as JSON","group":"Cody","icon":"$(arrow-circle-down)","enablement":"cody.activated"},{"command":"cody.chat.history.panel","category":"Cody","title":"Chat History","group":"Cody","icon":"$(list-unordered)","enablement":"cody.activated"},{"command":"cody.search.index-update","category":"Cody","group":"Cody","title":"Update search index for current workspace folder","icon":"$(refresh)","enablement":"cody.activated"},{"command":"cody.mention.selection","category":"Cody","group":"Chat","title":"Add Selection to Cody Chat","icon":"$(mention)","enablement":"cody.activated && editorHasSelection"},{"command":"cody.mention.file","category":"Cody","group":"Chat","title":"Add File to Cody Chat","icon":"$(mention)","enablement":"cody.activated && resourceSet"},{"command":"cody.debug.export.logs","category":"Cody Debug","group":"Debug","title":"Export Logs…"},{"command":"cody.debug.outputChannel","category":"Cody Debug","group":"Debug","title":"Open Output Channel"},{"command":"cody.debug.enable.all","category":"Cody Debug","group":"Debug","title":"Enable Debug Mode","enablement":"!config.cody.debug.verbose"},{"command":"cody.debug.reportIssue","category":"Cody Debug","group":"Debug","title":"Report Issue"},{"command":"cody.debug.heapDump","category":"Cody Debug","group":"Debug","title":"Heap Dump"},{"command":"cody.copy.version","category":"Cody Debug","group":"Debug","icon":"$(copy)","title":"Copy Cody Extension Version"},{"command":"cody.debug.logCharacterCounters","title":"[Internal] Log character logger counters","category":"Cody Debug","group":"Debug","when":"cody.activated"},{"command":"cody.test.set-context-filters","title":"[Internal] Set Context Filters Overwrite","enablement":"cody.activated && cody.devOrTest"},{"command":"cody.command.insertCodeToCursor","title":"Insert Code at Cursor","enablement":"cody.activated"},{"command":"cody.command.insertCodeToNewFile","title":"Save Code to New File...","enablement":"cody.activated"},{"command":"cody.command.autoedit-manual-trigger","title":"Autoedits Manual Trigger","enablement":"cody.activated && config.cody.suggestions.mode == 'auto-edit'"},{"command":"cody.command.autoedit.open-debug-panel","category":"Cody","title":"Debug Auto-Edit","enablement":"cody.activated"}],"keybindings":[{"command":"cody.chat.signIn","key":"alt+l","when":"!cody.activated"},{"command":"cody.chat.signIn","key":"alt+k","when":"!cody.activated"},{"command":"cody.chat.toggle","key":"alt+l","when":"cody.activated"},{"command":"cody.mention.selection","key":"alt+l","when":"cody.activated && editorTextFocus && editorHasSelection"},{"command":"cody.chat.new","key":"shift+alt+/","when":"cody.activated && !editorTextFocus"},{"command":"cody.command.edit-code","key":"alt+k","when":"cody.activated && !editorReadonly"},{"command":"cody.command.execute-prompt","key":"shift+alt+p","when":"cody.activated"},{"command":"cody.command.document-code","key":"alt+d","when":"cody.activated && !editorReadonly"},{"command":"cody.menu.commands","key":"alt+c","mac":"alt+c","when":"cody.activated"},{"command":"cody.menu.custom-commands","key":"shift+alt+c","when":"cody.activated"},{"command":"-github.copilot.generate","key":"ctrl+enter"},{"command":"-extension.vim_tab","key":"tab","when":"editorTextFocus && vim.active && vim.mode == 'Normal' && !inDebugRepl"},{"command":"cody.autocomplete.manual-trigger","key":"alt+\\","when":"editorTextFocus && !editorHasSelection && config.cody.suggestions.mode === 'autocomplete' && !inlineSuggestionsVisible"},{"command":"cody.fixup.acceptNearest","key":"alt+a","when":"cody.activated && !editorReadonly && cody.hasActionableEdit"},{"command":"cody.fixup.retryNearest","key":"alt+r","when":"cody.activated && !editorReadonly && cody.hasActionableEdit"},{"command":"cody.show.lastUsedActions","key":"alt+p","when":"cody.activated && !editorReadonly"},{"command":"cody.fixup.undoNearest","key":"alt+x","when":"cody.activated && !editorReadonly && cody.hasActionableEdit"},{"command":"cody.fixup.cancelNearest","key":"alt+z","when":"cody.activated && !editorReadonly && cody.hasActionableEdit"},{"command":"cody.supercompletion.jumpTo","args":["next"],"key":"shift+ctrl+down","when":"cody.activated && !editorReadonly && cody.hasActionableSupercompletion"},{"command":"cody.supercompletion.jumpTo","args":["previous"],"key":"shift+ctrl+up","when":"cody.activated && !editorReadonly && cody.hasActionableSupercompletion"},{"command":"cody.supersuggest.accept","key":"tab","when":"editorTextFocus && cody.activated && cody.supersuggest.active"},{"command":"cody.supersuggest.dismiss","key":"escape","when":"editorTextFocus && cody.activated && cody.supersuggest.active"},{"command":"cody.supersuggest.testExample","key":"ctrl+alt+enter","when":"cody.activated && config.cody.suggestions.mode == 'auto-edit'"}],"submenus":[{"label":"Cody","id":"cody.submenu"}],"menus":{"commandPalette":[{"command":"cody.command.autoedit.open-debug-panel","when":"cody.activated"},{"command":"cody.command.edit-code","when":"cody.activated && editorIsOpen"},{"command":"cody.command.explain-code","when":"cody.activated && editorIsOpen"},{"command":"cody.command.smell-code","when":"cody.activated && editorIsOpen"},{"command":"cody.command.unit-tests","when":"cody.activated && editorIsOpen"},{"command":"cody.command.document-code","when":"cody.activated && editorIsOpen"},{"command":"cody.command.explain-history","when":"cody.activated && editorIsOpen && config.cody.experimental.noodle"},{"command":"cody.command.generate-commit","when":"cody.activated && config.git.enabled && !cody.isGeneratingCommit"},{"command":"cody.command.abort-commit","when":"cody.activated && cody.isGeneratingCommit"},{"command":"cody.chat.signIn","when":"!cody.activated"},{"command":"cody.show-page","when":"false"},{"command":"cody.test.set-context-filters","when":"cody.activated && cody.devOrTest"},{"command":"cody.chat.view.popOut","when":"false","_comment":"Hidden because it is only a wrapper around the workspace pop out command and would place any editor tab (not just Cody chat) in a new window."},{"command":"cody.command.explain-output","when":"false"},{"command":"cody.chat.newEditorPanel","when":"cody.activated"}],"editor/context":[{"submenu":"cody.submenu","group":"0_cody"}],"cody.submenu":[{"command":"cody.mention.selection","group":"0_cody","when":"cody.activated && editorHasSelection"},{"command":"cody.mention.file","group":"0_cody","when":"cody.activated && !editorHasSelection"},{"command":"cody.chat.newEditorPanel","when":"cody.activated && !editorHasSelection","group":"ask"},{"command":"cody.command.explain-code","when":"cody.activated","group":"command"},{"command":"cody.command.explain-history","when":"cody.activated && editorTextFocus && config.cody.experimental.noodle","group":"command"},{"command":"cody.command.edit-code","when":"cody.activated","group":"ask"},{"command":"cody.command.unit-tests","when":"cody.activated","group":"command"},{"command":"cody.command.document-code","when":"cody.activated","group":"command"},{"command":"cody.command.smell-code","when":"cody.activated","group":"command"},{"command":"cody.menu.custom-commands","when":"cody.activated && cody.menu.custom-commands.enable","group":"custom-commands"},{"command":"cody.chat.signIn","when":"!cody.activated","group":"other"}],"view/title":[{"command":"cody.menu.commands","when":"view == cody.chat && cody.activated","group":"navigation@1"}],"editor/title":[{"command":"cody.menu.commands","when":"cody.activated && !editorReadonly && (resourceScheme == file || activeWebviewPanelId == cody.editorPanel)","group":"navigation","visibility":"visible"},{"command":"cody.chat.moveFromEditor","when":"activeWebviewPanelId == cody.editorPanel && cody.activated","group":"navigation@1","visibility":"visible"},{"command":"cody.chat.newEditorPanel","when":"activeWebviewPanelId == cody.editorPanel && cody.activated","group":"navigation@2","visibility":"visible"},{"command":"cody.chat.history.panel","when":"activeWebviewPanelId == cody.editorPanel && cody.activated","group":"navigation@3","visibility":"visible"},{"command":"cody.chat.view.popOut","when":"view == cody.chat && cody.activated && !isAuxiliaryEditorPart","group":"navigation@4","visibility":"visible"},{"command":"cody.settings.extension.chat","when":"activeWebviewPanelId == cody.editorPanel && cody.activated","group":"navigation@5","visibility":"visible"}],"terminal/context":[{"command":"cody.command.explain-output","group":"0_cody","when":"cody.activated"}],"scm/title":[{"command":"cody.command.generate-commit","when":"cody.activated && config.git.enabled && scmProvider == git && !cody.isGeneratingCommit","group":"navigation@1"},{"command":"cody.command.abort-commit","when":"cody.activated && scmProvider == git && cody.isGeneratingCommit","group":"navigation@1"}],"webview/context":[{"command":"cody.command.insertCodeToCursor","when":"webviewSection == 'codeblock-actions'"},{"command":"cody.command.insertCodeToNewFile","when":"webviewSection == 'codeblock-actions'"}]},"configuration":{"type":"object","title":"Cody","properties":{"cody.serverEndpoint":{"order":1,"type":"string","description":"URL to the Sourcegraph instance.","examples":"https://example.sourcegraph.com","markdownDeprecationMessage":"**Deprecated**: Please sign in via the UI instead. If you are already signed in, you can empty this field to remove this warning.","deprecationMessage":"Deprecated: Please sign in via the UI instead."},"cody.codebase":{"order":2,"type":"string","markdownDescription":"A Git repository URL to use instead of allowing Cody to infer the Git repository from the workspace.","examples":["https://github.com/sourcegraph/cody","ssh://git@github.com/sourcegraph/cody"]},"cody.customHeaders":{"order":4,"type":"object","markdownDescription":"Adds custom HTTP headers to all network requests to the Sourcegraph endpoint. Defining required headers here ensures requests are properly forwarded through intermediary proxy servers, which may mandate certain custom headers for internal or external communication.","default":{},"examples":[{"Cache-Control":"no-cache","Proxy-Authenticate":"Basic"}]},"cody.suggestions.mode":{"type":"string","enum":["autocomplete","auto-edit","off"],"enumDescriptions":["Suggests standard code completions as you type.","Suggests advanced context-aware code edits as you navigate the codebase. Experimental feature for Pro and Enterprise users.","Disables all suggestions."],"default":"autocomplete","markdownDescription":"Controls the suggestion mode for Cody"},"cody.autocomplete.triggerDelay":{"order":5,"type":"number","markdownDescription":"The trigger delay ensures a minimum wait time before showing autocomplete suggestions to avoid accidental autocomplete triggers.","default":0},"cody.autocomplete.languages":{"order":5,"type":"object","markdownDescription":"Enables or disables code autocompletions for specified [language ids](https://code.visualstudio.com/docs/languages/identifiers). `\"*\"` is the default fallback if no language-specific setting is found.\n\nThe default setting: \n\n```json\n{\n  \"*\": true\n}\n```\n\nTo disable autocomplete for a given [language id](https://code.visualstudio.com/docs/languages/identifiers#_known-language-identifiers) set its value to `false`, for example:\n\n```json\n{\n  \"*\": true,\n  \"plaintext\": false\n}\n```","default":{"*":true},"examples":[{"*":true,"plaintext":false}]},"cody.commandCodeLenses":{"order":8,"type":"boolean","markdownDescription":"Adds code lenses to current file for quick access to Cody commands.","default":false},"cody.chat.preInstruction":{"order":6,"type":"string","markdownDescription":"A custom instruction to be included at the start of all chat messages (e.g. \"Answer all my questions in Spanish.\")","examples":["Answer all my questions in Spanish."]},"cody.chat.defaultLocation":{"order":6,"type":"string","enum":["sticky","sidebar","editor"],"markdownDescription":"Controls where the Cody chat view opens when the user invokes the `Cody: New Chat` command, or the Alt+L and Alt+/ shortcuts.","enumDescriptions":["Opens in the last-activated view location, which is set whenever the user explicitly chooses to open chat in a given location","Opens in the sidebar","Opens in an editor panel"],"default":"sticky"},"cody.edit.preInstruction":{"order":7,"type":"string","markdownDescription":"A custom instruction to be included at the end of all instructions for edit commands (e.g. \"Write all unit tests with Jest instead of detected framework.\")","examples":["Write all unit tests with Jest instead of detected framework."]},"cody.codeActions.enabled":{"order":11,"title":"Cody Code Actions","type":"boolean","markdownDescription":"Add Cody options to Quick Fix menus for fixing, explaining, documenting, and editing code.","default":true},"cody.commandHints.enabled":{"order":12,"title":"Cody Command Hints","type":"boolean","markdownDescription":"Enable hints for Cody commands such as \"Opt+K to Edit\" or \"Opt+D to Document\"","default":true},"cody.debug.verbose":{"order":99,"type":"boolean","markdownDescription":"Enables verbose debug output. Debug messages may contain more details if the invocation includes verbose information."},"cody.debug.filter":{"order":99,"type":"string","markdownDescription":"Regular expression to filter debug output. If empty, defaults to '.*', which prints all messages."},"cody.autocomplete.advanced.provider":{"type":"string","default":"default","enum":["default","experimental-ollama"],"enumDescriptions":["Our recommended setup with the best balance of quality and latency. We continuously update this for optimal performance.","Experimental support for Ollama users. Use `cody.autocomplete.experimental.ollamaOptions` to configure requests to Ollama server."],"markdownDescription":"The provider for code autocomplete. Users should rely on the `default` provider for the best experience. The underlying model can be found in the Cody output channel logs."},"cody.autocomplete.completeSuggestWidgetSelection":{"type":"boolean","default":true,"markdownDescription":"Autocomplete based on the currently selection in the suggest widget. Requires the VS Code user setting `editor.inlineSuggest.suppressSuggestions` set to true and will change it to true in user settings if it is not true."},"cody.autocomplete.formatOnAccept":{"type":"boolean","default":false,"markdownDescription":"Format completions on accept using [the default document formatter](https://code.visualstudio.com/docs/editor/codebasics#_formatting)."},"cody.autocomplete.disableInsideComments":{"type":"boolean","default":false,"markdownDescription":"Prevent autocomplete requests while inside code comments."},"cody.rules.enabled":{"type":"boolean","markdownDescription":"[EXPERIMENTAL] Apply Sourcegraph rules (from `*.rule.md` files) to Cody chats and inline edits.","default":false},"openctx.enable":{"type":"boolean","markdownDescription":"Enable OpenCtx providers for Cody.","default":true},"openctx.providers":{"type":"object","markdownDescription":"OpenCtx providers configuration.","default":{}},"cody.internal.unstable":{"order":999,"type":"boolean","markdownDescription":"[INTERNAL ONLY] Enable all unstable experimental features.","default":false},"cody.net.mode":{"type":"string","enum":["auto","bypass","vscode"],"enumDescriptions":["Default behavior. If `cody.net.proxy.endpoint` is configured, bypassing is automatically enabled, otherwise direct is used.","Bypass VSCode's network stack, using Cody's instead.","Ignore Cody's network stack, including proxy settings, even if `cody.net.proxy.endpoint` is configured, and use VSCode's network stack instead."],"default":"auto","markdownDescription":"[EXPERIMENTAL] Forcefully enable/disable bypassing VSCode's network stack. Bypassing is automatically enabled if `cody.net.proxy.endpoint` is configured. In some scenarios bypassing VSCode network settings could give some performance benefits and forces usage of Cody's proxy instead of one configured globally for VSCode."},"cody.net.proxy.endpoint":{"markdownDescription":"The proxy service to use when proxying requests to the Sourcegraph instance. Supports HTTP(S), SOCKS 4/5, and UNIX domain sockets. When using HTTP(S) or SOCKS proxies, include the port number with a colon. For UNIX domain sockets, use either the full path or prefix with a tilde for a path in the OS user's home directory.\n\nExamples:\n- `https://localhost:7080`\n- `socks5://1.2.3.4:1080`\n- `unix://~/cody-proxy.sock`","type":"string","default":"","pattern":"^((http|https|socks|socks4|socks4a|socks5|socks5h)://[^:]+:\\d+|unix://(~|/|[a-zA-Z]:\\\\).+)?$","examples":["https://localhost:7080","socks5://1.2.3.4:1080","unix://~/cody-proxy.sock"]},"cody.net.proxy.skipCertValidation":{"description":"Whether to skip proxy server CA cert validation. Useful if the proxy server uses a self-signed certificate.","type":"boolean","default":false},"cody.agentic.context.experimentalShell":{"type":"boolean","value":false,"markdownDeprecationMessage":"**Deprecated** Enable Agents like Deep Cody to autonomously execute shell commands in your environment for context. Enable with caution as mistakes are possible.","deprecationMessage":"Deprecated. Now configurable via UI."},"cody.agentic.context.experimentalOptions":{"type":"object","properties":{"shell":{"allow":{"type":"array","default":[]},"block":{"type":"array","default":[]}}},"default":{},"examples":[{"shell":{"allow":["git","ls","find"],"block":["history","sudo","rm"]}}],"markdownDescription":"'shell' field is used to configure shell command execution for agents (like Deep Cody) when terminal context is enabled. The 'shell' field has two properties:\n\n- 'allow': Accepts either [] to allow all commands or an array of specific command prefixes\n- 'block': An array of command prefixes to block, which combines with built-in safety blocklist\n\nBlocked commands take precedence over allowed commands. Command outputs are used as context. Remove the 'shell' field to allow all commands."},"cody.net.proxy.cacert":{"markdownDescription":"Either the PEM-encoded CA certificate the proxy uses (replace newlines with `\\n`), or the path (absolute or tilde) to the file containing that certificate.\n\nExamples:\n- `~/.mitmproxy/mitmproxy-ca-cert.pem`\n- `-----BEGIN CERTIFICATE-----\\n...\\n-----END CERTIFICATE-----`","type":"string","default":"","examples":["~/.mitmproxy/mitmproxy-ca-cert.pem","-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----"]},"cody.auth.externalProviders":{"type":"array","markdownDescription":"Configure external authentication providers for Cody requests. Each provider consists of a command that generates HTTP headers used for authentication for a given endpoint.\n\n**How it works:**\n1. The specified command outputs a JSON object with header-value pairs\n2. These headers are included in authenticated Cody requests to the specified endpoint\n3. HTTP authentication proxy need to be used to enable custom authentication flows (e.g. JWT tokens, Oath2, etc)\n\nSee [HTTP Authentication Proxies](https://sourcegraph.com/docs/admin/auth#http-authentication-proxies) for proxy configuration.","items":{"type":"object","required":["endpoint","executable"],"properties":{"endpoint":{"type":"string","description":"The endpoint URL of the Sourcegraph instance"},"executable":{"type":"object","required":["commandLine"],"properties":{"commandLine":{"type":"array","items":{"type":"string"},"description":"Command line arguments to execute the command."},"environment":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables to set when executing the command."},"shell":{"type":"string","description":"If true, runs command inside of a shell. Uses '/bin/sh' on Unix, and process.env.ComSpec on Windows. A different shell can be specified as a string."},"timeout":{"type":"number","description":"Timeout for executing the command in milliseconds."},"windowsHide":{"type":"boolean","description":"Whether to hide the console window that would normally be created for the child process on Windows."}}}}},"default":[]}}},"icons":{"cody-logo":{"description":"Cody logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0041"}},"cody-logo-heavy":{"description":"Cody logo heavy","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0042"}},"anthropic-logo":{"description":"Anthropic logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0043"}},"openai-logo":{"description":"OpenAI logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0044"}},"mistral-logo":{"description":"Mistral logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0045"}},"ollama-logo":{"description":"Ollama logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0046"}},"gemini-logo":{"description":"Gemini logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0047"}},"new-comment-icon":{"description":"New comment icon","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0048"}},"discord-logo":{"description":"Discord logo","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\0049"}},"cody-logo-heavy-slash":{"description":"Cody logo heavy slash","default":{"fontPath":"resources/cody-icons.woff","fontCharacter":"\\004A"}}}},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Cody only uses providers (configured in `openctx.providers`) from trusted workspaces because providers may execute arbitrary code.","restrictedConfigurations":["openctx.providers"]}},"dependencies":{"@anthropic-ai/sdk":"^0.33.1","@modelcontextprotocol/sdk":"^1.7.0","@openctx/provider-linear-issues":"^0.0.9","@openctx/vscode-lib":"^0.0.26","@opentelemetry/api":"^1.7.0","@opentelemetry/core":"^1.18.1","@opentelemetry/exporter-metrics-otlp-http":"^0.45.1","@opentelemetry/exporter-trace-otlp-http":"^0.45.1","@opentelemetry/instrumentation":"^0.45.1","@opentelemetry/instrumentation-http":"^0.45.1","@opentelemetry/resources":"^1.18.1","@opentelemetry/sdk-metrics":"^1.18.1","@opentelemetry/sdk-trace-base":"^1.18.1","@opentelemetry/sdk-trace-node":"^1.18.1","@opentelemetry/semantic-conventions":"^1.18.1","@radix-ui/react-accordion":"^1.2.0","@radix-ui/react-collapsible":"^1.1.0","@radix-ui/react-dialog":"^1.0.5","@radix-ui/react-form":"^0.1.0","@radix-ui/react-label":"^2.1.1","@radix-ui/react-popover":"^1.0.7","@radix-ui/react-progress":"^1.1.0","@radix-ui/react-scroll-area":"^1.2.3","@radix-ui/react-slot":"^1.0.2","@radix-ui/react-switch":"^1.1.2","@radix-ui/react-tabs":"^1.1.0","@radix-ui/react-tooltip":"^1.0.7","@sentry/browser":"^7.107.0","@sentry/core":"^7.107.0","@sentry/node":"^7.107.0","@sourcegraph/cody-noxide":"workspace:*","@sourcegraph/cody-shared":"workspace:*","@sourcegraph/prompt-editor":"workspace:*","@sourcegraph/tree-sitter-wasms":"^0.1.9","@types/he":"^1.2.3","@types/mdast":"^4.0.4","@types/react":"18.2.79","@types/react-dom":"18.2.25","@vscode/codicons":"^0.0.35","agent-base":"^7.1.1","async-mutex":"^0.4.0","axios":"^1.3.6","canvaskit-wasm":"^0.39.1","class-variance-authority":"^0.7.0","classnames":"^2.5.1","clsx":"^2.1.1","cmdk":"^1.0.0","crypto-js":"^4.2.0","detect-indent":"7.0.0","diff":"^5.2.0","fast-myers-diff":"^3.2.0","fast-xml-parser":"^4.3.2","framer-motion":"^12.5.0","fzf":"^0.5.2","glob":"^7.2.3","graceful-fs":"^4.2.11","he":"^1.2.0","highlight.js":"11.8.0","hpagent":"^1.2.0","ini":"^4.1.2","js-levenshtein":"^1.1.6","jsonrepair":"^3.12.0","lexical":"^0.17.0","lodash":"^4.17.21","lru-cache":"^10.0.0","lucide-react":"^0.378.0","mac-ca":"^2.0.3","marked":"^4.0.16","mkdirp":"^3.0.1","os-browserify":"^0.3.0","postcss-scss":"^4.0.9","proxy-agent":"^6.4.0","react-intersection-observer":"^9.13.1","react-markdown":"^9.0.1","rehype-highlight":"^6.0.0","rehype-sanitize":"^6.0.0","remark-gfm":"^4.0.0","safe-stable-stringify":"^2.5.0","semver":"^7.5.4","shiki":"^1.26.1","signal-exit":"^4.1.0","socks-proxy-agent":"^8.0.1","tailwind-merge":"^2.3.0","tailwindcss":"^3.4.3","unified":"^11.0.5","unist-util-visit":"^5.0.0","unzipper":"^0.10.14","uuid":"^9.0.0","valibot":"1.0.0-beta.9","vscode-languageserver-textdocument":"^1.0.8","vscode-uri":"^3.0.8","wink-nlp-utils":"^2.1.0","zod-to-json-schema":"^3.24.3"},"devDependencies":{"7zip-min":"^1.4.5","@google-cloud/pubsub":"^3.7.3","@npmcli/promise-spawn":"^7.0.2","@playwright/test":"1.47.2","@pollyjs/adapter":"^6.0.6","@pollyjs/adapter-node-http":"^6.0.6","@pollyjs/core":"^6.0.6","@pollyjs/persister":"^6.0.6","@pollyjs/persister-fs":"^6.0.6","@pollyjs/utils":"^6.0.6","@storybook/preview-api":"^8.0.5","@types/7zip-min":"^1.3.3","@types/crypto-js":"^4.2.2","@types/dedent":"^0.7.0","@types/diff":"^5.2.1","@types/express":"^4.17.17","@types/fs-extra":"^11.0.4","@types/glob":"^8.0.0","@types/graceful-fs":"^4.1.9","@types/ini":"^4.1.0","@types/jest-image-snapshot":"^6.4.0","@types/js-levenshtein":"^1.1.1","@types/lodash":"^4.14.195","@types/marked":"^5.0.0","@types/mocha":"^10.0.6","@types/node-fetch":"^2.6.4","@types/npmcli__promise-spawn":"^6.0.3","@types/on-headers":"^1.0.3","@types/pako":"^2.0.3","@types/semver":"^7.5.0","@types/signal-exit":"^3.0.4","@types/unzipper":"^0.10.7","@types/uuid":"^9.0.2","@types/vscode":"^1.79.0","@vscode/test-electron":"^2.4.0","@vscode/test-web":"^0.0.47","@vscode/vsce":"^2.22.0","ajv":"^8.14.0","ajv-formats":"^3.0.1","buildkite-test-collector":"^1.7.2","concurrently":"^8.2.0","cross-env":"^7.0.3","dedent":"^0.7.0","dotenv":"^16.4.5","esbuild":"^0.18.20","express":"^4.18.2","fast-json-stable-stringify":"^2.1.0","franc-min":"^6.2.0","fs-extra":"^11.2.0","fuzzysort":"^2.0.4","http-proxy-middleware":"^3.0.0","immer":"^10.1.1","jest-image-snapshot":"^6.4.0","keytar":"^7.9.0","kill-sync":"^1.0.3","mocha":"^10.2.0","nock":"^13.5.4","node-fetch":"^2.6.4","normalize-url":"5.3.1","on-headers":"^1.0.2","ovsx":"^0.8.2","pako":"^2.1.0","path-browserify":"^1.0.1","playwright":"1.47.2","postcss":"^8.4.38","postcss-nested":"^6.0.1","react-head":"^3.4.2","symlink-dir":"^6.0.2","type-fest":"^4.26.1","typescript-language-server":"^4.3.3","ulidx":"^2.3.0","vite-plugin-svgr":"^4.2.0","vscode-jsonrpc":"^8.2.0","vscode-languageserver-protocol":"^3.17.5","yaml":"^2.3.4","zod":"^3.23.8"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/sourcegraph.cody-ai-1.88.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Sourcegraph","metadata":{"installedTimestamp":1745949897706,"source":"gallery","id":"20d12578-788a-48ca-96b6-43abf885dc34","publisherId":"755cb281-9734-491c-866f-4facd1750385","publisherDisplayName":"Sourcegraph","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":153053044},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2025.6.0","publisher":"ms-python","enabledApiProposals":["portsAttributes","debugVisualization","contribViewsWelcome"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.92.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"},"debugpy.showPythonInlineValues":{"default":false,"description":"Whether to display inline values in the editor while debugging.","scope":"resource","type":"boolean","tags":["experimental"]}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}],"viewsWelcome":[{"view":"debug","contents":"\n[Show automatic Python configurations](command:workbench.action.debug.selectandstart?%5B%22debugpy%22%5D)\n","when":"dynamicPythonConfigAvailable && !virtualWorkspace"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.3.4","@types/chai-as-promised":"^7.1.8","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/mocha":"^10.0.7","@types/node":"18.x","@types/semver":"^7.3.13","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.7.0","prettier":"^3.0.3","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.5.4","webpack":"^5.87.0","webpack-cli":"^5.1.4"},"dependencies":{"@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/extension-telemetry":"^0.8.5","@vscode/python-extension":"^1.0.5","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","jsonc-parser":"^3.2.0","lodash":"^4.17.21","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-python.debugpy-2025.6.0-darwin-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"darwin-x64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745949906470,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"darwin-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":21480949},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2025.4.0","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","codeActionAI","notebookReplDocument","notebookVariableProvider"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.94.0-20240918"},"enableTelemetry":true,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","onCommand:python.copilotSetupTests","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py","workspaceContains:.venv","workspaceContains:.conda"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"problemMatchers":[{"name":"python","owner":"python","source":"python","fileLocation":"autoDetect","pattern":[{"regexp":"^.*File \\\"([^\\\"]|.*)\\\", line (\\d+).*","file":1,"line":2},{"regexp":"^\\s*(.*)\\s*$"},{"regexp":"^\\s*(.*Error.*)$","message":1}]}],"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."}},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment","title":"Select or create a Python environment","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"}},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."}},{"id":"python.learnMoreWithDS","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"window","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiments to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiments to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.locator":{"default":"js","description":"[Experimental] Select implementation of environment locators. This is an experimental setting while we test native environment location.","enum":["js","native"],"tags":["onExP","preview"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.pixiToolPath":{"default":"pixi","description":"Path to the pixi executable.","scope":"machine-overridable","type":"string"},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.terminal.shellIntegration.enabled":{"default":false,"markdownDescription":"Enable [shell integration](https://code.visualstudio.com/docs/terminal/shell-integration) for the terminals running python. Shell integration enhances the terminal experience by enabling command decorations, run recent command, improving accessibility among other things.","scope":"resource","type":"boolean","tags":["preview"]},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.REPL.sendToNativeREPL":{"default":false,"description":"Toggle to send code to Python REPL instead of the terminal on execution. Turning this on will change the behavior for both Smart Send and Run Selection/Line in the Context Menu.","scope":"resource","type":"boolean","tags":["onExP","preview"]},"python.REPL.provideVariables":{"default":true,"description":"Toggle to provide variables for the REPL variable view for the native REPL.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSavePattern":{"default":"**/*.py","description":"Glob pattern used to determine which files are used by autoTestDiscoverOnSaveEnabled.","scope":"resource","type":"string"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest. You can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPL","key":"shift+enter","when":"config.python.REPL.sendToNativeREPL && editorLangId == python && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPLEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.repl' && !inlineChatFocused && !notebookCellListFocused"},{"command":"python.execInInteractiveWindowEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive' && !inlineChatFocused && !notebookCellListFocused"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock","uv.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && (editorLangId == python || notebookType == jupyter-notebook)"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL","when":"false"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted && !inChat  && notebookType != jupyter-notebook"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted && !inChat"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"!config.python.REPL.sendToNativeREPL && editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInREPL","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported && config.python.REPL.sendToNativeREPL"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"copilot":{"tests":{"getSetupConfirmation":"python.copilotSetupTests"}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint  src build pythonExtensionApi","lint-fix":"eslint --fix src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","arch":"^2.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.2","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.2.2","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.93.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.27.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-env":"^7.0.3","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^8.57.1","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.31.0","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-no-only-tests":"^3.3.0","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^5.0.0","gulp-typescript":"^5.0.0","mocha":"^11.1.0","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^18.0.0","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"~5.2","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy"]},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-python.python-2025.4.0-darwin-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1746046216943,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"pinned":false,"preRelease":false,"size":30319756},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.vscode-pylance","uuid":"364d2426-116a-433a-a5d8-a5098dc3afbd"},"manifest":{"name":"vscode-pylance","displayName":"Pylance","description":"A performant, feature-rich language server for Python in VS Code","version":"2025.4.1","license":"SEE LICENSE IN LICENSE.txt","author":{"name":"Microsoft Corporation"},"publisher":"ms-python","private":true,"bugs":{"url":"https://github.com/microsoft/pylance-release/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/pylance-release"},"engines":{"vscode":"^1.91.0"},"keywords":["python"],"categories":["Programming Languages"],"icon":"images/icon.png","main":"./dist/extension.bundle.js","browser":"./dist/browser.extension.bundle.js","activationEvents":["onLanguage:python","workspaceContains:pyrightconfig.json"],"extensionDependencies":["ms-python.python"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Python will not be executed; the latest Python version will be used for analysis and installed libraries will not be available.","restrictedConfigurations":["python.analysis.nodeExecutable","python.analysis.nodeArguments"]},"virtualWorkspaces":{"supported":"limited","description":"Analysis is limited to opened files."}},"contributes":{"commands":[{"command":"pylance.reportIssue","title":"Pylance: Report Issue..."},{"command":"pylance.indexing.clearPersistedIndices","title":"Pylance: Clear All Persisted Indices"},{"command":"pylance.profiling.start","title":"Pylance: Start Profiling"},{"command":"pylance.profiling.stop","title":"Pylance: Stop Profiling"},{"command":"pylance.logging.start","title":"Pylance: Start Logging"},{"command":"pylance.logging.stop","title":"Pylance: Stop Logging"},{"command":"pylance.gotoOutputChannel","title":"Pylance: Go to output channel"},{"command":"pylance.runCurrentFileInSandbox","title":"Pylance: Run current file in sandbox","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTokens","title":"Dump token streams ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","title":"Dump parse tree ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","title":"Dump type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","title":"Pylance: Dump cached type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","title":"Pylance: Dump code flow graph for node ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.learnMoreAboutImportResolution","title":"Learn more about import resolution","enablement":"false"},{"command":"pylance.foldDocstrings","title":"Pylance: Fold All Docstrings"},{"command":"pylance.unfoldDocstrings","title":"Pylance: Unfold All Docstrings"}],"menus":{"commandPalette":[{"command":"pylance.reportIssue"},{"command":"pylance.indexing.clearPersistedIndices","when":"!isWeb"},{"command":"pylance.profiling.start","when":"!isWeb"},{"command":"pylance.profiling.stop","when":"!isWeb"},{"command":"pylance.logging.start","when":"!isWeb"},{"command":"pylance.logging.stop","when":"!isWeb"},{"command":"pylance.runCurrentFileInSandbox","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTokens","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.foldDocstrings","when":"!isWeb"},{"command":"pylance.unfoldDocstrings","when":"!isWeb"}]},"configurationDefaults":{"[python]":{"editor.formatOnType":true,"editor.wordBasedSuggestions":"off"}},"configuration":{"type":"object","title":"Pylance","properties":{"python.analysis.inlayHints.variableTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\n```python\nfoo':list[str]' = [\"a\"]\n \n```\n","scope":"resource"},"python.analysis.inlayHints.functionReturnTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) '-> int':\n\treturn x\n```\n","scope":"resource"},"python.analysis.inlayHints.callArgumentNames":{"type":"string","default":"off","markdownDescription":"Enable/disable inlay hints for call argument names:\n```python\ndatetime('year='2019, 'month='10, 'day='27)\n```\n","enum":["off","partial","all"],"enumDescriptions":["Disable inlay hints for call argument names.","Enable inlay hints for positional-or-keyword arguments while ignoring positional-only and keyword-only.","Enable inlay hints for positional-or-keyword and positional-only arguments while ignoring keyword-only."],"scope":"resource"},"python.analysis.inlayHints.pytestParameters":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for pytest function parameter types:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(my_fixture == 'foo')\n```\n","scope":"resource"},"python.analysis.completeFunctionParens":{"type":"boolean","default":false,"markdownDescription":"Add parentheses to function completions.","scope":"resource"},"python.analysis.autoImportCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable auto-import completions.","scope":"resource"},"python.analysis.showOnlyDirectDependenciesInAutoImport":{"type":"boolean","default":false,"markdownDescription":"Show only direct dependencies declared in `requirements.txt` or `pyproject.toml` in `auto import` suggestions, if they exist. This only affects `auto import` for completions. The `add import` code action will continue to show all possible imports.","scope":"resource"},"python.analysis.autoFormatStrings":{"type":"boolean","default":false,"markdownDescription":"When typing a `{` in a string, automatically prefix the string with an `f`.","scope":"window"},"python.analysis.autoSearchPaths":{"type":"boolean","default":true,"markdownDescription":"Automatically add common search paths like `src`.","scope":"resource"},"python.analysis.stubPath":{"type":"string","default":"typings","markdownDescription":"Path to directory containing custom type stub files.","scope":"resource"},"python.analysis.diagnosticMode":{"type":"string","default":"openFilesOnly","markdownDescription":"Analysis scope for showing diagnostics.","enum":["openFilesOnly","workspace"],"enumDescriptions":["Analyzes and reports errors on only open files.","Analyzes and reports errors on all files in the workspace."],"scope":"resource"},"python.analysis.extraPaths":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Additional import search resolution paths","scope":"resource"},"python.analysis.include":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. \n\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \n\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.exclude":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. \n\nNote that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. \n\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \n\nIf no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories. If the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.ignore":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. \n\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \n\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.indexing":{"type":"boolean","default":true,"markdownDescription":"Enable indexing of installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.","scope":"resource"},"python.analysis.userFileIndexingLimit":{"type":"number","default":2000,"markdownDescription":"Maximum number of user files to index in the workspace. Indexing files is a performance-intensive task. Please use this setting to limit the number of files you want us to index. If you enter -1, we will index all files.","scope":"resource"},"python.analysis.persistAllIndices":{"type":"boolean","default":true,"markdownDescription":"Indices for all third party libraries will be persisted to disk.","scope":"resource"},"python.analysis.includeAliasesFromUserFiles":{"type":"boolean","default":false,"markdownDescription":"Include alias symbols from user files. This will make alias symbols to show up in features such as `add import`, `auto import`","scope":"resource"},"python.analysis.extraCommitChars":{"type":"boolean","default":false,"markdownDescription":"Allow using '.', '(' as commit characters when applicable.","scope":"resource"},"python.analysis.useLibraryCodeForTypes":{"type":"boolean","default":true,"markdownDescription":"Use library implementations to extract type information when type stub is not present.","scope":"resource"},"python.analysis.autoIndent":{"type":"boolean","default":true,"markdownDescription":"Automatically adjust indentation based on language semantics when typing Python code.","scope":"window"},"python.analysis.autoSplitStrings":{"type":"boolean","default":true,"markdownDescription":"Automatically add quote and line continuation characters when splitting strings.","scope":"window"},"python.analysis.typeCheckingMode":{"type":"string","default":"off","enum":["off","basic","standard","strict"],"markdownDescription":"Type checking modes Basic, Standard, and Strict :\n\n| Feature                                  | Basic | Standard | Strict |\n|------------------------------------------|:-----:|:--------:|:------:|\n| Variable type mismatches                 |   ✅   |    ✅     |   ✅   |\n| Function return type checks              |   ✅   |    ✅     |   ✅   |\n| Type narrowing enforcement               |       |    ✅     |   ✅   |\n| Checking of `Any` type                   |       |    ✅     |   ✅   |\n| Private/protected access checks          |       |    ✅     |   ✅   |\n| Enforces stricter generics usage         |       |    ✅     |   ✅   |\n| Reports missing type annotations         |       |          |   ✅   |\n| Disallows `Any` type usage               |       |          |   ✅   |\n| Requires strict type compatibility       |       |          |   ✅   |\n| Enforces complete type coverage          |       |          |   ✅   |\n\nFor more details, check the [Pyright documentation](https://microsoft.github.io/pyright/#/configuration?id=type-check-diagnostics-settings).","markdownEnumDescriptions":["Show diagnostics for invalid syntax, unresolved imports, undefined variables.","All rules from `off` + `basic` type checking rules.","All rules from `basic` + `standard` type checking rules.","All rules from `standard` + `strict` type checking rules."],"scope":"resource"},"python.analysis.fixAll":{"type":"array","default":[],"items":{"enum":["source.unusedImports","source.convertImportFormat"],"markdownEnumDescriptions":["Remove unused imports.","Convert import format following python.analysis.importFormat."]},"markdownDescription":"source fixes to run in fix all.","scope":"resource"},"python.analysis.packageIndexDepths":{"type":"array","default":[{"name":"sklearn","depth":2},{"name":"matplotlib","depth":2},{"name":"scipy","depth":2},{"name":"django","depth":2},{"name":"flask","depth":2},{"name":"fastapi","depth":2}],"items":{"type":"object","label":"Per package settings","required":["name"],"properties":{"name":{"type":"string","label":"Package name to configure. Empty name means all packages.","default":""},"depth":{"type":"integer","label":"Depth to scan modules.","default":1},"includeAllSymbols":{"type":"boolean","label":"'true' means include all symbols. 'false' means only symbols in __all__.","default":false}}},"markdownDescription":"Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `includeAllSymbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n","scope":"resource"},"python.analysis.typeEvaluation.strictListInference":{"type":"boolean","markdownDescription":"When inferring the type of a list, use strict type assumptions. For example, the expression \n\n```python\n[1, 'a', 3.4]\n```\n could be inferred to be of type `list[Any]` or `list[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictDictionaryInference":{"type":"boolean","markdownDescription":"When inferring the type of a dictionary’s keys and values, use strict type assumptions. For example, the expression \n\n```python\n{'a': 1, 'b': 'a'}\n```\n could be inferred to be of type `dict[str, Any]` or `dict[str, int | str]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictSetInference":{"type":"boolean","markdownDescription":"When inferring the type of a set, use strict type assumptions. For example, the expression \n\n```python\n{1, 'a', 3.4}\n```\n could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.analyzeUnannotatedFunctions":{"type":"boolean","markdownDescription":"Analyze and report errors for functions and methods that have no type annotations for input parameters or return types. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.strictParameterNoneValue":{"type":"boolean","markdownDescription":"[PEP 484](https://peps.python.org/pep-0484) indicates that when a function parameter is assigned a default value of None, its type should implicitly be Optional even if the explicit type is not. When enabled, this rule requires that parameter type annotations use Optional explicitly in this case. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.enableTypeIgnoreComments":{"type":"boolean","markdownDescription":"[PEP 484](https://peps.python.org/pep-0484) defines support for `# type: ignore` comments. This switch enables or disables support for these comments. The default value for this setting is `true`. This does not affect `# pyright: ignore` comments.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.deprecateTypingAliases":{"type":"boolean","markdownDescription":"[PEP 585](https://peps.python.org/pep-0585) indicates that aliases to types in standard collections that were introduced solely to support generics are deprecated as of Python 3.9. This switch controls whether these are treated as deprecated. This applies only when pythonVersion is 3.9 or newer. The default value for this setting is `false` but may be switched to `true` in the future.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableReachabilityAnalysis":{"type":"boolean","markdownDescription":"If enabled, code that is determined to be unreachable by type analysis is reported using a tagged hint. This setting does not affect code that is determined to be unreachable regardless of type analysis; such code is always reported as unreachable. This setting also has no effect when when using the command-line version of pyright because it never emits tagged hints for unreachable code.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableExperimentalFeatures":{"type":"boolean","markdownDescription":"Enables a set of experimental (mostly undocumented) features that correspond to proposed or exploratory changes to the Python typing standard. These features will likely change or be removed, so they should not be used except for experimentation purposes. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.disableBytesTypePromotions":{"type":"boolean","markdownDescription":"Disables legacy behavior where `bytearray` and `memoryview` are considered subtypes of `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) deprecates this behavior, but this switch is provided to restore the older behavior. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.diagnosticSeverityOverrides":{"type":"object","markdownDescription":"Allows a user to override the severity levels for individual diagnostics. \n\nUse the rule name as a key and one of `error`, `warning`, `information`, `none`, `true` (alias for `error`) or `false` (alias for `none`) as value. The default value shown for each diagnostic is the default when #python.analysis.typeCheckingMode# is set to `off`. See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (`off`, `basic` and `strict`).","scope":"resource","properties":{"reportGeneralTypeIssues":{"type":["string","boolean"],"description":"Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.","default":"none","enum":["none","information","warning","error",true,false]},"reportPropertyTypeMismatch":{"type":["string","boolean"],"description":"Diagnostics for property whose setter and getter have mismatched types.","default":"none","enum":["none","information","warning","error",true,false]},"reportFunctionMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for member accesses on functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingImports":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding imported python file or type stub file.","default":"warning","enum":["none","information","warning","error",true,false]},"reportMissingModuleSource":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.","default":"warning","enum":["none","information","warning","error",true,false]},"reportInvalidTypeForm":{"type":["string","boolean"],"description":"Diagnostics for type expression that uses an invalid form.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingTypeStubs":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.","default":"none","enum":["none","information","warning","error",true,false]},"reportImportCycles":{"type":["string","boolean"],"description":"Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol that is not referenced within that file.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedClass":{"type":["string","boolean"],"description":"Diagnostics for a class with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedFunction":{"type":["string","boolean"],"description":"Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedVariable":{"type":["string","boolean"],"description":"Diagnostics for a variable that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportDuplicateImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol or module that is imported more than once.","default":"none","enum":["none","information","warning","error",true,false]},"reportWildcardImportFromLibrary":{"type":["string","boolean"],"description":"Diagnostics for an wildcard import from an external library.","default":"none","enum":["none","information","warning","error",true,false]},"reportAbstractUsage":{"type":["string","boolean"],"description":"Diagnostics for an attempt to instantiate an abstract or protocol class or use an abstract method.","default":"error","enum":["none","information","warning","error",true,false]},"reportArgumentType":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility for an argument to a call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssertTypeFailure":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility detected by a typing.assert_type call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssignmentType":{"type":["string","boolean"],"description":"Diagnostics for type incompatibilities for assignments.","default":"error","enum":["none","information","warning","error",true,false]},"reportAttributeAccessIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving attribute accesses.","default":"error","enum":["none","information","warning","error",true,false]},"reportCallIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving call expressions and arguments.","default":"error","enum":["none","information","warning","error",true,false]},"reportInconsistentOverload":{"type":["string","boolean"],"description":"Diagnostics for inconsistencies between function overload signatures and implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportIndexIssue":{"type":["string","boolean"],"description":"Diagnostics related to index operations and expressions.","default":"error","enum":["none","information","warning","error",true,false]},"reportInvalidTypeArguments":{"type":["string","boolean"],"description":"Diagnostics for invalid type argument usage.","default":"error","enum":["none","information","warning","error",true,false]},"reportNoOverloadImplementation":{"type":["string","boolean"],"description":"Diagnostics for an overloaded function or method with a missing implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportOperatorIssue":{"type":["string","boolean"],"description":"Diagnostics for related to unary or binary operators.","default":"error","enum":["none","information","warning","error",true,false]},"reportOptionalSubscript":{"type":["string","boolean"],"description":"Diagnostics for an attempt to subscript (index) a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a member of a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalCall":{"type":["string","boolean"],"description":"Diagnostics for an attempt to call a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalIterable":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalContextManager":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalOperand":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').","default":"none","enum":["none","information","warning","error",true,false]},"reportRedeclaration":{"type":["string","boolean"],"description":"Diagnostics for an attempt to declare the type of a symbol multiple times.","default":"error","enum":["none","information","warning","error",true,false]},"reportReturnType":{"type":["string","boolean"],"description":"Diagnostics related to function return type compatibility.","default":"error","enum":["none","information","warning","error",true,false]},"reportTypedDictNotRequiredAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedFunctionDecorator":{"type":["string","boolean"],"description":"Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedClassDecorator":{"type":["string","boolean"],"description":"Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedBaseClass":{"type":["string","boolean"],"description":"Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedNamedTuple":{"type":["string","boolean"],"description":"Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.","default":"none","enum":["none","information","warning","error",true,false]},"reportTypeCommentUsage":{"type":["string","boolean"],"description":"Diagnostics for usage of deprecated type comments.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateImportUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.","default":"none","enum":["none","information","warning","error",true,false]},"reportConstantRedefinition":{"type":["string","boolean"],"description":"Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.","default":"none","enum":["none","information","warning","error",true,false]},"reportDeprecated":{"type":["string","boolean"],"description":"Diagnostics for use of deprecated classes or functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleMethodOverride":{"type":["string","boolean"],"description":"Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleVariableOverride":{"type":["string","boolean"],"description":"Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.","default":"none","enum":["none","information","warning","error",true,false]},"reportInconsistentConstructor":{"type":["string","boolean"],"description":"Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.","default":"none","enum":["none","information","warning","error",true,false]},"reportOverlappingOverload":{"type":["string","boolean"],"description":"Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.","default":"none","enum":["none","information","warning","error",true,false]},"reportPossiblyUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of variables that may be unbound on some code paths.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingSuperCall":{"type":["string","boolean"],"description":"Diagnostics for missing call to parent class for inherited `__init__` methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportUninitializedInstanceVariable":{"type":["string","boolean"],"description":"Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStringEscapeSequence":{"type":["string","boolean"],"description":"Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownParameterType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownArgumentType":{"type":["string","boolean"],"description":"Diagnostics for call arguments for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownLambdaType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for lambdas that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownVariableType":{"type":["string","boolean"],"description":"Diagnostics for variables that have an unknown type..","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownMemberType":{"type":["string","boolean"],"description":"Diagnostics for class or instance variables that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingParameterType":{"type":["string","boolean"],"description":"Diagnostics for parameters that are missing a type annotation.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingTypeArgument":{"type":["string","boolean"],"description":"Diagnostics for generic class reference with missing type arguments.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidTypeVarUse":{"type":["string","boolean"],"description":"Diagnostics for improper use of type variables in a function signature.","default":"none","enum":["none","information","warning","error",true,false]},"reportCallInDefaultInitializer":{"type":["string","boolean"],"description":"Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryIsInstance":{"type":["string","boolean"],"description":"Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true. Such calls are often indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryCast":{"type":["string","boolean"],"description":"Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryComparison":{"type":["string","boolean"],"description":"Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryContains":{"type":["string","boolean"],"description":"Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportAssertAlwaysTrue":{"type":["string","boolean"],"description":"Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportSelfClsParameterName":{"type":["string","boolean"],"description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitStringConcatenation":{"type":["string","boolean"],"description":"Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStubStatement":{"type":["string","boolean"],"description":"Diagnostics for type stub statements that do not conform to PEP 484.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompleteStub":{"type":["string","boolean"],"description":"Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.","default":"none","enum":["none","information","warning","error",true,false]},"reportUndefinedVariable":{"type":["string","boolean"],"description":"Diagnostics for undefined variables.","default":"warning","enum":["none","information","warning","error",true,false]},"reportUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of unbound variables.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnhashable":{"type":["string","boolean"],"description":"Diagnostics for the use of an unhashable object in a container that requires hashability.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedCallResult":{"type":["string","boolean"],"description":"Diagnostics for call expressions whose results are not consumed and are not None.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedCoroutine":{"type":["string","boolean"],"description":"Diagnostics for call expressions that return a Coroutine and whose results are not consumed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedExcept":{"type":["string","boolean"],"description":"Diagnostics for unreachable except clause.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedExpression":{"type":["string","boolean"],"description":"Diagnostics for simple expressions whose value is not used in any way.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnsupportedDunderAll":{"type":["string","boolean"],"description":"Diagnostics for unsupported operations performed on __all__.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryTypeIgnoreComment":{"type":["string","boolean"],"description":"Diagnostics for '# type: ignore' comments that have no effect.","default":"none","enum":["none","information","warning","error",true,false]},"reportMatchNotExhaustive":{"type":["string","boolean"],"description":"Diagnostics for 'match' statements that do not exhaustively match all possible values.","default":"none","enum":["none","information","warning","error",true,false]},"reportShadowedImports":{"type":["string","boolean"],"description":"Diagnostics for files that are overriding a module in the stdlib.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitOverride":{"type":["string","boolean"],"description":"Diagnostics for overridden methods that do not include an `@override` decorator.","default":"none","enum":["none","information","warning","error",true,false]}}},"python.analysis.disableTaggedHints":{"type":"boolean","default":false,"scope":"resource","markdownDescription":"Disable hint diagnostics with special hints for grayed-out or strike-through text."},"python.analysis.logLevel":{"type":"string","default":"Information","markdownDescription":"Specifies the level of logging for the Output panel","enum":["Error","Warning","Information","Trace"],"scope":"window"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.importFormat":{"type":"string","default":"absolute","enum":["absolute","relative"],"markdownDescription":"Defines the default format for importing modules.","enumDescriptions":["Use absolute import format when creating new import statement.","Use relative import format when creating new import statement."],"scope":"resource"},"python.analysis.enableSyncServer":{"type":"boolean","default":false,"scope":"window","markdownDescription":"Use sync server mode [Experimental]. For internal use only, may cause Pylance to stop working.","tags":["experimental","onExP"]},"python.analysis.reportExtraTelemetry":{"type":"boolean","default":false,"scope":"window","markdownDescription":"Report extra telemetry [Experimental]. For internal use only, may cause Pylance to slow down.","tags":["experimental","onExP"]},"python.analysis.enablePytestSupport":{"type":"boolean","default":true,"markdownDescription":"Enables pytest support in Pylance.","scope":"resource"},"python.analysis.gotoDefinitionInStringLiteral":{"type":"boolean","default":true,"markdownDescription":"For string literals that look like module names, enables go to definition to go to the module.","scope":"resource"},"python.analysis.nodeExecutable":{"type":"string","default":"","oneOf":[{"enum":["","auto"],"description":"Predefined Node.js executable option.","enumDescriptions":["Use VS Code's default Node.js executable.","Automatically download and use a Node.js executable."]},{"type":"string","minLength":1,"pattern":"^(?!auto$).+$","markdownDescription":"Custom Node.js executable path provided by the user."}],"markdownDescription":"Path to a Node.js executable to use for running the language server. If not specified, the language server will use the Node.js executable that ships with VS Code. If set to \"auto\", it will automatically download a version from [nodejs](https://nodejs.org/dist/). Set this option if you're having trouble with Pylance running out of memory. See [here](https://aka.ms/AApf7ox) for more information.","scope":"machine","requiresReload":true},"python.analysis.nodeArguments":{"type":"array","default":["--max-old-space-size=8192"],"items":{"type":"string"},"markdownDescription":"Extra arguments to pass to a Node.js executable to use for running the language server when `python.analysis.nodeExecutable` is set. Default is `--max_old_space_size=8192`.","scope":"machine","requiresReload":true},"python.analysis.supportRestructuredText":{"type":"boolean","default":true,"markdownDescription":"Enable/disable support for reStructuredText in docstrings.","scope":"window","tags":["preview"]},"python.analysis.cacheLSPData":{"type":"boolean","default":false,"markdownDescription":"Cache LSP data for faster completions. \n\n[Experimental] may cause Pylance to stop working.","scope":"machine","tags":["experimental","onExP"]},"python.analysis.regenerateStdLibIndices":{"type":"boolean","default":false,"markdownDescription":"Instead of relying on the shared stdlib.json indices for all Python versions, generate unique indices tailored to each workspace's specific Python version and platform. This regeneration process will affect performance, unlike using the prebuilt stdlib indices.","scope":"resource"},"python.analysis.usePullDiagnostics":{"type":"boolean","default":false,"markdownDescription":"Enable/disable support for pulling diagnostics from Pylance (instead of Pylance pushing them). \n\n[Experimental], may cause diagnostics to not appear. \n\nRequires restarting VS Code when changed.","scope":"window","requiresReload":true,"tags":["experimental","onExP"]},"python.analysis.aiCodeActions":{"type":"object","default":{},"markdownDescription":"Enable/disable AI-assisted code actions. Requires the Copilot Chat extension to be enabled.","scope":"resource","properties":{"implementAbstractClasses":{"type":"boolean","default":false,"markdownDescription":"Enable/disable AI assistance for implementing inherited abstract classes."},"generateDocstring":{"type":"boolean","default":false,"markdownDescription":"Enable/disable AI assistance for generating docstrings."},"generateSymbol":{"type":"boolean","default":false,"markdownDescription":"Enable/disable AI assistance for generating symbol such as class, function and variable."}}},"python.analysis.generateWithTypeAnnotation":{"type":"boolean","default":false,"markdownDescription":"Add type annotations when generating code. Defaults to `false` for type checking mode `off`, and `true` for other modes.","scope":"resource"},"python.analysis.languageServerMode":{"type":"string","default":"default","enum":["light","default","full"],"markdownDescription":"Select a predefined set of values for settings. Please check [this link](https://aka.ms/languageserver-mode) for more details.","markdownEnumDescriptions":["Set Pylance to do only essential work to make it light weight. See the link at the description to find out exactly what settings are set to what value.","Leave Pylance with default settings.","Enable most Pylance features by default. See the link at the description to find out exactly what settings are set to what value."],"scope":"resource"},"python.analysis.supportDocstringTemplate":{"type":"boolean","default":false,"markdownDescription":"Enable/disable support for docstring generation. In a blank docstring, use `Ctrl+Space` to generate a docstring.","scope":"resource","tags":["experimental","onExP"]},"python.analysis.displayEnglishDiagnostics":{"type":"boolean","default":false,"markdownDescription":"Display diagnostics in English regardless of VS Code's display language.","scope":"resource"},"python.analysis.enableEditableInstalls":{"type":"boolean","default":false,"markdownDescription":"Enable support for editable installs of packages as described in [PEP 660](https://peps.python.org/pep-0660/) when using Python 3.13 and higher. \n\n[Experimental]. For internal use only, may cause Pylance to stop working.","scope":"machine","tags":["onExP"]},"python.analysis.diagnosticsSource":{"type":"string","default":"Pylance","markdownDescription":"Allows specifying a different language server to use for diagnostics. Pylance will combine its results with this other server.","scope":"resource","enum":["Pylance","Pyright"],"markdownEnumDescriptions":["Use Pylance for diagnostics. (default)","Use Pyright for diagnostics. Allows running a different Pyright than the one shipped with the Pylance extension."]},"python.analysis.pyrightVersion":{"type":"string","default":"","markdownDescription":"Specifies the version of Pyright to use for diagnostics. Minimum value allowed is 1.1.397. This setting is only used when `python.analysis.diagnosticsSource` is set to `Pyright`. \n\nThis value can be one of\n- Version string = i.e. 1.1.397\n- Path to a local pyright-langserver.js file (which also has to come from at least 1.1.397 or higher).","scope":"resource"},"python.analysis.enableCompactContext":{"type":"boolean","default":false,"markdownDescription":"Enable/disable experimental context. For internal use only, may cause Pylance to stop working.","scope":"machine","requiresReload":true,"tags":["onExP"]},"python.analysis.enablePerfTelemetry":{"type":"boolean","default":false,"markdownDescription":"Enables internal perf telemetry if telemetry is enabled in VS Code.","scope":"resource","tags":["experimental","onExP"]},"python.analysis.supportAllPythonDocuments":{"type":"boolean","default":false,"markdownDescription":"Enable/disable support for all Python documents. This enables Pylance intellisense in other documents, like the terminal or diff views. \n\n[Experimental]. For internal use only, may cause Pylance to stop working.","scope":"resource","tags":["experimental","onExP"]}}},"jsonValidation":[{"fileMatch":"pyrightconfig.json","url":"./dist/schemas/pyrightconfig.schema.json"}],"semanticTokenTypes":[{"id":"module","description":"module","superType":"namespace"},{"id":"intrinsic","description":"intrinsic","superType":"operator"},{"id":"selfParameter","description":"self parameter","superType":"parameter"},{"id":"clsParameter","description":"cls parameter","superType":"parameter"},{"id":"magicFunction","description":"magic aka dunder function","superType":"function"},{"id":"builtinConstant","description":"constants like True, False, None, or __debug__","superType":"constant"},{"id":"parenthesis","description":"() parenthesis"},{"id":"bracket","description":"[] bracket"},{"id":"curlybrace","description":"{} curly brace"},{"id":"colon","description":"colon token"},{"id":"semicolon","description":"semicolon token"},{"id":"arrow","description":"arrow token"}],"semanticTokenModifiers":[{"id":"typeHint","description":"inside a type annotation"},{"id":"typeHintComment","description":"inside a comment style type annotation"},{"id":"decorator","description":"inside a decorator"},{"id":"builtin","description":"built-in identifier"},{"id":"overridden","description":"overridden token"},{"id":"callable","description":"callable like a function"}],"semanticTokenScopes":[{"language":"python","scopes":{"selfParameter":["variable.parameter.function.language.special.self.python"],"clsParameter":["variable.parameter.function.language.special.cls.python"],"magicFunction":["support.function.magic.python"],"*.typeHintComment":["comment.typehint.type.notation.python"],"*.overridden":["support.function.magic.python"],"function.decorator":["meta.function.decorator.python"],"class.decorator":["meta.function.decorator.python"],"builtinConstant":["constant.language.python"],"parenthesis":["source.python"],"bracket":["source.python"],"curlybrace":["source.python"],"colon":["punctuation.separator.colon.python"],"semicolon":["source.python"],"arrow":["punctuation.separator.annotation.result.python"]}}]},"scripts":{"clean":"shx rm -rf ./dist ./out NOTICE.txt","package":"vsce package --githubBranch main","vscode:prepublish":"npm run clean && shx cp ../../NOTICE.txt . && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode production --progress","webpack":"node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --progress","webpack-dev":"npm run clean && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --watch --progress","webpack-dev-fast":"npm run clean && webpack --env fast --mode development --watch --progress","build:tests":"tsc","watch:tests":"tsc --watch","encryptText":"ts-node --project ./tsconfig.json -r tsconfig-paths/register ./src/encryptText.ts","test":"npm run webpack && npm run test:extension && npm run test:web","test:extension":"npm run build:tests && node ./src/tests/runTests.js extension","test:smoke":"npm run build:tests && node ./src/tests/runTests.js smoke","test:web":"npm run webpack && node ./build/launchWebTests.js","test:copytestbundle":"shx cp ./dist/browser.tests/web/index.bundle.js ./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js","test:web:exists":"vscode-test-web --coi --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose","test:web:exists:nocoi":"vscode-test-web --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose"},"devDependencies":{"@types/jest":"^29.5.14","@types/mocha":"^10.0.10","@types/node":"^22.10.5","@types/sinon":"^17.0.3","@types/source-map-support":"^0.5.10","@types/vscode":"^1.90.0","@types/webpack":"^5.28.5","@types/webpack-env":"^1.18.5","@types/which":"^3.0.4","@vscode/test-electron":"^2.4.1","@vscode/test-web":"^0.0.65","@vscode/vsce":"^2.32.0","copy-webpack-plugin":"^11.0.0","esbuild-loader":"^3.2.0","javascript-obfuscator":"4.1.1","jest":"^29.7.0","jest-cli":"^29.7.0","jest-environment-node":"^29.7.0","jest-junit":"^16.0.0","mocha":"^10.8.2","shx":"^0.3.4","sinon":"^19.0.2","source-map-support":"^0.5.21","terser-webpack-plugin":"^5.3.11","ts-jest":"^29.2.5","ts-loader":"^9.5.1","ts-mockito":"^2.6.1","ts-node":"^10.9.2","typescript":"~5.5.4","webpack":"^5.97.1","webpack-cli":"^5.1.4","webpack-env":"^0.8.0","webpack-obfuscator":"^3.5.1"},"dependencies":{"@vscode/extension-telemetry":"^0.9.8","@vscode/jupyter-extension":"^1.1.1","@vscode/sync-api-common":"^0.9.0","@vscode/sync-api-service":"^0.9.0","ansi-regex":"^6.1.0","buffer":"^6.0.3","events":"^3.3.0","path-browserify":"^1.0.1","semver":"^7.6.3","stream-browserify":"^3.0.0","typescript-char":"^0.0.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver":"^10.0.0-next.10","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-languageserver-types":"^3.17.6-next.5","vscode-tas-client":"^0.1.84","web-tree-sitter":"^0.24.4","which":"^4.0.0"},"overrides":{"loader-utils":"^2.0.4","braces":"^3.0.3"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-python.vscode-pylance-2025.4.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745949906470,"source":"gallery","id":"364d2426-116a-433a-a5d8-a5098dc3afbd","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":83233542},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-toolsai.jupyter-keymap","uuid":"9f6dc8db-620c-4844-b8c5-e74914f1be27"},"manifest":{"name":"jupyter-keymap","publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"license":"MIT","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"displayName":"Jupyter Keymap","description":"Jupyter keymaps for notebooks","version":"1.1.2","engines":{"vscode":"^1.79.0-insider"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-keymap"},"bugs":{"url":"https://github.com/Microsoft/vscode-jupyter-keymap/issues"},"categories":["Notebooks"],"keywords":["notebook-keymap"],"contributes":{"keybindings":[{"key":"F","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.find"},{"key":"K","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"list.focusUp"},{"key":"J","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"list.focusDown"},{"key":"A","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.insertCodeCellAboveAndFocusContainer"},{"key":"B","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.insertCodeCellBelowAndFocusContainer"},{"key":"D D","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.delete"},{"key":"Z","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"undo"},{"key":"S","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"workbench.action.files.save"},{"key":"C","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.copy"},{"key":"X","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.cut"},{"key":"V","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.paste"},{"key":"shift+L","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.toggleLineNumbers"},{"key":"O","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.toggleOutputs"},{"key":"L","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.toggleLineNumbers"},{"key":"ctrl+shift+-","when":"editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputInputFocused","command":"notebook.cell.split"},{"key":"ctrl+enter","when":"editorTextFocus && inputFocus && notebookEditorFocused || notebookCellListFocused","command":"notebook.cell.executeAndFocusContainer"},{"key":"shift+enter","when":"editorTextFocus && inputFocus && notebookEditorFocused && !interactiveEditorFocused || notebookCellListFocused && notebookCellType == 'code' && !interactiveEditorFocused","command":"notebook.cell.executeAndSelectBelow"},{"win":"ctrl+alt+enter","linux":"ctrl+alt+enter","when":"interactiveEditorHasProvider && interactiveEditorVisible && !interactiveEditorDocumentChanged || interactiveEditorHasProvider && interactiveEditorVisible && config.interactiveEditor.editMode != 'preview'","command":"interactive.acceptChanges"}]}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-toolsai.jupyter-keymap-1.1.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745949918709,"source":"gallery","id":"9f6dc8db-620c-4844-b8c5-e74914f1be27","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":89294},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-toolsai.vscode-jupyter-slideshow","uuid":"e153ca70-b543-4865-b4c5-b31d34185948"},"manifest":{"name":"vscode-jupyter-slideshow","displayName":"Jupyter Slide Show","description":"Jupyter Slide Show support for VS Code","version":"0.1.6","publisher":"ms-toolsai","preview":true,"icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"author":{"name":"Microsoft Corporation"},"engines":{"vscode":"^1.88.0"},"categories":["Notebooks"],"activationEvents":["onNotebook:jupyter-notebook","onCommand:jupyter-slideshow.switchSlideType","onCommand:jupyter-slideshow.editSlideShowInJSON"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-slideshow"},"main":"./out/extension-node.js","browser":"./out/extension-web.js","contributes":{"commands":[{"command":"jupyter-slideshow.switchSlideType","title":"Switch Slide Type"},{"command":"jupyter-slideshow.editSlideShowInJSON","title":"Edit Slide Type (JSON)","icon":"$(go-to-file)"}],"menus":{"notebook/cell/title":[{"command":"jupyter-slideshow.switchSlideType","group":"jupyter-slideshow@1"},{"command":"jupyter-slideshow.editSlideShowInJSON","group":"jupyter-slideshow@2"}]}},"scripts":{"vscode:prepublish":"npm run compile","compile":"webpack --mode none","watch":"webpack --mode none --watch","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/vscode":"^1.71.0","@types/glob":"^7.1.3","@types/mocha":"^8.2.2","@types/node":"14.x","eslint":"^7.27.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0","glob":"^7.1.7","mocha":"^10.0.0","typescript":"^4.3.2","vscode-test":"^1.5.2","ts-loader":"^9.1.1","webpack":"^5.36.2","webpack-cli":"^4.6.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-toolsai.vscode-jupyter-slideshow-0.1.6","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745949918711,"source":"gallery","id":"e153ca70-b543-4865-b4c5-b31d34185948","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":437562},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-toolsai.vscode-jupyter-cell-tags","uuid":"ab4fb32a-befb-4102-adf9-1652d0cd6a5e"},"manifest":{"name":"vscode-jupyter-cell-tags","displayName":"Jupyter Cell Tags","description":"Jupyter Cell Tags support for VS Code","version":"0.1.9","publisher":"ms-toolsai","preview":true,"icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"author":{"name":"Microsoft Corporation"},"engines":{"vscode":"^1.88.0"},"categories":["Notebooks"],"activationEvents":["onNotebook:jupyter-notebook","onCommand:jupyter-cell-tags.removeTag","onCommand:jupyter-cell-tags.addTag","onCommand:jupyter-cell-tags.editTagsInJSON","onCommand:jupyter-cell-tags.paramaterize"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-cell-tags"},"main":"./out/extension-node.js","browser":"./out/extension-web.js","contributes":{"commands":[{"command":"jupyter-cell-tags.removeTag","title":"Remove Cell Tag","icon":"$(close)"},{"command":"jupyter-cell-tags.addTag","title":"Add Cell Tag","icon":"$(add)"},{"command":"jupyter-cell-tags.editTagsInJSON","title":"Edit Cell Tags (JSON)","icon":"$(go-to-file)"},{"command":"jupyter-cell-tags.paramaterize","title":"Mark Cell as Parameters"}],"menus":{"notebook/cell/title":[{"command":"jupyter-cell-tags.addTag","group":"jupytercelltags@1"},{"command":"jupyter-cell-tags.editTagsInJSON","group":"jupytercelltags@2"},{"command":"jupyter-cell-tags.paramaterize","group":"jupytercelltags@2"}],"view/title":[{"command":"jupyter-cell-tags.addTag","when":"view == cell-tag","group":"navigation"},{"command":"jupyter-cell-tags.editTagsInJSON","when":"view == cell-tag","group":"navigation"}],"view/item/context":[{"command":"jupyter-cell-tags.removeTag","when":"view == cell-tag","group":"inline"}]},"views":{"jupyter-variables":[{"id":"cell-tag","name":"Cell Tags","type":"tree","icon":"$(tag)","when":"jupyter:showTagsExplorer && jupyter.hasNativeNotebookOrInteractiveWindowOpen","visibility":"collapsed"}]},"viewsWelcome":[{"view":"cell-tag","contents":"No tags found for the selected cell. Use the [Add Cell Tag](command:jupyter-cell-tags.addTag) command to add tags."}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"webpack --mode none","watch":"webpack --mode none --watch","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/vscode":"^1.72.0","@types/glob":"^7.1.3","@types/mocha":"^8.2.2","@types/node":"14.x","eslint":"^7.27.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0","glob":"^7.1.7","mocha":"^10.0.0","typescript":"^4.3.2","vscode-test":"^1.5.2","ts-loader":"^9.1.1","webpack":"^5.36.2","webpack-cli":"^4.6.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-toolsai.vscode-jupyter-cell-tags-0.1.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745949918710,"source":"gallery","id":"ab4fb32a-befb-4102-adf9-1652d0cd6a5e","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":466191},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-toolsai.jupyter-renderers","uuid":"b15c72f8-d5fe-421a-a4f7-27ed9f6addbf"},"manifest":{"name":"jupyter-renderers","displayName":"Jupyter Notebook Renderers","description":"Renderers for Jupyter Notebooks (with plotly, vega, gif, png, svg, jpeg and other such outputs)","version":"1.1.0","engines":{"vscode":"^1.95.0"},"publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-notebook-renderers","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-notebook-renderers"},"bugs":{"url":"https://github.com/Microsoft/vscode-notebook-renderers/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+jupyter","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"keywords":["jupyter","notebook","notebookRenderer","multi-root ready"],"categories":["Other","Data Science","Machine Learning","Notebooks","Visualization"],"activationEvents":[],"enabledApiProposals":["contribNotebookStaticPreloads"],"main":"./out/extension_renderer/index.js","browser":"./out/extension_renderer/index.js","contributes":{"notebookPreload":[{"type":"jupyter-notebook","entrypoint":"./out/node_modules/@vscode/jupyter-ipywidgets7/dist/ipywidgets.js"},{"type":"interactive","entrypoint":"./out/node_modules/@vscode/jupyter-ipywidgets7/dist/ipywidgets.js"},{"type":"jupyter-notebook","entrypoint":"./out/node_modules/@vscode/jupyter-ipywidgets8/dist/ipywidgets.js"},{"type":"interactive","entrypoint":"./out/node_modules/@vscode/jupyter-ipywidgets8/dist/ipywidgets.js"},{"type":"jupyter-notebook","entrypoint":"./out/client_renderer/preload.js"},{"type":"interactive","entrypoint":"./out/client_renderer/preload.js"}],"notebookRenderer":[{"id":"jupyter-notebook-renderer","entrypoint":"./out/client_renderer/renderers.js","displayName":"Jupyter Notebook Renderer","requiresMessaging":"optional","mimeTypes":["image/gif","image/png","image/jpeg","image/webp","image/svg+xml","application/geo+json","application/vdom.v1+json","application/vnd.dataresource+json","application/vnd.plotly.v1+json","application/vnd.vega.v2+json","application/vnd.vega.v3+json","application/vnd.vega.v4+json","application/vnd.vegalite.v1+json","application/vnd.vegalite.v2+json","application/x-nteract-model-debug+json","text/vnd.plotly.v1+html"]},{"id":"jupyter-notebook-built-in-renderer-hooks","displayName":"Jupyter Notebook Html/JavaScript Renderer","requiresMessaging":"optional","entrypoint":{"extends":"vscode.builtin-renderer","path":"./out/client_renderer/builtinRendererHooks.js"}},{"id":"jupyter-vega-renderer","displayName":"Jupyter Vega Renderer","requiresMessaging":"optional","entrypoint":"./out/client_renderer/vegaRenderer.js","mimeTypes":["application/vnd.vega.v5+json","application/vnd.vegalite.v3+json","application/vnd.vegalite.v4+json","application/vnd.vegalite.v5+json"]},{"id":"jupyter-markdown","displayName":"Jupyter Markdown styles","entrypoint":{"extends":"vscode.markdown-it-renderer","path":"./out/client_renderer/markdown.js"}}]},"scripts":{"vscode:prepublish":"npm run compile:webpack","dev":"concurrently -r npm:compile:extension:watch npm:compile:client:watch","compile":"npm run compile:extension && npm run compile:client","compile:extension":"tsc -p src/extension","compile:extension:watch":"tsc -p src/extension --watch","compile:webpack":"npm run build:client && npm run build:extension","compile:client":"webpack --config=build/webpack/webpack.client.config.js","build:client":"webpack --config=build/webpack/webpack.client.config.js --mode=production","build:extension":"webpack --config=build/webpack/webpack.extension.config.js --mode=production","compile:client:watch":"webpack --config=build/webpack/webpack.client.config.js --watch","lint":"eslint src --ext ts && eslint src --ext tsx && eslint build --ext js","lint-format":"npx prettier 'src/**/*.ts*' --check && npx prettier 'build/**/*.js' --check","watch":"tsc -watch -p ./","package":"vsce package -o ms-notebook-renderers.vsix","prettier-fix":"prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write","postinstall":"node ./build/postInstall.js"},"dependencies":{"@babel/helper-validator-identifier":"^7.22.20","@jupyterlab/nbformat":"^4.2.4","@loadable/component":"^5.12.0","@nteract/transform-dataresource":"^3.0.2","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^7.0.0","@nteract/transform-vega":"7.0.10","@nteract/transforms":"^3.2.0","@vscode/jupyter-ipywidgets7":"^2.0.4","@vscode/jupyter-ipywidgets8":"^1.0.8","canvas":"^2.11.2","chownr":"^2.0.0","fs-minipass":"^2.1.0","jquery":"^3.6.1","lodash":"^4.17.21","minipass":"^3.1.6","minizlib":"^2.1.2","path-browserify":"^0.0.1","plotly.js-dist":"^2.35.2","re-resizable":"~6.5.5","react":"^16.8.4","react-dom":"^16.8.4","react-toggle":"^4.1.2","requirejs":"^2.3.7","styled-components":"^6.1.13","tslib":"^1.14.1","underscore":"^1.13.1","util":"^0.12.3","uuid":"^3.3.2","vega":"^5.30.0","vega-embed":"^6.26.0","vega-lite":"^5.21.0","yallist":"^4.0.0"},"devDependencies":{"@types/copy-webpack-plugin":"^10.1.0","@types/glob":"^7.1.1","@types/loadable__component":"^5.10.0","@types/lodash":"^4.14.158","@types/markdown-it":"^12.2.3","@types/node":"^12.11.7","@types/react":"^16.9.35","@types/react-dom":"^16.9.8","@types/uuid":"^8.0.0","@types/vscode":"^1.60.0","@types/vscode-notebook-renderer":"^1.60.0","@typescript-eslint/eslint-plugin":"^7.18.0","@typescript-eslint/parser":"^7.18.0","concurrently":"^5.2.0","copy-webpack-plugin":"^12.0.2","css-loader":"^7.1.2","eslint":"^8.57.0","eslint-config-prettier":"^9.1.0","eslint-plugin-prettier":"^5.2.1","fork-ts-checker-webpack-plugin":"^9.0.2","glob":"^7.1.6","less":"^4.2.0","node-loader":"^2.0.0","prettier":"^3.3.3","style-loader":"^4.0.0","svg-inline-loader":"^0.8.2","thread-loader":"^4.0.2","ts-loader":"^9.5.1","typescript":"^5.5.4","url-loader":"^4.1.1","webpack":"^5.95.0","webpack-bundle-analyzer":"^4.10.2","webpack-cli":"^5.1.4","webpack-fix-default-import-plugin":"^1.0.3"},"overrides":{"simple-get":"3.1.1","node-fetch":"2.6.7","prismjs":"1.27.0","url-parse@<1.5.9":"1.5.9","terser@<5.14.2":"5.14.2","ua-parser-js":"0.7.24","moment@<2.29.4":"2.29.4","nanoid@<3.3.8":"3.3.8","ws@<7.4.6":"7.5.10"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-toolsai.jupyter-renderers-1.1.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745949918710,"source":"gallery","id":"b15c72f8-d5fe-421a-a4f7-27ed9f6addbf","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":25243853},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-toolsai.jupyter","uuid":"6c2f1801-1e7f-45b2-9b5c-7782f1e076e8"},"manifest":{"name":"jupyter","displayName":"Jupyter","version":"2025.3.0","description":"Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.","publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"extensionPack":["ms-toolsai.jupyter-keymap","ms-toolsai.jupyter-renderers","ms-toolsai.vscode-jupyter-slideshow","ms-toolsai.vscode-jupyter-cell-tags"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-jupyter","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter"},"bugs":{"url":"https://github.com/Microsoft/vscode-jupyter/issues"},"qna":"https://github.com/microsoft/vscode-jupyter/discussions","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"engines":{"vscode":"^1.99.0"},"l10n":"./l10n","extensionKind":["workspace"],"keywords":["jupyter","notebook","notebookKernelJupyterNotebook","multi-root ready","python","interactive"],"categories":["Extension Packs","Data Science","Machine Learning","Notebooks","Visualization"],"activationEvents":["onLanguage:python","onLanguage:jupyter","onNotebook:jupyter-notebook","onNotebook:interactive","onWebviewPanel:jupyter-variables","onWebviewPanel:jupyter"],"main":"./dist/extension.node.proxy.js","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Execution of cells in Interactive Window and Notebooks is not supported in untrusted workspaces."}},"contributes":{"walkthroughs":[{"id":"jupyterWelcome","title":"Get Started with Jupyter Notebooks","description":"Your first steps to set up a Jupyter project with all the powerful tools and features that the Jupyter Extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"ipynb.newUntitledIpynb","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Create: New Jupyter Notebook``.\n[Create New Jupyter Notebook](command:toSide:ipynb.newUntitledIpynb)\n If you have an existing project, you can also [open a folder](command:toSide:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:toSide:git.clone).","media":{"svg":"resources/walkthroughs/opennotebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:ipynb.newUntitledIpynb","onCommand:jupyter.createnewinteractive","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"jupyter.selectKernel","title":"Select a Jupyter kernel","description":"Click Select Kernel at the top right of the notebook and choose the environment in which to run your kernel. Or, with a notebook opened and in focus, open the [Command Palette](command:workbench.action.showCommands) and run the command: \n``Notebook: Select Notebook Kernel``. \n[Open Command Palette to Select a Jupyter Kernel](command:workbench.action.showCommands)","media":{"svg":"resources/walkthroughs/kernel.svg","altText":"Selecting or changing a notebook kernel"},"completionEvents":["onCommand:notebook.selectKernel"]},{"id":"jupyter.exploreAndDebug","title":"Explore data and debug","description":"📅 You can use the [Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data) to view, sort, and filter the rows of data. After loading your data, click \"Variables\" at the top right of notebook and click the Data Viewer icon to the left of the data table. \n \n[Learn about Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data)\n \n📒 Debug your notebook using the [Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line) mode to execute a cell one line at a time. Click the Run by Line icon from your cell (play button with lines) or hit F10. \n \n[Learn about Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line)","media":{"svg":"resources/walkthroughs/data.svg","altText":"Opening data viewer"}},{"id":"jupyter.dataScienceLearnMore","title":"Find out more!","description":"🎨 Explore all the features the Jupyter Extension has to offer by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with data science in [Python](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) by installing the Python Extension ([search Python extension](command:workbench.extensions.search?\"ms-python.python\")). \n 📃 Find out more features in our [Tutorials](https://code.visualstudio.com/docs/datascience/jupyter-notebooks).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthroughs/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"keybindings":[{"command":"jupyter.execSelectionInteractive","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"jupyter.runcurrentcelladvance","key":"shift+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused && !isCompositeNotebook"},{"command":"jupyter.runcurrentcell","key":"ctrl+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused && !isCompositeNotebook"},{"command":"jupyter.runcurrentcellandaddbelow","key":"alt+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"},{"key":"escape","when":"isCompositeNotebook && !editorHoverVisible && !suggestWidgetVisible && !isComposing && !inSnippetMode && !exceptionWidgetVisible && !selectionAnchorSet && !LinkedEditingInputVisible && !renameInputVisible && !editorHasSelection && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !findWidgetVisible && !markersNavigationVisible && !parameterHintsVisible && !editorHasMultipleSelections && !notificationToastsVisible && !notebookEditorFocused && !inlineChatVisible","command":"interactive.input.clear"},{"command":"jupyter.insertCellBelowPosition","key":"ctrl+; s","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellBelow","key":"ctrl+; b","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellAbove","key":"ctrl+; a","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.deleteCells","key":"ctrl+; x","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellAbove","key":"ctrl+alt+shift+[","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellBelow","key":"ctrl+alt+shift+]","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsUp","key":"ctrl+; u","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsDown","key":"ctrl+; d","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToMarkdown","key":"ctrl+; m","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToCode","key":"ctrl+; c","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoNextCellInFile","key":"ctrl+alt+]","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoPrevCellInFile","key":"ctrl+alt+[","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCellContents","key":"ctrl+alt+\\","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCell","key":"ctrl+alt+shift+\\","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.refreshDataViewer","key":"ctrl+r","mac":"cmd+r","when":"jupyter.dataViewerActive"},{"command":"jupyter.runAndDebugCell","key":"ctrl+alt+shift+enter","mac":"ctrl+shift+enter"},{"command":"jupyter.runByLine","key":"f10"},{"command":"jupyter.runByLineNext","key":"f10"},{"command":"jupyter.runByLineStop","key":"ctrl+enter"}],"commands":[{"command":"dataScience.ClearCache","title":"Clear Cache","category":"Jupyter (Dev)","enablement":"jupyter.development"},{"command":"jupyter.manageAccessToKernels","title":"Manage Access To Jupyter Kernels","category":"Jupyter"},{"command":"dataScience.ClearUserProviderJupyterServerCache","title":"Clear User Jupyter Server Cache","category":"Jupyter (Dev)","enablement":"jupyter.development"},{"command":"jupyter.replayPylanceLog","title":"Replay Pylance Log","category":"Jupyter (Dev)","enablement":"jupyter.development && notebookType == jupyter-notebook && isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.replayPylanceLogStep","title":"Step Pylance Log","category":"Jupyter (Dev)","icon":"$(debug-start)","enablement":"jupyter.development && notebookType == jupyter-notebook && isWorkspaceTrusted && jupyter.replayLogLoaded && !jupyter.webExtension"},{"command":"jupyter.filterKernels","title":"Filter Kernels","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.runByLine","title":"Run by Line","icon":"$(debug-line-by-line)","category":"Jupyter","enablement":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.debugDocuments || !notebookKernel && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted"},{"command":"jupyter.runAndDebugCell","title":"Debug Cell","icon":"$(debug-alt-small)","category":"Jupyter","enablement":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.debugDocuments || !notebookKernel && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted"},{"command":"jupyter.runByLineNext","title":"Run Next Line","icon":"$(debug-line-by-line)","category":"Jupyter","enablement":"notebookCellResource in jupyter.notebookeditor.runByLineCells"},{"command":"jupyter.runByLineStop","title":"Continue Execution","icon":"$(debug-continue-small)","category":"Jupyter","enablement":"notebookCellResource in jupyter.notebookeditor.runByLineCells"},{"command":"jupyter.viewOutput","title":"Show Output","category":"Jupyter"},{"command":"jupyter.notebookeditor.export","title":"Export As","shortTitle":"Export","category":"Notebook","icon":{"light":"resources/light/export_to_python.svg","dark":"resources/dark/export_to_python.svg"},"enablement":"notebookType == jupyter-notebook && isWorkspaceTrusted && !jupyter.webExtension || notebookType == jupyter-notebook && isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.export","title":"Export As","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.exportAsPythonScript","title":"Export to Python Script","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.exportToHTML","title":"Export to HTML","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.exportToPDF","title":"Export to PDF","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.selectJupyterInterpreter","title":"Select Interpreter to Start Jupyter Server","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.runcurrentcell","title":"Run Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcell","title":"Debug Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugstepover","title":"Step Over","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugstop","title":"Stop","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcontinue","title":"Continue","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.insertCellBelow","title":"Insert Cell Below","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.insertCellAbove","title":"Insert Cell Above","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.deleteCells","title":"Delete Selected Cells","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.selectCell","title":"Select Cell","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.selectCellContents","title":"Select Cell Contents","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.moveCellsUp","title":"Move Selected Cells Up","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.moveCellsDown","title":"Move Selected Cells Down","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.changeCellToCode","title":"Change Cell to Code","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.gotoNextCellInFile","title":"Go to Next Cell","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcurrentcell.palette","title":"Debug Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.execSelectionInteractive","title":"Run Selection/Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.createnewinteractive","title":"Create Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runFileInteractive","title":"Run Current File in Interactive Window","icon":"$(play)","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugFileInteractive","title":"Debug Current File in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.runallcells","title":"Run All Cells","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove","title":"Run Above","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcellandallbelow","title":"Run Below","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcell","title":"Run Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runtoline","title":"Run To Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runfromline","title":"Run From Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.importnotebook","title":"Import Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.importnotebookfile","title":"Import Notebook to Script","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.exportoutputasnotebook","title":"Export Interactive Window as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.interruptkernel","title":"Interrupt Kernel","shortTitle":"Interrupt","category":"Jupyter","icon":{"light":"resources/light/interrupt.svg","dark":"resources/dark/interrupt.svg"},"enablement":"isWorkspaceTrusted && jupyter.interactive.canInterruptNotebookKernel"},{"command":"jupyter.restartkernel","title":"Restart Kernel","shortTitle":"Restart","category":"Jupyter","icon":{"light":"resources/light/restart-kernel.svg","dark":"resources/dark/restart-kernel.svg"},"enablement":"isWorkspaceTrusted && (jupyter.interactive.canRestartNotebookKernel || (notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.notebookeditor.canrestartNotebookkernel))"},{"command":"jupyter.restartkernelandrunallcells","title":"Restart Kernel and Run All Cells","shortTitle":"Restart and Run All","category":"Jupyter","enablement":"isWorkspaceTrusted && (jupyter.interactive.canRestartNotebookKernel || (notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.notebookeditor.canrestartNotebookkernel))"},{"command":"jupyter.restartkernelandrunuptoselectedcell","title":"Restart Kernel and Run Up To Selected Cell","shortTitle":"Restart Kernel and Run Up To Selected Cell","category":"Jupyter","enablement":"isWorkspaceTrusted && (notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.notebookeditor.canrestartNotebookkernel)"},{"command":"jupyter.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.expandallcells","title":"Expand All Cell Inputs","shortTitle":"Expand","category":"Jupyter","icon":"$(expand-all)"},{"command":"jupyter.collapseallcells","title":"Collapse All Cell Inputs","shortTitle":"Collapse","category":"Jupyter","icon":"$(collapse-all)"},{"command":"jupyter.addcellbelow","title":"Add Empty Cell to File","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.createnewnotebook","title":"Create New Jupyter Notebook","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.scrolltocell","title":"Scroll Cell Into View","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.latestExtension","title":"DataScience.latestExtension","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.showDataViewer","title":"View Value in Data Viewer","enablement":"!jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.clearSavedJupyterUris","title":"Clear Jupyter Remote Server List","category":"Jupyter"},{"command":"jupyter.openVariableView","title":"Open Jupyter Variables View","shortTitle":"Jupyter Variables","icon":"$(variable-group)","category":"Jupyter","enablement":"notebookType == jupyter-notebook && isWorkspaceTrusted || isCompositeNotebook && isWorkspaceTrusted"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","shortTitle":"Outline","icon":"$(list-unordered)","category":"Jupyter","enablement":"notebookType == jupyter-notebook"},{"command":"jupyter.refreshDataViewer","title":"Refresh Data Viewer","category":"Jupyter","enablement":"jupyter.dataViewerActive && isWorkspaceTrusted"},{"command":"jupyter.interactive.clearAllCells","title":"Clear All","icon":"$(close)","category":"Jupyter"},{"command":"jupyter.interactive.goToCode","title":"Go to code","icon":"$(go-to-file)","category":"Jupyter"},{"command":"jupyter.interactive.exportasnotebook","title":"Export to Jupyter Notebook","shortTitle":"Save","icon":"$(save-as)","enablement":"notebookType == interactive","category":"Jupyter"},{"command":"jupyter.interactive.exportas","title":"Export","icon":{"light":"resources/light/export_to_python.svg","dark":"resources/dark/export_to_python.svg"},"enablement":"notebookType == interactive","category":"Jupyter"},{"command":"jupyter.interactive.copyCell","title":"Copy Cell","icon":"$(copy)","category":"Jupyter"},{"command":"jupyter.runInDedicatedExtensionHost","title":"Run in Dedicated Extension Host","enablement":"!jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.continueEditSessionInCodespace","title":"Continue On Codespace","shortTitle":"Continue On","icon":"$(vm)","enablement":"true","category":"Jupyter"},{"command":"jupyter.selectPrecedentCells","title":"Select Precedent Cells","icon":"$(gather)","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.selectDependentCells","title":"Select Dependent Cells","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.runPrecedentCells","title":"Execute with Precedent Cells","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.runDependentCells","title":"Execute with Dependent Cells","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.debugCellSymbols","title":"Debug Cell Symbols","icon":"$(debug-alt-small)","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.listPipPackages","title":"List Pip Packages","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.listVariables","title":"List Variables","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"}],"submenus":[{"id":"editor.interactiveWindow.context","label":"Run in Interactive Window"}],"menus":{"editor/context":[{"submenu":"editor.interactiveWindow.context","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && resourceExtname == .ipynb && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.importnotebook","group":"Jupyter3@1"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.exportfileasnotebook","group":"Jupyter3@2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.exportfileandoutputasnotebook","group":"Jupyter3@3"}],"editor.interactiveWindow.context":[{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runallcells","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runcurrentcell","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runcurrentcelladvance","group":"Jupyter2"},{"command":"jupyter.runFileInteractive","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.runfromline","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.runtoline","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.execSelectionInteractive","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"}],"editor/title":[{"command":"jupyter.restartkernel","title":"Restart Kernel","group":"navigation@1","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.notebookeditor.canrestartNotebookkernel && config.notebook.globalToolbar != true"},{"command":"jupyter.openVariableView","title":"Open Jupyter Variables View","group":"navigation@2","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true && jupyter.ispythonnotebook"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","group":"navigation@3","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && config.jupyter.showOutlineButtonInNotebookToolbar && config.notebook.globalToolbar != true"},{"command":"jupyter.notebookeditor.export","title":"Export As","group":"navigation@4","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true"},{"command":"jupyter.continueEditSessionInCodespace","group":"navigation@5","when":"notebookType == 'jupyter-notebook' && jupyter.kernelSource == 'github-codespaces' && config.notebook.globalToolbar != true"}],"notebook/toolbar":[{"command":"jupyter.restartkernel","group":"navigation/execute@5","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.kernel.isjupyter"},{"command":"jupyter.openVariableView","group":"navigation@1","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.ispythonnotebook && jupyter.kernel.isjupyter"},{"command":"jupyter.openOutlineView","group":"navigation@2","when":"notebookType == 'jupyter-notebook' && config.jupyter.showOutlineButtonInNotebookToolbar"},{"command":"jupyter.continueEditSessionInCodespace","group":"navigation@3","when":"notebookType == 'jupyter-notebook' && jupyter.kernelSource == 'github-codespaces'"},{"command":"jupyter.notebookeditor.export","group":"Jupyter","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted"},{"command":"jupyter.replayPylanceLogStep","group":"navigation@1","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.replayLogLoaded"}],"notebook/cell/title":[{"command":"jupyter.runByLine","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.runByLineDocuments || !notebookKernel && notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted","group":"inline/cell@0"},{"command":"jupyter.runByLineNext","when":"notebookCellResource in jupyter.notebookeditor.runByLineCells","group":"inline/cell@0"},{"command":"jupyter.runByLineStop","when":"notebookCellResource in jupyter.notebookeditor.runByLineCells && notebookCellToolbarLocation == left","group":"inline/cell@1"},{"command":"jupyter.runByLineStop","when":"notebookCellResource in jupyter.notebookeditor.runByLineCells && notebookCellToolbarLocation == right","group":"inline/cell@0"},{"command":"jupyter.selectPrecedentCells","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.jupyter.executionAnalysis.enabled","group":"executionAnalysis@0"},{"command":"jupyter.selectDependentCells","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.jupyter.executionAnalysis.enabled","group":"executionAnalysis@1"}],"notebook/cell/execute":[{"command":"jupyter.runAndDebugCell","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.debugDocuments || !notebookKernel && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted","group":"jupyterCellExecute@0"},{"command":"jupyter.runPrecedentCells","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && config.jupyter.executionAnalysis.enabled","group":"jupyterCellExecute@1"},{"command":"jupyter.runDependentCells","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && config.jupyter.executionAnalysis.enabled","group":"jupyterCellExecute@2"}],"interactive/toolbar":[{"command":"jupyter.interactive.clearAllCells","group":"navigation@0","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.restartkernel","group":"navigation@1","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.openVariableView","group":"navigation@3","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interactive.exportasnotebook","group":"navigation@4","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interactive.exportas","group":"navigation@5","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.expandallcells","group":"navigation@6","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.collapseallcells","group":"navigation@7","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"}],"interactive/cell/title":[{"command":"jupyter.interactive.copyCell","group":"inline@0","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interactive.goToCode","group":"inline@1","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"}],"explorer/context":[{"when":"resourceLangId == python && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runFileInteractive","group":"Jupyter2"},{"when":"resourceExtname == .ipynb && isWorkspaceTrusted","command":"jupyter.importnotebookfile","group":"Jupyter"}],"commandPalette":[{"command":"jupyter.replayPylanceLog","title":"Replay Pylance Log","when":"jupyter.development && isWorkspaceTrusted"},{"command":"jupyter.manageAccessToKernels","title":"Manage Access To Jupyter Kernels"},{"command":"jupyter.interactive.copyCell","when":"false"},{"command":"jupyter.exportAsPythonScript","title":"Export to Python Script","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted && jupyter.ispythonnotebook && isWorkspaceTrusted"},{"command":"jupyter.refreshDataViewer","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.exportToHTML","title":"Export to HTML","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.exportToPDF","title":"Export to PDF","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellBelow","title":"Insert Cell Below","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellAbove","title":"Insert Cell Above","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.deleteCells","title":"Delete Selected Cells","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCell","title":"Select Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCellContents","title":"Select Cell Contents","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsUp","title":"Move Selected Cells Up","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsDown","title":"Move Selected Cells Down","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToCode","title":"Change Cell to Code","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoNextCellInFile","title":"Go to Next Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.runcurrentcell","title":"Run Current Cell","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.debugcurrentcell.palette","title":"Debug Current Cell","category":"Jupyter","when":"editorLangId == python && jupyter.hascodecells && isWorkspaceTrusted"},{"command":"jupyter.createnewinteractive","title":"Create Interactive Window","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.runallcells","title":"Run All Cells","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && isWorkspaceTrusted"},{"command":"jupyter.scrolltocell","title":"Scroll Cell Into View","category":"Jupyter","when":"false"},{"command":"jupyter.debugcell","title":"Debug Cell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runcell","title":"Run Cell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runFileInteractive","title":"Run Current File in Interactive Window","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.debugFileInteractive","title":"Debug Current File in Interactive Window","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.importnotebook","title":"Import Jupyter Notebook","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Jupyter","when":"jupyter.ispythonorinteractiveeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Jupyter","when":"jupyter.ispythonorinteractiveeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.restartkernel","title":"Restart Kernel","category":"Jupyter","when":"(jupyter.ispythonorinteractiveeactive || jupyter.isnativeactive) && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Notebook","when":"jupyter.havenativecells && jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Notebook","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.expandallcells","title":"Expand All Cell Inputs","shortTitle":"Expand","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.collapseallcells","title":"Collapse All Cell Inputs","shortTitle":"Collapse","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.exportoutputasnotebook","title":"Export Interactive Window as Jupyter Notebook","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.runcellandallbelow","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runallcellsabove","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugcontinue","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugstop","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugstepover","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugcell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.addcellbelow","title":"Add Empty Cell to File","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive"},{"command":"jupyter.createnewnotebook","category":"Jupyter","when":"false"},{"command":"jupyter.runtoline","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runfromline","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.execSelectionInteractive","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.latestExtension","title":"Download the latest version of the Jupyter Extension","category":"Jupyter","when":"false"},{"command":"jupyter.export","title":"Export As","category":"Jupyter","when":"false"},{"command":"jupyter.notebookeditor.export","title":"Export As","category":"Notebook","when":"false"},{"command":"jupyter.showDataViewer","category":"Jupyter","when":"false"},{"command":"jupyter.openVariableView","title":"Open Jupyter Variables View","category":"Jupyter","when":"notebookType == jupyter-notebook && isWorkspaceTrusted"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","category":"Jupyter","when":"notebookType == jupyter-notebook && isWorkspaceTrusted"},{"command":"jupyter.interactive.goToCode","when":"false"},{"command":"jupyter.interactive.clearAllCells","when":"editorFocus && editorLangId == python || activeEditor == 'workbench.editor.interactive'"},{"command":"jupyter.clearSavedJupyterUris","title":"Clear Jupyter Remote Server List"},{"command":"jupyter.selectPrecedentCells","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.selectDependentCells","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.runPrecedentCells","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.runDependentCells","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.debugCellSymbols","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.listPipPackages","when":"false"},{"command":"jupyter.listVariables","when":"false"}],"debug/variables/context":[{"command":"jupyter.showDataViewer","group":"1_view","when":"debugProtocolVariableMenuContext == 'viewableInDataViewer'"}],"editor/title/run":[{"command":"jupyter.runFileInteractive","group":"jupyter","title":"Run Current File in Interactive Window","when":"resourceLangId == python && !isInDiffEditor && isWorkspaceTrusted"}]},"configuration":{"type":"object","title":"Jupyter","properties":{"jupyter.experiments.enabled":{"type":"boolean","default":true,"description":"Enables/disables A/B tests.","scope":"machine"},"jupyter.showVariableViewWhenDebugging":{"type":"boolean","default":false,"description":"Bring up the Variable View when starting a Run by Line session.","scope":"resource"},"jupyter.logging.level":{"type":"string","default":"info","enum":["off","error","warn","info","debug","trace"],"enumDescriptions":["No messages are logged with this level.","Only error messages are logged with this level.","Warning and error messages are logged with this level.","Information, warning and error messages are logged with this level.","Debug and higher severity messages are logged with this level.","All messages are logged with this level."],"description":"The logging level the extension logs at."},"jupyter.experiments.optInto":{"type":"array","default":[],"items":{"enum":["DoNotWaitForZmqPortsToBeUsed"]},"markdownDescription":"List of experiment to opt into. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).","scope":"application"},"jupyter.experiments.optOutFrom":{"type":"array","default":[],"items":{"enum":["DoNotWaitForZmqPortsToBeUsed"]},"markdownDescription":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).","scope":"application"},"jupyter.widgetScriptSources":{"type":"array","default":[],"items":{"type":"string","enum":["jsdelivr.com","unpkg.com"],"enumDescriptions":["Loads widget (javascript) scripts from https://www.jsdelivr.com/","Loads widget (javascript) scripts from https://unpkg.com/"]},"uniqueItems":true,"markdownDescription":"Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.","scope":"resource"},"jupyter.askForLargeDataFrames":{"type":"boolean","default":true,"description":"Warn the user before trying to open really large data frames.","scope":"application"},"jupyter.askForKernelRestart":{"type":"boolean","default":true,"description":"Warn the user before restarting a kernel."},"jupyter.exportWithOutputEnabled":{"type":"boolean","default":false,"description":"Enable exporting a python file into a jupyter notebook and run all cells when doing so.","scope":"resource"},"jupyter.jupyterLaunchTimeout":{"type":"number","default":60000,"description":"Amount of time (in ms) to wait for the Jupyter Notebook server to start."},"jupyter.jupyterLaunchRetries":{"type":"number","default":3,"description":"Number of times to attempt to connect to the Jupyter Notebook"},"jupyter.jupyterCommandLineArguments":{"type":"array","default":[],"description":"If and when a Jupyter server is started, these arguments will be passed to into the Jupyter Notebook CLI. By default this list is generated by the Jupyter Extension.","scope":"resource"},"jupyter.notebookFileRoot":{"type":"string","default":"${fileDirname}","markdownDescription":"Set the root directory for Jupyter Notebooks and the Interactive Window running locally.  \n\n**Note:** This does not apply to Remote Jupyter Kernels.","scope":"resource"},"jupyter.useDefaultConfigForJupyter":{"type":"boolean","default":true,"description":"When running Jupyter locally, create a default empty Jupyter config"},"jupyter.jupyterInterruptTimeout":{"type":"number","default":10000,"description":"Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel."},"jupyter.interactiveWindow.textEditor.executeSelection":{"type":"boolean","default":false,"description":"When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.","scope":"resource"},"jupyter.interactiveWindow.textEditor.normalizeSelection":{"type":"boolean","default":false,"description":"Selected text will be normalized before it is executed in the Interactive Window.","scope":"resource"},"jupyter.interactiveWindow.splitRunFileIntoCells":{"type":"boolean","default":true,"description":"A file run in the Interactive Window will be run in individual cells if it has them.","scope":"resource"},"jupyter.variableExplorerExclude":{"type":"string","default":"module;function;builtin_function_or_method;ABCMeta;type;ModelMetaclass","description":"Types to exclude from showing in the Interactive variable explorer","scope":"resource"},"jupyter.interactiveWindow.cellMarker.codeRegex":{"type":"string","default":"^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])","description":"Regular expression used to identify code cells. All code until the next match is considered part of this cell.","scope":"resource"},"jupyter.interactiveWindow.cellMarker.default":{"type":"string","default":"# %%","description":"Cell marker used for delineating a cell in a python file.","scope":"resource"},"jupyter.interactiveWindow.cellMarker.markdownRegex":{"type":"string","default":"^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)","description":"Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.","scope":"resource"},"jupyter.themeMatplotlibPlots":{"type":"boolean","default":false,"description":"In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme."},"jupyter.interactiveWindow.cellMarker.decorateCells":{"type":"string","enum":["currentCell","allCells","None"],"default":"currentCell","description":"Draw a highlight behind the currently active cell, or all cells, in a python file.","scope":"resource"},"jupyter.interactiveWindow.codeLens.enable":{"type":"boolean","default":true,"description":"Enables code lens for 'cells' in a python file.","scope":"resource"},"jupyter.interactiveWindow.textEditor.autoMoveToNextCell":{"type":"boolean","default":true,"description":"Enables moving to the next cell when clicking on a 'Run Cell' code lens.","scope":"resource"},"jupyter.allowUnauthorizedRemoteConnection":{"type":"boolean","default":false,"description":"Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers."},"jupyter.interactiveWindow.codeLens.commands":{"type":"string","default":"jupyter.runcell, jupyter.runallcellsabove, jupyter.debugcell","description":"Set of commands to put as code lens above a cell.","scope":"resource"},"jupyter.interactiveWindow.codeLens.debugCommands":{"type":"string","default":"jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover","description":"Set of debug commands to put as code lens above a cell while debugging.","scope":"resource"},"jupyter.debugpyDistPath":{"type":"string","default":"","description":"Path to debugpy bits for debugging cells.","scope":"resource"},"jupyter.stopOnFirstLineWhileDebugging":{"type":"boolean","default":true,"description":"When debugging a cell, stop on the first line.","scope":"resource"},"jupyter.disableJupyterAutoStart":{"type":"boolean","default":false,"description":"When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter."},"jupyter.interactiveWindow.codeLens.enableGotoCell":{"type":"boolean","default":true,"description":"After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.","scope":"resource"},"jupyter.kernels.excludePythonEnvironments":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"List of Python environments to be excluded from the Kernel picker.","scope":"machine-overridable","examples":[["~/miniconda3/envs/tf/scripts/python.exe","~/miniconda3/envs/ds"]]},"jupyter.kernels.trusted":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Enter fully qualified paths to Kernel specification files that are to be trusted. E.g. 'C:\\Program Data\\Jupyter\\kernels\\python3\\kernel.json'.  \n**Note**: Kernels can execute code with user privileges. Click [here](https://aka.ms/JupyterTrustedKernelPaths) for further details.","scope":"machine"},"jupyter.interactiveWindow.creationMode":{"type":"string","enum":["perFile","single","multiple"],"scope":"resource","description":"Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.","default":"multiple"},"jupyter.interactiveWindow.notebookRepl":{"type":"boolean","default":false,"description":"Experimental. The interactive window will use a notebook as the editor model.","tags":["experimental","onExP"]},"jupyter.interactiveWindow.textEditor.cellFolding":{"type":"boolean","default":true,"description":"Enable folding regions for code cells in Python files. This setting requires a reload of VS Code.","scope":"resource"},"jupyter.interactiveWindow.viewColumn":{"type":"string","enum":["beside","active","secondGroup"],"scope":"resource","description":"Where to open an Interactive Window that is not associated with a python file. 'beside' will open the interactive window to the right of the active editor. 'active' will open the interactive window in place of the active editor. 'secondGroup' will open the interactive window in the second editor group.","default":"secondGroup"},"jupyter.interactiveWindow.textEditor.magicCommandsAsComments":{"type":"boolean","default":false,"description":"Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells."},"jupyter.pythonExportMethod":{"type":"string","enum":["direct","commentMagics","nbconvert"],"default":"direct","description":"The method to use when exporting a notebook to a Python file. 'direct' will copy over the code directly as is. 'commentMagics' will comment out lines starting with line magics (%), cell magics (%%), and shell commands(!). 'nbconvert' will install nbconvert and use that for the conversion which can translate iPython syntax into Python syntax.","scope":"application"},"jupyter.runStartupCommands":{"type":"array","default":"","description":"A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever a Jupyter kernel is started or restarted. For instance, set this to '%load_ext autoreload\n%autoreload 2' to automatically reload changes made to imported files without having to restart the Jupyter Kernel.","scope":"application"},"jupyter.debugJustMyCode":{"type":"boolean","default":true,"description":"When debugging, only step through user-written code. Disable this to allow stepping into library code.","scope":"resource"},"jupyter.showOutlineButtonInNotebookToolbar":{"type":"boolean","default":true,"description":"Show the Outline button in the Jupyter notebook toolbar."},"jupyter.interactiveWindow.textEditor.autoAddNewCell":{"type":"boolean","default":true,"description":"Append a new empty cell to an interactive window file on running the currently last cell.","scope":"resource"},"jupyter.pythonCompletionTriggerCharacters":{"type":"string","default":".%'\"","deprecationMessage":"This setting has been deprecated in favor of jupyter.completionTriggerCharacters.","description":"Characters which trigger auto completion on a python jupyter kernel.","scope":"application"},"jupyter.logKernelOutputSeparately":{"type":"boolean","default":false,"description":"Creates separate output panels for kernels/jupyter server console output"},"jupyter.excludeUserSitePackages":{"type":"boolean","default":false,"description":"Add PYTHONNOUSERSITE to kernels before starting. This prevents global/user site-packages from being used in the PYTHONPATH of the kernel.","scope":"application"},"jupyter.enableExtendedKernelCompletions":{"type":"boolean","default":false,"deprecationMessage":"This setting has been deprecated in favor of jupyter.enableExtendedPythonKernelCompletions.","markdownDescription":"Enables Jedi support for extended IntelliSense completions in running Python Jupyter kernels for Python (see this [setting](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). This can greatly impact notebook cell execution performance. Use with caution.","scope":"application"},"jupyter.enableExtendedPythonKernelCompletions":{"type":"boolean","default":false,"markdownDescription":"Enables Jedi support for extended IntelliSense completions in running Python Jupyter kernels for Python (see this [setting](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). This can greatly impact notebook cell execution performance. Use with caution.","scope":"application"},"jupyter.executionAnalysis.enabled":{"type":"boolean","default":false,"description":"Experimental feature to enable execution analysis in notebooks","scope":"application","tags":["experimental"]},"jupyter.enableKernelCompletions":{"type":"boolean","default":true,"markdownDescription":"Enable code completions in Notebooks and Interactive Windows using results from the associated Jupyter Kernel.","scope":"application"},"jupyter.formatStackTraces":{"type":"boolean","default":false,"description":"Inject stack frame links into the stored traceback for the notebook.","deprecationMessage":"This setting has been deprecated and will be removed in a future release.","scope":"application"},"jupyter.completionTriggerCharacters":{"type":"object","patternProperties":{"^[A-Za-z_][A-Za-z0-9]*":{"type":"array","items":{"type":"string"}}},"default":{"bash":["$","{"],"java":[".","@","#"],"javascript":[".","\"","'","/","@"],"python":[".","%","'","\""],"julia":["."],"r":["[","(",",","$","@","\"","'"],"rust":[".",":"],"scala":["."],"typescript":[".","\"","'","/","@","<"]},"markdownDescription":"Mapping of characters which trigger auto completion in a Jupyter Kernel language. Following is an example of trigger characters for rust and julia kernel languages:\n```json \n{\n  \"julia\": [\".\"],\n  \"rust\": [\".\",\":\"] \n}\n```","scope":"application","examples":[{"bash":["$","{"]},{"java":[".","@","#"]},{"javascript":[".","\"","'","/","@"]},{"julia":["."]},{"typescript":[".","\"","'","/","@","<"]},{"r":["[","(",",","$","@","\"","'"]},{"rust":[".",":"]},{"scala":["."]},{"xonsh":[" ",".","%","'","\""]}]}}},"languages":[{"id":"raw"},{"id":"julia","aliases":["Julia","julia"],"extensions":[".jl"]}],"notebookPreload":[{"type":"jupyter-notebook","localResourceRoots":["./temp"],"entrypoint":"./dist/webviews/webview-side/ipywidgetsKernel/ipywidgetsKernel.js"},{"type":"interactive","localResourceRoots":["./temp"],"entrypoint":"./dist/webviews/webview-side/ipywidgetsKernel/ipywidgetsKernel.js"}],"notebookRenderer":[{"id":"jupyter-ipywidget-renderer","entrypoint":"./dist/webviews/webview-side/ipywidgetsRenderer/ipywidgetsRenderer.js","displayName":"Jupyter IPyWidget Renderer","mimeTypes":["application/vnd.jupyter.widget-view+json"],"requiresMessaging":"always"}],"viewsContainers":{"activitybar":[{"id":"jupyter","title":"Jupyter","icon":"$(notebook)"}],"panel":[{"id":"jupyter-variables","title":"Jupyter","icon":"$(notebook)"}]},"views":{"jupyter-variables":[{"type":"webview","id":"jupyterViewVariables","name":"Jupyter Variables","when":"jupyter.hasNativeNotebookOrInteractiveWindowOpen"}]},"debuggers":[{"type":"Python Kernel Debug Adapter","label":"Python Kernel Debug Adapter"},{"type":"Python Interactive Window Debug Adapter","label":"Python Interactive Window"}],"jupyterVariableViewers":[{"command":"jupyter.showJupyterDataViewer","title":"View Value in Data Viewer","dataTypes":["DataFrame","list","dict","ndarray","Series","Tensor","EagerTensor","DataArray"]}]},"enabledApiProposals":["notebookDeprecated","notebookMessaging","notebookMime","contribNotebookStaticPreloads","portsAttributes","quickPickSortByLabel","notebookKernelSource","interactiveWindow","quickPickItemTooltip","notebookExecution","notebookCellExecution","notebookVariableProvider","notebookReplDocument"],"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-toolsai-jupyter-insiders.vsix","packagePreRelease":"gulp clean && gulp prePublishBundle && vsce package --pre-release -o ms-toolsai-jupyter-insiders.vsix","prePublishBundleStable":"cross-env IS_PRE_RELEASE_VERSION_OF_JUPYTER_EXTENSION=false gulp prePublishBundle","prePublishBundlePreRelease":"cross-env IS_PRE_RELEASE_VERSION_OF_JUPYTER_EXTENSION=true gulp prePublishBundle","createNycFolder":"gulp createNycFolder","validateTranslationFiles":"gulp validateTranslationFiles","preprePublishBundle":"gulp clean","prePublishBundle":"concurrently npm:compile-release npm:updatePackageJsonForBundle","preprePublishNonBundle":"gulp clean","updatePackageJsonForBundle":"gulp updatePackageJsonForBundle","prePublishNonBundle":"concurrently npm:compile-out npm:esbuild-all","compile":"concurrently \"tsc -watch -p ./\" \"npx tsx build/esbuild/build.ts --watch\"","compile-esbuild-watch":"npx tsx build/esbuild/build.ts --watch","compile-tsc-watch":"tsc -p . -watch","compile-watch-all":"concurrently \"tsc -watch -p ./\" \"npx tsx build/esbuild/build.ts --watch-all\"","compile-out":"tsc -p ./","compile-web-test":"webpack --mode development --config ./build/webpack/webpack.extension.web.config.js","compile-web-test-watch":"webpack --mode development --config ./build/webpack/webpack.extension.web.config.js --stats-error-details --watch --progress","compile-release":"concurrently npm:compile-out npm:esbuild-release","esbuild-all":"npx tsx build/esbuild/build.ts","esbuild-release":"npx tsx build/esbuild/build.ts --production","checkDependencies":"gulp checkDependencies","postinstall":"npm run download-api && node ./build/ci/postInstall.js","test:unittests":"mocha --config ./build/.mocha.unittests.js.json ./out/**/*.unit.test.js","test:cover:report":"nyc report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_JUPYTER_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js && node ./out/test/languageServers/jedi/lspTeardown.node.js","pretestNativeNotebooksInVSCode":"cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testNativeNotebooksInVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","pretestPerfInVSCode":"cross-env VSC_JUPYTER_CI_TEST_GREP=@notebookPerformance VSC_JUPYTER_CI_TEST_DO_NOT_INSTALL_PYTHON_EXT=true VSC_JUPYTER_PERF_TEST=1 VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testPerfInVSCode":"cross-env VSC_JUPYTER_CI_TEST_GREP=@notebookPerformance VSC_JUPYTER_CI_TEST_DO_NOT_INSTALL_PYTHON_EXT=true VSC_JUPYTER_NOTEBOOK_PERF_TEST=true VSC_JUPYTER_PERF_TEST=1 CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","pretestExecPerfInVSCode":"cross-env VSC_JUPYTER_CI_TEST_GREP=@executionPerformance VSC_JUPYTER_PERF_TEST=1 VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testExecPerfInVSCode":"cross-env VSC_JUPYTER_CI_TEST_GREP=@executionPerformance VSC_JUPYTER_PERF_TEST=1 CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING= node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","testNativeNotebooksInVSCodeWithoutTestSuffix":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_FORCE_LOGGING=1 node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","pretestNativeNotebooksWithoutPythonInVSCode":"cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testNativeNotebooksWithoutPythonInVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_CI_TEST_GREP=@nonPython VSC_JUPYTER_CI_TEST_DO_NOT_INSTALL_PYTHON_EXT=true node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","testNativeNotebooksAndWebviews":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_CI_TEST_GREP=webview-test node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","testWebExtension":"node ./build/launchWebTest.js","launchWebExtension":"node ./build/launchWeb.js","testSmoke":"node ./out/test/testBootstrap.node.js ./out/test/smokeTest.node.js","testSmokeLogged":"cross-env VSC_JUPYTER_FORCE_LOGGING=true node --no-force-async-hooks-checks ./out/test/testBootstrap.node.js ./out/test/smokeTest.node.js","lint":"eslint --ext .ts,.js src","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format":"prettier --write *.js *.json 'src/**/*.ts*' 'build/**/*.js' '.github/**/*.yml' 'build/**/*.yml' 'build/**/*.ts' 'build/**/*.json' gulpfile.js","format-check":"prettier --check *.js *.json 'src/**/*.ts*' 'build/**/*.js' '.github/**/*.yml' 'build/**/*.yml' 'build/**/*.ts' 'build/**/*.json' gulpfile.js","clean":"gulp clean","webpack":"webpack","download-api":"npx vscode-dts dev","postdownload-api":"npx vscode-dts main","generateTelemetry":"gulp generateTelemetry","openInBrowser":"vscode-test-web --extensionDevelopmentPath=. ./src/test/datascience","startJupyterServer":"node build/preDebugWebTest.js","stopJupyterServer":"node build/postDebugWebTest.js","validateTelemetry":"gulp validateTelemetry","verifyUnhandledErrors":"gulp verifyUnhandledErrors","printTestResults":"gulp printTestResults","setup-precommit-hook":"husky install"},"dependencies":{"@c4312/evt":"^0.1.1","@enonic/fnv-plus":"^1.3.0","@jupyter-widgets/base":"^6.0.8","@jupyter-widgets/controls":"^5.0.9","@jupyter-widgets/schema":"^0.5.5","@jupyterlab/coreutils":"^6.2.4","@jupyterlab/nbformat":"^4.2.4","@jupyterlab/services":"^7.2.4","@lumino/widgets":"^2.4.0","@nteract/messaging":"^7.0.0","@vscode/extension-telemetry":"^0.7.7","@vscode/python-extension":"^1.0.4","ajv-keywords":"^3.5.2","ansi-to-html":"^0.6.7","bootstrap":"^5.0.0","bootstrap-less":"^3.3.8","cross-fetch":"^3.1.5","decompress-response":"^4.2.0","encoding":"^0.1.13","fast-deep-equal":"^2.0.1","format-util":"^1.0.5","fs-extra":"^4.0.3","glob":"^7.1.2","iconv-lite":"^0.6.3","inversify":"^6.0.1","isomorphic-ws":"^4.0.1","jquery":"^3.6.0","jsonc-parser":"^2.0.3","lodash":"^4.17.21","marked":"^4.0.10","node-fetch":"^2.6.7","node-gyp-build":"^4.6.0","node-stream-zip":"^1.6.0","pdfkit":"^0.13.0","pidtree":"^0.6.0","portfinder":"^1.0.25","re-resizable":"~6.5.5","react":"^16.5.2","react-data-grid":"^6.0.2-0","react-dom":"^16.5.2","react-redux":"^7.1.1","react-svg-pan-zoom":"3.9.0","react-svgmt":"1.1.11","react-virtualized":"^9.21.1","redux":"^4.0.4","redux-logger":"^3.0.6","reflect-metadata":"^0.1.12","safe-buffer":"^5.2.1","sanitize-filename":"^1.6.3","semver":"^5.7.2","slickgrid":"^2.4.17","stack-trace":"0.0.10","string-argv":"^0.3.1","strip-comments":"^2.0.1","styled-components":"^5.2.1","sudo-prompt":"^9.2.1","svg-to-pdfkit":"^0.1.8","tcp-port-used":"^1.0.1","tmp":"^0.0.29","uint64be":"^1.0.1","underscore":"^1.12.1","url-parse":"^1.5.10","uuid":"^3.3.2","vscode-debugprotocol":"^1.41.0","vscode-languageclient":"8.0.2-next.5","vscode-tas-client":"^0.1.84","ws":"^6.2.3","zeromq":"^6.0.0-beta.16","zeromqold":"npm:zeromq@^6.0.0-beta.6"},"devDependencies":{"@actions/core":"^1.9.1","@actions/github":"^4.0.0","@actions/glob":"^0.3.0","@babel/polyfill":"^7.4.4","@istanbuljs/nyc-config-typescript":"^1.0.2","@sinonjs/fake-timers":"^6.0.1","@types/ansi-regex":"^4.0.0","@types/chai":"^4.3.6","@types/chai-arrays":"^2.0.1","@types/chai-as-promised":"^7.1.6","@types/cors":"^2.8.6","@types/debug":"^4.1.5","@types/dedent":"^0.7.0","@types/del":"^4.0.0","@types/event-stream":"^3.3.33","@types/format-util":"^1.0.2","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/json2csv":"^5.0.3","@types/loadable__component":"^5.10.0","@types/loader-utils":"^1.1.3","@types/lodash":"^4.14.104","@types/memoize-one":"^4.1.1","@types/mocha":"^10.0.10","@types/nock":"^10.0.3","@types/node":"^20.17.0","@types/node-fetch":"^2.5.7","@types/pdfkit":"^0.11.0","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/react-redux":"^7.1.5","@types/react-virtualized":"^9.21.2","@types/redux-logger":"^3.0.7","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^10.0.15","@types/sinonjs__fake-timers":"^6.0.1","@types/stack-trace":"0.0.29","@types/strip-comments":"^2.0.1","@types/svg-to-pdfkit":"^0.1.0","@types/tcp-port-used":"^1.0.0","@types/temp":"^0.8.32","@types/tmp":"^0.2.3","@types/url-parse":"^1.4.8","@types/uuid":"^3.4.3","@types/uuid-to-hex":"^1.1.0","@types/vscode-notebook-renderer":"^1.60.0","@types/webpack-env":"^1.18.1","@types/ws":"^6.0.1","@typescript-eslint/eslint-plugin":"^6.9.0","@typescript-eslint/eslint-plugin-tslint":"^6.9.0","@typescript-eslint/parser":"^6.9.0","@vscode/dts":"^0.4.0","@vscode/test-cli":"^0.0.8","@vscode/test-electron":"^2.3.9","@vscode/test-web":"^0.0.61","@vscode/zeromq":"^0.2.3","acorn":"^8.9.0","babel-polyfill":"^6.26.0","buffer":"^6.0.3","bufferutil":"^4.0.6","chai":"^4.3.10","chai-arrays":"^2.2.0","chai-as-promised":"^7.1.1","chai-exclude":"^2.1.0","codecov":"^3.7.1","colors":"^1.4.0","concurrently":"^8.2.2","cross-env":"^7.0.3","css-loader":"^6.8.1","dedent":"^0.7.0","del":"^3.0.0","es-abstract":"^1.19.1","es5-ext":"^0.10.63","esbuild":"^0.19.4","esbuild-plugin-less":"^1.3.1","eslint":"^8.52.0","eslint-config-airbnb":"^19.0.4","eslint-config-prettier":"^9.0.0","eslint-plugin-header":"^3.1.1","eslint-plugin-import":"^2.29.0","eslint-plugin-jsdoc":"^46.8.2","eslint-plugin-jsx-a11y":"^6.7.1","eslint-plugin-local-rules":"file:build/eslint-rules","eslint-plugin-no-null":"^1.0.2","eslint-plugin-no-only-tests":"^3.1.0","eslint-plugin-prefer-arrow":"^1.2.3","eslint-plugin-prettier":"^5.0.1","eslint-plugin-react":"^7.33.2","eslint-plugin-react-hooks":"^4.6.0","expose-loader":"^4.1.0","flat":"^5.0.1","get-port":"^3.2.0","glob-parent":"^6.0.2","gulp":"^5.0.0","gulp-filter":"^7.0.0","gulp-rename":"^2.0.0","husky":"^8.0.3","json2csv":"^5.0.7","jsonschema":"^1.4.1","keyv":"^4.1.0","less":"^4.1.3","less-loader":"^11.1.3","less-plugin-inline-urls":"^1.2.0","lolex":"^6.0.0","lru-cache":"^10.0.0","mocha":"^11.0.1","mocha-junit-reporter":"^2.2.0","mocha-multi-reporters":"^1.5.1","nock":"^13.3.1","node-has-native-dependencies":"^1.0.2","node-html-parser":"^6.1.13","node-polyfill-webpack-plugin":"^4.0.0","nyc":"^15.1.0","popper.js":"^1.16.1","postcss":"^8.4.49","postcss-import":"^15.1.0","postcss-loader":"^7.3.3","postcss-preset-env":"^8.5.1","prettier":"^3.0.0","relative":"^3.0.2","rimraf":"^5.0.1","screenshot-desktop":"^1.14.0","sinon":"^15.2.0","source-map":"^0.7.4","source-map-support":"^0.5.21","style-loader":"^3.3.3","svg-inline-loader":"^0.8.2","thread-loader":"^4.0.2","transform-loader":"^0.2.4","ts-loader":"^9.2.8","ts-mock-imports":"^1.3.0","ts-mockito":"^2.6.1","tsconfig-paths-webpack-plugin":"^3.2.0","tsx":"^3.13.0","typemoq":"^2.1.0","typescript":"^5.7.2","unicode-properties":"^1.3.1","utf-8-validate":"^5.0.8","util":"^0.12.4","uuid-to-hex":"^1.1.1","webpack":"^5.94.0","webpack-cli":"^5.1.4"},"optionalDependencies":{"fsevents":"^2.3.2"},"overrides":{"json5":"2.2.2","string_decoder":"1.3.0","simple-get@<3.1.1":"3.1.1","validator@<13.7.0":"13.7.0","word-wrap@<1.2.5":"1.2.5","jpeg-js@<0.4.4":"0.4.4","playwright-core":{"jpeg-js":"0.4.4"},"terser@<5.14.2":"5.14.2","glob-parent@<5.1.2":"5.1.2","jquery-ui@<1.13.2":"1.13.2","@jupyterlab/coreutils":{"url-parse":"$url-parse"},"@jupyterlab/services":{"ws":"7.5.10"},"d3-color":"3.1.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-toolsai.jupyter-2025.3.0-darwin-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ms-toolsai","metadata":{"installedTimestamp":1746046216526,"source":"gallery","id":"6c2f1801-1e7f-45b2-9b5c-7782f1e076e8","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"ms-toolsai","targetPlatform":"universal","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"pinned":false,"preRelease":false,"size":17912005},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-toolsai.datawrangler","uuid":"de3960e6-b262-4565-8a1c-9870629f1ed9"},"manifest":{"private":true,"name":"datawrangler","displayName":"Data Wrangler","version":"1.20.1","description":"Data viewing, cleaning and preparation for tabular datasets","publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","homepage":"https://github.com/microsoft/vscode-data-wrangler","bugs":{"url":"https://github.com/microsoft/vscode-data-wrangler/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode-data-wrangler"},"galleryBanner":{"color":"#ffffff","theme":"light"},"engines":{"vscode":"^1.82.0"},"keywords":["jupyterVariableViewers","data","data quality","data viewer","data editor","data import","data export","ETL","Data Science","data cleaning","data cleansing","data wrangling","data visualization","data analysis","data exploration","data summary","data transformation","data prep","data preparation","Exploratory Data Analysis","EDA","Business Intelligence","insights","graphs","charts","plots","visualization","Jupyter","Jupyter Notebook","csv","tsv","parquet","power query","Stata","Excel","xls","xlsx","jsonl","dataset","DataFrame","data frame","data table","table","grid","spreadsheet","python","numpy","pandas","code generation","code generator"],"categories":["Data Science","Machine Learning"],"activationEvents":["onNotebook:jupyter-notebook","onNotebook:interactive","onLanguage:python"],"main":"./out/extension","browser":"./out/extension.web.bundle","l10n":"./l10n","enabledApiProposals":[],"icon":"media/icon_128.png","contributes":{"jupyterVariableViewers":[{"command":"dataWrangler.launchDataViewer","title":"Launch in Data Wrangler","dataTypes":["DataFrame","list","dict","ndarray","Series","Tensor","EagerTensor","DataArray"]}],"languages":[{"id":"data-wrangler","extensions":["- Data Wrangler","[DW]"],"icon":{"light":"media/icon_128.png","dark":"media/icon_128.png"}}],"icons":{"data-wrangler":{"description":"Data Wrangler icon","default":{"fontPath":"media/iconfont.woff","fontCharacter":"D"}}},"keybindings":[{"command":"dataWrangler.undoOperation","key":"ctrl+z","mac":"cmd+z","when":"dataWrangler.canUndoOperation && dataWrangler.dataWranglerActive && dataWrangler.focusedElementAllowsShortcuts && !inputFocus && isWorkspaceTrusted"},{"command":"dataWrangler.applyOperation","key":"shift+enter","when":"dataWrangler.canApplyOperation && dataWrangler.dataWranglerActive && dataWrangler.focusedElementAllowsShortcuts && !inputFocus && isWorkspaceTrusted"},{"command":"dataWrangler.discardOperation","key":"escape","when":"dataWrangler.canDiscardOperation && dataWrangler.dataWranglerActive && dataWrangler.focusedElementAllowsShortcuts && !inputFocus && isWorkspaceTrusted"},{"command":"dataWrangler.revealNL2CodeWidget","key":"ctrl+i","mac":"cmd+i","when":"dataWrangler.canRevealNL2CodeWidget && dataWrangler.dataWranglerActive && dataWrangler.focusedElementAllowsShortcuts && !inputFocus && isWorkspaceTrusted"}],"commands":[{"command":"dataWrangler.reportIssue","title":"Report issue","category":"Data Wrangler","enablement":"(dataWrangler.dataWranglerActive || dataWrangler.dataViewerActive || dataWrangler.outputRendererActive) && isWorkspaceTrusted"},{"command":"dataWrangler.clearCachedKernel","title":"Clear cached runtime","category":"Data Wrangler","enablement":"isWorkspaceTrusted"},{"command":"dataWrangler.changeKernel","title":"Change selected runtime","category":"Data Wrangler","enablement":"dataWrangler.dataWranglerActive && isWorkspaceTrusted"},{"command":"dataWrangler.openInDataWrangler","title":"Open in Data Wrangler","icon":"$(data-wrangler)","category":"Data Wrangler","enablement":"isWorkspaceTrusted"},{"command":"dataWrangler.applyOperation","title":"Apply step","category":"Data Wrangler","enablement":"dataWrangler.canApplyOperation && dataWrangler.dataWranglerActive && isWorkspaceTrusted"},{"command":"dataWrangler.discardOperation","title":"Discard step","category":"Data Wrangler","enablement":"dataWrangler.canDiscardOperation && dataWrangler.dataWranglerActive && isWorkspaceTrusted"},{"command":"dataWrangler.previewOperation","title":"Perform operation","category":"Data Wrangler","enablement":"dataWrangler.canPreviewOperation && dataWrangler.dataWranglerActive && isWorkspaceTrusted"},{"command":"dataWrangler.undoOperation","title":"Undo step","category":"Data Wrangler","enablement":"dataWrangler.canUndoOperation && dataWrangler.dataWranglerActive && isWorkspaceTrusted"},{"command":"dataWrangler.runPerformanceTests","title":"Run performance tests","category":"Data Wrangler","enablement":"!isWeb && isWorkspaceTrusted && config.dataWrangler.debug"},{"command":"dataWrangler.showTelemetryData","title":"Show telemetry data","category":"Data Wrangler","enablement":"(dataWrangler.dataWranglerActive || dataWrangler.dataViewerActive) && isWorkspaceTrusted && config.dataWrangler.debug"},{"command":"dataWrangler.openSettings","title":"Data Wrangler Settings","category":"Data Wrangler","icon":"$(settings-gear)"},{"command":"dataWrangler.openExperiments","title":"Data Wrangler Experiments","category":"Data Wrangler","icon":"$(beaker)"},{"command":"dataWrangler.openFile","title":"Open File","category":"Data Wrangler","enablement":"!isWeb"},{"command":"dataWrangler.walkthroughCsv","title":"Open Walkthrough CSV file","category":"Data Wrangler","enablement":"!isWeb"},{"command":"dataWrangler.openWalkthrough","title":"Open Walkthrough","category":"Data Wrangler","icon":"$(book)"},{"command":"dataWrangler.revealSourceFileInFileExplorer","title":"Reveal Source File in Explorer View","category":"Data Wrangler","enablement":"(dataWrangler.dataWranglerActive || dataWrangler.dataViewerActive) && isWorkspaceTrusted"},{"command":"dataWrangler.openNotebookVariable","title":"View data","category":"Data Wrangler","enablement":"notebookKernel =~ /^ms-toolsai.jupyter\\// && isWorkspaceTrusted","icon":"$(data-wrangler)"},{"command":"dataWrangler.dataViewerClearSorts","title":"Clear sorts","category":"Data Wrangler","enablement":"dataWrangler.dataViewerActive && isWorkspaceTrusted","icon":"$(trash)"},{"command":"dataWrangler.dataViewerClearFilters","title":"Clear filters","category":"Data Wrangler","enablement":"dataWrangler.dataViewerActive && isWorkspaceTrusted","icon":"$(trash)"},{"command":"dataWrangler.openSourceFileInBasicEditor","title":"Open Source File in Basic Editor","category":"Data Wrangler","enablement":"(dataWrangler.dataWranglerActive || dataWrangler.dataViewerActive) && dataWrangler.isSessionFromFile && isWorkspaceTrusted","icon":"$(go-to-file)"}],"customEditors":[{"viewType":"jupyter-data-wrangler","displayName":"Data Wrangler","selector":[{"filenamePattern":"{*.csv,*.tsv,*.parquet,*.xls,*.xlsx,*.jsonl}"}],"priority":"option"}],"notebookRenderer":[{"id":"microsoft.datawrangler-renderer","entrypoint":"./out/notebookOutputRenderer.bundle.js","displayName":"Data Wrangler renderer","mimeTypes":["application/vnd.microsoft.datawrangler.viewer.v0+json"],"requiresMessaging":"always","dependencies":[]}],"views":{"data-wrangler-primary":[{"type":"webview","id":"jupyter-data-wrangler-operations-view","name":"Operations","when":"dataWrangler.dataWranglerActive && isWorkspaceTrusted"},{"type":"webview","id":"jupyter-data-wrangler-summary-view","name":"Data summary","when":"(dataWrangler.dataWranglerActive || dataWrangler.dataViewerActive) && isWorkspaceTrusted"},{"type":"webview","id":"jupyter-data-wrangler-cleaning-steps-view","name":"Cleaning steps","when":"dataWrangler.dataWranglerActive && isWorkspaceTrusted"},{"type":"webview","id":"data-viewer-filters-view","name":"Filters","visibility":"collapsed","when":"dataWrangler.dataViewerActive && isWorkspaceTrusted"},{"type":"webview","id":"data-viewer-sorts-view","name":"Sorts","visibility":"collapsed","when":"dataWrangler.dataViewerActive && isWorkspaceTrusted"}],"data-wrangler-secondary":[{"type":"webview","id":"jupyter-data-wrangler-code-preview-view","name":"Code preview","when":"dataWrangler.dataWranglerActive && isWorkspaceTrusted"}]},"viewsContainers":{"activitybar":[{"id":"data-wrangler-primary","title":"Data Wrangler","icon":"$(data-wrangler)"}],"panel":[{"id":"data-wrangler-secondary","title":"Data Wrangler","icon":"$(data-wrangler)"}]},"menus":{"commandPalette":[{"command":"dataWrangler.openInDataWrangler","when":"!isWeb && ((resourceExtname == .csv && config.dataWrangler.enabledFileTypes.csv) || (resourceExtname == .tsv && config.dataWrangler.enabledFileTypes.tsv) || (resourceExtname == .parquet && config.dataWrangler.enabledFileTypes.parquet) || (resourceExtname == .xlsx && config.dataWrangler.enabledFileTypes.xlsx) || (resourceExtname == .xls && config.dataWrangler.enabledFileTypes.xls) || (resourceExtname == .jsonl && config.dataWrangler.enabledFileTypes.jsonl))","group":"navigation"},{"command":"dataWrangler.runPerformanceTests"}],"editor/title":[{"command":"dataWrangler.openInDataWrangler","when":"!isWeb && ((resourceExtname == .csv && config.dataWrangler.enabledFileTypes.csv) || (resourceExtname == .tsv && config.dataWrangler.enabledFileTypes.tsv) || (resourceExtname == .parquet && config.dataWrangler.enabledFileTypes.parquet) || (resourceExtname == .xlsx && config.dataWrangler.enabledFileTypes.xlsx) || (resourceExtname == .xls && config.dataWrangler.enabledFileTypes.xls)  || (resourceExtname == .jsonl && config.dataWrangler.enabledFileTypes.jsonl))","group":"navigation"},{"command":"dataWrangler.openSourceFileInBasicEditor","when":"(dataWrangler.dataWranglerActive || dataWrangler.dataViewerActive) && dataWrangler.isSessionFromFile","group":"navigation"},{"command":"dataWrangler.openWalkthrough","group":"navigation@1","when":"dataWrangler.dataWranglerActive || dataWrangler.dataViewerActive"},{"command":"dataWrangler.openSettings","group":"navigation@2","when":"dataWrangler.dataWranglerActive || dataWrangler.dataViewerActive"},{"command":"dataWrangler.openExperiments","group":"navigation@3","when":"dataWrangler.dataWranglerActive || dataWrangler.dataViewerActive"}],"editor/title/context":[{"command":"dataWrangler.openInDataWrangler","when":"!isWeb && ((resourceExtname == .csv && config.dataWrangler.enabledFileTypes.csv) || (resourceExtname == .tsv && config.dataWrangler.enabledFileTypes.tsv) || (resourceExtname == .parquet && config.dataWrangler.enabledFileTypes.parquet) || (resourceExtname == .xlsx && config.dataWrangler.enabledFileTypes.xlsx) || (resourceExtname == .xls && config.dataWrangler.enabledFileTypes.xls) || (resourceExtname == .jsonl && config.dataWrangler.enabledFileTypes.jsonl))","group":"navigation"}],"explorer/context":[{"command":"dataWrangler.openInDataWrangler","when":"!isWeb && ((resourceExtname == .csv && config.dataWrangler.enabledFileTypes.csv) || (resourceExtname == .tsv && config.dataWrangler.enabledFileTypes.tsv) || (resourceExtname == .parquet && config.dataWrangler.enabledFileTypes.parquet) || (resourceExtname == .xlsx && config.dataWrangler.enabledFileTypes.xlsx) || (resourceExtname == .xls && config.dataWrangler.enabledFileTypes.xls) || (resourceExtname == .jsonl && config.dataWrangler.enabledFileTypes.jsonl))","group":"navigation"}],"notebook/toolbar":[{"command":"dataWrangler.openNotebookVariable","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.ispythonnotebook && jupyter.kernel.isjupyter","group":"navigation"}],"interactive/toolbar":[{"command":"dataWrangler.openNotebookVariable","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel","group":"navigation"}],"view/title":[{"command":"dataWrangler.dataViewerClearSorts","when":"view == data-viewer-sorts-view"},{"command":"dataWrangler.dataViewerClearFilters","when":"view == data-viewer-filters-view"}]},"configuration":[{"type":"object","title":"Data Wrangler","properties":{"dataWrangler.startInEditModeForNotebookEntrypoints":{"type":"boolean","default":false,"description":"Opens data directly in editing mode when entering from a Jupyter notebook file."},"dataWrangler.columnInsights.displayOnOpen":{"type":"boolean","default":true,"description":"Whether to display the column insights the moment a dataset is loaded."},"dataWrangler.useRelativePath":{"type":"boolean","default":false,"description":"Enable path resolution for local files relative to the root directory of the connection. Note that this setting only applies to local interpreter connections."},"dataWrangler.debug":{"type":"boolean","default":false,"description":"Enable debugging features for troubleshooting the Data Wrangler extension."},"dataWrangler.enabledFileTypes":{"type":"object","additionalProperties":false,"properties":{"csv":{"type":"boolean","description":"Comma-separated values"},"tsv":{"type":"boolean","description":"Tab-separated values"},"parquet":{"type":"boolean","description":"Apache Parquet"},"xlsx":{"type":"boolean","description":"Excel workbook"},"xls":{"type":"boolean","description":"Excel 97-2003 workbook"},"jsonl":{"type":"boolean","description":"JSON Lines"}},"default":{"csv":true,"tsv":true,"parquet":true,"xlsx":true,"xls":true,"jsonl":false},"description":"File extensions to offer to open with Data Wrangler."},"dataWrangler.defaultViewingFilterOptions":{"type":"string","default":"basic","enum":["basic","advanced"],"enumItemLabels":["Basic mode","Advanced mode"],"description":"Default filter mode to use when in viewing mode."},"dataWrangler.grid.defaultColumnWidth":{"type":"integer","default":200,"minimum":80,"description":"The default width of a column in pixels."},"dataWrangler.panels.displayOnTabFocus":{"type":"boolean","default":true,"description":"Whether to reveal Data Wrangler panels when the tab is focused (either from launching or from tab switching). Note that some panels may still be shown if required, e.g., if an error occurs while loading.","tags":["experimental"]},"dataWrangler.outputRenderer.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable the Data Wrangler output viewer.","tags":["experimental","onExP"]},"dataWrangler.outputRenderer.columnInsights.displayByDefault":{"type":"boolean","default":false,"markdownDescription":"Display column insights immediately when the output viewer is shown (if insights are available).","tags":["experimental","onExP"]},"dataWrangler.outputRenderer.pagination.defaultSize":{"type":"number","default":10,"enum":[10,25,50],"markdownDescription":"Default page size for the output viewer.","tags":["experimental","onExP"]},"dataWrangler.outputRenderer.enabledTypes":{"type":"object","additionalProperties":false,"properties":{"pandas.core.frame.DataFrame":{"type":"boolean","description":"Pandas DataFrame"}},"default":{"pandas.core.frame.DataFrame":true},"markdownDescription":"Output types to show the custom Data Wrangler renderer.","tags":["experimental","onExP"]}}},{"title":"Experiments","properties":{"dataWrangler.experiments.fastCsvParsing":{"type":"boolean","default":false,"markdownDescription":"**Experimental** enable fast CSV parsing using the PyArrow engine. Requires the `pyarrow` package and `pandas>=1.4.0`. [Read more about PyArrow support in Pandas](https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#specifying-the-parser-engine).","tags":["experimental"]},"dataWrangler.experiments.autoDetectCsvDelimiter":{"type":"boolean","default":false,"markdownDescription":"**Experimental** automatically detect the delimiter when opening CSV files.","tags":["experimental"]},"dataWrangler.experiments.datatypes.pyspark":{"type":"boolean","default":false,"markdownDescription":"**Experimental** allow loading from PySpark DataFrame variables.","tags":["preview"]},"dataWrangler.experiments.copilot.enabled":{"type":"boolean","default":false,"markdownDescription":"**Experimental** enable Copilot powered features in Data Wrangler. Note that this feature requires both the [GitHub Copilot Chat VS Code extension](command:extension.open?%5B%22github.copilot-chat%22%5D) and having an active [Copilot Subscription](https://github.com/features/copilot).","tags":["preview","onExP"]}}}],"walkthroughs":[{"id":"dataWranglerWelcome","title":"Get started with Data Wrangler","description":"Start cleaning data with Pandas and Python in only a few steps.","when":"workspacePlatform != webworker","steps":[{"id":"openDataWrangler","title":"Step 1: Open Data Wrangler","description":"**From a Jupyter Notebook:** A button with the Data Wrangler logo should appear right above the output of code that displays dataframe, such as ``df.head()``. \n**From the file explorer of Visual Studio Code:** Right click a CSV file to open it with Data Wrangler.\n[Open file in Data Wrangler](command:dataWrangler.openFile)\n🔎 Check out our [docs](https://github.com/microsoft/vscode-data-wrangler) to learn more.","media":{"image":{"dark":"media/walkthrough/openDataWrangler-dark.svg","light":"media/walkthrough/openDataWrangler-light.svg","hc":"media/walkthrough/openDataWrangler-dark.svg","hcLight":"media/walkthrough/openDataWrangler-light.svg"},"altText":"Entrypoints to Data Wrangler"},"when":"!isWeb"},{"id":"openDataWrangler-web-variant","title":"Step 1: Open Data Wrangler","description":"**From a Jupyter Notebook:** A button with the Data Wrangler logo should appear right above the output of code that displays a dataframe, such as ``df.head()``. \n🔎 Check out our [docs](https://github.com/microsoft/vscode-data-wrangler) to learn more.","media":{"image":{"dark":"media/walkthrough/openDataWrangler-dark.svg","light":"media/walkthrough/openDataWrangler-light.svg","hc":"media/walkthrough/openDataWrangler-dark.svg","hcLight":"media/walkthrough/openDataWrangler-light.svg"},"altText":"Entrypoints to Data Wrangler"},"when":"isWeb"},{"id":"cleanDataUsingOperations","title":"Step 2: Clean data using operations","description":"Browse the list of built-in data cleaning operations or write your own using the code editor. The data grid will update with a live preview of what changed.\n🧪 **Tip:** Try out our [experiments](command:dataWrangler.openExperiments) to enable new features.","media":{"image":{"dark":"media/walkthrough/cleanDataUsingOperations-dark.svg","light":"media/walkthrough/cleanDataUsingOperations-light.svg","hc":"media/walkthrough/cleanDataUsingOperations-dark.svg","hcLight":"media/walkthrough/cleanDataUsingOperations-light.svg"},"altText":"Diff of a drop column operation"}},{"id":"applyYourChanges","title":"Step 3: Apply your changes","description":"✔ Review the generated code in the bottom code panel.\n✔ Apply the operation to add it to your list of cleaning steps.\n✔ Undo or edit your last operation in the \"Cleaning Steps\" panel.\n🔎 **Tip:** Try clicking \"Preview code for all steps\" in the Cleaning Steps panel.","media":{"image":{"dark":"media/walkthrough/applyYourChanges-dark.svg","light":"media/walkthrough/applyYourChanges-light.svg","hc":"media/walkthrough/applyYourChanges-dark.svg","hcLight":"media/walkthrough/applyYourChanges-light.svg"},"altText":"Operation committed"}},{"id":"exportYourCode","title":"Step 4: Export your code or data","description":"At the top, you'll find buttons to export all the code back to your notebook, create a script or save the clean data as a CSV.","media":{"image":{"dark":"media/walkthrough/exportYourCode-dark.svg","light":"media/walkthrough/exportYourCode-light.svg","hc":"media/walkthrough/exportYourCode-dark.svg","hcLight":"media/walkthrough/exportYourCode-light.svg"},"altText":"Export back to notebook"}},{"id":"openTitanicCSV","title":"Try with the Titanic dataset","description":"Try Data Wrangler with the Titanic dataset from Kaggle\n[Open the Titanic dataset](command:dataWrangler.walkthroughCsv)\n🔎 Check out our [docs](https://github.com/microsoft/vscode-data-wrangler) to learn more.","media":{"image":{"dark":"media/walkthrough/openTitanicCSV-dark.svg","light":"media/walkthrough/openTitanicCSV-light.svg","hc":"media/walkthrough/openTitanicCSV-dark.svg","hcLight":"media/walkthrough/openTitanicCSV-light.svg"},"altText":"Open the Titanic dataset"},"completionEvents":["onCommand:dataWrangler.walkthroughCsv"],"when":"!isWeb"}]}],"languageModelTools":[{"name":"get_variable_data","displayName":"Get variable data","modelDescription":"Get the data for a variable","inputSchema":{"type":"object","properties":{},"required":[]}}]},"scripts":{"build":"npm run build:extension && npm run build:extension-web && npm run build:webviews && npm run l10n:dev:en","build:extension":"webpack --config ./config/webpack.extension.config.dev.ts","build:extension-web":"webpack --config ./config/webpack.extension.web.config.dev.ts","build:webviews":"webpack --config ./config/webpack.webviews.config.dev.ts","build:watch":"concurrently \"npm:build:watch:*\"","build:watch:extension":"webpack --watch --config ./config/webpack.extension.config.dev.ts","build:watch:extension-web":"webpack --watch --config ./config/webpack.extension.web.config.dev.ts","build:watch:webviews":"webpack --watch --config ./config/webpack.webviews.config.dev.ts","build:dogfood":"npm run build:dogfood:extension && npm run build:dogfood:extension-web && npm run build:dogfood:webviews && npm run l10n:dev:en","build:dogfood:extension":"webpack --config ./config/webpack.extension.config.dogfood.ts","build:dogfood:extension-web":"webpack --config ./config/webpack.extension.web.config.dogfood.ts","build:dogfood:webviews":"webpack --config ./config/webpack.webviews.config.dogfood.ts","build:prod":"concurrently \"npm run build:prod:*\"","build:prod:extension":"webpack --config ./config/webpack.extension.config.prod.ts","build:prod:extension-web":"webpack --config ./config/webpack.extension.web.config.prod.ts","build:prod:webviews":"webpack --config ./config/webpack.webviews.config.prod.ts","build:vscode-test":"tsc --project tsconfig.test.json","build:watch:vscode-test":"tsc -w --project tsconfig.test.json --preserveWatchOutput","clean":"rimraf out","test:unit":"cross-env TRX_OUTPUT_NAME=test-unit.trx mocha ./**/*.unit.test.ts --reporter @dw/test-reporting/dist/mocha-reporter/index","test:component":"cross-env TRX_OUTPUT_NAME=test-component.trx mocha --require global-jsdom/register ./**/*.component.test.ts? --reporter @dw/test-reporting/dist/mocha-reporter/index","test:vscode":"cross-env TRX_OUTPUT_NAME=test-vscode.trx node ./out/src/test/runTest.js","test:vscode:web":"cross-env IS_WEB=true TRX_OUTPUT_NAME=test-vscode-web.trx node ./out/src/test/runTest.js","build-test:vscode:web":"npm run build:extension-web && npm run test:vscode:web","package":"vsce package --no-dependencies --out ../ms-toolsai-data-wrangler-insiders.vsix","ci:build":"npm run build && npm run build-webviews && npm run package","ci:test:e2e":"npm run build:vscode-test && npm run test:vscode","postinstall":"rimraf types/external && node ../build/postInstall.js","l10n:dev:en":"npx @vscode/l10n-dev export --outDir ./l10n ./src","l10n:dev:pseudo":"npm run l10n:dev:en && npx @vscode/l10n-dev generate-pseudo -o ./l10n/ ./l10n/bundle.l10n.json ./package.nls.json","l10n:dev:clean":"rimraf l10n && rimraf --glob package.nls.*.json","serve-web":"cross-env-shell \"http-server --cors -p 8000 --ssl -C $HOME/certs/localhost.pem -K $HOME/certs/localhost-key.pem\"","launch-web:test":"vscode-test-web --extensionDevelopmentPath=.","launch-web:vscode":"concurrently \"npm run serve-web\" \"opener https://vscode.dev\""},"extensionDependencies":[],"devDependencies":{"@dw/test-reporting":"^0.0.1-alpha.4","@svgr/webpack":"^7.0.0","@testing-library/react":"^13.4.0","@types/fs-extra":"^11.0.3","@types/lodash.clonedeep":"^4.5.8","@types/markdown-it":"^14.1.2","@types/mini-css-extract-plugin":"^2.5.1","@types/mocha":"^10.0.3","@types/node":"^18.19.50","@types/node-fetch":"^2.6.2","@types/react":"^18.0.27","@types/react-dom":"^18.0.10","@types/redux":"^3.6.0","@types/semver":"^7.5.4","@types/tcp-port-used":"^1.0.3","@types/tmp":"^0.2.5","@types/uuid":"^9.0.6","@types/vscode-notebook-renderer":"^1.72.0","@types/webpack":"^5.28.4","@types/webpack-node-externals":"^3.0.4","@types/ws":"8.5.4","@vscode/debugprotocol":"^1.64.0","@vscode/l10n-dev":"^0.0.35","@vscode/test-electron":"^2.3.8","@vscode/test-web":"^0.0.60","@vscode/vsce":"^2.19.0","assert":"^2.1.0","axe-core":"^4.9.1","colors":"^1.4.0","concurrently":"^7.6.0","copy-webpack-plugin":"^11.0.0","cross-env":"^7.0.3","css-loader":"^6.8.1","file-loader":"^6.2.0","glob":"^10.3.10","global-jsdom":"^8.8.0","http-server":"^14.1.1","ignore-styles":"^5.0.1","jsdom":"^22.1.0","mini-css-extract-plugin":"^2.6.1","mocha":"^10.2.0","node-fetch":"^3.2.10","opener":"^1.5.2","os-browserify":"^0.3.0","prettier":"^2.8.8","rimraf":"^4.4.0","sass":"^1.69.4","sass-loader":"^13.3.2","source-map-loader":"^3.0.2","stream-browserify":"^3.0.0","style-loader":"^3.3.3","ts-loader":"^9.4.2","ts-node":"^10.9.1","typescript":"^4.8.3","url-loader":"^4.1.1","vscode-dts":"^0.3.3","webpack":"^5.76.0","webpack-cli":"^4.10.0"},"dependencies":{"@azure-notebooks/shared-react-components":"0.1.0","@dw/components":"0.0.1-alpha.4","@dw/engines":"0.0.1-alpha.4","@dw/messaging":"0.0.1-alpha.4","@dw/orchestrator":"0.0.1-alpha.4","@dw/visualization-highcharts":"0.0.1-alpha.4","@fluentui/react":"^8.107.6","@jupyterlab/services":"^6.6.6","@nteract/monaco-editor":"^5.0.0","@vscode/codicons":"^0.0.36","@vscode/extension-telemetry":"^0.9.7","@vscode/l10n":"^0.0.18","@vscode/webview-ui-toolkit":"^1.1.0","fs-extra":"^11.1.1","inversify":"^6.0.2","lodash.clonedeep":"^4.5.0","markdown-it":"^14.1.0","portfinder":"^1.0.32","react":"^18.2.0","react-dom":"^18.2.0","reflect-metadata":"^0.1.13","semver":"^7.5.3","tcp-port-used":"^1.0.2","tmp":"^0.2.1","uuid":"^9.0.0","vscode-jsonrpc":"^8.1.0","vscode-tas-client":"^0.1.84","ws":"^8.17.1"},"overrides":{"json5":"^2.2.2"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-toolsai.datawrangler-1.20.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745949924857,"source":"gallery","id":"de3960e6-b262-4565-8a1c-9870629f1ed9","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":54927687},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"rust-lang.rust-analyzer","uuid":"06574cb4-e5dc-4631-8174-a543a4533621"},"manifest":{"name":"rust-analyzer","displayName":"rust-analyzer","description":"Rust language support for Visual Studio Code","private":true,"icon":"icon.png","version":"0.3.2441","releaseTag":"2025-04-28","publisher":"rust-lang","type":"commonjs","repository":{"url":"https://github.com/rust-lang/rust-analyzer.git","type":"git"},"homepage":"https://rust-analyzer.github.io/","license":"MIT OR Apache-2.0","keywords":["rust"],"categories":["Formatters","Programming Languages"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"rust-analyzer invokes binaries set up by its configuration as well as the Rust toolchain's binaries. A malicious actor could exploit this to run arbitrary code on your machine."}},"engines":{"vscode":"^1.93.0"},"scripts":{"vscode:prepublish":"npm run build-base -- --minify","package":"vsce package -o rust-analyzer.vsix","build-base":"esbuild ./src/main.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node --target=node20","build":"npm run build-base -- --sourcemap","watch":"npm run build-base -- --sourcemap --watch","format":"node --experimental-strip-types node_modules/prettier/bin/prettier.cjs . --write","format:check":"node --experimental-strip-types node_modules/prettier/bin/prettier.cjs . --check","lint":"eslint .","lint:fix":"npm run lint -- --fix","typecheck":"tsc","pretest":"npm run typecheck && npm run build","test":"node ./out/tests/runTests.js"},"dependencies":{"@hpcc-js/wasm":"^2.22.4","anser":"^2.3.2","d3":"^7.9.0","d3-graphviz":"^5.6.0","jiti":"^2.4.2","vscode-languageclient":"^9.0.1"},"devDependencies":{"@eslint/js":"^9.21.0","@stylistic/eslint-plugin":"^4.1.0","@stylistic/eslint-plugin-js":"^4.1.0","@tsconfig/strictest":"^2.0.5","@types/node":"~22.13.4","@types/vscode":"~1.93.0","@typescript-eslint/eslint-plugin":"^8.25.0","@typescript-eslint/parser":"^8.25.0","@vscode/test-electron":"^2.4.1","@vscode/vsce":"^3.2.2","esbuild":"^0.25.0","eslint":"^9.21.0","eslint-config-prettier":"^10.0.2","eslint-define-config":"^2.1.0","ovsx":"0.10.1","prettier":"^3.5.2","tslib":"^2.8.1","typescript":"^5.7.3","typescript-eslint":"^8.25.0"},"activationEvents":["workspaceContains:Cargo.toml","workspaceContains:*/Cargo.toml","workspaceContains:rust-project.json","workspaceContains:*/rust-project.json","workspaceContains:.rust-project.json","workspaceContains:*/.rust-project.json"],"main":"./out/main","contributes":{"taskDefinitions":[{"type":"cargo","required":["command"],"properties":{"label":{"type":"string"},"command":{"type":"string"},"args":{"type":"array","items":{"type":"string"}},"env":{"type":"object","patternProperties":{".+":{"type":"string"}}}}}],"commands":[{"command":"rust-analyzer.viewHir","title":"View Hir","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewMir","title":"View Mir","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.interpretFunction","title":"Interpret","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewFileText","title":"View File Text (as seen by the server)","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewItemTree","title":"Debug ItemTree","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.memoryUsage","title":"Memory Usage (Clears Database)","category":"rust-analyzer (debug command)"},{"command":"rust-analyzer.viewCrateGraph","title":"View Crate Graph","category":"rust-analyzer"},{"command":"rust-analyzer.viewFullCrateGraph","title":"View Crate Graph (Full)","category":"rust-analyzer"},{"command":"rust-analyzer.expandMacro","title":"Expand macro recursively at caret","category":"rust-analyzer"},{"command":"rust-analyzer.matchingBrace","title":"Find matching brace","category":"rust-analyzer"},{"command":"rust-analyzer.parentModule","title":"Locate parent module","category":"rust-analyzer"},{"command":"rust-analyzer.childModules","title":"Locate child modules","category":"rust-analyzer"},{"command":"rust-analyzer.joinLines","title":"Join lines","category":"rust-analyzer"},{"command":"rust-analyzer.run","title":"Run","category":"rust-analyzer"},{"command":"rust-analyzer.copyRunCommandLine","title":"Copy Run Command Line","category":"rust-analyzer"},{"command":"rust-analyzer.debug","title":"Debug","category":"rust-analyzer"},{"command":"rust-analyzer.newDebugConfig","title":"Generate launch configuration","category":"rust-analyzer"},{"command":"rust-analyzer.analyzerStatus","title":"Status","category":"rust-analyzer"},{"command":"rust-analyzer.reloadWorkspace","title":"Reload workspace","category":"rust-analyzer"},{"command":"rust-analyzer.rebuildProcMacros","title":"Rebuild proc macros and build scripts","category":"rust-analyzer"},{"command":"rust-analyzer.restartServer","title":"Restart server","category":"rust-analyzer"},{"command":"rust-analyzer.startServer","title":"Start server","category":"rust-analyzer"},{"command":"rust-analyzer.stopServer","title":"Stop server","category":"rust-analyzer"},{"command":"rust-analyzer.onEnter","title":"Enhanced enter key","category":"rust-analyzer"},{"command":"rust-analyzer.ssr","title":"Structural Search Replace","category":"rust-analyzer"},{"command":"rust-analyzer.serverVersion","title":"Show RA Version","category":"rust-analyzer"},{"command":"rust-analyzer.openDocs","title":"Open Docs","category":"rust-analyzer"},{"command":"rust-analyzer.openExternalDocs","title":"Open External Docs","category":"rust-analyzer"},{"command":"rust-analyzer.openCargoToml","title":"Open Cargo.toml","category":"rust-analyzer"},{"command":"rust-analyzer.peekTests","title":"Peek Related Tests","category":"rust-analyzer"},{"command":"rust-analyzer.moveItemUp","title":"Move Item Up","category":"rust-analyzer"},{"command":"rust-analyzer.moveItemDown","title":"Move Item Down","category":"rust-analyzer"},{"command":"rust-analyzer.cancelFlycheck","title":"Cancel running flychecks","category":"rust-analyzer"},{"command":"rust-analyzer.runFlycheck","title":"Run flycheck","category":"rust-analyzer"},{"command":"rust-analyzer.clearFlycheck","title":"Clear flycheck diagnostics","category":"rust-analyzer"},{"command":"rust-analyzer.revealDependency","title":"Reveal File","category":"rust-analyzer"},{"command":"rust-analyzer.syntaxTreeReveal","title":"Reveal Syntax Element","icon":"$(search)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.syntaxTreeCopy","title":"Copy","icon":"$(copy)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.syntaxTreeHideWhitespace","title":"Hide Whitespace","icon":"$(filter)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.syntaxTreeShowWhitespace","title":"Show Whitespace","icon":"$(filter-filled)","category":"rust-analyzer (syntax tree)"},{"command":"rust-analyzer.viewMemoryLayout","title":"View Memory Layout","category":"rust-analyzer"},{"command":"rust-analyzer.toggleCheckOnSave","title":"Toggle Check on Save","category":"rust-analyzer"},{"command":"rust-analyzer.toggleLSPLogs","title":"Toggle LSP Logs","category":"rust-analyzer"},{"command":"rust-analyzer.openWalkthrough","title":"Open Walkthrough","category":"rust-analyzer"}],"keybindings":[{"command":"rust-analyzer.parentModule","key":"ctrl+shift+u","when":"editorTextFocus && editorLangId == rust"},{"command":"rust-analyzer.joinLines","key":"ctrl+shift+j","when":"editorTextFocus && editorLangId == rust"}],"configuration":[{"title":"general","properties":{"rust-analyzer.restartServerOnConfigChange":{"markdownDescription":"Whether to restart the server automatically when certain settings that require a restart are changed.","default":false,"type":"boolean"},"rust-analyzer.showUnlinkedFileNotification":{"markdownDescription":"Whether to show a notification for unlinked files asking the user to add the corresponding Cargo.toml to the linked projects setting.","default":true,"type":"boolean"},"rust-analyzer.showRequestFailedErrorNotification":{"markdownDescription":"Whether to show error notifications for failing requests.","default":true,"type":"boolean"},"rust-analyzer.showDependenciesExplorer":{"markdownDescription":"Whether to show the dependencies view.","default":true,"type":"boolean"},"rust-analyzer.showSyntaxTree":{"markdownDescription":"Whether to show the syntax tree view.","default":false,"type":"boolean"},"rust-analyzer.testExplorer":{"markdownDescription":"Whether to show the test explorer.","default":false,"type":"boolean"},"rust-analyzer.initializeStopped":{"markdownDescription":"Do not start rust-analyzer server when the extension is activated.","default":false,"type":"boolean"}}},{"title":"runnables","properties":{"rust-analyzer.runnables.extraEnv":{"anyOf":[{"type":"null"},{"type":"array","items":{"type":"object","properties":{"platform":{"type":["null","string","array"],"default":null,"markdownDescription":"Platform(s) filter like \"win32\" or [\"linux\", \"win32\"]. See [process.platform](https://nodejs.org/api/process.html#processplatform) values."},"mask":{"type":"string","description":"Runnable name mask"},"env":{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}}}},{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}],"default":null,"markdownDescription":"Environment variables passed to the runnable launched using `Test` or `Debug` lens or `rust-analyzer.run` command."},"rust-analyzer.runnables.problemMatcher":{"type":"array","items":{"type":"string"},"default":["$rustc"],"markdownDescription":"Problem matchers to use for `rust-analyzer.run` command, eg `[\"$rustc\", \"$rust-panic\"]`."},"rust-analyzer.runnables.askBeforeUpdateTest":{"type":"boolean","default":true,"markdownDescription":"Ask before updating the test when running it."}}},{"title":"statusBar","properties":{"rust-analyzer.statusBar.clickAction":{"type":"string","enum":["stopServer","openLogs"],"enumDescriptions":["Stop Server","Open Logs"],"default":"openLogs","markdownDescription":"Action to run when clicking the extension status bar item."},"rust-analyzer.statusBar.showStatusBar":{"markdownDescription":"When to show the extension status bar.\n\n`\"always\"` Always show the status bar.\n\n`\"never\"` Never show the status bar.\n\n`{ documentSelector: <DocumentSelector>[] }` Show the status bar if the open file matches any of the given document selectors.\n\nSee [VS Code -- DocumentSelector](https://code.visualstudio.com/api/references/document-selector) for more information.","anyOf":[{"type":"string","enum":["always","never"]},{"type":"object","properties":{"documentSelector":{"type":"array","items":{"type":"object","properties":{"language":{"type":"string"},"notebookType":{"type":"string"},"scheme":{"type":"string"},"pattern":{"type":"string"}}}}}}],"default":{"documentSelector":[{"language":"rust"},{"pattern":"**/Cargo.toml"},{"pattern":"**/Cargo.lock"},{"scheme":"output","pattern":"extension-output-rust-lang.rust-analyzer*"}]}}}},{"title":"server","properties":{"rust-analyzer.server.path":{"type":["null","string"],"scope":"machine-overridable","default":null,"markdownDescription":"Path to rust-analyzer executable (points to bundled binary by default)."},"rust-analyzer.server.extraEnv":{"type":["null","object"],"additionalProperties":{"type":["string","number","null"]},"default":null,"markdownDescription":"Extra environment variables that will be passed to the rust-analyzer executable. Useful for passing e.g. `RA_LOG` for debugging."}}},{"title":"trace","properties":{"rust-analyzer.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"enumDescriptions":["No traces","Error only","Full log"],"default":"off","description":"Trace requests to the rust-analyzer (this is usually overly verbose and not recommended for regular users)."},"rust-analyzer.trace.extension":{"description":"Enable logging of VS Code extensions itself.","markdownDeprecationMessage":"Log level is now controlled by the [Developer: Set Log Level...](command:workbench.action.setLogLevel) command.You can set the log level for the current session and also the default log level from there. This is also available by clicking the gear icon on the OUTPUT tab when Rust Analyzer Client is visible or by passing the --log rust-lang.rust-analyzer:debug parameter to VS Code.","type":"boolean","default":false}}},{"title":"debug","properties":{"rust-analyzer.debug.engine":{"type":"string","enum":["auto","llvm-vs-code-extensions.lldb-dap","vadimcn.vscode-lldb","ms-vscode.cpptools","webfreak.debug"],"default":"auto","description":"Preferred debug engine.","markdownEnumDescriptions":["Use the first available extension out of [LLDB DAP](https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.lldb-dap), [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb), [C/C++ for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools), and [Native Debug](https://marketplace.visualstudio.com/items?itemName=webfreak.debug).","Use [LLDB DAP](https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.lldb-dap)","Use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)","Use [C/C++ for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)","Use [Native Debug](https://marketplace.visualstudio.com/items?itemName=webfreak.debug)"]},"rust-analyzer.debug.sourceFileMap":{"type":["object","string"],"const":"auto","description":"Optional source file mappings passed to the debug engine.","default":{"/rustc/<id>":"${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"}},"rust-analyzer.debug.buildBeforeRestart":{"markdownDescription":"Whether to rebuild the project modules before debugging the same test again","type":"boolean","default":false},"rust-analyzer.debug.engineSettings":{"type":"object","default":{},"markdownDescription":"Optional settings passed to the debug engine. Example: `{ \"lldb\": { \"terminal\":\"external\"} }`"}}},{"title":"typing","properties":{"rust-analyzer.typing.continueCommentsOnNewline":{"markdownDescription":"Whether to prefix newlines after comments with the corresponding comment prefix.","default":true,"type":"boolean"}}},{"title":"diagnostics","properties":{"rust-analyzer.diagnostics.previewRustcOutput":{"markdownDescription":"Whether to show the main part of the rendered rustc output of a diagnostic message.","default":false,"type":"boolean"},"rust-analyzer.diagnostics.useRustcErrorCode":{"markdownDescription":"Whether to show diagnostics using the original rustc error code. If this is false, all rustc diagnostics will have the code 'rustc(Click for full compiler diagnostics)'","default":false,"type":"boolean"}}},{},{"title":"assist","properties":{"rust-analyzer.assist.emitMustUse":{"markdownDescription":"Whether to insert #[must_use] when generating `as_` methods\nfor enum variants.","default":false,"type":"boolean"}}},{"title":"assist","properties":{"rust-analyzer.assist.expressionFillDefault":{"markdownDescription":"Placeholder expression to use for missing expressions in assists.","default":"todo","type":"string","enum":["todo","default"],"enumDescriptions":["Fill missing expressions with the `todo` macro","Fill missing expressions with reasonable defaults, `new` or `default` constructors."]}}},{"title":"assist","properties":{"rust-analyzer.assist.termSearch.borrowcheck":{"markdownDescription":"Enable borrow checking for term search code assists. If set to false, also there will be more suggestions, but some of them may not borrow-check.","default":true,"type":"boolean"}}},{"title":"assist","properties":{"rust-analyzer.assist.termSearch.fuel":{"markdownDescription":"Term search fuel in \"units of work\" for assists (Defaults to 1800).","default":1800,"type":"integer","minimum":0}}},{"title":"cachePriming","properties":{"rust-analyzer.cachePriming.enable":{"markdownDescription":"Warm up caches on project load.","default":true,"type":"boolean"}}},{"title":"cachePriming","properties":{"rust-analyzer.cachePriming.numThreads":{"markdownDescription":"How many worker threads to handle priming caches. The default `0` means to pick automatically.","default":"physical","anyOf":[{"type":"number","minimum":0,"maximum":255},{"type":"string","enum":["physical","logical"],"enumDescriptions":["Use the number of physical cores","Use the number of logical cores"]}]}}},{"title":"cargo","properties":{"rust-analyzer.cargo.allTargets":{"markdownDescription":"Pass `--all-targets` to cargo invocation.","default":true,"type":"boolean"}}},{"title":"cargo","properties":{"rust-analyzer.cargo.autoreload":{"markdownDescription":"Automatically refresh project info via `cargo metadata` on\n`Cargo.toml` or `.cargo/config.toml` changes.","default":true,"type":"boolean"}}},{"title":"cargo","properties":{"rust-analyzer.cargo.buildScripts.enable":{"markdownDescription":"Run build scripts (`build.rs`) for more precise code analysis.","default":true,"type":"boolean"}}},{"title":"cargo","properties":{"rust-analyzer.cargo.buildScripts.invocationStrategy":{"markdownDescription":"Specifies the invocation strategy to use when running the build scripts command.\nIf `per_workspace` is set, the command will be executed for each Rust workspace with the\nworkspace as the working directory.\nIf `once` is set, the command will be executed once with the opened project as the\nworking directory.\nThis config only has an effect when `#rust-analyzer.cargo.buildScripts.overrideCommand#`\nis set.","default":"per_workspace","type":"string","enum":["per_workspace","once"],"enumDescriptions":["The command will be executed for each Rust workspace with the workspace as the working directory.","The command will be executed once with the opened project as the working directory."]}}},{"title":"cargo","properties":{"rust-analyzer.cargo.buildScripts.overrideCommand":{"markdownDescription":"Override the command rust-analyzer uses to run build scripts and\nbuild procedural macros. The command is required to output json\nand should therefore include `--message-format=json` or a similar\noption.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.cargo.buildScripts.invocationStrategy#`.\n\nBy default, a cargo invocation will be constructed for the configured\ntargets and features, with the following base command line:\n\n```bash\ncargo check --quiet --workspace --message-format=json --all-targets --keep-going\n```\n.","default":null,"type":["null","array"],"items":{"type":"string"}}}},{"title":"cargo","properties":{"rust-analyzer.cargo.buildScripts.rebuildOnSave":{"markdownDescription":"Rerun proc-macros building/build-scripts running when proc-macro\nor build-script sources change and are saved.","default":true,"type":"boolean"}}},{"title":"cargo","properties":{"rust-analyzer.cargo.buildScripts.useRustcWrapper":{"markdownDescription":"Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\navoid checking unnecessary things.","default":true,"type":"boolean"}}},{"title":"cargo","properties":{"rust-analyzer.cargo.cfgs":{"markdownDescription":"List of cfg options to enable with the given values.\n\nTo enable a name without a value, use `\"key\"`.\nTo enable a name with a value, use `\"key=value\"`.\nTo disable, prefix the entry with a `!`.","default":["debug_assertions","miri"],"type":"array","items":{"type":"string"}}}},{"title":"cargo","properties":{"rust-analyzer.cargo.extraArgs":{"markdownDescription":"Extra arguments that are passed to every cargo invocation.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"cargo","properties":{"rust-analyzer.cargo.extraEnv":{"markdownDescription":"Extra environment variables that will be set when running cargo, rustc\nor other commands within the workspace. Useful for setting RUSTFLAGS.","default":{},"type":"object"}}},{"title":"cargo","properties":{"rust-analyzer.cargo.features":{"markdownDescription":"List of features to activate.\n\nSet this to `\"all\"` to pass `--all-features` to cargo.","default":[],"anyOf":[{"type":"string","enum":["all"],"enumDescriptions":["Pass `--all-features` to cargo"]},{"type":"array","items":{"type":"string"}}]}}},{"title":"cargo","properties":{"rust-analyzer.cargo.noDefaultFeatures":{"markdownDescription":"Whether to pass `--no-default-features` to cargo.","default":false,"type":"boolean"}}},{"title":"cargo","properties":{"rust-analyzer.cargo.noDeps":{"markdownDescription":"Whether to skip fetching dependencies. If set to \"true\", the analysis is performed\nentirely offline, and Cargo metadata for dependencies is not fetched.","default":false,"type":"boolean"}}},{"title":"cargo","properties":{"rust-analyzer.cargo.sysroot":{"markdownDescription":"Relative path to the sysroot, or \"discover\" to try to automatically find it via\n\"rustc --print sysroot\".\n\nUnsetting this disables sysroot loading.\n\nThis option does not take effect until rust-analyzer is restarted.","default":"discover","type":["null","string"]}}},{"title":"cargo","properties":{"rust-analyzer.cargo.sysrootSrc":{"markdownDescription":"Relative path to the sysroot library sources. If left unset, this will default to\n`{cargo.sysroot}/lib/rustlib/src/rust/library`.\n\nThis option does not take effect until rust-analyzer is restarted.","default":null,"type":["null","string"]}}},{"title":"cargo","properties":{"rust-analyzer.cargo.target":{"markdownDescription":"Compilation target override (target tuple).","default":null,"type":["null","string"]}}},{"title":"cargo","properties":{"rust-analyzer.cargo.targetDir":{"markdownDescription":"Optional path to a rust-analyzer specific target directory.\nThis prevents rust-analyzer's `cargo check` and initial build-script and proc-macro\nbuilding from locking the `Cargo.lock` at the expense of duplicating build artifacts.\n\nSet to `true` to use a subdirectory of the existing target directory or\nset to a path relative to the workspace to use that path.","default":null,"anyOf":[{"type":"null"},{"type":"boolean"},{"type":"string"}]}}},{"title":"cfg","properties":{"rust-analyzer.cfg.setTest":{"markdownDescription":"Set `cfg(test)` for local crates. Defaults to true.","default":true,"type":"boolean"}}},{"title":"general","properties":{"rust-analyzer.checkOnSave":{"markdownDescription":"Run the check command for diagnostics on save.","default":true,"type":"boolean"}}},{"title":"check","properties":{"rust-analyzer.check.allTargets":{"markdownDescription":"Check all targets and tests (`--all-targets`). Defaults to\n`#rust-analyzer.cargo.allTargets#`.","default":null,"type":["null","boolean"]}}},{"title":"check","properties":{"rust-analyzer.check.command":{"markdownDescription":"Cargo command to use for `cargo check`.","default":"check","type":"string"}}},{"title":"check","properties":{"rust-analyzer.check.extraArgs":{"markdownDescription":"Extra arguments for `cargo check`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"check","properties":{"rust-analyzer.check.extraEnv":{"markdownDescription":"Extra environment variables that will be set when running `cargo check`.\nExtends `#rust-analyzer.cargo.extraEnv#`.","default":{},"type":"object"}}},{"title":"check","properties":{"rust-analyzer.check.features":{"markdownDescription":"List of features to activate. Defaults to\n`#rust-analyzer.cargo.features#`.\n\nSet to `\"all\"` to pass `--all-features` to Cargo.","default":null,"anyOf":[{"type":"string","enum":["all"],"enumDescriptions":["Pass `--all-features` to cargo"]},{"type":"array","items":{"type":"string"}},{"type":"null"}]}}},{"title":"check","properties":{"rust-analyzer.check.ignore":{"markdownDescription":"List of `cargo check` (or other command specified in `check.command`) diagnostics to ignore.\n\nFor example for `cargo check`: `dead_code`, `unused_imports`, `unused_variables`,...","default":[],"type":"array","items":{"type":"string"},"uniqueItems":true}}},{"title":"check","properties":{"rust-analyzer.check.invocationStrategy":{"markdownDescription":"Specifies the invocation strategy to use when running the check command.\nIf `per_workspace` is set, the command will be executed for each workspace.\nIf `once` is set, the command will be executed once.\nThis config only has an effect when `#rust-analyzer.check.overrideCommand#`\nis set.","default":"per_workspace","type":"string","enum":["per_workspace","once"],"enumDescriptions":["The command will be executed for each Rust workspace with the workspace as the working directory.","The command will be executed once with the opened project as the working directory."]}}},{"title":"check","properties":{"rust-analyzer.check.noDefaultFeatures":{"markdownDescription":"Whether to pass `--no-default-features` to Cargo. Defaults to\n`#rust-analyzer.cargo.noDefaultFeatures#`.","default":null,"type":["null","boolean"]}}},{"title":"check","properties":{"rust-analyzer.check.overrideCommand":{"markdownDescription":"Override the command rust-analyzer uses instead of `cargo check` for\ndiagnostics on save. The command is required to output json and\nshould therefore include `--message-format=json` or a similar option\n(if your client supports the `colorDiagnosticOutput` experimental\ncapability, you can use `--message-format=json-diagnostic-rendered-ansi`).\n\nIf you're changing this because you're using some tool wrapping\nCargo, you might also want to change\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.check.invocationStrategy#`.\n\nIf `$saved_file` is part of the command, rust-analyzer will pass\nthe absolute path of the saved file to the provided command. This is\nintended to be used with non-Cargo build systems.\nNote that `$saved_file` is experimental and may be removed in the future.\n\nAn example command would be:\n\n```bash\ncargo check --workspace --message-format=json --all-targets\n```\n.","default":null,"type":["null","array"],"items":{"type":"string"}}}},{"title":"check","properties":{"rust-analyzer.check.targets":{"markdownDescription":"Check for specific targets. Defaults to `#rust-analyzer.cargo.target#` if empty.\n\nCan be a single target, e.g. `\"x86_64-unknown-linux-gnu\"` or a list of targets, e.g.\n`[\"aarch64-apple-darwin\", \"x86_64-apple-darwin\"]`.\n\nAliased as `\"checkOnSave.targets\"`.","default":null,"anyOf":[{"type":"null"},{"type":"string"},{"type":"array","items":{"type":"string"}}]}}},{"title":"check","properties":{"rust-analyzer.check.workspace":{"markdownDescription":"Whether `--workspace` should be passed to `cargo check`.\nIf false, `-p <package>` will be passed instead if applicable. In case it is not, no\ncheck will be performed.","default":true,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.addSemicolonToUnit":{"markdownDescription":"Whether to automatically add a semicolon when completing unit-returning functions.\n\nIn `match` arms it completes a comma instead.","default":true,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.autoAwait.enable":{"markdownDescription":"Toggles the additional completions that automatically show method calls and field accesses with `await` prefixed to them when completing on a future.","default":true,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.autoIter.enable":{"markdownDescription":"Toggles the additional completions that automatically show method calls with `iter()` or `into_iter()` prefixed to them when completing on a type that has them.","default":true,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.autoimport.enable":{"markdownDescription":"Toggles the additional completions that automatically add imports when completed.\nNote that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.","default":true,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.autoimport.exclude":{"markdownDescription":"A list of full paths to items to exclude from auto-importing completions.\n\nTraits in this list won't have their methods suggested in completions unless the trait\nis in scope.\n\nYou can either specify a string path which defaults to type \"always\" or use the more verbose\nform `{ \"path\": \"path::to::item\", type: \"always\" }`.\n\nFor traits the type \"methods\" can be used to only exclude the methods but not the trait itself.\n\nThis setting also inherits `#rust-analyzer.completion.excludeTraits#`.","default":[{"path":"core::borrow::Borrow","type":"methods"},{"path":"core::borrow::BorrowMut","type":"methods"}],"type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"path":{"type":"string"},"type":{"type":"string","enum":["always","methods"],"enumDescriptions":["Do not show this item or its methods (if it is a trait) in auto-import completions.","Do not show this traits methods in auto-import completions."]}}}]}}}},{"title":"completion","properties":{"rust-analyzer.completion.autoself.enable":{"markdownDescription":"Toggles the additional completions that automatically show method calls and field accesses\nwith `self` prefixed to them when inside a method.","default":true,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.callable.snippets":{"markdownDescription":"Whether to add parenthesis and argument snippets when completing function.","default":"fill_arguments","type":"string","enum":["fill_arguments","add_parentheses","none"],"enumDescriptions":["Add call parentheses and pre-fill arguments.","Add call parentheses.","Do no snippet completions for callables."]}}},{"title":"completion","properties":{"rust-analyzer.completion.excludeTraits":{"markdownDescription":"A list of full paths to traits whose methods to exclude from completion.\n\nMethods from these traits won't be completed, even if the trait is in scope. However, they will still be suggested on expressions whose type is `dyn Trait`, `impl Trait` or `T where T: Trait`.\n\nNote that the trait themselves can still be completed.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"completion","properties":{"rust-analyzer.completion.fullFunctionSignatures.enable":{"markdownDescription":"Whether to show full function/method signatures in completion docs.","default":false,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.hideDeprecated":{"markdownDescription":"Whether to omit deprecated items from autocompletion. By default they are marked as deprecated but not hidden.","default":false,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.limit":{"markdownDescription":"Maximum number of completions to return. If `None`, the limit is infinite.","default":null,"type":["null","integer"],"minimum":0}}},{"title":"completion","properties":{"rust-analyzer.completion.postfix.enable":{"markdownDescription":"Whether to show postfix snippets like `dbg`, `if`, `not`, etc.","default":true,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.privateEditable.enable":{"markdownDescription":"Enables completions of private items and fields that are defined in the current workspace even if they are not visible at the current position.","default":false,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.snippets.custom":{"markdownDescription":"Custom completion snippets.","default":{"Ok":{"postfix":"ok","body":"Ok(${receiver})","description":"Wrap the expression in a `Result::Ok`","scope":"expr"},"Box::pin":{"postfix":"pinbox","body":"Box::pin(${receiver})","requires":"std::boxed::Box","description":"Put the expression into a pinned `Box`","scope":"expr"},"Arc::new":{"postfix":"arc","body":"Arc::new(${receiver})","requires":"std::sync::Arc","description":"Put the expression into an `Arc`","scope":"expr"},"Some":{"postfix":"some","body":"Some(${receiver})","description":"Wrap the expression in an `Option::Some`","scope":"expr"},"Err":{"postfix":"err","body":"Err(${receiver})","description":"Wrap the expression in a `Result::Err`","scope":"expr"},"Rc::new":{"postfix":"rc","body":"Rc::new(${receiver})","requires":"std::rc::Rc","description":"Put the expression into an `Rc`","scope":"expr"}},"type":"object"}}},{"title":"completion","properties":{"rust-analyzer.completion.termSearch.enable":{"markdownDescription":"Whether to enable term search based snippets like `Some(foo.bar().baz())`.","default":false,"type":"boolean"}}},{"title":"completion","properties":{"rust-analyzer.completion.termSearch.fuel":{"markdownDescription":"Term search fuel in \"units of work\" for autocompletion (Defaults to 1000).","default":1000,"type":"integer","minimum":0}}},{"title":"diagnostics","properties":{"rust-analyzer.diagnostics.disabled":{"markdownDescription":"List of rust-analyzer diagnostics to disable.","default":[],"type":"array","items":{"type":"string"},"uniqueItems":true}}},{"title":"diagnostics","properties":{"rust-analyzer.diagnostics.enable":{"markdownDescription":"Whether to show native rust-analyzer diagnostics.","default":true,"type":"boolean"}}},{"title":"diagnostics","properties":{"rust-analyzer.diagnostics.experimental.enable":{"markdownDescription":"Whether to show experimental rust-analyzer diagnostics that might\nhave more false positives than usual.","default":false,"type":"boolean"}}},{"title":"diagnostics","properties":{"rust-analyzer.diagnostics.remapPrefix":{"markdownDescription":"Map of prefixes to be substituted when parsing diagnostic file paths.\nThis should be the reverse mapping of what is passed to `rustc` as `--remap-path-prefix`.","default":{},"type":"object"}}},{"title":"diagnostics","properties":{"rust-analyzer.diagnostics.styleLints.enable":{"markdownDescription":"Whether to run additional style lints.","default":false,"type":"boolean"}}},{"title":"diagnostics","properties":{"rust-analyzer.diagnostics.warningsAsHint":{"markdownDescription":"List of warnings that should be displayed with hint severity.\n\nThe warnings will be indicated by faded text or three dots in code\nand will not show up in the `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"diagnostics","properties":{"rust-analyzer.diagnostics.warningsAsInfo":{"markdownDescription":"List of warnings that should be displayed with info severity.\n\nThe warnings will be indicated by a blue squiggly underline in code\nand a blue icon in the `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"files","properties":{"rust-analyzer.files.exclude":{"markdownDescription":"These paths (file/directories) will be ignored by rust-analyzer. They are\nrelative to the workspace root, and globs are not supported. You may\nalso need to add the folders to Code's `files.watcherExclude`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"files","properties":{"rust-analyzer.files.watcher":{"markdownDescription":"Controls file watching implementation.","default":"client","type":"string","enum":["client","server"],"enumDescriptions":["Use the client (editor) to watch files for changes","Use server-side file watching"]}}},{"title":"highlightRelated","properties":{"rust-analyzer.highlightRelated.breakPoints.enable":{"markdownDescription":"Enables highlighting of related references while the cursor is on `break`, `loop`, `while`, or `for` keywords.","default":true,"type":"boolean"}}},{"title":"highlightRelated","properties":{"rust-analyzer.highlightRelated.closureCaptures.enable":{"markdownDescription":"Enables highlighting of all captures of a closure while the cursor is on the `|` or move keyword of a closure.","default":true,"type":"boolean"}}},{"title":"highlightRelated","properties":{"rust-analyzer.highlightRelated.exitPoints.enable":{"markdownDescription":"Enables highlighting of all exit points while the cursor is on any `return`, `?`, `fn`, or return type arrow (`->`).","default":true,"type":"boolean"}}},{"title":"highlightRelated","properties":{"rust-analyzer.highlightRelated.references.enable":{"markdownDescription":"Enables highlighting of related references while the cursor is on any identifier.","default":true,"type":"boolean"}}},{"title":"highlightRelated","properties":{"rust-analyzer.highlightRelated.yieldPoints.enable":{"markdownDescription":"Enables highlighting of all break points for a loop or block context while the cursor is on any `async` or `await` keywords.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.actions.debug.enable":{"markdownDescription":"Whether to show `Debug` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.actions.enable":{"markdownDescription":"Whether to show HoverActions in Rust files.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.actions.gotoTypeDef.enable":{"markdownDescription":"Whether to show `Go to Type Definition` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.actions.implementations.enable":{"markdownDescription":"Whether to show `Implementations` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.actions.references.enable":{"markdownDescription":"Whether to show `References` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":false,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.actions.run.enable":{"markdownDescription":"Whether to show `Run` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.actions.updateTest.enable":{"markdownDescription":"Whether to show `Update Test` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` and `#rust-analyzer.hover.actions.run.enable#` are set.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.documentation.enable":{"markdownDescription":"Whether to show documentation on hover.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.documentation.keywords.enable":{"markdownDescription":"Whether to show keyword hover popups. Only applies when\n`#rust-analyzer.hover.documentation.enable#` is set.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.dropGlue.enable":{"markdownDescription":"Whether to show drop glue information on hover.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.links.enable":{"markdownDescription":"Use markdown syntax for links on hover.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.maxSubstitutionLength":{"markdownDescription":"Whether to show what types are used as generic arguments in calls etc. on hover, and what is their max length to show such types, beyond it they will be shown with ellipsis.\n\nThis can take three values: `null` means \"unlimited\", the string `\"hide\"` means to not show generic substitutions at all, and a number means to limit them to X characters.\n\nThe default is 20 characters.","default":20,"anyOf":[{"type":"null"},{"type":"string","enum":["hide"]},{"type":"integer"}]}}},{"title":"hover","properties":{"rust-analyzer.hover.memoryLayout.alignment":{"markdownDescription":"How to render the align information in a memory layout hover.","default":"hexadecimal","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"hover","properties":{"rust-analyzer.hover.memoryLayout.enable":{"markdownDescription":"Whether to show memory layout data on hover.","default":true,"type":"boolean"}}},{"title":"hover","properties":{"rust-analyzer.hover.memoryLayout.niches":{"markdownDescription":"How to render the niche information in a memory layout hover.","default":false,"type":["null","boolean"]}}},{"title":"hover","properties":{"rust-analyzer.hover.memoryLayout.offset":{"markdownDescription":"How to render the offset information in a memory layout hover.","default":"hexadecimal","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"hover","properties":{"rust-analyzer.hover.memoryLayout.size":{"markdownDescription":"How to render the size information in a memory layout hover.","default":"both","anyOf":[{"type":"null"},{"type":"string","enum":["both","decimal","hexadecimal"],"enumDescriptions":["Render as 12 (0xC)","Render as 12","Render as 0xC"]}]}}},{"title":"hover","properties":{"rust-analyzer.hover.show.enumVariants":{"markdownDescription":"How many variants of an enum to display when hovering on. Show none if empty.","default":5,"type":["null","integer"],"minimum":0}}},{"title":"hover","properties":{"rust-analyzer.hover.show.fields":{"markdownDescription":"How many fields of a struct, variant or union to display when hovering on. Show none if empty.","default":5,"type":["null","integer"],"minimum":0}}},{"title":"hover","properties":{"rust-analyzer.hover.show.traitAssocItems":{"markdownDescription":"How many associated items of a trait to display when hovering a trait.","default":null,"type":["null","integer"],"minimum":0}}},{"title":"imports","properties":{"rust-analyzer.imports.granularity.enforce":{"markdownDescription":"Whether to enforce the import granularity setting for all files. If set to false rust-analyzer will try to keep import styles consistent per file.","default":false,"type":"boolean"}}},{"title":"imports","properties":{"rust-analyzer.imports.granularity.group":{"markdownDescription":"How imports should be grouped into use statements.","default":"crate","type":"string","enum":["preserve","crate","module","item","one"],"enumDescriptions":["Do not change the granularity of any imports and preserve the original structure written by the developer.","Merge imports from the same crate into a single use statement. Conversely, imports from different crates are split into separate statements.","Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.","Flatten imports so that each has its own use statement.","Merge all imports into a single use statement as long as they have the same visibility and attributes."]}}},{"title":"imports","properties":{"rust-analyzer.imports.group.enable":{"markdownDescription":"Group inserted imports by the [following order](https://rust-analyzer.github.io/book/features.html#auto-import). Groups are separated by newlines.","default":true,"type":"boolean"}}},{"title":"imports","properties":{"rust-analyzer.imports.merge.glob":{"markdownDescription":"Whether to allow import insertion to merge new imports into single path glob imports like `use std::fmt::*;`.","default":true,"type":"boolean"}}},{"title":"imports","properties":{"rust-analyzer.imports.preferNoStd":{"markdownDescription":"Prefer to unconditionally use imports of the core and alloc crate, over the std crate.","default":false,"type":"boolean"}}},{"title":"imports","properties":{"rust-analyzer.imports.preferPrelude":{"markdownDescription":"Whether to prefer import paths containing a `prelude` module.","default":false,"type":"boolean"}}},{"title":"imports","properties":{"rust-analyzer.imports.prefix":{"markdownDescription":"The path structure for newly inserted paths to use.","default":"plain","type":"string","enum":["plain","self","crate"],"enumDescriptions":["Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item.","Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item. Prefixes `self` in front of the path if it starts with a module.","Force import paths to be absolute by always starting them with `crate` or the extern crate name they come from."]}}},{"title":"imports","properties":{"rust-analyzer.imports.prefixExternPrelude":{"markdownDescription":"Whether to prefix external (including std, core) crate imports with `::`. e.g. \"use ::std::io::Read;\".","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.bindingModeHints.enable":{"markdownDescription":"Whether to show inlay type hints for binding modes.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.chainingHints.enable":{"markdownDescription":"Whether to show inlay type hints for method chains.","default":true,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.closingBraceHints.enable":{"markdownDescription":"Whether to show inlay hints after a closing `}` to indicate what item it belongs to.","default":true,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.closingBraceHints.minLines":{"markdownDescription":"Minimum number of lines required before the `}` until the hint is shown (set to 0 or 1\nto always show them).","default":25,"type":"integer","minimum":0}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.closureCaptureHints.enable":{"markdownDescription":"Whether to show inlay hints for closure captures.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.closureReturnTypeHints.enable":{"markdownDescription":"Whether to show inlay type hints for return types of closures.","default":"never","type":"string","enum":["always","never","with_block"],"enumDescriptions":["Always show type hints for return types of closures.","Never show type hints for return types of closures.","Only show type hints for return types of closures with blocks."]}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.closureStyle":{"markdownDescription":"Closure notation in type and chaining inlay hints.","default":"impl_fn","type":"string","enum":["impl_fn","rust_analyzer","with_id","hide"],"enumDescriptions":["`impl_fn`: `impl FnMut(i32, u64) -> i8`","`rust_analyzer`: `|i32, u64| -> i8`","`with_id`: `{closure#14352}`, where that id is the unique number of the closure in r-a internals","`hide`: Shows `...` for every closure type"]}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.discriminantHints.enable":{"markdownDescription":"Whether to show enum variant discriminant hints.","default":"never","type":"string","enum":["always","never","fieldless"],"enumDescriptions":["Always show all discriminant hints.","Never show discriminant hints.","Only show discriminant hints on fieldless enum variants."]}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.enable":{"markdownDescription":"Whether to show inlay hints for type adjustments.","default":"never","type":"string","enum":["always","never","reborrow"],"enumDescriptions":["Always show all adjustment hints.","Never show adjustment hints.","Only show auto borrow and dereference adjustment hints."]}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe":{"markdownDescription":"Whether to hide inlay hints for type adjustments outside of `unsafe` blocks.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.expressionAdjustmentHints.mode":{"markdownDescription":"Whether to show inlay hints as postfix ops (`.*` instead of `*`, etc).","default":"prefix","type":"string","enum":["prefix","postfix","prefer_prefix","prefer_postfix"],"enumDescriptions":["Always show adjustment hints as prefix (`*expr`).","Always show adjustment hints as postfix (`expr.*`).","Show prefix or postfix depending on which uses less parenthesis, preferring prefix.","Show prefix or postfix depending on which uses less parenthesis, preferring postfix."]}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.genericParameterHints.const.enable":{"markdownDescription":"Whether to show const generic parameter name inlay hints.","default":true,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.genericParameterHints.lifetime.enable":{"markdownDescription":"Whether to show generic lifetime parameter name inlay hints.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.genericParameterHints.type.enable":{"markdownDescription":"Whether to show generic type parameter name inlay hints.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.implicitDrops.enable":{"markdownDescription":"Whether to show implicit drop hints.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.implicitSizedBoundHints.enable":{"markdownDescription":"Whether to show inlay hints for the implied type parameter `Sized` bound.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.lifetimeElisionHints.enable":{"markdownDescription":"Whether to show inlay type hints for elided lifetimes in function signatures.","default":"never","type":"string","enum":["always","never","skip_trivial"],"enumDescriptions":["Always show lifetime elision hints.","Never show lifetime elision hints.","Only show lifetime elision hints if a return type is involved."]}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames":{"markdownDescription":"Whether to prefer using parameter names as the name for elided lifetime hints if possible.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.maxLength":{"markdownDescription":"Maximum length for inlay hints. Set to null to have an unlimited length.","default":25,"type":["null","integer"],"minimum":0}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.parameterHints.enable":{"markdownDescription":"Whether to show function parameter name inlay hints at the call\nsite.","default":true,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.rangeExclusiveHints.enable":{"markdownDescription":"Whether to show exclusive range inlay hints.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.reborrowHints.enable":{"markdownDescription":"Whether to show inlay hints for compiler inserted reborrows.\nThis setting is deprecated in favor of #rust-analyzer.inlayHints.expressionAdjustmentHints.enable#.","default":"never","type":"string","enum":["always","never","mutable"],"enumDescriptions":["Always show reborrow hints.","Never show reborrow hints.","Only show mutable reborrow hints."]}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.renderColons":{"markdownDescription":"Whether to render leading colons for type hints, and trailing colons for parameter hints.","default":true,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.typeHints.enable":{"markdownDescription":"Whether to show inlay type hints for variables.","default":true,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.typeHints.hideClosureInitialization":{"markdownDescription":"Whether to hide inlay type hints for `let` statements that initialize to a closure.\nOnly applies to closures with blocks, same as `#rust-analyzer.inlayHints.closureReturnTypeHints.enable#`.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.typeHints.hideClosureParameter":{"markdownDescription":"Whether to hide inlay parameter type hints for closures.","default":false,"type":"boolean"}}},{"title":"inlayHints","properties":{"rust-analyzer.inlayHints.typeHints.hideNamedConstructor":{"markdownDescription":"Whether to hide inlay type hints for constructors.","default":false,"type":"boolean"}}},{"title":"interpret","properties":{"rust-analyzer.interpret.tests":{"markdownDescription":"Enables the experimental support for interpreting tests.","default":false,"type":"boolean"}}},{"title":"joinLines","properties":{"rust-analyzer.joinLines.joinAssignments":{"markdownDescription":"Join lines merges consecutive declaration and initialization of an assignment.","default":true,"type":"boolean"}}},{"title":"joinLines","properties":{"rust-analyzer.joinLines.joinElseIf":{"markdownDescription":"Join lines inserts else between consecutive ifs.","default":true,"type":"boolean"}}},{"title":"joinLines","properties":{"rust-analyzer.joinLines.removeTrailingComma":{"markdownDescription":"Join lines removes trailing commas.","default":true,"type":"boolean"}}},{"title":"joinLines","properties":{"rust-analyzer.joinLines.unwrapTrivialBlock":{"markdownDescription":"Join lines unwraps trivial blocks.","default":true,"type":"boolean"}}},{"title":"lens","properties":{"rust-analyzer.lens.debug.enable":{"markdownDescription":"Whether to show `Debug` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"}}},{"title":"lens","properties":{"rust-analyzer.lens.enable":{"markdownDescription":"Whether to show CodeLens in Rust files.","default":true,"type":"boolean"}}},{"title":"lens","properties":{"rust-analyzer.lens.implementations.enable":{"markdownDescription":"Whether to show `Implementations` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"}}},{"title":"lens","properties":{"rust-analyzer.lens.location":{"markdownDescription":"Where to render annotations.","default":"above_name","type":"string","enum":["above_name","above_whole_item"],"enumDescriptions":["Render annotations above the name of the item.","Render annotations above the whole item, including documentation comments and attributes."]}}},{"title":"lens","properties":{"rust-analyzer.lens.references.adt.enable":{"markdownDescription":"Whether to show `References` lens for Struct, Enum, and Union.\nOnly applies when `#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"lens","properties":{"rust-analyzer.lens.references.enumVariant.enable":{"markdownDescription":"Whether to show `References` lens for Enum Variants.\nOnly applies when `#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"lens","properties":{"rust-analyzer.lens.references.method.enable":{"markdownDescription":"Whether to show `Method References` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"lens","properties":{"rust-analyzer.lens.references.trait.enable":{"markdownDescription":"Whether to show `References` lens for Trait.\nOnly applies when `#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"}}},{"title":"lens","properties":{"rust-analyzer.lens.run.enable":{"markdownDescription":"Whether to show `Run` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"}}},{"title":"lens","properties":{"rust-analyzer.lens.updateTest.enable":{"markdownDescription":"Whether to show `Update Test` lens. Only applies when\n`#rust-analyzer.lens.enable#` and `#rust-analyzer.lens.run.enable#` are set.","default":true,"type":"boolean"}}},{"title":"general","properties":{"rust-analyzer.linkedProjects":{"markdownDescription":"Disable project auto-discovery in favor of explicitly specified set\nof projects.\n\nElements must be paths pointing to `Cargo.toml`,\n`rust-project.json`, `.rs` files (which will be treated as standalone files) or JSON\nobjects in `rust-project.json` format.","default":[],"type":"array","items":{"type":["string","object"]}}}},{"title":"lru","properties":{"rust-analyzer.lru.capacity":{"markdownDescription":"Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.","default":null,"type":["null","integer"],"minimum":0,"maximum":65535}}},{"title":"lru","properties":{"rust-analyzer.lru.query.capacities":{"markdownDescription":"Sets the LRU capacity of the specified queries.","default":{},"type":"object"}}},{"title":"notifications","properties":{"rust-analyzer.notifications.cargoTomlNotFound":{"markdownDescription":"Whether to show `can't find Cargo.toml` error message.","default":true,"type":"boolean"}}},{"title":"general","properties":{"rust-analyzer.numThreads":{"markdownDescription":"How many worker threads in the main loop. The default `null` means to pick automatically.","default":null,"anyOf":[{"type":"null"},{"type":"number","minimum":0,"maximum":255},{"type":"string","enum":["physical","logical"],"enumDescriptions":["Use the number of physical cores","Use the number of logical cores"]}]}}},{"title":"procMacro","properties":{"rust-analyzer.procMacro.attributes.enable":{"markdownDescription":"Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.","default":true,"type":"boolean"}}},{"title":"procMacro","properties":{"rust-analyzer.procMacro.enable":{"markdownDescription":"Enable support for procedural macros, implies `#rust-analyzer.cargo.buildScripts.enable#`.","default":true,"type":"boolean"}}},{"title":"procMacro","properties":{"rust-analyzer.procMacro.ignored":{"markdownDescription":"These proc-macros will be ignored when trying to expand them.\n\nThis config takes a map of crate names with the exported proc-macro names to ignore as values.","default":{},"type":"object"}}},{"title":"procMacro","properties":{"rust-analyzer.procMacro.server":{"markdownDescription":"Internal config, path to proc-macro server executable.","default":null,"type":["null","string"]}}},{"title":"references","properties":{"rust-analyzer.references.excludeImports":{"markdownDescription":"Exclude imports from find-all-references.","default":false,"type":"boolean"}}},{"title":"references","properties":{"rust-analyzer.references.excludeTests":{"markdownDescription":"Exclude tests from find-all-references and call-hierarchy.","default":false,"type":"boolean"}}},{"title":"runnables","properties":{"rust-analyzer.runnables.command":{"markdownDescription":"Command to be executed instead of 'cargo' for runnables.","default":null,"type":["null","string"]}}},{"title":"runnables","properties":{"rust-analyzer.runnables.extraArgs":{"markdownDescription":"Additional arguments to be passed to cargo for runnables such as\ntests or binaries. For example, it may be `--release`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"runnables","properties":{"rust-analyzer.runnables.extraTestBinaryArgs":{"markdownDescription":"Additional arguments to be passed through Cargo to launched tests, benchmarks, or\ndoc-tests.\n\nUnless the launched target uses a\n[custom test harness](https://doc.rust-lang.org/cargo/reference/cargo-targets.html#the-harness-field),\nthey will end up being interpreted as options to\n[`rustc`’s built-in test harness (“libtest”)](https://doc.rust-lang.org/rustc/tests/index.html#cli-arguments).","default":["--show-output"],"type":"array","items":{"type":"string"}}}},{"title":"rustc","properties":{"rust-analyzer.rustc.source":{"markdownDescription":"Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\nprojects, or \"discover\" to try to automatically find it if the `rustc-dev` component\nis installed.\n\nAny project which uses rust-analyzer with the rustcPrivate\ncrates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\n\nThis option does not take effect until rust-analyzer is restarted.","default":null,"type":["null","string"]}}},{"title":"rustfmt","properties":{"rust-analyzer.rustfmt.extraArgs":{"markdownDescription":"Additional arguments to `rustfmt`.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"rustfmt","properties":{"rust-analyzer.rustfmt.overrideCommand":{"markdownDescription":"Advanced option, fully override the command rust-analyzer uses for\nformatting. This should be the equivalent of `rustfmt` here, and\nnot that of `cargo fmt`. The file contents will be passed on the\nstandard input and the formatted result will be read from the\nstandard output.","default":null,"type":["null","array"],"items":{"type":"string"}}}},{"title":"rustfmt","properties":{"rust-analyzer.rustfmt.rangeFormatting.enable":{"markdownDescription":"Enables the use of rustfmt's unstable range formatting command for the\n`textDocument/rangeFormatting` request. The rustfmt option is unstable and only\navailable on a nightly build.","default":false,"type":"boolean"}}},{"title":"semanticHighlighting","properties":{"rust-analyzer.semanticHighlighting.doc.comment.inject.enable":{"markdownDescription":"Inject additional highlighting into doc comments.\n\nWhen enabled, rust-analyzer will highlight rust source in doc comments as well as intra\ndoc links.","default":true,"type":"boolean"}}},{"title":"semanticHighlighting","properties":{"rust-analyzer.semanticHighlighting.nonStandardTokens":{"markdownDescription":"Whether the server is allowed to emit non-standard tokens and modifiers.","default":true,"type":"boolean"}}},{"title":"semanticHighlighting","properties":{"rust-analyzer.semanticHighlighting.operator.enable":{"markdownDescription":"Use semantic tokens for operators.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for operator tokens when\nthey are tagged with modifiers.","default":true,"type":"boolean"}}},{"title":"semanticHighlighting","properties":{"rust-analyzer.semanticHighlighting.operator.specialization.enable":{"markdownDescription":"Use specialized semantic tokens for operators.\n\nWhen enabled, rust-analyzer will emit special token types for operator tokens instead\nof the generic `operator` token type.","default":false,"type":"boolean"}}},{"title":"semanticHighlighting","properties":{"rust-analyzer.semanticHighlighting.punctuation.enable":{"markdownDescription":"Use semantic tokens for punctuation.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\nthey are tagged with modifiers or have a special role.","default":false,"type":"boolean"}}},{"title":"semanticHighlighting","properties":{"rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang":{"markdownDescription":"When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\ncalls.","default":false,"type":"boolean"}}},{"title":"semanticHighlighting","properties":{"rust-analyzer.semanticHighlighting.punctuation.specialization.enable":{"markdownDescription":"Use specialized semantic tokens for punctuation.\n\nWhen enabled, rust-analyzer will emit special token types for punctuation tokens instead\nof the generic `punctuation` token type.","default":false,"type":"boolean"}}},{"title":"semanticHighlighting","properties":{"rust-analyzer.semanticHighlighting.strings.enable":{"markdownDescription":"Use semantic tokens for strings.\n\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\nBy disabling semantic tokens for strings, other grammars can be used to highlight\ntheir contents.","default":true,"type":"boolean"}}},{"title":"signatureInfo","properties":{"rust-analyzer.signatureInfo.detail":{"markdownDescription":"Show full signature of the callable. Only shows parameters if disabled.","default":"full","type":"string","enum":["full","parameters"],"enumDescriptions":["Show the entire signature.","Show only the parameters."]}}},{"title":"signatureInfo","properties":{"rust-analyzer.signatureInfo.documentation.enable":{"markdownDescription":"Show documentation.","default":true,"type":"boolean"}}},{"title":"typing","properties":{"rust-analyzer.typing.triggerChars":{"markdownDescription":"Specify the characters allowed to invoke special on typing triggers.\n- typing `=` after `let` tries to smartly add `;` if `=` is followed by an existing expression\n- typing `=` between two expressions adds `;` when in statement position\n- typing `=` to turn an assignment into an equality comparison removes `;` when in expression position\n- typing `.` in a chain method call auto-indents\n- typing `{` or `(` in front of an expression inserts a closing `}` or `)` after the expression\n- typing `{` in a use item adds a closing `}` in the right place\n- typing `>` to complete a return type `->` will insert a whitespace after it\n- typing `<` in a path or type position inserts a closing `>` after the path or type.","default":"=.","type":["null","string"]}}},{"title":"vfs","properties":{"rust-analyzer.vfs.extraIncludes":{"markdownDescription":"Additional paths to include in the VFS. Generally for code that is\ngenerated or otherwise managed by a build system outside of Cargo,\nthough Cargo might be the eventual consumer.","default":[],"type":"array","items":{"type":"string"}}}},{"title":"workspace","properties":{"rust-analyzer.workspace.discoverConfig":{"markdownDescription":"Enables automatic discovery of projects using [`DiscoverWorkspaceConfig::command`].\n\n[`DiscoverWorkspaceConfig`] also requires setting `progress_label` and `files_to_watch`.\n`progress_label` is used for the title in progress indicators, whereas `files_to_watch`\nis used to determine which build system-specific files should be watched in order to\nreload rust-analyzer.\n\nBelow is an example of a valid configuration:\n```json\n\"rust-analyzer.workspace.discoverConfig\": {\n        \"command\": [\n                \"rust-project\",\n                \"develop-json\"\n        ],\n        \"progressLabel\": \"rust-analyzer\",\n        \"filesToWatch\": [\n                \"BUCK\"\n        ]\n}\n```\n\n## On `DiscoverWorkspaceConfig::command`\n\n**Warning**: This format is provisional and subject to change.\n\n[`DiscoverWorkspaceConfig::command`] *must* return a JSON object\ncorresponding to `DiscoverProjectData::Finished`:\n\n```norun\n#[derive(Debug, Clone, Deserialize, Serialize)]\n#[serde(tag = \"kind\")]\n#[serde(rename_all = \"snake_case\")]\nenum DiscoverProjectData {\n        Finished { buildfile: Utf8PathBuf, project: ProjectJsonData },\n        Error { error: String, source: Option<String> },\n        Progress { message: String },\n}\n```\n\nAs JSON, `DiscoverProjectData::Finished` is:\n\n```json\n{\n        // the internally-tagged representation of the enum.\n        \"kind\": \"finished\",\n        // the file used by a non-Cargo build system to define\n        // a package or target.\n        \"buildfile\": \"rust-analyzer/BUILD\",\n        // the contents of a rust-project.json, elided for brevity\n        \"project\": {\n                \"sysroot\": \"foo\",\n                \"crates\": []\n        }\n}\n```\n\nIt is encouraged, but not required, to use the other variants on\n`DiscoverProjectData` to provide a more polished end-user experience.\n\n`DiscoverWorkspaceConfig::command` may *optionally* include an `{arg}`,\nwhich will be substituted with the JSON-serialized form of the following\nenum:\n\n```norun\n#[derive(PartialEq, Clone, Debug, Serialize)]\n#[serde(rename_all = \"camelCase\")]\npub enum DiscoverArgument {\n     Path(AbsPathBuf),\n     Buildfile(AbsPathBuf),\n}\n```\n\nThe JSON representation of `DiscoverArgument::Path` is:\n\n```json\n{\n        \"path\": \"src/main.rs\"\n}\n```\n\nSimilarly, the JSON representation of `DiscoverArgument::Buildfile` is:\n\n```json\n{\n        \"buildfile\": \"BUILD\"\n}\n```\n\n`DiscoverArgument::Path` is used to find and generate a `rust-project.json`,\nand therefore, a workspace, whereas `DiscoverArgument::buildfile` is used to\nto update an existing workspace. As a reference for implementors,\nbuck2's `rust-project` will likely be useful:\nhttps://github.com/facebook/buck2/tree/main/integrations/rust-project.","default":null,"anyOf":[{"type":"null"},{"type":"object","properties":{"command":{"type":"array","items":{"type":"string"}},"progressLabel":{"type":"string"},"filesToWatch":{"type":"array","items":{"type":"string"}}}}]}}},{"title":"workspace","properties":{"rust-analyzer.workspace.symbol.search.kind":{"markdownDescription":"Workspace symbol search kind.","default":"only_types","type":"string","enum":["only_types","all_symbols"],"enumDescriptions":["Search for types only.","Search for all symbols kinds."]}}},{"title":"workspace","properties":{"rust-analyzer.workspace.symbol.search.limit":{"markdownDescription":"Limits the number of items returned from a workspace symbol search (Defaults to 128).\nSome clients like vs-code issue new searches on result filtering and don't require all results to be returned in the initial search.\nOther clients requires all results upfront and might require a higher limit.","default":128,"type":"integer","minimum":0}}},{"title":"workspace","properties":{"rust-analyzer.workspace.symbol.search.scope":{"markdownDescription":"Workspace symbol search scope.","default":"workspace","type":"string","enum":["workspace","workspace_and_dependencies"],"enumDescriptions":["Search in current workspace only.","Search in current workspace and dependencies."]}}},{}],"configurationDefaults":{"explorer.fileNesting.patterns":{"Cargo.toml":"Cargo.lock"}},"problemPatterns":[{"name":"rustc","patterns":[{"regexp":"^(warning|warn|error)(?:\\[(.*?)\\])?: (.*)$","severity":1,"code":2,"message":3},{"regexp":"^[\\s->=]*(.*?):([1-9]\\d*):([1-9]\\d*)\\s*$","file":1,"line":2,"column":3}]},{"name":"rustc-json","patterns":[{"regexp":"^.*\"message\":{\"message\":\"([^\"]*).*?\"file_name\":\"([^\"]+).*?\"line_start\":(\\d+).*?\"line_end\":(\\d+).*?\"column_start\":(\\d+).*?\"column_end\":(\\d+).*}$","message":1,"file":2,"line":3,"endLine":4,"column":5,"endColumn":6}]},{"name":"rust-panic","patterns":[{"regexp":"^thread '.*' panicked at (.*):(\\d*):(\\d*):$","file":1,"line":2,"column":3},{"regexp":"(.*)","message":1}]}],"languages":[{"id":"ra_syntax_tree","extensions":[".rast"]},{"id":"rust","extensions":[".rs"],"aliases":["Rust","rs"],"configuration":"language-configuration.json"}],"grammars":[{"language":"ra_syntax_tree","scopeName":"source.ra_syntax_tree","path":"ra_syntax_tree.tmGrammar.json"}],"problemMatchers":[{"name":"rustc","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc"},{"name":"rustc-json","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc-json"},{"name":"rust-panic","owner":"rust-panic","source":"panic","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rust-panic"},{"name":"rustc-watch","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"background":{"beginsPattern":"^\\[Running\\b","endsPattern":"^\\[Finished running\\b"},"pattern":"$rustc"}],"semanticTokenTypes":[{"id":"angle","description":"Style for < or >","superType":"punctuation"},{"id":"arithmetic","description":"Style for arithmetic operators","superType":"operator"},{"id":"attribute","description":"Style for attributes"},{"id":"attributeBracket","description":"Style for attribute invocation brackets, that is the `#[` and `]` tokens","superType":"punctuation"},{"id":"bitwise","description":"Style for bitwise operators","superType":"operator"},{"id":"boolean","description":"Style for boolean literals","superType":"keyword"},{"id":"brace","description":"Style for { or }","superType":"punctuation"},{"id":"bracket","description":"Style for [ or ]","superType":"punctuation"},{"id":"builtinAttribute","description":"Style for builtin attributes","superType":"attribute"},{"id":"builtinType","description":"Style for builtin types","superType":"type"},{"id":"character","description":"Style for character literals","superType":"string"},{"id":"colon","description":"Style for :","superType":"punctuation"},{"id":"comma","description":"Style for ,","superType":"punctuation"},{"id":"comparison","description":"Style for comparison operators","superType":"operator"},{"id":"constParameter","description":"Style for const generics"},{"id":"const","description":"Style for consts","superType":"variable"},{"id":"derive","description":"Style for derives","superType":"attribute"},{"id":"deriveHelper","description":"Style for derive helpers","superType":"attribute"},{"id":"dot","description":"Style for .","superType":"punctuation"},{"id":"escapeSequence","description":"Style for char or byte escapes in strings"},{"id":"formatSpecifier","description":"Style for {} placeholders in format strings"},{"id":"invalidEscapeSequence","description":"Style for invalid char or byte escapes in strings"},{"id":"label","description":"Style for labels"},{"id":"lifetime","description":"Style for lifetimes"},{"id":"logical","description":"Style for logic operators","superType":"operator"},{"id":"macroBang","description":"Style for the ! token of macro calls","superType":"punctuation"},{"id":"parenthesis","description":"Style for ( or )","superType":"punctuation"},{"id":"procMacro","description":"Style for proc macro code","superType":"macro"},{"id":"punctuation","description":"Style for generic punctuation"},{"id":"operator","description":"Style for operators","superType":"punctuation"},{"id":"selfKeyword","description":"Style for the self keyword","superType":"keyword"},{"id":"selfTypeKeyword","description":"Style for the self type keyword","superType":"keyword"},{"id":"semicolon","description":"Style for ;","superType":"punctuation"},{"id":"static","description":"Style for statics","superType":"variable"},{"id":"toolModule","description":"Style for tool module attributes","superType":"decorator"},{"id":"typeAlias","description":"Style for type aliases","superType":"type"},{"id":"union","description":"Style for C-style untagged unions","superType":"type"},{"id":"unresolvedReference","description":"Style for names which can not be resolved due to compilation errors"}],"semanticTokenModifiers":[{"id":"async","description":"Style for async functions and the `async` and `await` keywords"},{"id":"attribute","description":"Style for elements within attributes"},{"id":"callable","description":"Style for locals whose types implements one of the `Fn*` traits"},{"id":"constant","description":"Style for compile-time constants"},{"id":"consuming","description":"Style for locals that are being consumed when use in a function call"},{"id":"controlFlow","description":"Style for control-flow related tokens, this includes the `?` operator"},{"id":"crateRoot","description":"Style for names resolving to a crate root"},{"id":"injected","description":"Style for doc-string injected highlighting like rust source blocks in documentation"},{"id":"intraDocLink","description":"Style for intra doc links in doc-strings"},{"id":"library","description":"Style for items that are defined outside of the current crate"},{"id":"macro","description":"Style for tokens inside of macro calls"},{"id":"mutable","description":"Style for mutable locals and statics as well as functions taking `&mut self`"},{"id":"procMacro","description":"Style for tokens inside of proc-macro calls"},{"id":"public","description":"Style for items that are from the current crate and are `pub`"},{"id":"reference","description":"Style for locals behind a reference and functions taking `self` by reference"},{"id":"trait","description":"Style for associated trait items"},{"id":"unsafe","description":"Style for unsafe operations, like unsafe function calls, as well as the `unsafe` token"}],"semanticTokenScopes":[{"language":"rust","scopes":{"attribute":["meta.attribute.rust"],"boolean":["constant.language.boolean.rust"],"builtinType":["support.type.primitive.rust"],"constParameter":["constant.other.caps.rust"],"enum":["entity.name.type.enum.rust"],"formatSpecifier":["punctuation.section.embedded.rust"],"function":["entity.name.function.rust"],"interface":["entity.name.type.trait.rust"],"keyword":["keyword.other.rust"],"keyword.controlFlow":["keyword.control.rust"],"lifetime":["storage.modifier.lifetime.rust"],"macroBang":["entity.name.function.macro.rust"],"method":["entity.name.function.rust"],"struct":["entity.name.type.struct.rust"],"typeAlias":["entity.name.type.declaration.rust"],"union":["entity.name.type.union.rust"],"variable":["variable.other.rust"],"variable.constant":["variable.other.constant.rust"],"*.mutable":["markup.underline"]}}],"menus":{"commandPalette":[{"command":"rust-analyzer.viewHir","when":"inRustProject"},{"command":"rust-analyzer.viewFileText","when":"inRustProject"},{"command":"rust-analyzer.expandMacro","when":"inRustProject"},{"command":"rust-analyzer.matchingBrace","when":"inRustProject"},{"command":"rust-analyzer.parentModule","when":"inRustProject"},{"command":"rust-analyzer.childModules","when":"inRustProject"},{"command":"rust-analyzer.joinLines","when":"inRustProject"},{"command":"rust-analyzer.run","when":"inRustProject"},{"command":"rust-analyzer.debug","when":"inRustProject"},{"command":"rust-analyzer.newDebugConfig","when":"inRustProject"},{"command":"rust-analyzer.analyzerStatus","when":"inRustProject"},{"command":"rust-analyzer.memoryUsage","when":"inRustProject"},{"command":"rust-analyzer.reloadWorkspace","when":"inRustProject"},{"command":"rust-analyzer.restartServer","when":"inRustProject"},{"command":"rust-analyzer.onEnter","when":"inRustProject"},{"command":"rust-analyzer.ssr","when":"inRustProject"},{"command":"rust-analyzer.serverVersion","when":"inRustProject"},{"command":"rust-analyzer.openDocs","when":"inRustProject"},{"command":"rust-analyzer.openCargoToml","when":"inRustProject"},{"command":"rust-analyzer.viewMemoryLayout","when":"inRustProject"},{"command":"rust-analyzer.toggleLSPLogs","when":"inRustProject"},{"command":"rust-analyzer.openWalkthrough"},{"command":"rust-analyzer.syntaxTreeReveal","when":"false"},{"command":"rust-analyzer.syntaxTreeCopy","when":"false"},{"command":"rust-analyzer.syntaxTreeHideWhitespace","when":"false"},{"command":"rust-analyzer.syntaxTreeShowWhitespace","when":"false"}],"editor/context":[{"command":"rust-analyzer.peekTests","when":"inRustProject && editorTextFocus && editorLangId == rust","group":"navigation@1000"},{"command":"rust-analyzer.openDocs","when":"inRustProject && editorTextFocus && editorLangId == rust","group":"navigation@1001"}],"view/title":[{"command":"rust-analyzer.syntaxTreeHideWhitespace","group":"navigation","when":"view == rustSyntaxTree && !rustSyntaxTree.hideWhitespace"},{"command":"rust-analyzer.syntaxTreeShowWhitespace","group":"navigation","when":"view == rustSyntaxTree && rustSyntaxTree.hideWhitespace"}],"view/item/context":[{"command":"rust-analyzer.syntaxTreeCopy","group":"inline","when":"view == rustSyntaxTree"},{"command":"rust-analyzer.syntaxTreeReveal","group":"inline","when":"view == rustSyntaxTree"}]},"views":{"explorer":[{"icon":"$(package)","id":"rustDependencies","name":"Rust Dependencies","when":"inRustProject && config.rust-analyzer.showDependenciesExplorer"}],"rustSyntaxTreeContainer":[{"icon":"$(file-code)","id":"rustSyntaxTree","name":"Rust Syntax Tree","when":"inRustProject && config.rust-analyzer.showSyntaxTree"}]},"viewsContainers":{"activitybar":[{"id":"rustSyntaxTreeContainer","title":"Rust Syntax Tree","icon":"$(list-tree)"}]},"jsonValidation":[{"fileMatch":"rust-project.json","url":"https://json.schemastore.org/rust-project.json"},{"fileMatch":".rust-project.json","url":"https://json.schemastore.org/rust-project.json"}],"walkthroughs":[{"id":"landing","title":"Learn about rust-analyzer","description":"A brief introduction to get started with rust-analyzer. Learn about key features and resources to help you get the most out of the extension.","steps":[{"id":"setup","title":"Useful Setup Tips","description":"There are a couple of things you might want to configure upfront to your tastes. We'll name a few here but be sure to check out the docs linked below!\n\n**Marking library sources as readonly**\n\nAdding the snippet on the right to your settings.json will mark all Rust library sources as readonly.\n\n**Check on Save**\n\nBy default, rust-analyzer will run ``cargo check`` on your codebase when you save a file, rendering diagnostics emitted by ``cargo check`` within your code. This can potentially collide with other ``cargo`` commands running concurrently, blocking them from running for a certain amount of time. In these cases it is recommended to disable the ``rust-analyzer.checkOnSave`` configuration and running the ``rust-analyzer: Run flycheck`` command on-demand instead.","media":{"markdown":"./walkthrough-setup-tips.md"}},{"id":"docs","title":"Visit the docs!","description":"Confused about configurations? Want to learn more about rust-analyzer? Visit the [User Manual](https://rust-analyzer.github.io/book/)!","media":{"image":"./icon.png","altText":"rust-analyzer logo"},"completionEvents":["onLink:https://rust-analyzer.github.io/book/"]},{"id":"faq","title":"FAQ","description":"What are these code hints that are being inserted into my code?\n\nThese hints are called inlay hints which rust-analyzer support and are enabled by default in VSCode. If you wish to disable them you can do so via the ``editor.inlayHints.enabled`` setting.","media":{"image":"icon.png","altText":"rust-analyzer logo"}},{"id":"changelog","title":"Changelog","description":"Stay up-to-date with the latest changes in rust-analyzer. Check out the changelog [here](https://rust-analyzer.github.io/thisweek)!","media":{"image":"icon.png","altText":"rust-analyzer logo"},"completionEvents":["onLink:https://rust-analyzer.github.io/thisweek"]}]}]}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/rust-lang.rust-analyzer-0.3.2441-darwin-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"darwin-x64","publisherDisplayName":"The Rust Programming Language ","metadata":{"installedTimestamp":1745949932537,"source":"gallery","id":"06574cb4-e5dc-4631-8174-a543a4533621","publisherId":"cb14a7a7-a188-40bd-a953-e0a20757c5dd","publisherDisplayName":"The Rust Programming Language ","targetPlatform":"darwin-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":45502370},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-toolsai.prompty","uuid":"caa1276d-3c20-44bf-ab43-6cf03ad139e9"},"manifest":{"name":"prompty","displayName":"Prompty","description":"Prompty Extension","publisher":"ms-toolsai","icon":"icons/prompty128x128.png","version":"0.1.2024060511","engines":{"vscode":"^1.75.0"},"repository":{"type":"git","url":"https://github.com/microsoft/prompty.git"},"preview":true,"categories":["Azure","Data Science","Machine Learning"],"keywords":["Prompt","Prompt Engineering","Azure OpenAI","LLM","LLMOps"],"main":"./packages/core/out/extension.js","contributes":{"markdown.markdownItPlugins":true,"configuration":{"title":"Prompty","properties":{"promptyLanguageServer.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the language server."},"prompty.currentModelConfiguration":{"type":"string","description":"Current configuration","default":"default"},"prompty.modelConfigurations":{"type":"array","description":"List of configurations","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the configuration. If type is openai, this is also the model name"},"type":{"type":"string","description":"Type of cloud provider. 'azure_openai' or 'openai'.","default":"azure_openai"},"api_version":{"type":"string","description":"Azure OpenAI API version."},"azure_endpoint":{"type":"string","description":"Azure OpenAI Endpoint URL."},"azure_deployment":{"type":"string","description":"Azure OpenAI Deployment Name."},"api_key":{"type":"string","description":"API key. Leave it empty to use AAD auth."},"base_url":{"type":"string","description":"OpenAI base url. Leave it empty to use default"},"organization":{"type":"string","description":"Organization, only applicable to OpenAI"}},"required":["name","type"]},"default":[{"name":"default","type":"azure_openai","api_version":"2023-12-01-preview","azure_endpoint":"${env:AZURE_OPENAI_ENDPOINT}","azure_deployment":"","api_key":"${env:AZURE_OPENAI_API_KEY}"},{"name":"gpt-3.5-turbo","type":"openai","api_key":"${env:OPENAI_API_KEY}","organization":"${env:OPENAI_ORG_ID}","base_url":"${env:OPENAI_BASE_URL}"}]}}},"languages":[{"id":"prompty","aliases":["Prompty","prompty"],"icon":{"light":"icons/prompty16x16.png","dark":"icons/prompty16x16.png"},"extensions":[".prompty"],"configuration":"./config/language-configuration.json"}],"semanticTokenScopes":[{"language":"prompty","scopes":{"punctuation-begin":["punctuation.definition.template-expression.begin"],"punctuation-end":["punctuation.definition.template-expression.end"]}}],"semanticTokenTypes":[{"id":"punctuation-begin","description":"Punctuation that indicates the beginning of a template expression or statement."},{"id":"punctuation-end","description":"Punctuation that indicates the end of a template expression or statement."}],"grammars":[{"path":"./syntaxes/prompty.tmLanguage.json","language":"prompty","scopeName":"source.prompty","embeddedLanguages":{"meta.embedded.block.yaml":"yaml","meta.embedded.block.jinja":"jinja"}}],"commands":[{"command":"prompty.newPrompt","category":"Prompty","title":"New Prompty","icon":"$(new-file)"},{"command":"prompty.runPrompt","category":"Prompty","title":"Run","icon":"$(play)"},{"command":"prompty.showMarkdownPreview","category":"Prompty","title":"Preview as Markdown","icon":"$(open-preview)"},{"command":"prompty.addCodePromptflow","category":"Prompty","title":"Add Prompt flow Code","icon":"$(new-file)"},{"command":"prompty.addCodeLangchain","category":"Prompty","title":"Add Langchain Code","icon":"$(new-file)"},{"command":"prompty.addCodeSemanticKernel","category":"Prompty","title":"Add Semantic Kernel Code","icon":"$(new-file)"}],"menus":{"explorer/context":[{"command":"prompty.newPrompt","group":"prompty@1"},{"command":"prompty.addCodePromptflow","when":"resourceExtname == .prompty","group":"prompty@2"},{"command":"prompty.addCodeLangchain","when":"resourceExtname == .prompty","group":"prompty@3"},{"command":"prompty.addCodeSemanticKernel","when":"resourceExtname == .prompty","group":"prompty@2"}],"editor/title":[{"command":"prompty.showMarkdownPreview","when":"resourceExtname == .prompty","group":"navigation@2"},{"command":"prompty.runPrompt","when":"resourceExtname == .prompty","group":"navigation@1"}]},"keybindings":[{"command":"prompty.runPrompt","key":"f5","when":"resourceExtname == .prompty"}]},"scripts":{"build:core":"cd packages/core && pnpm run build","build:trace":"cd packages/trace && pnpm run build","build:server":"cd packages/server && pnpm run build","build":"pnpm run build:core && pnpm run build:server","clean:core":"cd packages/core && pnpm run clean","clean:trace":"cd packages/trace && pnpm run clean","clean:server":"cd packages/server && pnpm run clean","clean":"pnpm run clean:core && pnpm run clean:trace && pnpm run clean:server","watch:core":"cd packages/core && npm run watch","watch:trace":"cd packages/trace && npm run dev","watch:server":"cd packages/server && npm run watch","watch":"concurrently npm:watch:core npm:watch:trace npm:watch:server","format:core":"cd packages/core && pnpm run format","format:trace":"cd packages/trace && pnpm run format","format:server":"cd packages/server && pnpm run format","format":"pnpm run format:core && pnpm run format:trace && pnpm run format:server","generate-grammar":"js-yaml ./syntaxes/prompty.tmLanguage.yaml > ./syntaxes/prompty.tmLanguage.json","postinstall":"pnpm run generate-grammar","bundle:server":"cd packages/server; pnpm run bundle","vscode:prepublish":"pnpm run build && pnpm run esbuild-base && pnpm run bundle:server","esbuild-base":"esbuild ./packages/core/src/extension.ts --bundle --outfile=packages/core/out/extension.js --external:vscode --format=cjs --platform=node","esbuild":"npm run esbuild-base -- --sourcemap","esbuild-watch":"npm run esbuild-base -- --sourcemap --watch","package":"pnpm vsce package --no-dependencies --allow-missing-repository","package-pre":"pnpm vsce package --no-dependencies --allow-missing-repository --pre-release","publish":"pnpm vsce publish --no-dependencies --allow-missing-repository","dev":"npm run watch","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts"},"devDependencies":{"@types/glob":"^7.1.3","@types/js-yaml":"^4.0.9","@types/node":"^12.20.55","@types/vscode":"^1.46.0","@typescript-eslint/eslint-plugin":"^4.14.1","@typescript-eslint/parser":"^4.14.1","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.26.1","concurrently":"^8.2.2","esbuild":"^0.20.1","eslint":"^7.32.0","eslint-plugin-promise":"^6.1.1","glob":"^7.1.6","js-yaml":"^4.1.0","prettier":"^2.2.1","typescript":"^5.4.5","vscode-test":"^1.5.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-toolsai.prompty-0.1.2024060511","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745949938429,"source":"gallery","id":"caa1276d-3c20-44bf-ab43-6cf03ad139e9","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":10397751},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"eamodio.gitlens","uuid":"4de763bd-505d-4978-9575-2b7696ecf94e"},"manifest":{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more","version":"17.0.3","engines":{"node":">= 22.12.0","pnpm":">= 10.0.0","vscode":"^1.92.0"},"license":"SEE LICENSE IN LICENSE","publisher":"eamodio","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"homepage":"https://gitkraken.com/gitlens","bugs":{"url":"https://github.com/gitkraken/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/gitkraken/vscode-gitlens.git"},"main":"./dist/gitlens.js","browser":"./dist/browser/gitlens.js","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/gitkraken--community-gitlens-blue.svg?logo=slack&labelColor=555555","href":"https://slack.gitkraken.com/","description":"Join us in the #gitlens channel"}],"categories":["Other","SCM Providers"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["onFileSystem:gitlens","onUri","onWebviewPanel:gitlens.graph","onWebviewPanel:gitlens.patchDetails","onWebviewPanel:gitlens.settings","onWebviewPanel:gitlens.timeline","onStartupFinished"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited"}},"contributes":{"configuration":[{"id":"current-line-blame","title":"Inline Blame","order":10,"properties":{"gitlens.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an inline blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window","order":10},"gitlens.currentLine.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the inline blame annotation. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.currentLine.format":{"type":"string","default":"${author, }${agoOrDate}${' via  'pullRequest}${ • message|50?}","markdownDescription":"Specifies the format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting","scope":"window","order":30},"gitlens.currentLine.uncommittedChangesFormat":{"type":"string","default":null,"markdownDescription":"Specifies the uncommitted changes format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting.\n\n**NOTE**: Setting this to an empty string will disable inline blame annotations for uncommitted changes.","scope":"window","order":31},"gitlens.currentLine.fontFamily":{"type":"string","default":"","markdownDescription":"Specifies the font family of the inline blame annotation","scope":"window","order":33},"gitlens.currentLine.fontSize":{"type":"number","default":0,"markdownDescription":"Specifies the font size of the inline blame annotation","scope":"window","order":34},"gitlens.currentLine.fontStyle":{"type":"string","default":"normal","markdownDescription":"Specifies the font style of the inline blame annotation","scope":"window","order":35},"gitlens.currentLine.fontWeight":{"type":"string","default":"normal","markdownDescription":"Specifies the font weight of the inline blame annotation","scope":"window","order":36},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the inline blame annotation can be scrolled into view when it is outside the viewport. **NOTE**: Setting this to `false` will inhibit the hovers from showing over the annotation; Set `#gitlens.hovers.currentLine.over#` to `line` to enable the hovers to show anywhere over the line.","scope":"window","order":40},"gitlens.currentLine.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) for the inline blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":50}}},{"id":"git-code-lens","title":"Git CodeLens","order":11,"properties":{"gitlens.codeLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any Git CodeLens, by default. Use the `Toggle Git CodeLens` command (`gitlens.toggleCodeLens`) to toggle the Git CodeLens on and off for the current window","scope":"window","order":10},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an _authors_ CodeLens, showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window","order":20},"gitlens.codeLens.authors.command":{"type":["boolean","string"],"enum":[false,"gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Disables click interaction","Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Compares the current committed file with the previous commit","Reveals the commit in the Side Bar","Searches for commits within the range","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"default":"gitlens.toggleFileBlame","markdownDescription":"Specifies the command to be executed when an _authors_ CodeLens is clicked","scope":"window","order":21},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _recent change_ CodeLens, showing the author and date of the most recent commit for the file or code block","scope":"window","order":30},"gitlens.codeLens.recentChange.command":{"type":["boolean","string"],"enum":[false,"gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Disables click interaction","Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Compares the current committed file with the previous commit","Reveals the commit in the Side Bar","Shows the Inspect","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"default":"gitlens.showQuickCommitFileDetails","markdownDescription":"Specifies the command to be executed when a _recent change_ CodeLens is clicked","scope":"window","order":31},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds CodeLens at the top of the document","Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":0,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where Git CodeLens will be shown in the document","scope":"language-overridable","order":40},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Specifies a set of document symbols where Git CodeLens will or will not be shown in the document. Prefix with `!` to avoid providing a Git CodeLens for the symbol. Must be a member of `SymbolKind`","scope":"language-overridable","order":50},"gitlens.codeLens.includeSingleLineSymbols":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to provide any Git CodeLens on symbols that span only a single line","scope":"window","order":60},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of both the _recent change_ and _authors_ CodeLens when there are unsaved changes","scope":"window","order":70},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of the _recent change_ CodeLens when there are unsaved changes","scope":"window","order":71},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of the _authors_ CodeLens when there are unsaved changes","scope":"window","order":72},"gitlens.codeLens.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates in the Git CodeLens. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":73},"gitlens.codeLens.scopesByLanguage":{"deprecationMessage":"Deprecated. Use per-language `gitlens.codeLens.scopes` and `gitlens.codeLens.symbolScopes` settings instead","markdownDeprecationMessage":"Deprecated. Use the per-language `#gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes#` settings instead"}}},{"id":"status-bar-blame","title":"Status Bar Blame","order":12,"properties":{"gitlens.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide blame information in the status bar","scope":"window","order":10},"gitlens.statusBar.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the status bar. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.statusBar.format":{"type":"string","default":"${author}, ${agoOrDate}${' via  'pullRequest}","markdownDescription":"Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.statusBar.dateFormat#` setting","scope":"window","order":30},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the blame alignment in the status bar","scope":"window","order":40},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.toggleCodeLens","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Toggles Git CodeLens","Compares the current line commit with the previous","Compares the current line commit with the working tree","Reveals the commit in the Side Bar","Shows the Inspect","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"markdownDescription":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window","order":50},"gitlens.statusBar.tooltipFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_${' via  'pullRequest} ${message}${\n\n---\n\nfootnotes}\n\n${commands}","editPresentation":"multilineText","markdownDescription":"Specifies the format (in markdown) of hover shown over the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":60},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window","order":70},"gitlens.statusBar.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":80}}},{"id":"hovers","title":"Hovers","order":13,"properties":{"gitlens.hovers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers","scope":"window","order":10},"gitlens.hovers.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in hovers","scope":"window","order":20},"gitlens.hovers.avatarSize":{"type":"number","default":32,"markdownDescription":"Specifies the size of the avatar images in hovers","scope":"window","order":21},"gitlens.hovers.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the hovers. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.hovers.autolinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically link external resources in commit messages","scope":"window","order":31},"gitlens.hovers.autolinks.enhanced":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers for the current line","scope":"window","order":40},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers for the current line","scope":"window","order":41},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for the current line","scope":"window","order":42},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for the current line","scope":"window","order":43},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers when showing blame annotations","scope":"window","order":50},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers when showing blame annotations","scope":"window","order":51},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations","scope":"window","order":52},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations","scope":"window","order":53},"gitlens.hovers.detailsMarkdownFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_${' via  'pullRequest} ${message}${\n\n---\n\nfootnotes}\n\n${commands}","editPresentation":"multilineText","markdownDescription":"Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":60},"gitlens.hovers.changesDiff":{"type":"string","default":"line","enum":["line","hunk"],"enumDescriptions":["Shows only the changes to the line","Shows the set of related changes"],"markdownDescription":"Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover","scope":"window","order":70}}},{"id":"file-annotations","title":"File Annotations","order":14,"properties":{"gitlens.fileAnnotations.dismissOnEscape":{"type":"boolean","default":true,"markdownDescription":"Specifies whether pressing the `ESC` key dismisses the active file annotations","scope":"window","order":10},"gitlens.fileAnnotations.command":{"type":["string","null"],"default":null,"enum":[null,"blame","heatmap","changes"],"enumDescriptions":["Shows a menu to choose which file annotations to toggle","Toggles file blame annotations","Toggles file heatmap annotations","Toggles file changes annotations"],"markdownDescription":"Specifies whether the file annotations button in the editor title shows a menu or immediately toggles the specified file annotations","scope":"window","order":20},"gitlens.fileAnnotations.preserveWhileEditing":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file annotations will be preserved while editing. Use `#gitlens.advanced.blame.delayAfterEdit#` to control how long to wait before the annotation will update while the file is still dirty","scope":"window","order":30},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit but before it is saved. Use 0 to specify an infinite wait. Only applies if the file is under the `#gitlens.advanced.sizeThresholdAfterEdit#`","scope":"window","order":90},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window","order":91}}},{"id":"file-blame","title":"File Blame","order":15,"properties":{"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file blame annotations will be toggled","scope":"window","order":10},"gitlens.blame.format":{"type":"string","default":"${message|50?} ${agoOrDate|14-}","markdownDescription":"Specifies the format of the file blame annotations. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.blame.dateFormat#` setting","scope":"window","order":20},"gitlens.blame.fontFamily":{"type":"string","default":"","markdownDescription":"Specifies the font family of the file blame annotations","scope":"window","order":22},"gitlens.blame.fontSize":{"type":"number","default":0,"markdownDescription":"Specifies the font size of the file blame annotations","scope":"window","order":23},"gitlens.blame.fontStyle":{"type":"string","default":"normal","markdownDescription":"Specifies the font style of the file blame annotations","scope":"window","order":24},"gitlens.blame.fontWeight":{"type":"string","default":"normal","markdownDescription":"Specifies the font weight of the file blame annotations","scope":"window","order":25},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a heatmap indicator in the file blame annotations","scope":"window","order":30},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the file blame annotations","Adds a heatmap indicator on the right edge of the file blame annotations"],"markdownDescription":"Specifies where the heatmap indicators will be shown in the file blame annotations","scope":"window","order":31},"gitlens.blame.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in the file blame annotations","scope":"window","order":40},"gitlens.blame.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (deduplicate) matching adjacent file blame annotations","scope":"window","order":50},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight lines associated with the current line","scope":"window","order":60},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the associated line highlights will be shown","scope":"window","order":61},"gitlens.blame.separateLines":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file blame annotations will be separated by a small gap","scope":"window","order":70},"gitlens.blame.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in file blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":80}}},{"id":"file-changes","title":"File Changes","order":16,"properties":{"gitlens.changes.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file changes annotations will be toggled","scope":"window","order":10},"gitlens.changes.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the indicators of the file changes annotations will be shown","scope":"window","order":20}}},{"id":"file-heatmap","title":"File Heatmap","order":17,"properties":{"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file heatmap annotations will be toggled","scope":"window","order":10},"gitlens.heatmap.locations":{"type":"array","default":["gutter","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the indicators of the file heatmap annotations will be shown","scope":"window","order":20},"gitlens.heatmap.fadeLines":{"type":"boolean","default":true,"markdownDescription":"Specifies the whether to fade out older lines","scope":"window","order":21},"gitlens.heatmap.ageThreshold":{"type":"number","default":90,"markdownDescription":"Specifies the age of the most recent change (in days) after which the file heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window","order":30},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","markdownDescription":"Specifies the base color of the file heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window","order":40},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","markdownDescription":"Specifies the base color of the file heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window","order":50}}},{"id":"graph","title":"Commit Graph (ᴘʀᴏ)","order":50,"properties":{"gitlens.graph.layout":{"type":"string","default":"panel","enum":["editor","panel"],"enumDescriptions":["Prefer showing the Commit Graph in the editor area","Prefer showing the Commit Graph in the bottom panel"],"markdownDescription":"Specifies the preferred layout of the _Commit Graph_","scope":"window","order":1},"gitlens.graph.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Commit Graph_ in the editor area","scope":"window","order":2},"gitlens.graph.multiselect":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow selecting multiple commits in the _Commit Graph_","scope":"window","order":10},"gitlens.graph.minimap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a minimap of commit activity above the _Commit Graph_","scope":"window","order":100},"gitlens.graph.minimap.dataType":{"type":"string","default":"commits","enum":["commits","lines"],"enumDescriptions":["Shows the number of commits per day in the minimap","Shows the number of lines changed per day in the minimap"],"markdownDescription":"Specifies the data to show on the minimap in the _Commit Graph_","scope":"window","order":101},"gitlens.graph.minimap.additionalTypes":{"type":"array","default":["localBranches","stashes"],"items":{"type":"string","enum":["localBranches","remoteBranches","pullRequests","stashes","tags"],"enumDescriptions":["Marks the location of local branches","Marks the location of remote branches","Marks the location of pull requests","Marks the location of stashes","Marks the location of tags"]},"minItems":0,"maxItems":5,"uniqueItems":true,"markdownDescription":"Specifies additional markers to show on the minimap in the _Commit Graph_","scope":"window","order":102},"gitlens.graph.scrollMarkers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show markers on the scrollbar in the _Commit Graph_","scope":"window","order":200},"gitlens.graph.scrollMarkers.additionalTypes":{"type":"array","default":["localBranches","stashes"],"items":{"type":"string","enum":["localBranches","remoteBranches","pullRequests","stashes","tags"],"enumDescriptions":["Marks the location of local branches","Marks the location of remote branches","Marks the location of pull requests","Marks the location of stashes","Marks the location of tags"]},"minItems":0,"maxItems":5,"uniqueItems":true,"markdownDescription":"Specifies additional markers to show on the scrollbar in the _Commit Graph_","scope":"window","order":201},"gitlens.graph.sidebar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a sidebar on the _Commit Graph_","scope":"window","order":300},"gitlens.graph.experimental.renderer.enabled":{"type":"boolean","default":false,"markdownDescription":"(Experimental) Specifies whether to use the new renderer for the _Commit Graph_. Requires a restart","scope":"window","order":301,"tags":["experimental"]},"gitlens.graph.branchesVisibility":{"type":"string","enum":["all","smart","current"],"enumDescriptions":["Shows all branches","Shows only relevant branches","Shows only the current branch"],"default":"all","markdownDescription":"Specifies the visibility of branches on the _Commit Graph_","scope":"window","order":400},"gitlens.graph.showDetailsView":{"type":["boolean","string"],"default":"selection","enum":[false,"open","selection"],"enumDescriptions":["Never shows the _Commit Details_ view automatically","Shows the _Commit Details_ view automatically only when opening the _Commit Graph_","Shows the _Commit Details_ view automatically when selection changes in the _Commit Graph_"],"markdownDescription":"Specifies when to show the _Commit Details_ view for the selected row in the _Commit Graph_","scope":"window","order":500},"gitlens.graph.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how absolute dates will be formatted in the _Commit Graph_. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":600},"gitlens.graph.dateStyle":{"type":["string","null"],"default":null,"enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed in the _Commit Graph_","scope":"window","order":601},"gitlens.graph.commitOrdering":{"type":"string","default":"date","enum":["date","author-date","topo"],"enumDescriptions":["Shows commits in reverse chronological order of the commit timestamp","Shows commits in reverse chronological order of the author timestamp","Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"],"markdownDescription":"Specifies the order by which commits will be shown on the _Commit Graph_","scope":"window","order":602},"gitlens.graph.onlyFollowFirstParent":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to only follow the first parent when showing commits on the _Commit Graph_","order":603},"gitlens.graph.dimMergeCommits":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to dim (deemphasize) merge commit rows in the _Commit Graph_","scope":"window","order":700},"gitlens.graph.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a local branch's upstream status in the _Commit Graph_","scope":"window","order":701},"gitlens.graph.showRemoteNames":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show remote names on remote branches in the _Commit Graph_","scope":"window","order":702},"gitlens.graph.issues.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show associated issues on branches in the _Commit Graph_. Requires a connection to a supported issue service (e.g. GitHub)","scope":"window","order":703},"gitlens.graph.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show associated pull requests on remote branches in the _Commit Graph_. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":704},"gitlens.graph.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of author initials and remote icons in the _Commit Graph_","scope":"window","order":704},"gitlens.graph.showGhostRefsOnRowHover":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a ghost branch / tag when hovering over or selecting a row in the _Commit Graph_","scope":"window","order":750},"gitlens.graph.highlightRowsOnRefHover":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight rows associated with the branch / tag when hovering over it in the _Commit Graph_","scope":"window","order":751},"gitlens.graph.defaultItemLimit":{"type":"number","default":500,"markdownDescription":"Specifies the default number of items to show in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":800},"gitlens.graph.pageItemLimit":{"type":"number","default":200,"markdownDescription":"Specifies the number of additional items to fetch when paginating in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":801},"gitlens.graph.searchItemLimit":{"type":"number","default":100,"markdownDescription":"Specifies the number of results to gather when searching in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":802},"gitlens.graph.scrollRowPadding":{"type":"number","default":0,"markdownDescription":"Specifies the number of rows from the edge at which the graph will scroll when using keyboard or search to change the selected row","scope":"window","order":900},"gitlens.graph.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Commit Graph_ in the status bar","scope":"window","order":1000}}},{"id":"home","title":"Home","order":55,"properties":{"gitlens.home.preview.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable the new home preview","scope":"window","order":10}}},{"id":"launchpad","title":"Launchpad (ᴘʀᴏ)","order":60,"properties":{"gitlens.launchpad.ignoredRepositories":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the repositories to ignore in the _Launchpad_","scope":"window","order":10},"gitlens.launchpad.includedOrganizations":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the organizations to include in the _Launchpad_. If empty, all organizations are included","scope":"window","order":11},"gitlens.launchpad.ignoredOrganizations":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the organizations to ignore in the _Launchpad_","scope":"window","order":12},"gitlens.launchpad.staleThreshold":{"type":["number","null"],"default":null,"markdownDescription":"Specifies the number of days after which a pull request is considered stale and moved to Other in the _Launchpad_","scope":"window","order":20},"gitlens.launchpad.indicator.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable status bar indicator for _Launchpad_","scope":"window","order":100},"gitlens.launchpad.indicator.icon":{"type":"string","enum":["default","group"],"enumDescriptions":["Shows the Launchpad icon","Shows the icon of the highest priority group"],"default":"default","markdownDescription":"Specifies the style of the  _Launchpad_ status bar indicator icon","scope":"window","order":110},"gitlens.launchpad.indicator.label":{"type":["boolean","string"],"enum":[false,"item","counts"],"enumDescriptions":["Hides the label","Shows the highest priority item which needs your attention","Shows the status counts of items which need your attention"],"default":"item","markdownDescription":"Specifies the display of the  _Launchpad_ status bar indicator label","scope":"window","order":120},"gitlens.launchpad.indicator.groups":{"type":"array","default":["mergeable","blocked","needs-review","follow-up"],"items":{"type":"string","enum":["mergeable","blocked","needs-review","follow-up"],"enumDescriptions":["Shows mergeable pull requests","Shows blocked pull requests","Shows pull requests needing your review","Shows pull requests needing follow-up"]},"minItems":1,"uniqueItems":true,"markdownDescription":"Specifies the groups of pull requests to show on the _Launchpad_ status bar indicator","scope":"window","order":130},"gitlens.launchpad.indicator.useColors":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to use colors on the _Launchpad_ status bar indicator","scope":"window","order":140},"gitlens.launchpad.indicator.polling.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the status bar indicator will fetch and display pull request data for _Launchpad_","scope":"window","order":150},"gitlens.launchpad.indicator.polling.interval":{"type":"number","default":30,"markdownDescription":"Specifies the rate (in minutes) at which the status bar indicator will fetch pull request data for _Launchpad_. Use 0 to disable automatic polling","scope":"window","order":160},"gitlens.launchpad.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Launchpad_ as an editor tab","scope":"window","order":1000},"gitlens.launchpad.experimental.queryLimit":{"type":"number","default":100,"markdownDescription":"(Experimental) Specifies a limit on the number of pull requests to be queried in the _Launchpad_","scope":"window","order":1100}}},{"id":"cloud-patches","title":"Cloud Patches (ᴘʀᴇᴠɪᴇᴡ)","order":70,"properties":{"gitlens.cloudPatches.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable the preview of _Cloud Patches_, which allow you to privately and securely share code with specific teammates and other developers","scope":"window","order":10,"tags":["preview"]},"gitlens.cloudPatches.experimental.layout":{"type":"string","default":"view","enum":["editor","view"],"enumDescriptions":["Prefer showing Cloud Patches in the editor area","Prefer showing Cloud Patches in a view"],"markdownDescription":"(Experimental) Specifies the preferred layout of for _Cloud Patches_","scope":"window","order":20,"tags":["experimental"]}}},{"id":"views","title":"Views","order":100,"properties":{"gitlens.views.scm.grouped.default":{"type":"string","default":"commits","enum":["commits","branches","remotes","stashes","tags","worktrees","contributors","repositories","searchAndCompare","launchpad"],"enumDescriptions":["Commits view","Branches view","Remotes view","Stashes view","Tags view","Worktrees view","Contributors view","Repositories view","Search & Compare view","Launchpad view"],"markdownDescription":"Specifies the default view to show when the _GitLens_ view is opened","scope":"window","order":2},"gitlens.views.scm.grouped.views":{"type":"object","default":{"commits":true,"branches":true,"remotes":true,"stashes":true,"tags":true,"worktrees":true,"contributors":true,"repositories":false,"searchAndCompare":false,"launchpad":false},"properties":{"commits":{"type":"boolean","default":true,"description":"Group the Commits view"},"branches":{"type":"boolean","default":true,"description":"Group the Branches view"},"remotes":{"type":"boolean","default":true,"description":"Group the Remotes view"},"stashes":{"type":"boolean","default":true,"description":"Group the Stashes view"},"tags":{"type":"boolean","default":true,"description":"Group the Tags view"},"worktrees":{"type":"boolean","default":true,"description":"Group the Worktrees view"},"contributors":{"type":"boolean","default":true,"description":"Group the Contributors view"},"repositories":{"type":"boolean","default":false,"description":"Group the Repositories view"},"searchAndCompare":{"type":"boolean","default":true,"description":"Group the Search & Compare view"},"launchpad":{"type":"boolean","default":false,"description":"Group the Launchpad view"}},"additionalProperties":false,"markdownDescription":"Specifies which views will be grouped into the _GitLens_ view on the Source Control side bar","scope":"window","order":3},"gitlens.views.scm.grouped.hiddenViews":{"type":"object","default":{"commits":false,"branches":false,"remotes":false,"stashes":false,"tags":false,"worktrees":false,"contributors":false,"repositories":true,"searchAndCompare":false,"launchpad":false},"properties":{"commits":{"type":"boolean","default":false,"description":"Hide the Commits view"},"branches":{"type":"boolean","default":false,"description":"Hide the Branches view"},"remotes":{"type":"boolean","default":false,"description":"Hide the Remotes view"},"stashes":{"type":"boolean","default":false,"description":"Hide the Stashes view"},"tags":{"type":"boolean","default":false,"description":"Hide the Tags view"},"worktrees":{"type":"boolean","default":false,"description":"Hide the Worktrees view"},"contributors":{"type":"boolean","default":false,"description":"Hide the Contributors view"},"repositories":{"type":"boolean","default":true,"description":"Hide the Repositories view"},"searchAndCompare":{"type":"boolean","default":false,"description":"Hide the Search & Compare view"},"launchpad":{"type":"boolean","default":false,"description":"Hide the Launchpad view"}},"additionalProperties":false,"markdownDescription":"Specifies which views will be hidden, when grouped into the _GitLens_ view on the Source Control side bar","scope":"window","order":4},"gitlens.views.collapseWorktreesWhenPossible":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to try to collapse the opened worktrees into a single (common) repository in the views when possible","scope":"window","order":5},"gitlens.views.multiselect":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow selecting multiple items in the views","scope":"window","order":6},"gitlens.views.showCurrentBranchOnTop":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to always show the current branch at the top of the views","scope":"window","order":7},"gitlens.views.showComparisonContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a _Contributors_ section on comparison results in the views","scope":"window","order":10},"gitlens.views.showContributorsStatistics":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show contributor statistics in _Contributors_ sections in the views. This can take a while to compute depending on the repository size","scope":"window","order":11},"gitlens.views.showRelativeDateMarkers":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views","scope":"window","order":12},"gitlens.views.defaultItemLimit":{"type":"number","default":10,"markdownDescription":"Specifies the default number of items to show in a view list. Use 0 to specify no limit","scope":"window","order":20},"gitlens.views.pageItemLimit":{"type":"number","default":40,"markdownDescription":"Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit","scope":"window","order":21},"gitlens.views.formats.commits.label":{"type":"string","default":"${❰ tips|11? ❱➤  }${message}","markdownDescription":"Specifies the format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":30},"gitlens.views.formats.commits.description":{"type":"string","default":"${author, }${agoOrDate}","markdownDescription":"Specifies the description format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":31},"gitlens.views.formats.commits.tooltip":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_ \\\n${link}${' via  'pullRequest}${'&nbsp;&nbsp;'changesDetail} ${message}${\n\n---\n\nfootnotes}\n\n${tips}","markdownDescription":"Specifies the tooltip format (in markdown) of commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":32},"gitlens.views.formats.commits.tooltipWithStatus":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_ \\\n${link}${' via  'pullRequest}&nbsp;&nbsp;•&nbsp;&nbsp;{{slot-status}} ${message}${\n\n---\n\nfootnotes}\n\n${tips}","markdownDescription":"Specifies the tooltip format (in markdown) of \"file\" commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":32},"gitlens.views.formats.files.label":{"type":"string","default":"${working  }${file}","markdownDescription":"Specifies the format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window","order":40},"gitlens.views.formats.files.description":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window","order":41},"gitlens.views.formats.stashes.label":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":50},"gitlens.views.formats.stashes.description":{"type":"string","default":"${stashOnRef, }${agoOrDate}","markdownDescription":"Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":51},"gitlens.views.formats.stashes.tooltip":{"type":"string","default":"${link}${' on `'stashOnRef`}${'\\\n&nbsp;&nbsp;'changesDetail} \\\n &nbsp;$(history) ${ago} _(${date})_ ${message}${\n\n---\n\nfootnotes}","markdownDescription":"Specifies the tooltip format (in markdown) of stashes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":52},"gitlens.views.openChangesInMultiDiffEditor":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to open multiple changes in the multi-diff editor (single tab) or in individual diff editors (multiple tabs)","scope":"window","order":60},"gitlens.views.commitFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.commitFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"},"gitlens.views.commitFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.commits.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.commits.files.label#` instead"},"gitlens.views.commitDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.commits.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.commits.description#` instead"},"gitlens.views.stashFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.stashFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"},"gitlens.views.stashFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.stashes.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.stashes.files.label#` instead"},"gitlens.views.stashDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.stashes.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.stashes.description#` instead"},"gitlens.views.statusFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.statusFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"}}},{"id":"launchpad-view","title":"Launchpad View (ᴘʀᴏ)","order":101,"properties":{"gitlens.views.launchpad.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.launchpad.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Launchpad_ view will display files","scope":"window","order":30},"gitlens.views.launchpad.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Launchpad_ view. Only applies when `#gitlens.views.launchpad.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.launchpad.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Launchpad_ view. Only applies when `#gitlens.views.launchpad.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.launchpad.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Launchpad_ view will display file icons","scope":"window","order":33},"gitlens.views.launchpad.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Launchpad_ view","scope":"window","order":40}}},{"id":"commits-view","title":"Commits View","order":110,"properties":{"gitlens.views.commits.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Commits_ view","scope":"window","order":9},"gitlens.views.commits.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Commits_ view","scope":"window","order":10},"gitlens.views.commits.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with the current branch and commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.commits.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with the current branch in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.commits.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":23},"gitlens.views.commits.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commits.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Commits_ view will display files","scope":"window","order":30},"gitlens.views.commits.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.commits.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.commits.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Commits_ view will display file icons","scope":"window","order":33},"gitlens.views.commits.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Commits_ view","scope":"window","order":40},"gitlens.views.commits.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal commits in the _Commits_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"commit-details-view","title":"Inspect View","order":120,"properties":{"gitlens.views.commitDetails.autolinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically link external resources in commit messages","scope":"window","order":31},"gitlens.views.commitDetails.autolinks.enhanced":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.views.commitDetails.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for associated pull requests. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.commitDetails.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commitDetails.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Commit Details_ view will display files","scope":"window","order":30},"gitlens.views.commitDetails.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.commitDetails.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.commitDetails.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Commit Details_ view will display file icons","scope":"window","order":33},"gitlens.views.commitDetails.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Commit Details_ view","scope":"window","order":40}}},{"id":"pull-request-view","title":"Pull Request View","order":130,"properties":{"gitlens.views.pullRequest.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.pullRequest.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Pull Request_ view will display files","scope":"window","order":30},"gitlens.views.pullRequest.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Pull Request_ view. Only applies when `#gitlens.views.pullRequest.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.pullRequest.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Pull Request_ view. Only applies when `#gitlens.views.pullRequest.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.pullRequest.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Pull Request_ view will display file icons","scope":"window","order":33},"gitlens.views.pullRequest.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Pull Request_ view","scope":"window","order":40}}},{"id":"repositories-view","title":"Repositories View","order":140,"properties":{"gitlens.views.repositories.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Repositories_ view","scope":"window","order":10},"gitlens.views.repositories.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the upstream status of the current branch for each repository in the _Repositories_ view","scope":"window","order":11},"gitlens.views.repositories.includeWorkingTree":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Repositories_ view","scope":"window","order":12},"gitlens.views.repositories.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.repositories.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with branches in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.repositories.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.repositories.showCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the commits on the current branch for each repository in the _Repositories_ view","scope":"window","order":30},"gitlens.views.repositories.showBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the branches for each repository in the _Repositories_ view","scope":"window","order":31},"gitlens.views.repositories.showRemotes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the remotes for each repository in the _Repositories_ view","scope":"window","order":32},"gitlens.views.repositories.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the stashes for each repository in the _Repositories_ view","scope":"window","order":33},"gitlens.views.repositories.showTags":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tags for each repository in the _Repositories_ view","scope":"window","order":34},"gitlens.views.repositories.showContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the contributors for each repository in the _Repositories_ view","scope":"window","order":35},"gitlens.views.repositories.showWorktrees":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the worktrees for each repository in the _Repositories_ view","scope":"window","order":36},"gitlens.views.repositories.showIncomingActivity":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the experimental incoming activity for each repository in the _Repositories_ view","scope":"window","order":37},"gitlens.views.repositories.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes","scope":"window","order":40},"gitlens.views.repositories.autoReveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files","scope":"window","order":50},"gitlens.views.repositories.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view","scope":"window","order":60},"gitlens.views.repositories.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Repositories_ view will display branches","scope":"window","order":70},"gitlens.views.repositories.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Repositories_ view will display files","scope":"window","order":80},"gitlens.views.repositories.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`","scope":"window","order":81},"gitlens.views.repositories.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`","scope":"window","order":82},"gitlens.views.repositories.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Repositories_ view will display file icons","scope":"window","order":83},"gitlens.views.repositories.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Repositories_ view in a compact display density","scope":"window","order":90},"gitlens.views.repositories.branches.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Commits_ and _Branches_ sections of the _Repositories_ view","scope":"window","order":95},"gitlens.views.repositories.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) under each branch in the _Repositories_ view","scope":"window","order":100},"gitlens.views.repositories.worktrees.viewAs":{"type":"string","default":"name","enum":["name","path","relativePath"],"enumDescriptions":["Displays worktree name","Displays worktree path","Displays worktree relative path"],"markdownDescription":"Specifies how the _Repositories_ view will display worktrees","scope":"window","order":75},"gitlens.views.repositories.enabled":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDeprecationMessage":"Deprecated. This setting is no longer used"}}},{"id":"file-history-view","title":"File History View","order":150,"properties":{"gitlens.views.fileHistory.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.fileHistory.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.fileHistory.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.fileHistory.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _File History_ view will display files","scope":"window","order":30},"gitlens.views.fileHistory.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.fileHistory.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.fileHistory.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _File History_ view will display file icons","scope":"window","order":33},"gitlens.views.fileHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _File History_ view","scope":"window","order":20},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file histories will follow renames","scope":"window","order":100},"gitlens.advanced.fileHistoryShowAllBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether file histories will show commits from all branches","scope":"window","order":101},"gitlens.advanced.fileHistoryShowMergeCommits":{"type":"boolean","default":false,"markdownDescription":"Specifies whether file histories will show merge commits","scope":"window","order":102}}},{"id":"visual-history","title":"Visual File History (ᴘʀᴏ)","order":155,"properties":{"gitlens.visualHistory.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Visual File History_ in the editor area","scope":"window","order":10},"gitlens.visualHistory.queryLimit":{"type":"number","default":20,"markdownDescription":"Specifies the limit on the how many commits can be queried for statistics in the _Visual File History_, because of rate limits. Only applies to virtual workspaces.","scope":"window","order":20}}},{"id":"line-history-view","title":"Line History View","order":160,"properties":{"gitlens.views.lineHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _Line History_ view","scope":"window","order":10},"gitlens.views.lineHistory.enabled":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDeprecationMessage":"Deprecated. This setting is no longer used"}}},{"id":"branches-view","title":"Branches View","order":170,"properties":{"gitlens.views.branches.showRemoteBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show remote branches for the default remote in the _Branches_ view","scope":"window","order":8},"gitlens.views.branches.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Branches_ view","scope":"window","order":9},"gitlens.views.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) in the _Branches_ view","scope":"window","order":10},"gitlens.views.branches.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with each branch and commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.branches.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with each branch in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.branches.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.branches.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Branches_ view will display branches","scope":"window","order":30},"gitlens.views.branches.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.branches.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Branches_ view will display files","scope":"window","order":50},"gitlens.views.branches.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `auto`","scope":"window","order":51},"gitlens.views.branches.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `tree` or `auto`","scope":"window","order":52},"gitlens.views.branches.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Branches_ view will display file icons","scope":"window","order":53},"gitlens.views.branches.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Branches_ view","scope":"window","order":60},"gitlens.views.branches.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal branches in the _Branches_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":70}}},{"id":"remotes-view","title":"Remotes View","order":180,"properties":{"gitlens.views.remotes.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with each branch and commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":10},"gitlens.views.remotes.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with each branch in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":11},"gitlens.views.remotes.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":12},"gitlens.views.remotes.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Remotes_ view will display branches","scope":"window","order":20},"gitlens.views.remotes.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.remotes.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Remotes_ view will display files","scope":"window","order":30},"gitlens.views.remotes.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.remotes.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.remotes.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Remotes_ view will display file icons","scope":"window","order":33},"gitlens.views.remotes.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Remotes_ view","scope":"window","order":40},"gitlens.views.remotes.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal remotes in the _Remotes_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"stashes-view","title":"Stashes View","order":190,"properties":{"gitlens.views.stashes.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.stashes.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Stashes_ view will display files","scope":"window","order":10},"gitlens.views.stashes.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `auto`","scope":"window","order":11},"gitlens.views.stashes.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `tree` or `auto`","scope":"window","order":12},"gitlens.views.stashes.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Stashes_ view will display file icons","scope":"window","order":13},"gitlens.views.stashes.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal stashes in the _Stashes_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":20}}},{"id":"tags-view","title":"Tags View","order":200,"properties":{"gitlens.views.tags.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays tags as a list","Displays tags as a tree when tags names contain slashes `/`"],"markdownDescription":"Specifies how the _Tags_ view will display tags","scope":"window","order":10},"gitlens.views.tags.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.tags.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Tags_ view will display files","scope":"window","order":30},"gitlens.views.tags.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.tags.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.tags.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Tags_ view will display file icons","scope":"window","order":33},"gitlens.views.tags.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Tags_ view","scope":"window","order":40},"gitlens.views.tags.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal tags in the _Tags_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"worktrees-view","title":"Worktrees View (ᴘʀᴏ)","order":210,"properties":{"gitlens.worktrees.promptForLocation":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to prompt for a path when creating new worktrees","scope":"resource","order":10},"gitlens.worktrees.defaultLocation":{"type":"string","default":null,"markdownDescription":"Specifies the default path in which new worktrees will be created","scope":"resource","order":11},"gitlens.worktrees.openAfterCreate":{"type":"string","default":"prompt","enum":["always","alwaysNewWindow","onlyWhenEmpty","never","prompt"],"enumDescriptions":["Always open the new worktree in the current window","Always open the new worktree in a new window","Only open the new worktree in the current window when no folder is opened","Never open the new worktree","Always prompt to open the new worktree"],"markdownDescription":"Specifies how and when to open a worktree after it is created","scope":"resource","order":12},"gitlens.views.worktrees.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Worktrees_ view","scope":"window","order":19},"gitlens.views.worktrees.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the worktree branch with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the worktree branch with a user-selected reference (branch, tag, etc) in the _Worktrees_ view","scope":"window","order":20},"gitlens.views.worktrees.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with the worktree branch and commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.views.worktrees.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with the worktree branch in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":31},"gitlens.views.worktrees.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.views.worktrees.worktrees.viewAs":{"type":"string","default":"name","enum":["name","path","relativePath"],"enumDescriptions":["Displays worktree name","Displays worktree path","Displays worktree relative path"],"markdownDescription":"Specifies how the _Worktrees_ view will display worktrees","scope":"window","order":33},"gitlens.views.worktrees.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays worktree branches as a list","Displays worktree branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Worktrees_ view will display worktree branches","scope":"window","order":35},"gitlens.views.worktrees.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.worktrees.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Worktrees_ view will display files","scope":"window","order":40},"gitlens.views.worktrees.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `auto`","scope":"window","order":41},"gitlens.views.worktrees.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `tree` or `auto`","scope":"window","order":42},"gitlens.views.worktrees.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Worktrees_ view will display file icons","scope":"window","order":43},"gitlens.views.worktrees.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Worktrees_ view","scope":"window","order":50},"gitlens.views.worktrees.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal worktrees in the _Worktrees_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":60}}},{"id":"contributors-view","title":"Contributors View","order":220,"properties":{"gitlens.views.contributors.showAllBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show commits from all branches in the _Contributors_ view","scope":"window","order":10},"gitlens.views.contributors.showStatistics":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show contributor statistics in the _Contributors_ view. This can take a while to compute depending on the repository size","scope":"window","order":20},"gitlens.views.contributors.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.views.contributors.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":31},"gitlens.views.contributors.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.contributors.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Contributors_ view will display files","scope":"window","order":50},"gitlens.views.contributors.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `auto`","scope":"window","order":51},"gitlens.views.contributors.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `tree` or `auto`","scope":"window","order":52},"gitlens.views.contributors.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Contributors_ view will display file icons","scope":"window","order":53},"gitlens.views.contributors.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Contributors_ view","scope":"window","order":60},"gitlens.views.contributors.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal contributors in the _Contributors_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":20}}},{"id":"search-compare-view","title":"Search & Compare View","order":230,"properties":{"gitlens.views.searchAndCompare.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":10},"gitlens.views.searchAndCompare.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":11},"gitlens.views.searchAndCompare.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.searchAndCompare.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Search & Compare_ view will display files","scope":"window","order":20},"gitlens.views.searchAndCompare.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `auto`","scope":"window","order":21},"gitlens.views.searchAndCompare.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `tree` or `auto`","scope":"window","order":22},"gitlens.views.searchAndCompare.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Search & Compare_ view will display file icons","scope":"window","order":33},"gitlens.views.searchAndCompare.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Search & Compare_ view","scope":"window","order":30}}},{"id":"cloud-patches-view","title":"Cloud Patches View (ᴘʀᴇᴠɪᴇᴡ)","order":240,"properties":{"gitlens.views.drafts.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.drafts.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Cloud Patches_ view will display files","scope":"window","order":30},"gitlens.views.drafts.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Cloud Patches_ view. Only applies when `#gitlens.views.drafts.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.drafts.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Cloud Patches_ view. Only applies when `#gitlens.views.drafts.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.drafts.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Cloud Patches_ view will display file icons","scope":"window","order":33},"gitlens.views.drafts.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Cloud Patches_ view","scope":"window","order":40}}},{"id":"patch-details-view","title":"Patch Details View (ᴘʀᴇᴠɪᴇᴡ)","order":250,"properties":{"gitlens.views.patchDetails.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.patchDetails.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Patch Details_ view will display files","scope":"window","order":30},"gitlens.views.patchDetails.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Patch Details_ view. Only applies when `#gitlens.views.patchDetails.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.patchDetails.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Patch Details_ view. Only applies when `#gitlens.views.patchDetails.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.patchDetails.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Patch Details_ view will display file icons","scope":"window","order":33},"gitlens.views.patchDetails.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Patch Details_ view","scope":"window","order":40}}},{"id":"workspaces-view","title":"Cloud Workspaces View (ᴘʀᴇᴠɪᴇᴡ)","order":260,"properties":{"gitlens.views.workspaces.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Cloud Workspaces_ view","scope":"window","order":10},"gitlens.views.workspaces.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the upstream status of the current branch for each repository in the _Cloud Workspaces_ view","scope":"window","order":11},"gitlens.views.workspaces.includeWorkingTree":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Cloud Workspaces_ view","scope":"window","order":12},"gitlens.views.workspaces.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Cloud Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.workspaces.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with branches in the _Cloud Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.workspaces.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Cloud Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.workspaces.showCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the commits on the current branch for each repository in the _Cloud Workspaces_ view","scope":"window","order":30},"gitlens.views.workspaces.showBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the branches for each repository in the _Cloud Workspaces_ view","scope":"window","order":31},"gitlens.views.workspaces.showRemotes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the remotes for each repository in the _Cloud Workspaces_ view","scope":"window","order":32},"gitlens.views.workspaces.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the stashes for each repository in the _Cloud Workspaces_ view","scope":"window","order":33},"gitlens.views.workspaces.showTags":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tags for each repository in the _Cloud Workspaces_ view","scope":"window","order":34},"gitlens.views.workspaces.showContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the contributors for each repository in the _Cloud Workspaces_ view","scope":"window","order":35},"gitlens.views.workspaces.showWorktrees":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the worktrees for each repository in the _Cloud Workspaces_ view","scope":"window","order":36},"gitlens.views.workspaces.showIncomingActivity":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the experimental incoming activity for each repository in the _Cloud Workspaces_ view","scope":"window","order":37},"gitlens.views.workspaces.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Cloud Workspaces_ view","scope":"window","order":60},"gitlens.views.workspaces.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display branches","scope":"window","order":70},"gitlens.views.workspaces.worktrees.viewAs":{"type":"string","default":"name","enum":["name","path","relativePath"],"enumDescriptions":["Displays worktree name","Displays worktree path","Displays worktree relative path"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display worktrees","scope":"window","order":75},"gitlens.views.workspaces.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.workspaces.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display files","scope":"window","order":80},"gitlens.views.workspaces.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Cloud Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `auto`","scope":"window","order":81},"gitlens.views.workspaces.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Cloud Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `tree` or `auto`","scope":"window","order":82},"gitlens.views.workspaces.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display file icons","scope":"window","order":83},"gitlens.views.workspaces.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Cloud Workspaces_ view in a compact display density","scope":"window","order":90},"gitlens.views.workspaces.branches.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Commits_ and _Branches_ sections of the _Cloud Workspaces_ view","scope":"window","order":9},"gitlens.views.workspaces.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) under each branch in the _Cloud Workspaces_ view","scope":"window","order":100}}},{"id":"rebase-editor","title":"Interactive Rebase Editor","order":600,"properties":{"gitlens.rebaseEditor.ordering":{"type":"string","default":"desc","enum":["asc","desc"],"enumDescriptions":["Shows oldest commit first","Shows newest commit first"],"markdownDescription":"Specifies how Git commits are displayed in the _Interactive Rebase Editor_","scope":"window","order":10},"gitlens.rebaseEditor.showDetailsView":{"type":["boolean","string"],"default":"selection","enum":[false,"open","selection"],"enumDescriptions":["Never shows the _Commit Details_ view automatically","Shows the _Commit Details_ view automatically only when opening the _Interactive Rebase Editor_","Shows the _Commit Details_ view automatically when selection changes in the _Interactive Rebase Editor_"],"markdownDescription":"Specifies when to show the _Commit Details_ view for the selected row in the _Interactive Rebase Editor_","scope":"window","order":20}}},{"id":"git-command-palette","title":"Git Command Palette","order":700,"properties":{"gitlens.gitCommands.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in quick pick menus when applicable","scope":"window","order":5},"gitlens.gitCommands.sortBy":{"type":"string","default":"usage","enum":["name","usage"],"enumDescriptions":["Sorts commands by name","Sorts commands by last used date"],"markdownDescription":"Specifies how Git commands are sorted in the _Git Command Palette_","scope":"window","order":10},"gitlens.gitCommands.skipConfirmations":{"type":"array","default":["fetch:command","stash-push:command"],"items":{"type":"string","enum":["branch-create:command","branch-create:menu","co-authors:command","co-authors:menu","fetch:command","fetch:menu","pull:command","pull:menu","push:command","push:menu","stash-apply:command","stash-apply:menu","stash-pop:command","stash-pop:menu","stash-push:command","stash-push:menu","switch:command","switch:menu","tag-create:command","tag-create:menu"],"enumDescriptions":["Skips branch create confirmations when run from a command, e.g. a view action","Skips branch create confirmations when run from the Git Command Palette","Skips co-author confirmations when run from a command, e.g. a view action","Skips co-author confirmations when run from the Git Command Palette","Skips fetch confirmations when run from a command, e.g. a view action","Skips fetch confirmations when run from the Git Command Palette","Skips pull confirmations when run from a command, e.g. a view action","Skips pull confirmations when run from the Git Command Palette","Skips push confirmations when run from a command, e.g. a view action","Skips push confirmations when run from the Git Command Palette","Skips stash apply confirmations when run from a command, e.g. a view action","Skips stash apply confirmations when run from the Git Command Palette","Skips stash pop confirmations when run from a command, e.g. a view action","Skips stash pop confirmations when run from the Git Command Palette","Skips stash push confirmations when run from a command, e.g. a view action","Skips stash push confirmations when run from the Git Command Palette","Skips switch confirmations when run from a command, e.g. a view action","Skips switch confirmations when run from the Git Command Palette","Skips tag create confirmations when run from a command, e.g. a view action","Skips tag create confirmations when run from the Git Command Palette"]},"minItems":0,"maxItems":14,"uniqueItems":true,"markdownDescription":"Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`","scope":"window","order":20},"gitlens.gitCommands.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to dismiss the _Git Command Palette_ when focus is lost (if not, press `ESC` to dismiss)","scope":"window","order":30},"gitlens.gitCommands.search.showResultsInSideBar":{"type":["boolean","null"],"default":null,"markdownDescription":"Specifies whether to show the commit search results directly in the quick pick menu, in the Side Bar, or will be based on the context","scope":"window","order":40},"gitlens.gitCommands.search.matchAll":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match all or any commit message search patterns","scope":"window","order":50},"gitlens.gitCommands.search.matchCase":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match commit search patterns with or without regard to casing","scope":"window","order":51},"gitlens.gitCommands.search.matchRegex":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to match commit search patterns using regular expressions","scope":"window","order":52},"gitlens.gitCommands.search.showResultsInView":{"deprecationMessage":"Deprecated. This setting has been renamed to gitlens.gitCommands.search.showResultsInSideBar","markdownDeprecationMessage":"Deprecated. This setting has been renamed to `#gitlens.gitCommands.search.showResultsInSideBar#`"}}},{"id":"integrations","title":"Integrations","order":800,"properties":{"gitlens.autolinks":{"type":["array","null"],"default":null,"items":{"type":"object","required":["prefix","url"],"properties":{"prefix":{"type":"string","description":"Specifies the short prefix to match to generate autolinks for the external resource, e.g. `GH-` or `JIRA-`"},"title":{"type":["string","null"],"default":null,"description":"Specifies an optional title for the generated autolink. Use `<num>` as the variable for the reference number"},"url":{"type":"string","description":"Specifies the URL of the external resource you want to link to. Use `<num>` as the variable for the reference number"},"alphanumeric":{"type":"boolean","description":"Specifies whether alphanumeric characters should be allowed in `<num>`","default":false},"ignoreCase":{"type":"boolean","description":"Specifies whether case should be ignored when matching the prefix","default":false}},"additionalProperties":false},"uniqueItems":true,"markdownDescription":"Specifies autolinks to external resources in commit messages. Use `<num>` as the variable for the reference number","scope":"window","order":10},"gitlens.integrations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable rich integrations with any supported remote services","scope":"window","order":20},"gitlens.cloudIntegrations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to use cloud-based integrations when authenticating with GitHub","scope":"window","order":30},"gitlens.remotes":{"type":["array","null"],"default":null,"items":{"type":"object","required":["type"],"oneOf":[{"required":["domain"]},{"required":["regex"]}],"properties":{"type":{"type":"string","enum":["Custom","AzureDevOps","Bitbucket","BitbucketServer","Gerrit","GoogleSource","Gitea","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name used to match this custom configuration to a Git remote"},"regex":{"type":"string","description":"Specifies a regular expression used to match this custom configuration to a Git remote and capture the \"domain name\" and \"path\""},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional URL protocol for the custom remote service"},"ignoreSSLErrors":{"type":"boolean","default":false,"description":"Specifies whether to ignore invalid SSL certificate errors when connecting to the remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","markdownDescription":"Specifies the format of a repository URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path"},"branches":{"type":"string","markdownDescription":"Specifies the format of a branches URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"},"branch":{"type":"string","markdownDescription":"Specifies the format of a branch URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"},"commit":{"type":"string","markdownDescription":"Specifies the format of a commit URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${id}` &mdash; commit SHA"},"comparison":{"type":"string","markdownDescription":"Specifies the format of a comparison URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${ref1}` &mdash; ref 1\\\n`${ref2}` &mdash; ref 2\\\n`${notation}` &mdash; notation"},"createPullRequest":{"type":"string","markdownDescription":"Specifies the format of a create pull request URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${base}` &mdash; base branch\\\n`${compare}` &mdash; compare branch"},"file":{"type":"string","markdownDescription":"Specifies the format of a file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${line}` &mdash; formatted line information"},"fileInBranch":{"type":"string","markdownDescription":"Specifies the format of a branch file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${branch}` &mdash; branch\\\n`${line}` &mdash; formatted line information"},"fileInCommit":{"type":"string","markdownDescription":"Specifies the format of a commit file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${id}` &mdash; commit SHA\\\n`${line}` &mdash; formatted line information"},"fileLine":{"type":"string","markdownDescription":"Specifies the format of a line in a file URL for the custom remote service\n\nAvailable tokens\\\n`${line}` &mdash; line"},"fileRange":{"type":"string","markdownDescription":"Specifies the format of a range in a file URL for the custom remote service\n\nAvailable tokens\\\n`${start}` &mdash; starting line\\\n`${end}` &mdash; ending line"}},"additionalProperties":false}}},"uniqueItems":true,"markdownDescription":"Specifies custom remote services to be matched with Git remotes to detect custom domains for built-in remote services or provide support for custom remote services","scope":"resource","order":30},"gitlens.partners":{"type":["object","null"],"additionalProperties":{"type":"object","properties":{"enabled":{"type":"boolean","default":true,"description":"Specifies whether the partner integration should be shown"}},"additionalProperties":true,"description":"Specifies the configuration of a partner integration"},"default":null,"description":"Specifies the configuration of a partner integration","scope":"window","order":40},"gitlens.liveshare.enabled":{"type":"boolean","default":true,"description":"Specifies whether to enable integration with Visual Studio Live Share","scope":"window","order":50},"gitlens.liveshare.allowGuestAccess":{"type":"boolean","default":true,"description":"Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share","scope":"window","order":51}}},{"id":"terminal","title":"Terminal","order":900,"properties":{"gitlens.terminalLinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable terminal links &mdash; autolinks in the integrated terminal to quickly jump to more details for commits, branches, tags, and more","scope":"window","order":10},"gitlens.terminalLinks.showDetailsView":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Commit Details_ view when clicking on a commit link in the integrated terminal","scope":"window","order":20},"gitlens.gitkraken.cli.integration.enabled":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to enable experimental integration with the GitKraken CLI","scope":"window","order":30,"tags":["experimental"]},"gitlens.terminal.overrideGitEditor":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to use VS Code as Git's `core.editor` for Gitlens terminal commands","scope":"window","order":100}}},{"id":"ai","title":"AI (ᴘʀᴇᴠɪᴇᴡ)","order":1000,"tags":["preview"],"properties":{"gitlens.ai.model":{"type":["string","null"],"default":null,"pattern":"^((anthropic|deepseek|gemini|github|huggingface|openai|xai):([\\w.-]+)|gitkraken|vscode)$","markdownDescription":"Specifies the AI provider and model to use for GitLens' AI features. Should be formatted as `provider:model` (e.g. `openai:gpt-4o` or `anthropic:claude-3-5-sonnet-latest`), `gitkraken` for GitKraken AI provided models, or `vscode` for models provided by the VS Code extension API (e.g. Copilot)","scope":"window","order":10,"tags":["preview"]},"gitlens.ai.gitkraken.model":{"type":["string","null"],"default":null,"pattern":"^(.*):(.*)$","markdownDescription":"Specifies the GitKraken AI provided model to use for GitLens' AI features, formatted as `provider:model`","scope":"window","order":5,"tags":["preview"]},"gitlens.ai.vscode.model":{"type":["string","null"],"default":null,"pattern":"^(.*):(.*)$","markdownDescription":"Specifies the VS Code provided model to use for GitLens' AI features, formatted as `provider:model`","scope":"window","order":20,"tags":["preview"]},"gitlens.ai.openai.url":{"type":["string","null"],"default":null,"markdownDescription":"Specifies a custom URL to use for access to an OpenAI model via Azure. Azure URLs should be in the following format: https://{your-resource-name}.openai.azure.com/openai/deployments/{deployment-id}/chat/completions?api-version={api-version}","scope":"window","order":30,"tags":["preview"]},"gitlens.ai.largePromptWarningThreshold":{"type":"number","default":20000,"markdownDescription":"Specifies the threshold (in tokens) for when to show a warning about the prompt being too large","scope":"window","order":80,"tags":["preview"]},"gitlens.ai.modelOptions.temperature":{"type":"number","default":0.7,"minimum":0,"maximum":2,"markdownDescription":"Specifies the temperature, a measure of output randomness, to use for the AI model. Higher values result in more randomness, e.g. creativity, while lower values are more deterministic","scope":"window","order":90,"tags":["preview"]},"gitlens.ai.explainChanges.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a summary of changes","scope":"window","order":100,"tags":["preview"]},"gitlens.ai.generateChangelog.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a changelog from a set of changes","scope":"window","order":110,"tags":["preview"]},"gitlens.ai.generateCommitMessage.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a commit message","scope":"window","order":200,"tags":["preview"]},"gitlens.ai.generateCommitMessage.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable GitLens' AI-powered, on-demand commit message generation","scope":"window","order":210,"tags":["preview"]},"gitlens.ai.generateStashMessage.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a stash message","scope":"window","order":220,"tags":["preview"]},"gitlens.ai.generateCreateCloudPatch.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a cloud patch title and description","scope":"window","order":300,"tags":["preview"]},"gitlens.ai.generateCreateCodeSuggest.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a code suggest title and description","scope":"window","order":400,"tags":["preview"]},"gitlens.ai.generateCreatePullRequest.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a pull request title and description","scope":"window","order":500,"tags":["preview"]}}},{"id":"date-times","title":"Date & Times","order":1100,"properties":{"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed by default","scope":"window","order":10},"gitlens.defaultDateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":20},"gitlens.defaultDateLocale":{"type":["string","null"],"default":null,"markdownDescription":"Specifies the locale, a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags), to use for date formatting, defaults to the VS Code locale. Use `system` to follow the current system locale, or choose a specific locale, e.g `en-US` — US English, `en-GB` — British English, `de-DE` — German, `ja-JP` = Japanese, etc.","scope":"window","order":21},"gitlens.defaultDateShortFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":22},"gitlens.defaultTimeFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how times will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":30},"gitlens.defaultDateSource":{"type":"string","default":"authored","enum":["authored","committed"],"enumDescriptions":["Uses the date when the changes were authored (i.e. originally written)","Uses the date when the changes were committed"],"markdownDescription":"Specifies whether commit dates should use the authored or committed date","scope":"window","order":40}}},{"id":"sorting","title":"Sorting","order":1200,"properties":{"gitlens.sortRepositoriesBy":{"type":"string","default":"discovered","enum":["discovered","lastFetched:desc","lastFetched:asc","name:asc","name:desc"],"enumDescriptions":["Sorts repositories by discovery or workspace order","Sorts repositories by last fetched date in descending order","Sorts repositories by last fetched date in ascending order","Sorts repositories by name in ascending order","Sorts repositories by name in descending order"],"markdownDescription":"Specifies how repositories are sorted in quick pick menus and views","scope":"window","order":10},"gitlens.sortBranchesBy":{"type":"string","default":"date:desc","enum":["date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts branches by the most recent commit date in descending order","Sorts branches by the most recent commit date in ascending order","Sorts branches by name in ascending order","Sorts branches by name in descending order"],"markdownDescription":"Specifies how branches are sorted in quick pick menus and views","scope":"window","order":20},"gitlens.sortTagsBy":{"type":"string","default":"date:desc","enum":["date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts tags by date in descending order","Sorts tags by date in ascending order","Sorts tags by name in ascending order","Sorts tags by name in descending order"],"markdownDescription":"Specifies how tags are sorted in quick pick menus and views","scope":"window","order":30},"gitlens.sortContributorsBy":{"type":"string","default":"count:desc","enum":["count:desc","count:asc","date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts contributors by commit count in descending order","Sorts contributors by commit count in ascending order","Sorts contributors by the most recent commit date in descending order","Sorts contributors by the most recent commit date in ascending order","Sorts contributors by name in ascending order","Sorts contributors by name in descending order"],"markdownDescription":"Specifies how contributors are sorted in quick pick menus and views","scope":"window","order":40}}},{"id":"menus-toolbars","title":"Menus & Toolbars","order":1300,"properties":{"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"}}}]},"editorGutter":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"remote":{"type":"boolean"},"share":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"ghpr":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"worktree":{"type":"boolean"}}}]},"scm":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"graph":{"type":"boolean"}}}]},"scmRepositoryInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"generateCommitMessage":{"type":"boolean"},"graph":{"type":"boolean"},"stash":{"type":"boolean"}}}]},"scmRepository":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"authors":{"type":"boolean"},"generateCommitMessage":{"type":"boolean"},"graph":{"type":"boolean"},"patch":{"type":"boolean"}}}]},"scmGroupInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"stash":{"type":"boolean"}}}]},"scmGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"openClose":{"type":"boolean"},"patch":{"type":"boolean"},"stash":{"type":"boolean"}}}]},"scmItemInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"stash":{"type":"boolean"}}}]},"scmItem":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"},"share":{"type":"boolean"},"stash":{"type":"boolean"}}}]}},"additionalProperties":false}],"default":{"editor":{"blame":true,"clipboard":true,"compare":true,"history":true,"remote":true},"editorGroup":{"blame":true,"compare":true},"editorGutter":{"compare":true,"remote":true,"share":true},"editorTab":{"clipboard":true,"compare":true,"history":true,"remote":true},"explorer":{"clipboard":true,"compare":true,"history":true,"remote":true},"ghpr":{"worktree":true},"scm":{"graph":true},"scmRepositoryInline":{"generateCommitMessage":true,"graph":true,"stash":true},"scmRepository":{"authors":true,"generateCommitMessage":true,"patch":true,"graph":false},"scmGroupInline":{"stash":true},"scmGroup":{"compare":true,"openClose":true,"patch":true,"stash":true},"scmItemInline":{"stash":false},"scmItem":{"clipboard":true,"compare":true,"history":true,"patch":true,"remote":true,"share":true,"stash":true}},"markdownDescription":"Specifies which commands will be added to which menus","scope":"window","order":10}}},{"id":"keyboard","title":"Keyboard Shortcuts","order":1400,"properties":{"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Shift+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"markdownDescription":"Specifies the keymap to use for GitLens shortcut keys","scope":"window","order":10}}},{"id":"modes","title":"Modes","order":1500,"properties":{"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide the active GitLens mode in the status bar","scope":"window","order":10},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the active GitLens mode alignment in the status bar","scope":"window","order":11},"gitlens.mode.active":{"type":"string","markdownDescription":"Specifies the active GitLens mode, if any","scope":"window","order":20},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}},"review":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"annotations":{"type":"string","enum":["blame","changes","heatmap"],"enumDescriptions":["Shows the file blame annotations","Shows the file changes annotations","Shows the file heatmap annotations"],"description":"Specifies which (if any) file annotations will be shown when this user-defined mode is active"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"markdownDescription":"Specifies the user-defined GitLens modes","scope":"window","order":30}}},{"id":"gitkraken","title":"GitKraken","order":9000,"properties":{"gitlens.gitkraken.activeOrganizationId":{"type":"string","markdownDescription":"Specifies the ID of the user's active GitKraken organization in GitLens","scope":"window","order":1}}},{"id":"advanced","title":"Advanced","order":10000,"properties":{"gitlens.detectNestedRepositories":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to attempt to detect nested repositories when opening files","scope":"resource","order":0},"gitlens.telemetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow GitLens to send product usage telemetry.\n\n_**Note:** For GitLens to send any telemetry BOTH this setting and VS Code telemetry must be enabled. If either one is disabled no telemetry will be sent._","scope":"window","order":1},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressCreatePullRequestPrompt":false,"suppressDebugLoggingWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitMissingWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressRebaseSwitchToTextWarning":false,"suppressIntegrationDisconnectedTooManyFailedRequestsWarning":false,"suppressIntegrationRequestFailed500Warning":false,"suppressIntegrationRequestTimedOutWarning":false,"suppressBlameInvalidIgnoreRevsFileWarning":false,"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false,"description":"Commit Has No Previous Commit Warning"},"suppressCommitNotFoundWarning":{"type":"boolean","default":false,"description":"Commit Not Found Warning"},"suppressCreatePullRequestPrompt":{"type":"boolean","default":false,"description":"Create Pull Request Prompt"},"suppressDebugLoggingWarning":{"type":"boolean","default":false,"description":"Debug Logging Warning"},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false,"description":"File Not Under Source Control Warning"},"suppressGitDisabledWarning":{"type":"boolean","default":false,"description":"Git Disabled Warning"},"suppressGitMissingWarning":{"type":"boolean","default":false,"description":"Git Missing Warning"},"suppressGitVersionWarning":{"type":"boolean","default":false,"description":"Git Version Warning"},"suppressLineUncommittedWarning":{"type":"boolean","default":false,"description":"Line Uncommitted Warning"},"suppressNoRepositoryWarning":{"type":"boolean","default":false,"description":"No Repository Warning"},"suppressRebaseSwitchToTextWarning":{"type":"boolean","default":false,"description":"Rebase Switch To Text Warning"},"suppressIntegrationDisconnectedTooManyFailedRequestsWarning":{"type":"boolean","default":false,"description":"Integration Disconnected; Too Many Failed Requests Warning"},"suppressIntegrationRequestFailed500Warning":{"type":"boolean","default":false,"description":"Integration Request Failed (500 status code) Warning"},"suppressIntegrationRequestTimedOutWarning":{"type":"boolean","default":false,"description":"Integration Request Timed Out Warning"},"suppressBlameInvalidIgnoreRevsFileWarning":{"type":"boolean","default":false,"description":"Invalid Blame IgnoreRevs File Warning"},"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning":{"type":"boolean","default":false,"description":"Invalid Revision in Blame IgnoreRevs File Warning"}},"additionalProperties":false,"markdownDescription":"Specifies which messages should be suppressed","scope":"window","order":5},"gitlens.advanced.repositorySearchDepth":{"type":["number","null"],"default":null,"markdownDescription":"Specifies how many folders deep to search for repositories. Defaults to `#git.repositoryScanMaxDepth#`","scope":"resource","order":10},"gitlens.advanced.abbreviatedShaLength":{"type":"number","default":7,"markdownDescription":"Specifies the length of abbreviated commit SHAs","scope":"window","order":20},"gitlens.advanced.abbreviateShaOnCopy":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to copy full or abbreviated commit SHAs to the clipboard. Abbreviates to the length of `#gitlens.advanced.abbreviatedShaLength#`.","scope":"window","order":21},"gitlens.advanced.commitOrdering":{"type":["string","null"],"default":null,"enum":[null,"date","author-date","topo"],"enumDescriptions":["Shows commits in reverse chronological order","Shows commits in reverse chronological order of the commit timestamp","Shows commits in reverse chronological order of the author timestamp","Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"],"markdownDescription":"Specifies the order by which commits will be shown. If unspecified, commits will be shown in reverse chronological order","scope":"window","order":30},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource","order":40},"gitlens.advanced.blame.customArguments":{"type":["array","null"],"default":null,"items":{"type":"string"},"markdownDescription":"Specifies additional arguments to pass to the `git blame` command","scope":"resource","order":41},"gitlens.advanced.similarityThreshold":{"type":["number","null"],"default":null,"markdownDescription":"Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename","scope":"window","order":50},"gitlens.advanced.externalDiffTool":{"type":["string","null"],"default":null,"markdownDescription":"Specifies an optional external diff tool to use when comparing files. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).","scope":"window","order":60},"gitlens.advanced.externalDirectoryDiffTool":{"type":["string","null"],"default":null,"markdownDescription":"Specifies an optional external diff tool to use when comparing directories. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).","scope":"window","order":61},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)","scope":"window","order":70},"gitlens.advanced.maxListItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window","order":80},"gitlens.advanced.maxSearchItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a search. Use 0 to specify no maximum","scope":"window","order":81},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window","order":90},"gitlens.advanced.caching.gitPath":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to cache (per-workspace) the path to the Git executable to use for GitLens","scope":"window","order":91},"gitlens.debug":{"type":"boolean","default":false,"markdownDescription":"Specifies debug mode","scope":"window","order":100},"gitlens.deepLinks.schemeOverride":{"type":["boolean","string"],"default":false,"markdownDescription":"Specifies whether to override the default deep link scheme (vscode://) with the environment value or a specified value","scope":"window","order":110},"gitlens.advanced.useSymmetricDifferenceNotation":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDescription":"Deprecated. This setting is no longer used"}}},{"id":"general","title":"General","order":0,"properties":{"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the What's New notification after upgrading to new feature releases","scope":"window","order":20},"gitlens.outputLevel":{"type":"string","default":"warn","enum":["off","error","warn","info","debug"],"enumDescriptions":["Logs nothing","Logs only errors","Logs errors and warnings","Logs errors, warnings, and messages","Logs verbose errors, warnings, and messages. Best for issue reporting."],"markdownDescription":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window","order":30},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mp","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"markdownDescription":"Specifies the style of the gravatar default (fallback) images","scope":"window","order":40},"gitlens.proxy":{"type":["object","null"],"default":null,"items":{"type":"object","required":["url","strictSSL"],"properties":{"url":{"type":["string","null"],"default":null,"description":"Specifies the URL of the proxy server to use"},"strictSSL":{"type":"boolean","description":"Specifies whether the proxy server certificate should be verified against the list of supplied CAs","default":true}},"additionalProperties":false},"uniqueItems":true,"description":"Specifies the proxy configuration to use. If not specified, the proxy configuration will be determined based on VS Code or OS settings","scope":"window","order":55},"gitlens.plusFeatures.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to hide or show features that require a trial or GitLens Pro and are not accessible given the opened repositories and current trial or plan","scope":"window","order":60},"gitlens.virtualRepositories.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable virtual repositories support","scope":"window","order":70},"gitlens.insiders":{"deprecationMessage":"Deprecated. Use the pre-release edition of GitLens instead","markdownDeprecationMessage":"Deprecated. Use the pre-release of GitLens instead"}}}],"configurationDefaults":{"[ansible][azure-pipelines][css][dockerfile][dockercompose][html][json][jsonc][less][postcss][scss][stylus][vue][yaml]":{"gitlens.codeLens.scopes":["document"]},"[python]":{"gitlens.codeLens.symbolScopes":["!Module"]}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the file blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the file blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the file blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the inline blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the inline blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the scroll bar color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}},{"id":"gitlens.openAutolinkedIssueIconColor","defaults":{"dark":"#3fb950","light":"#1a7f37","highContrast":"#68ff79"},"description":"Specifies the icon color of open issues in the GitLens views"},{"id":"gitlens.closedAutolinkedIssueIconColor","defaults":{"dark":"#a371f7","light":"#8250df","highContrast":"#8945ff"},"description":"Specifies the icon color of closed issues in the GitLens views"},{"id":"gitlens.closedPullRequestIconColor","description":"Specifies the icon color of closed pull requests in the GitLens views","defaults":{"dark":"#f85149","light":"#cf222e","highContrast":"#ff544b"}},{"id":"gitlens.openPullRequestIconColor","description":"Specifies the icon color of open pull requests in the GitLens views","defaults":{"dark":"#3fb950","light":"#1a7f37","highContrast":"#68ff79"}},{"id":"gitlens.mergedPullRequestIconColor","description":"Specifies the icon color of merged pull requests in the GitLens views","defaults":{"dark":"#a371f7","light":"#8250df","highContrast":"#8945ff"}},{"id":"gitlens.unpublishedChangesIconColor","description":"Specifies the icon color of unpublished changes in the GitLens views","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.unpublishedCommitIconColor","description":"Specifies the icon color of unpublished commits in the GitLens views","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.unpulledChangesIconColor","description":"Specifies the icon color of unpulled changes in the GitLens views","defaults":{"dark":"#b15e35","light":"#b15e35","highContrast":"#ff874c"}},{"id":"gitlens.decorations.addedForegroundColor","description":"Specifies the decoration foreground color of added files","defaults":{"light":"gitDecoration.addedResourceForeground","dark":"gitDecoration.addedResourceForeground","highContrast":"gitDecoration.addedResourceForeground"}},{"id":"gitlens.decorations.copiedForegroundColor","description":"Specifies the decoration foreground color of copied files","defaults":{"light":"gitDecoration.renamedResourceForeground","dark":"gitDecoration.renamedResourceForeground","highContrast":"gitDecoration.renamedResourceForeground"}},{"id":"gitlens.decorations.deletedForegroundColor","description":"Specifies the decoration foreground color of deleted files","defaults":{"light":"gitDecoration.deletedResourceForeground","dark":"gitDecoration.deletedResourceForeground","highContrast":"gitDecoration.deletedResourceForeground"}},{"id":"gitlens.decorations.ignoredForegroundColor","description":"Specifies the decoration foreground color of ignored files","defaults":{"light":"gitDecoration.ignoredResourceForeground","dark":"gitDecoration.ignoredResourceForeground","highContrast":"gitDecoration.ignoredResourceForeground"}},{"id":"gitlens.decorations.modifiedForegroundColor","description":"Specifies the decoration foreground color of modified files","defaults":{"light":"gitDecoration.modifiedResourceForeground","dark":"gitDecoration.modifiedResourceForeground","highContrast":"gitDecoration.modifiedResourceForeground"}},{"id":"gitlens.decorations.untrackedForegroundColor","description":"Specifies the decoration foreground color of untracked files","defaults":{"light":"gitDecoration.untrackedResourceForeground","dark":"gitDecoration.untrackedResourceForeground","highContrast":"gitDecoration.untrackedResourceForeground"}},{"id":"gitlens.decorations.renamedForegroundColor","description":"Specifies the decoration foreground color of renamed files","defaults":{"light":"gitDecoration.renamedResourceForeground","dark":"gitDecoration.renamedResourceForeground","highContrast":"gitDecoration.renamedResourceForeground"}},{"id":"gitlens.decorations.branchAheadForegroundColor","description":"Specifies the decoration foreground color of branches that are ahead of their upstream","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.branchBehindForegroundColor","description":"Specifies the decoration foreground color of branches that are behind their upstream","defaults":{"dark":"#b15e35","light":"#b15e35","highContrast":"#ff874c"}},{"id":"gitlens.decorations.branchDivergedForegroundColor","description":"Specifies the decoration foreground color of branches that are both ahead and behind their upstream","defaults":{"dark":"#D8AF1B","light":"#D8AF1B","highContrast":"#D8AF1B"}},{"id":"gitlens.decorations.branchUpToDateForegroundColor","description":"Specifies the decoration foreground color of branches that are up to date with their upstream","defaults":{"dark":"sideBar.foreground","light":"sideBar.foreground","highContrast":"sideBar.foreground"}},{"id":"gitlens.decorations.branchUnpublishedForegroundColor","description":"Specifies the decoration foreground color of branches that are not yet published to an upstream","defaults":{"dark":"sideBar.foreground","light":"sideBar.foreground","highContrast":"sideBar.foreground"}},{"id":"gitlens.decorations.branchMissingUpstreamForegroundColor","description":"Specifies the decoration foreground color of branches that have a missing upstream","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.decorations.statusMergingOrRebasingConflictForegroundColor","description":"Specifies the decoration foreground color of the status during a rebase operation with conflicts","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.decorations.statusMergingOrRebasingForegroundColor","description":"Specifies the decoration foreground color of the status during a rebase operation","defaults":{"dark":"#D8AF1B","light":"#D8AF1B","highContrast":"#D8AF1B"}},{"id":"gitlens.decorations.workspaceRepoMissingForegroundColor","description":"Specifies the decoration foreground color of workspace repos which are missing a local path","defaults":{"dark":"#909090","light":"#949494","highContrast":"#d3d3d3"}},{"id":"gitlens.decorations.workspaceCurrentForegroundColor","description":"Specifies the decoration foreground color of workspaces which are currently open as a Code Workspace file","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.workspaceRepoOpenForegroundColor","description":"Specifies the decoration foreground color of workspace repos which are open in the current workspace","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.worktreeHasUncommittedChangesForegroundColor","description":"Specifies the decoration foreground color for worktrees that have uncommitted changes","defaults":{"light":"#895503","dark":"#E2C08D","highContrast":"#E2C08D"}},{"id":"gitlens.decorations.worktreeMissingForegroundColor","description":"Specifies the decoration foreground color for worktrees cannot be found on disk","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.graphLane1Color","description":"Specifies the color for the first commit lane of the _Commit Graph_ visualization","defaults":{"light":"#15a0bf","dark":"#15a0bf","highContrast":"#15a0bf"}},{"id":"gitlens.graphLane2Color","description":"Specifies the color for the second commit lane of the _Commit Graph_ visualization","defaults":{"light":"#0669f7","dark":"#0669f7","highContrast":"#0669f7"}},{"id":"gitlens.graphLane3Color","description":"Specifies the color for the third commit lane of the _Commit Graph_ visualization","defaults":{"light":"#8e00c2","dark":"#8e00c2","highContrast":"#8e00c2"}},{"id":"gitlens.graphLane4Color","description":"Specifies the color for the fourth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#c517b6","dark":"#c517b6","highContrast":"#c517b6"}},{"id":"gitlens.graphLane5Color","description":"Specifies the color for the fifth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#d90171","dark":"#d90171","highContrast":"#d90171"}},{"id":"gitlens.graphLane6Color","description":"Specifies the color for the sixth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#cd0101","dark":"#cd0101","highContrast":"#cd0101"}},{"id":"gitlens.graphLane7Color","description":"Specifies the color for the seventh commit lane of the _Commit Graph_ visualization","defaults":{"light":"#f25d2e","dark":"#f25d2e","highContrast":"#f25d2e"}},{"id":"gitlens.graphLane8Color","description":"Specifies the color for the eighth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#f2ca33","dark":"#f2ca33","highContrast":"#f2ca33"}},{"id":"gitlens.graphLane9Color","description":"Specifies the color for the ninth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#7bd938","dark":"#7bd938","highContrast":"#7bd938"}},{"id":"gitlens.graphLane10Color","description":"Specifies the color for the tenth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#2ece9d","dark":"#2ece9d","highContrast":"#2ece9d"}},{"id":"gitlens.graphChangesColumnAddedColor","description":"Specifies the color for denoting lines added in the _Changes_ column on the _Commit Graph_","defaults":{"light":"#2da44e","highContrastLight":"#2da44e","dark":"#347d39","highContrast":"#347d39"}},{"id":"gitlens.graphChangesColumnDeletedColor","description":"Specifies the color for denoting lines deleted in the _Changes_ column on the _Commit Graph_","defaults":{"light":"#cf222e","highContrastLight":"#cf222e","dark":"#c93c37","highContrast":"#c93c37"}},{"id":"gitlens.graphMinimapMarkerHeadColor","description":"Specifies the color marking HEAD on the minimap of the _Commit Graph_","defaults":{"light":"#04c814","highContrastLight":"#04c814","dark":"#05e617","highContrast":"#05e617"}},{"id":"gitlens.graphScrollMarkerHeadColor","description":"Specifies the color marking HEAD on the scrollbar of the _Commit Graph_","defaults":{"light":"#04c814","highContrastLight":"#04c814","dark":"#05e617","highContrast":"#05e617"}},{"id":"gitlens.graphMinimapMarkerUpstreamColor","description":"Specifies the color marking HEAD's upstream on the minimap of the _Commit Graph_","defaults":{"light":"#8cd993","highContrastLight":"#8cd993","dark":"#09ae17","highContrast":"#09ae17"}},{"id":"gitlens.graphScrollMarkerUpstreamColor","description":"Specifies the color marking HEAD's upstream on the scrollbar of the _Commit Graph_","defaults":{"light":"#8cd993","highContrastLight":"#8cd993","dark":"#09ae17","highContrast":"#09ae17"}},{"id":"gitlens.graphMinimapMarkerHighlightsColor","description":"Specifies the color marking highlights (matches) on the minimap of the _Commit Graph_","defaults":{"light":"#f5cc00","highContrastLight":"#f5cc00","dark":"#fbff0a","highContrast":"#fbff0a"}},{"id":"gitlens.graphScrollMarkerHighlightsColor","description":"Specifies the color marking highlights (matches) on the scrollbar of the _Commit Graph_","defaults":{"light":"#f5cc00","highContrastLight":"#f5cc00","dark":"#fbff0a","highContrast":"#fbff0a"}},{"id":"gitlens.graphMinimapMarkerLocalBranchesColor","description":"Specifies the color marking local branches on the minimap of the _Commit Graph_","defaults":{"light":"#3095e8","highContrastLight":"#3095e8","dark":"#3087cf","highContrast":"#3087cf"}},{"id":"gitlens.graphScrollMarkerLocalBranchesColor","description":"Specifies the color marking local branches on the scrollbar of the _Commit Graph_","defaults":{"light":"#3095e8","highContrastLight":"#3095e8","dark":"#3087cf","highContrast":"#3087cf"}},{"id":"gitlens.graphMinimapMarkerPullRequestsColor","description":"Specifies the color marking pull requests on the minimap of the _Commit Graph_","defaults":{"light":"#ff8f18","highContrastLight":"#ff8f18","dark":"#c76801","highContrast":"#c76801"}},{"id":"gitlens.graphScrollMarkerPullRequestsColor","description":"Specifies the color marking pull requests on the scrollbar of the _Commit Graph_","defaults":{"light":"#ff8f18","highContrastLight":"#ff8f18","dark":"#c76801","highContrast":"#c76801"}},{"id":"gitlens.graphMinimapMarkerRemoteBranchesColor","description":"Specifies the color marking remote branches on the minimap of the _Commit Graph_","defaults":{"light":"#67ace4","highContrastLight":"#67ace4","dark":"#2b5e88","highContrast":"#2b5e88"}},{"id":"gitlens.graphScrollMarkerRemoteBranchesColor","description":"Specifies the color marking remote branches on the scrollbar of the _Commit Graph_","defaults":{"light":"#67ace4","highContrastLight":"#67ace4","dark":"#2b5e88","highContrast":"#2b5e88"}},{"id":"gitlens.graphMinimapMarkerStashesColor","description":"Specifies the color marking stashes on the minimap of the _Commit Graph_","defaults":{"light":"#e467e4","highContrastLight":"#e467e4","dark":"#b34db3","highContrast":"#b34db3"}},{"id":"gitlens.graphScrollMarkerStashesColor","description":"Specifies the color marking stashes on the scrollbar of the _Commit Graph_","defaults":{"light":"#e467e4","highContrastLight":"#e467e4","dark":"#b34db3","highContrast":"#b34db3"}},{"id":"gitlens.graphMinimapMarkerTagsColor","description":"Specifies the color marking tags on the minimap of the _Commit Graph_","defaults":{"light":"#d2a379","highContrastLight":"#d2a379","dark":"#6b562e","highContrast":"#6b562e"}},{"id":"gitlens.graphScrollMarkerTagsColor","description":"Specifies the color marking tags on the scrollbar of the _Commit Graph_","defaults":{"light":"#d2a379","highContrastLight":"#d2a379","dark":"#6b562e","highContrast":"#6b562e"}},{"id":"gitlens.launchpadIndicatorMergeableColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is mergeable","defaults":{"light":"#42c954","dark":"#3fb950","highContrast":"#68ff79"}},{"id":"gitlens.launchpadIndicatorMergeableHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is mergeable","defaults":{"light":"#42c954","dark":"#3fb950","highContrast":"#68ff79"}},{"id":"gitlens.launchpadIndicatorBlockedColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is blocked","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#ff003c"}},{"id":"gitlens.launchpadIndicatorBlockedHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is blocked","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#ff003c"}},{"id":"gitlens.launchpadIndicatorAttentionColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is follow-up or needs review","defaults":{"dark":"#D8AF1B","light":"#cc9b15","highContrast":"#D8AF1B"}},{"id":"gitlens.launchpadIndicatorAttentionHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is follow-up or needs review","defaults":{"dark":"#D8AF1B","light":"#cc9b15","highContrast":"#D8AF1B"}}],"commands":[{"command":"gitlens.addAuthors","title":"Add Co-authors...","category":"GitLens","icon":"$(person-add)"},{"command":"gitlens.ai.generateChangelog","title":"Generate Changelog (Preview)...","category":"GitLens"},{"command":"gitlens.ai.generateCommitMessage","title":"Generate Commit Message","category":"GitLens"},{"command":"gitlens.annotations.nextChange","title":"Next Change","icon":"$(arrow-down)"},{"command":"gitlens.annotations.previousChange","title":"Previous Change","icon":"$(arrow-up)"},{"command":"gitlens.applyPatchFromClipboard","title":"Apply Copied Changes (Patch)","category":"GitLens"},{"command":"gitlens.associateIssueWithBranch","title":"Associate Issue with Branch...","category":"GitLens"},{"command":"gitlens.browseRepoAtRevision","title":"Browse Repository from Revision","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.browseRepoAtRevisionInNewWindow","title":"Browse Repository from Revision in New Window","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.browseRepoBeforeRevision","title":"Browse Repository from Before Revision","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.browseRepoBeforeRevisionInNewWindow","title":"Browse Repository from Before Revision in New Window","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":"$(gitlens-gitlens-filled)"},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.compareHeadWith","title":"Compare HEAD with...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.compareWith","title":"Compare References...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.compareWorkingWith","title":"Compare Working Tree with...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","icon":"$(gitlens-gitlens-filled)"},{"command":"gitlens.connectRemoteProvider","title":"Connect Remote Integration","category":"GitLens","icon":"$(plug)"},{"command":"gitlens.copyCurrentBranch","title":"Copy Current Branch Name","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToBranch","title":"Copy Link to Branch","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToCommit","title":"Copy Link to Commit","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToComparison","title":"Copy Link to Comparison","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToFile","title":"Copy Link to File","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToFileAtRevision","title":"Copy Link to File at Revision...","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToLines","title":"Copy Link to Code","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToRepo","title":"Copy Link to Repository","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToTag","title":"Copy Link to Tag","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToWorkspace","title":"Copy Link to Workspace","icon":"$(copy)"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Message","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyPatchToClipboard","title":"Copy Changes (Patch)","category":"GitLens"},{"command":"gitlens.copyRelativePathToClipboard","title":"Copy Relative Path","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteBranchesUrl","title":"Copy Remote Branches URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteBranchUrl","title":"Copy Remote Branch URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteCommitUrl","title":"Copy Remote Commit URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteComparisonUrl","title":"Copy Remote Comparison URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlFrom","title":"Copy Remote File URL From...","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote File URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","title":"Copy Remote File URL","icon":"$(copy)"},{"command":"gitlens.copyRemotePullRequestUrl","title":"Copy Pull Request URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteRepositoryUrl","title":"Copy Remote Repository URL","icon":"$(copy)"},{"command":"gitlens.copyShaToClipboard","title":"Copy SHA","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyWorkingChangesToWorktree","title":"Copy Working Changes to Worktree...","category":"GitLens"},{"command":"gitlens.createCloudPatch","title":"Create Patch...","category":"GitLens"},{"command":"gitlens.createPatch","title":"Create Patch...","category":"GitLens"},{"command":"gitlens.createPullRequestOnRemote","title":"Create Pull Request on Remote","category":"GitLens","icon":"$(git-pull-request-create)"},{"command":"gitlens.diffDirectory","title":"Open Directory Compare (difftool) with...","category":"GitLens"},{"command":"gitlens.diffDirectoryWithHead","title":"Open Directory Compare (difftool)","category":"GitLens"},{"command":"gitlens.diffFolderWithRevision","title":"Open Folder Changes with Revision...","category":"GitLens"},{"command":"gitlens.diffFolderWithRevisionFrom","title":"Open Folder Changes with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffLineWithPrevious","title":"Open Line Changes with Previous Revision","category":"GitLens"},{"command":"gitlens.diffLineWithWorking","title":"Open Line Changes with Working File","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithNextInDiffLeft","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithNextInDiffRight","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithPrevious","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithPreviousInDiffLeft","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithPreviousInDiffRight","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithRevision","title":"Open Changes with Revision...","category":"GitLens","icon":"$(gitlens-prev-commit-menu)"},{"command":"gitlens.diffWithRevisionFrom","title":"Open Changes with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.diffWithWorkingInDiffLeft","title":"Open Changes with Working File","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.diffWithWorkingInDiffRight","title":"Open Changes with Working File","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.disableDebugLogging","title":"Disable Debug Logging","category":"GitLens"},{"command":"gitlens.disableRebaseEditor","title":"Disable Interactive Rebase Editor","category":"GitLens"},{"command":"gitlens.disconnectRemoteProvider","title":"Disconnect Remote Integration","category":"GitLens","icon":"$(gitlens-unplug)"},{"command":"gitlens.enableDebugLogging","title":"Enable Debug Logging","category":"GitLens"},{"command":"gitlens.enableRebaseEditor","title":"Enable Interactive Rebase Editor","category":"GitLens"},{"command":"gitlens.externalDiff","title":"Open Changes (difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (difftool)","category":"GitLens"},{"command":"gitlens.fetchRepositories","title":"Fetch","category":"GitLens","icon":"$(repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.getStarted","title":"Get Started","category":"GitLens"},{"command":"gitlens.ghpr.views.openOrCreateWorktree","title":"Checkout Pull Request in Worktree (GitLens)...","enablement":"!operationInProgress"},{"command":"gitlens.gitCommands","title":"Git Command Palette","category":"GitLens"},{"command":"gitlens.gitCommands.branch","title":"Git Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.create","title":"Git Create Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.delete","title":"Git Delete Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.prune","title":"Git Prune Branches...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.rename","title":"Git Rename Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.checkout","title":"Git Checkout...","category":"GitLens"},{"command":"gitlens.gitCommands.cherryPick","title":"Git Cherry Pick...","category":"GitLens"},{"command":"gitlens.gitCommands.history","title":"Git History (log)...","category":"GitLens"},{"command":"gitlens.gitCommands.merge","title":"Git Merge...","category":"GitLens"},{"command":"gitlens.gitCommands.rebase","title":"Git Rebase...","category":"GitLens"},{"command":"gitlens.gitCommands.remote","title":"Git Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.add","title":"Git Add Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.prune","title":"Git Prune Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.remove","title":"Git Remove Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.reset","title":"Git Reset...","category":"GitLens"},{"command":"gitlens.gitCommands.revert","title":"Git Revert...","category":"GitLens"},{"command":"gitlens.gitCommands.show","title":"Git Show...","category":"GitLens"},{"command":"gitlens.gitCommands.stash","title":"Git Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.drop","title":"Git Drop Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.list","title":"Git Stash List...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.pop","title":"Git Pop Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.push","title":"Git Push Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.rename","title":"Git Rename Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.status","title":"Git Status...","category":"GitLens"},{"command":"gitlens.gitCommands.switch","title":"Git Switch to...","category":"GitLens"},{"command":"gitlens.gitCommands.tag","title":"Git Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.tag.create","title":"Git Create Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.tag.delete","title":"Git Delete Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree","title":"Git Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.create","title":"Git Create Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.delete","title":"Git Delete Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.open","title":"Git Open Worktree...","category":"GitLens"},{"command":"gitlens.gk.switchOrganization","title":"Switch Organization...","category":"GitLens"},{"command":"gitlens.graph.addAuthor","title":"Add as Co-author","icon":"$(person-add)"},{"command":"gitlens.graph.ai.generateChangelogFrom","title":"Generate Changelog (Preview)...","icon":"$(sparkle)"},{"command":"gitlens.graph.ai.generateCommitMessage","title":"Generate Commit Message"},{"command":"gitlens.graph.associateIssueWithBranch","title":"Associate Issue with Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.cherryPick","title":"Cherry Pick Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.cherryPick.multi","title":"Cherry Pick Commits...","enablement":"!operationInProgress"},{"command":"gitlens.graph.columnAuthorOff","title":"Hide Author Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnAuthorOn","title":"Show Author Column"},{"command":"gitlens.graph.columnChangesOff","title":"Hide Changes Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnChangesOn","title":"Show Changes Column"},{"command":"gitlens.graph.columnDateTimeOff","title":"Hide Date Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnDateTimeOn","title":"Show Date Column"},{"command":"gitlens.graph.columnGraphCompact","title":"Use Compact Graph Column"},{"command":"gitlens.graph.columnGraphDefault","title":"Use Expanded Graph Column"},{"command":"gitlens.graph.columnGraphOff","title":"Hide Graph Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnGraphOn","title":"Show Graph Column"},{"command":"gitlens.graph.columnMessageOff","title":"Hide Commit Message Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnMessageOn","title":"Show Commit Message Column"},{"command":"gitlens.graph.columnRefOff","title":"Hide Branch / Tag Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnRefOn","title":"Show Branch / Tag Column"},{"command":"gitlens.graph.columnShaOff","title":"Hide SHA Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnShaOn","title":"Show SHA Column"},{"command":"gitlens.graph.commitViaSCM","title":"Commit via Source Control..."},{"command":"gitlens.graph.compareAncestryWithWorking","title":"Compare Working Tree to Common Base"},{"command":"gitlens.graph.compareBranchWithHead","title":"Compare with HEAD","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareSelectedCommits.multi","title":"Compare Selected Commits","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareWithHead","title":"Compare to/from HEAD","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareWithMergeBase","title":"Compare with Common Base"},{"command":"gitlens.graph.compareWithUpstream","title":"Compare with Upstream"},{"command":"gitlens.graph.compareWithWorking","title":"Compare Working Tree to Here","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.graph.copy","title":"Copy","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToBranch","title":"Copy Link to Branch","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToCommit","title":"Copy Link to Commit","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToRepo","title":"Copy Link to Repository","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToTag","title":"Copy Link to Tag","icon":"$(copy)"},{"command":"gitlens.graph.copyMessage","title":"Copy Message","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteBranchUrl","title":"Copy Remote Branch URL","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteCommitUrl","title":"Copy Remote Commit URL","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","title":"Copy Remote Commit URLs","icon":"$(copy)"},{"command":"gitlens.graph.copySha","title":"Copy SHA","icon":"$(copy)"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","title":"Copy Working Changes to Worktree..."},{"command":"gitlens.graph.createBranch","title":"Create Branch...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.createCloudPatch","title":"Create Patch..."},{"command":"gitlens.graph.createPatch","title":"Create Patch..."},{"command":"gitlens.graph.createPullRequest","title":"Create Pull Request...","icon":"$(git-pull-request-create)"},{"command":"gitlens.graph.createTag","title":"Create Tag...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.createWorktree","title":"Create Worktree...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.deleteBranch","title":"Delete Branch...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.deleteTag","title":"Delete Tag...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.fetch","title":"Fetch","icon":"$(repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.hideLocalBranch","title":"Hide Local Branch"},{"command":"gitlens.graph.hideRefGroup","title":"Hide"},{"command":"gitlens.graph.hideRemote","title":"Hide Remote"},{"command":"gitlens.graph.hideRemoteBranch","title":"Hide Remote Branch"},{"command":"gitlens.graph.hideTag","title":"Hide Tag"},{"command":"gitlens.graph.mergeBranchInto","title":"Merge Branch into Current Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.openBranchOnRemote","title":"Open Branch on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openChangedFileDiffs","title":"Open All Changes","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","title":"Open All Changes Individually"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","title":"Open All Changes with Common Base","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","title":"Open All Changes with Working Tree","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","title":"Open All Changes with Working Tree Individually"},{"command":"gitlens.graph.openChangedFileRevisions","title":"Open Files at Revision"},{"command":"gitlens.graph.openChangedFiles","title":"Open Files"},{"command":"gitlens.graph.openCommitOnRemote","title":"Open Commit on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openCommitOnRemote.multi","title":"Open Commits on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openInWorktree","title":"Open in Worktree","icon":"$(window)"},{"command":"gitlens.graph.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files"},{"command":"gitlens.graph.openPullRequest","title":"Open Pull Request","icon":"$(git-pull-request)"},{"command":"gitlens.graph.openPullRequestChanges","title":"Open Pull Request Changes","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openPullRequestComparison","title":"Compare Pull Request","icon":"$(compare-changes)"},{"command":"gitlens.graph.openPullRequestOnRemote","title":"Open Pull Request on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openWorktree","title":"Open Worktree","icon":"$(window)"},{"command":"gitlens.graph.openWorktreeInNewWindow","title":"Open Worktree in New Window","icon":"$(empty-window)"},{"command":"gitlens.graph.publishBranch","title":"Publish Branch","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.graph.pull","title":"Pull","icon":"$(repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.graph.push","title":"Push","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.graph.pushWithForce","title":"Push (force)","icon":"$(repo-force-push)","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoBranch","title":"Rebase Current Branch onto Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoCommit","title":"Rebase Current Branch onto Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoUpstream","title":"Rebase Current Branch onto Upstream...","enablement":"!operationInProgress"},{"command":"gitlens.graph.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.graph.renameBranch","title":"Rename Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetColumnsCompact","title":"Reset Columns to Compact Layout"},{"command":"gitlens.graph.resetColumnsDefault","title":"Reset Columns to Default Layout"},{"command":"gitlens.graph.resetCommit","title":"Reset Current Branch to Previous Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToCommit","title":"Reset Current Branch to Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToTag","title":"Reset Current Branch to Tag...","icon":"$(gitlens-reset)","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToTip","title":"Reset Current Branch to Tip...","enablement":"!operationInProgress"},{"command":"gitlens.graph.revert","title":"Revert Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.scrollMarkerLocalBranchOff","title":"Hide Local Branch Markers"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","title":"Show Local Branch Markers"},{"command":"gitlens.graph.scrollMarkerPullRequestOff","title":"Hide Pull Request Markers"},{"command":"gitlens.graph.scrollMarkerPullRequestOn","title":"Show Pull Request Markers"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","title":"Hide Remote Branch Markers"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","title":"Show Remote Branch Markers"},{"command":"gitlens.graph.scrollMarkerStashOff","title":"Hide Stash Markers"},{"command":"gitlens.graph.scrollMarkerStashOn","title":"Show Stash Markers"},{"command":"gitlens.graph.scrollMarkerTagOff","title":"Hide Tag Markers"},{"command":"gitlens.graph.scrollMarkerTagOn","title":"Show Tag Markers"},{"command":"gitlens.graph.shareAsCloudPatch","title":"Share as Cloud Patch..."},{"command":"gitlens.graph.showInDetailsView","title":"Inspect Details","icon":"$(eye)"},{"command":"gitlens.graph.split","title":"Split Commit Graph","category":"GitLens","icon":"$(split-horizontal)"},{"command":"gitlens.graph.stash.apply","title":"Apply Stash...","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.delete","title":"Drop Stash...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.rename","title":"Rename Stash...","icon":"$(edit)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.save","title":"Stash All Changes...","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToAnotherBranch","title":"Switch to Another Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToBranch","title":"Switch to Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToCommit","title":"Switch to Commit...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToEditorLayout","title":"Prefer Commit Graph in Editor","category":"GitLens","enablement":"config.gitlens.graph.layout != editor"},{"command":"gitlens.graph.switchToPanelLayout","title":"Prefer Commit Graph in Panel","category":"GitLens","enablement":"config.gitlens.graph.layout != panel"},{"command":"gitlens.graph.switchToTag","title":"Switch to Tag...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.undoCommit","title":"Undo Commit","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"gitlens.inviteToLiveShare","title":"Invite to Live Share","icon":"$(live-share)"},{"command":"gitlens.launchpad.indicator.toggle","title":"Toggle Launchpad Indicator","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.openAssociatedPullRequestOnRemote","title":"Open Associated Pull Request","category":"GitLens","icon":"$(git-pull-request)"},{"command":"gitlens.openBlamePriorToChange","title":"Open Blame Prior to Change","category":"GitLens","icon":"$(versions)"},{"command":"gitlens.openBranchesOnRemote","title":"Open Branches on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openBranchOnRemote","title":"Open Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openCloudPatch","title":"Open Cloud Patch..."},{"command":"gitlens.openCommitOnRemote","title":"Open Commit on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openComparisonOnRemote","title":"Open Comparison on Remote","icon":"$(globe)"},{"command":"gitlens.openCurrentBranchOnRemote","title":"Open Current Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openFileFromRemote","title":"Open File from Remote","category":"GitLens"},{"command":"gitlens.openFileHistory","title":"Open File History","category":"GitLens"},{"command":"gitlens.openFileOnRemote","title":"Open File on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openFileOnRemoteFrom","title":"Open File on Remote From...","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openFileRevision","title":"Open File at Revision...","category":"GitLens","icon":"$(gitlens-open-revision)"},{"command":"gitlens.openFileRevisionFrom","title":"Open File at Revision from...","category":"GitLens","icon":"$(gitlens-open-revision)"},{"command":"gitlens.openFolderHistory","title":"Open Folder History"},{"command":"gitlens.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openPatch","title":"Open Patch...","category":"GitLens"},{"command":"gitlens.openPullRequestOnRemote","title":"Open Pull Request on Remote","icon":"$(globe)"},{"command":"gitlens.openRepoOnRemote","title":"Open Repository on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openRevisionFile","title":"Open File at Revision","category":"GitLens","icon":"$(gitlens-open-revision)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.openRevisionFileInDiffLeft","title":"Open File at Revision","icon":"$(gitlens-open-revision)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.openRevisionFileInDiffRight","title":"Open File at Revision","icon":"$(gitlens-open-revision)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ "},{"command":"gitlens.openWorkingFile","title":"Open File","category":"GitLens","icon":"$(go-to-file)"},{"command":"gitlens.openWorkingFileInDiffLeft","title":"Open File","icon":"$(go-to-file)"},{"command":"gitlens.openWorkingFileInDiffRight","title":"Open File","icon":"$(go-to-file)"},{"command":"gitlens.pastePatchFromClipboard","title":"Paste Copied Changes (Patch)","category":"GitLens"},{"command":"gitlens.plus.cloudIntegrations.connect","title":"Connect Integrations..."},{"command":"gitlens.plus.cloudIntegrations.manage","title":"Manage Integrations...","category":"GitLens"},{"command":"gitlens.plus.hide","title":"Hide Pro Features","category":"GitLens"},{"command":"gitlens.plus.login","title":"Sign In to GitKraken...","category":"GitLens"},{"command":"gitlens.plus.logout","title":"Sign Out of GitKraken","category":"GitLens"},{"command":"gitlens.plus.manage","title":"Manage Your Account...","category":"GitLens"},{"command":"gitlens.plus.reactivateProTrial","title":"Reactivate Pro Trial","category":"GitLens"},{"command":"gitlens.plus.referFriend","title":"Refer a friend","category":"GitLens"},{"command":"gitlens.plus.refreshRepositoryAccess","title":"Refresh Repository Access","category":"GitLens"},{"command":"gitlens.plus.restore","title":"Restore Pro Features","category":"GitLens"},{"command":"gitlens.plus.signUp","title":"Sign Up for GitKraken...","category":"GitLens"},{"command":"gitlens.plus.simulateSubscription","title":"Simulate Subscription (Debugging)","category":"GitLens"},{"command":"gitlens.plus.startPreviewTrial","title":"Preview Pro","category":"GitLens"},{"command":"gitlens.plus.upgrade","title":"Upgrade to Pro...","category":"GitLens"},{"command":"gitlens.pullRepositories","title":"Pull","category":"GitLens","icon":"$(repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.pushRepositories","title":"Push","category":"GitLens","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.quickOpenFileHistory","title":"Quick Open File History","category":"GitLens"},{"command":"gitlens.reset","title":"Reset Stored Data...","category":"GitLens"},{"command":"gitlens.resetAIKey","title":"Reset Stored AI Keys...","category":"GitLens"},{"command":"gitlens.resetViewsLayout","title":"Reset Views Layout","category":"GitLens"},{"command":"gitlens.revealCommitInView","title":"Reveal Commit in Side Bar","category":"GitLens"},{"command":"gitlens.scm.ai.generateCommitMessage","title":"Generate Commit Message with GitLens","icon":"$(sparkle)"},{"command":"gitlens.shareAsCloudPatch","title":"Share as Cloud Patch...","category":"GitLens"},{"command":"gitlens.showAccountView","title":"Show Account on Home","category":"GitLens"},{"command":"gitlens.showBranchesView","title":"Show Branches View","category":"GitLens"},{"command":"gitlens.showCommitDetailsView","title":"Show Inspect View","category":"GitLens"},{"command":"gitlens.showCommitInView","title":"Inspect Commit Details","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":"$(search)"},{"command":"gitlens.showCommitsInView","title":"Search for Commits within Selection","category":"GitLens"},{"command":"gitlens.showCommitsView","title":"Show Commits View","category":"GitLens"},{"command":"gitlens.showContributorsView","title":"Show Contributors View","category":"GitLens"},{"command":"gitlens.showDraftsView","title":"Show Cloud Patches View","category":"GitLens"},{"command":"gitlens.showFileHistoryView","title":"Show File History View","category":"GitLens"},{"command":"gitlens.showFileInTimeline","title":"Open Visual File History","category":"GitLens","icon":"$(graph-scatter)"},{"command":"gitlens.showFolderInTimeline","title":"Open Visual Folder History","icon":"$(graph-scatter)"},{"command":"gitlens.showGraph","title":"Show Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showGraphPage","title":"Show Commit Graph in Editor","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showGraphView","title":"Show Commit Graph View","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showHomeView","title":"Show Home View","category":"GitLens"},{"command":"gitlens.showInCommitGraph","title":"Open in Commit Graph","icon":"$(gitlens-graph)"},{"command":"gitlens.showInCommitGraphView","title":"Open in Commit Graph","icon":"$(gitlens-graph)"},{"command":"gitlens.showInDetailsView","title":"Inspect Details","icon":"$(eye)"},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.showLaunchpad","title":"Open Launchpad","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.showLaunchpadView","title":"Show Launchpad View","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.showLineCommitInView","title":"Inspect Line Commit Details","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.showLineHistoryView","title":"Show Line History View","category":"GitLens"},{"command":"gitlens.showPatchDetailsPage","title":"Show Patch Details","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Quick Show Commit"},{"command":"gitlens.showQuickCommitFileDetails","title":"Quick Show Line Commit","category":"GitLens"},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickRevisionDetails","title":"Show Revision Commit","category":"GitLens","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","title":"Show Revision Commit","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","title":"Show Revision Commit","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.showQuickStashList","title":"Show Stashes","category":"GitLens"},{"command":"gitlens.showRemotesView","title":"Show Remotes View","category":"GitLens"},{"command":"gitlens.showRepositoriesView","title":"Show Repositories View","category":"GitLens"},{"command":"gitlens.showSearchAndCompareView","title":"Show Search & Compare View","category":"GitLens"},{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!autolinks","title":"Configure Autolinks","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!branches-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!commit-graph","title":"Open Commit Graph Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!commits-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!contributors-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!file-annotations","title":"Open File Annotation Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!file-history-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!line-history-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!remotes-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!repositories-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!search-compare-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!stashes-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!tags-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!views","title":"Open Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!worktrees-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showStashesView","title":"Show Stashes View","category":"GitLens"},{"command":"gitlens.showTagsView","title":"Show Tags View","category":"GitLens"},{"command":"gitlens.showTimelinePage","title":"Show Visual File History","category":"GitLens","icon":"$(graph-scatter)"},{"command":"gitlens.showTimelineView","title":"Show Visual File History View","category":"GitLens"},{"command":"gitlens.showWorkspacesView","title":"Show Cloud Workspaces View","category":"GitLens"},{"command":"gitlens.showWorktreesView","title":"Show Worktrees View","category":"GitLens"},{"command":"gitlens.startWork","title":"Start Work","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.stashApply","title":"Apply a Stash...","category":"GitLens","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.stashSave","title":"Stash All Changes...","category":"GitLens","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.stashSaveFiles","title":"Stash Changes...","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.switchAIModel","title":"Switch AI Provider/Model","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.timeline.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.timeline.split","title":"Split Visual File History","category":"GitLens","icon":"$(split-horizontal)"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git CodeLens","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileBlameInDiffLeft","title":"Toggle File Blame","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileBlameInDiffRight","title":"Toggle File Blame","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileChanges","title":"Toggle File Changes","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileChangesOnly","title":"Toggle File Changes","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","title":"Toggle File Heatmap","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmapInDiffRight","title":"Toggle File Heatmap","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleGraph","title":"Toggle Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame","category":"GitLens"},{"command":"gitlens.toggleMaximizedGraph","title":"Toggle Maximized Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.views.abortPausedOperation","title":"Abort","icon":"$(circle-slash)"},{"command":"gitlens.views.addAuthor","title":"Add as Co-author","icon":"$(person-add)"},{"command":"gitlens.views.addAuthor.multi","title":"Add as Co-authors","icon":"$(person-add)"},{"command":"gitlens.views.addAuthors","title":"Add Co-authors...","icon":"$(person-add)"},{"command":"gitlens.views.addPullRequestRemote","title":"Add Pull Request Remote","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.addRemote","title":"Add Remote...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.ai.generateChangelog","title":"Generate Changelog (Preview)","icon":"$(sparkle)"},{"command":"gitlens.views.ai.generateChangelogFrom","title":"Generate Changelog (Preview)...","icon":"$(sparkle)"},{"command":"gitlens.views.applyChanges","title":"Apply Changes","enablement":"!operationInProgress"},{"command":"gitlens.views.associateIssueWithBranch","title":"Associate Issue with Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.branches.copy","title":"Copy"},{"command":"gitlens.views.branches.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.branches.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.branches.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.branches.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.branches.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.branches.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.branches.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.branches.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","title":"Hide Branch Comparisons"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","title":"Show Branch Comparisons"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","title":"Show Branch Pull Requests"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","title":"Hide Remote Branches"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","title":"Show Remote Branches"},{"command":"gitlens.views.branches.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.branches.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.branches.viewOptionsTitle","title":"Branches View Options","enablement":"false"},{"command":"gitlens.views.browseRepoAtRevision","title":"Repository from Here","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","title":"Repository from Here in New Window","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoBeforeRevision","title":"Repository from Before Here","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","title":"Repository from Before Here in New Window","icon":"$(folder-opened)"},{"command":"gitlens.views.cherryPick","title":"Cherry Pick Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.cherryPick.multi","title":"Cherry Pick Commits...","enablement":"!operationInProgress"},{"command":"gitlens.views.clearComparison","title":"Clear Comparison","icon":"$(close)"},{"command":"gitlens.views.clearReviewed","title":"Clear Reviewed Files"},{"command":"gitlens.views.closeRepository","title":"Close Repository"},{"command":"gitlens.views.collapseNode","title":"Collapse"},{"command":"gitlens.views.commitDetails.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.commits.copy","title":"Copy"},{"command":"gitlens.views.commits.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.commits.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","title":"Filter Commits by Author...","icon":"$(filter)"},{"command":"gitlens.views.commits.setCommitsFilterOff","title":"Clear Filter","icon":"$(filter-filled)"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.commits.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.commits.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.commits.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.commits.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","title":"Hide Branch Comparison"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","title":"Show Branch Comparison"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","title":"Hide Current Branch Pull Request"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","title":"Show Current Branch Pull Request"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","title":"Hide Merge Commits"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","title":"Show Merge Commits"},{"command":"gitlens.views.commits.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.commits.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.commits.viewOptionsTitle","title":"Commits View Options","enablement":"false"},{"command":"gitlens.views.compareAncestryWithWorking","title":"Compare Working Tree to Common Base"},{"command":"gitlens.views.compareBranchWithHead","title":"Compare with HEAD","icon":"$(compare-changes)"},{"command":"gitlens.views.compareFileWithSelected","title":"Compare with Selected"},{"command":"gitlens.views.compareWithHead","title":"Compare to/from HEAD","icon":"$(compare-changes)"},{"command":"gitlens.views.compareWithMergeBase","title":"Compare with Common Base"},{"command":"gitlens.views.compareWithSelected","title":"Compare with Selected"},{"command":"gitlens.views.compareWithUpstream","title":"Compare with Upstream"},{"command":"gitlens.views.compareWithWorking","title":"Compare Working Tree to Here","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.views.continuePausedOperation","title":"Continue","icon":"$(debug-continue)"},{"command":"gitlens.views.contributors.copy","title":"Copy"},{"command":"gitlens.views.contributors.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.contributors.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.contributors.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","title":"View Current Branch Only"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","title":"View All Branches"},{"command":"gitlens.views.contributors.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.contributors.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","title":"Hide Merge Commits"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","title":"Show Merge Commits"},{"command":"gitlens.views.contributors.setShowStatisticsOff","title":"Hide Statistics"},{"command":"gitlens.views.contributors.setShowStatisticsOn","title":"Show Statistics"},{"command":"gitlens.views.contributors.viewOptionsTitle","title":"Contributors View Options","enablement":"false"},{"command":"gitlens.views.copy","title":"Copy","icon":"$(copy)"},{"command":"gitlens.views.copyAsMarkdown","title":"Copy as Markdown","icon":"$(copy)"},{"command":"gitlens.views.copyRemoteCommitUrl","title":"Copy Remote Commit URL","icon":"$(copy)"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","title":"Copy Remote Commit URLs","icon":"$(copy)"},{"command":"gitlens.views.copyUrl","title":"Copy URL","icon":"$(copy)"},{"command":"gitlens.views.copyUrl.multi","title":"Copy URLs","icon":"$(copy)"},{"command":"gitlens.views.createBranch","title":"Create Branch...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.createPullRequest","title":"Create Pull Request...","icon":"$(git-pull-request-create)"},{"command":"gitlens.views.createTag","title":"Create Tag...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.createWorktree","title":"Create Worktree...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteBranch","title":"Delete Branch...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteBranch.multi","title":"Delete Branches...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteTag","title":"Delete Tag...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteTag.multi","title":"Delete Tags...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteWorktree","title":"Delete Worktree...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteWorktree.multi","title":"Delete Worktrees...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.dismissNode","title":"Dismiss","icon":"$(close)"},{"command":"gitlens.views.draft.open","title":"Open","icon":"$(eye)"},{"command":"gitlens.views.draft.openOnWeb","title":"Open on gitkraken.dev","icon":"$(globe)"},{"command":"gitlens.views.drafts.copy","title":"Copy"},{"command":"gitlens.views.drafts.create","title":"Create Cloud Patch...","icon":"$(add)"},{"command":"gitlens.views.drafts.delete","title":"Delete Cloud Patch...","icon":"$(trash)"},{"command":"gitlens.views.drafts.info","title":"Learn about Cloud Patches...","icon":"$(info)"},{"command":"gitlens.views.drafts.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.drafts.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.drafts.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.editNode","title":"Edit...","icon":"$(edit)"},{"command":"gitlens.views.expandNode","title":"Expand"},{"command":"gitlens.views.fetch","title":"Fetch","icon":"$(repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.views.fileHistory.changeBase","title":"Change Base...","icon":"$(history)"},{"command":"gitlens.views.fileHistory.copy","title":"Copy"},{"command":"gitlens.views.fileHistory.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","title":"View File History","icon":"$(list-selection)","enablement":"gitlens:views:fileHistory:editorFollowing || gitlens:views:fileHistory:cursorFollowing"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","title":"View Line History","icon":"$(file)","enablement":"gitlens:views:fileHistory:editorFollowing"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","title":"Pin the Current History","icon":"$(pin)"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","title":"Unpin the Current History","icon":"$(pinned)"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","title":"Don't Follow Renames"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","title":"Follow Renames"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","title":"View History for Current Branch Only"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","title":"View History for All Branches"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","title":"Hide Merge Commits"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","title":"Show Merge Commits"},{"command":"gitlens.views.graph.openInTab","title":"Open in Editor","icon":"$(link-external)"},{"command":"gitlens.views.graph.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.graphDetails.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.highlightChanges","title":"Highlight All Changes Since Before this Commit"},{"command":"gitlens.views.highlightRevisionChanges","title":"Highlight Changes from this Commit"},{"command":"gitlens.views.home.disablePreview","title":"Revert to Old Home View","icon":"$(discard)"},{"command":"gitlens.views.home.discussions","title":"GitHub Discussions","icon":"$(comment-discussion)"},{"command":"gitlens.views.home.enablePreview","title":"Switch to New Home View","icon":"$(redo)"},{"command":"gitlens.views.home.help","title":"Help Center","icon":"$(question)"},{"command":"gitlens.views.home.info","title":"Learn about Home View","icon":"$(question)"},{"command":"gitlens.views.home.issues","title":"GitHub Issues","icon":"$(feedback)"},{"command":"gitlens.views.home.previewFeedback","title":"New Home View Feedback","icon":"$(feedback)"},{"command":"gitlens.views.home.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.home.whatsNew","title":"What's New (Release Notes)","icon":"$(megaphone)"},{"command":"gitlens.views.launchpad.copy","title":"Copy"},{"command":"gitlens.views.launchpad.info","title":"Learn about Launchpad...","icon":"$(info)"},{"command":"gitlens.views.launchpad.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.launchpad.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.launchpad.viewOptionsTitle","title":"Launchpad View Options","enablement":"false"},{"command":"gitlens.views.lineHistory.changeBase","title":"Change Base...","icon":"$(history)"},{"command":"gitlens.views.lineHistory.copy","title":"Copy"},{"command":"gitlens.views.lineHistory.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","title":"Pin the Current History","icon":"$(pin)"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","title":"Unpin the Current History","icon":"$(pinned)"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.loadAllChildren","title":"Load All","icon":"$(gitlens-expand)"},{"command":"gitlens.views.loadMoreChildren","title":"Load More"},{"command":"gitlens.views.mergeBranchInto","title":"Merge Branch into Current Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.mergeChangesWithWorking","title":"Merge Changes (Manually)..."},{"command":"gitlens.views.openBranchOnRemote","title":"Open Branch on Remote","icon":"$(globe)"},{"command":"gitlens.views.openBranchOnRemote.multi","title":"Open Branches on Remote","icon":"$(globe)"},{"command":"gitlens.views.openChangedFileDiffs","title":"Open All Changes","icon":"$(diff-multiple)"},{"command":"gitlens.views.openChangedFileDiffsIndividually","title":"Open All Changes, Individually"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","title":"Open All Changes with Common Base","icon":"$(diff-multiple)"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","title":"Open All Changes with Working Tree","icon":"$(diff-multiple)"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","title":"Open All Changes with Working Tree, Individually"},{"command":"gitlens.views.openChangedFileRevisions","title":"Open Files at Revision"},{"command":"gitlens.views.openChangedFiles","title":"Open Files"},{"command":"gitlens.views.openChanges","title":"Open Changes","icon":"$(compare-changes)"},{"command":"gitlens.views.openChangesWithMergeBase","title":"Open Changes with Common Base"},{"command":"gitlens.views.openChangesWithWorking","title":"Open Changes with Working File","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.views.openCommitOnRemote","title":"Open Commit on Remote","icon":"$(globe)"},{"command":"gitlens.views.openCommitOnRemote.multi","title":"Open Commits on Remote","icon":"$(globe)"},{"command":"gitlens.views.openDirectoryDiff","title":"Open Directory Comparison"},{"command":"gitlens.views.openDirectoryDiffWithWorking","title":"Directory Compare Working Tree to Here"},{"command":"gitlens.views.openFile","title":"Open File","icon":"$(go-to-file)"},{"command":"gitlens.views.openFileRevision","title":"Open File at Revision","icon":"$(gitlens-open-revision)"},{"command":"gitlens.views.openInIntegratedTerminal","title":"Open in Integrated Terminal"},{"command":"gitlens.views.openInTerminal","title":"Open in Terminal"},{"command":"gitlens.views.openInWorktree","title":"Open in Worktree","icon":"$(empty-window)"},{"command":"gitlens.views.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files"},{"command":"gitlens.views.openPausedOperationInRebaseEditor","title":"Open in Rebase Editor","icon":"$(edit)"},{"command":"gitlens.views.openPreviousChangesWithWorking","title":"Open Previous Changes with Working File"},{"command":"gitlens.views.openPullRequest","title":"Open Pull Request","icon":"$(git-pull-request)"},{"command":"gitlens.views.openPullRequestChanges","title":"Open Pull Request Changes","icon":"$(diff-multiple)"},{"command":"gitlens.views.openPullRequestComparison","title":"Compare Pull Request","icon":"$(compare-changes)"},{"command":"gitlens.views.openUrl","title":"Open URL","icon":"$(globe)"},{"command":"gitlens.views.openUrl.multi","title":"Open URLs","icon":"$(globe)"},{"command":"gitlens.views.openWorktree","title":"Open Worktree","icon":"$(window)"},{"command":"gitlens.views.openWorktreeInNewWindow","title":"Open Worktree in New Window","icon":"$(empty-window)"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","title":"Open Worktrees in New Window","icon":"$(empty-window)"},{"command":"gitlens.views.patchDetails.close","title":"Close Patch","icon":"$(close)"},{"command":"gitlens.views.patchDetails.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.pruneRemote","title":"Prune","enablement":"!operationInProgress"},{"command":"gitlens.views.publishBranch","title":"Publish Branch","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.views.publishRepository","title":"Publish Repository","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.views.pull","title":"Pull","icon":"$(repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.views.pullRequest.close","title":"Close","icon":"$(close)"},{"command":"gitlens.views.pullRequest.copy","title":"Copy"},{"command":"gitlens.views.pullRequest.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.push","title":"Push","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.pushToCommit","title":"Push to Commit...","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.pushWithForce","title":"Push (force)","icon":"$(repo-force-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoBranch","title":"Rebase Current Branch onto Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoCommit","title":"Rebase Current Branch onto Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoUpstream","title":"Rebase Current Branch onto Upstream...","enablement":"!operationInProgress"},{"command":"gitlens.views.refreshNode","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.remotes.copy","title":"Copy"},{"command":"gitlens.views.remotes.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.remotes.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.remotes.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.remotes.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.remotes.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.remotes.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.remotes.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","title":"Show Branch Pull Requests"},{"command":"gitlens.views.remotes.viewOptionsTitle","title":"Remotes View Options","enablement":"false"},{"command":"gitlens.views.removeRemote","title":"Remove Remote...","enablement":"!operationInProgress"},{"command":"gitlens.views.renameBranch","title":"Rename Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.repositories.copy","title":"Copy"},{"command":"gitlens.views.repositories.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.repositories.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","title":"Disable Automatic Refresh"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","title":"Enable Automatic Refresh"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","title":"View Branches as List","icon":"$(list-tree)"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","title":"View Branches as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","title":"Hide Branch Comparisons"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","title":"Show Branch Comparisons"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.repositories.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.repositories.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.repositories.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.repositories.setShowBranchComparisonOff","title":"Hide Branch Comparison"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","title":"Show Branch Comparison"},{"command":"gitlens.views.repositories.setShowBranchesOff","title":"Hide Branches"},{"command":"gitlens.views.repositories.setShowBranchesOn","title":"Show Branches"},{"command":"gitlens.views.repositories.setShowCommitsOff","title":"Hide Commits"},{"command":"gitlens.views.repositories.setShowCommitsOn","title":"Show Commits"},{"command":"gitlens.views.repositories.setShowContributorsOff","title":"Hide Contributors"},{"command":"gitlens.views.repositories.setShowContributorsOn","title":"Show Contributors"},{"command":"gitlens.views.repositories.setShowRemotesOff","title":"Hide Remotes"},{"command":"gitlens.views.repositories.setShowRemotesOn","title":"Show Remotes"},{"command":"gitlens.views.repositories.setShowSectionOff","title":"Hide"},{"command":"gitlens.views.repositories.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.repositories.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.repositories.setShowTagsOff","title":"Hide Tags"},{"command":"gitlens.views.repositories.setShowTagsOn","title":"Show Tags"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","title":"Hide Current Branch Status"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","title":"Show Current Branch Status"},{"command":"gitlens.views.repositories.setShowWorktreesOff","title":"Hide Worktrees"},{"command":"gitlens.views.repositories.setShowWorktreesOn","title":"Show Worktrees"},{"command":"gitlens.views.repositories.viewOptionsTitle","title":"Repositories View Options","enablement":"false"},{"command":"gitlens.views.resetCommit","title":"Reset Current Branch to Previous Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.resetToCommit","title":"Reset Current Branch to Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.resetToTip","title":"Reset Current Branch to Tip...","enablement":"!operationInProgress"},{"command":"gitlens.views.restore","title":"Restore (Checkout)","icon":"$(gitlens-switch)"},{"command":"gitlens.views.revealRepositoryInExplorer","title":"Reveal in File Explorer"},{"command":"gitlens.views.revealWorktreeInExplorer","title":"Reveal in File Explorer"},{"command":"gitlens.views.revert","title":"Revert Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.scm.grouped.branches","title":"Branches","icon":"$(gitlens-branches-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.branches.detach","title":"Detach Branches View","icon":"$(gitlens-branches-view)"},{"command":"gitlens.views.scm.grouped.branches.regroup","title":"Regroup Branches View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.branches.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.branches.visibility.hide","title":"Hide Branches View"},{"command":"gitlens.views.scm.grouped.branches.visibility.show","title":"Show Branches View"},{"command":"gitlens.views.scm.grouped.commits","title":"Commits","icon":"$(gitlens-commits-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.commits.detach","title":"Detach Commits View","icon":"$(gitlens-commits-view)"},{"command":"gitlens.views.scm.grouped.commits.regroup","title":"Regroup Commits View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.commits.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.commits.visibility.hide","title":"Hide Commits View"},{"command":"gitlens.views.scm.grouped.commits.visibility.show","title":"Show Commits View"},{"command":"gitlens.views.scm.grouped.contributors","title":"Contributors","icon":"$(gitlens-contributors-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.contributors.detach","title":"Detach Contributors View","icon":"$(gitlens-contributors-view)"},{"command":"gitlens.views.scm.grouped.contributors.regroup","title":"Regroup Contributors View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.contributors.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.contributors.visibility.hide","title":"Hide Contributors View"},{"command":"gitlens.views.scm.grouped.contributors.visibility.show","title":"Show Contributors View"},{"command":"gitlens.views.scm.grouped.detachAll","title":"Detach All Views","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.launchpad","title":"Launchpad","icon":"$(gitlens-launchpad-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.launchpad.detach","title":"Detach Launchpad View","icon":"$(gitlens-launchpad-view)"},{"command":"gitlens.views.scm.grouped.launchpad.regroup","title":"Regroup Launchpad View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.launchpad.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.launchpad.visibility.hide","title":"Hide Launchpad View"},{"command":"gitlens.views.scm.grouped.launchpad.visibility.show","title":"Show Launchpad View"},{"command":"gitlens.views.scm.grouped.refresh","title":"Refresh","icon":"$(refresh)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.regroupAll","title":"Regroup All Views","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.remotes","title":"Remotes","icon":"$(gitlens-remotes-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.remotes.detach","title":"Detach Remotes View","icon":"$(gitlens-remotes-view)"},{"command":"gitlens.views.scm.grouped.remotes.regroup","title":"Regroup Remotes View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.remotes.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.remotes.visibility.hide","title":"Hide Remotes View"},{"command":"gitlens.views.scm.grouped.remotes.visibility.show","title":"Show Remotes View"},{"command":"gitlens.views.scm.grouped.repositories","title":"Repositories","icon":"$(gitlens-repositories-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.repositories.detach","title":"Detach Repositories View","icon":"$(gitlens-repositories-view)"},{"command":"gitlens.views.scm.grouped.repositories.regroup","title":"Regroup Repositories View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.repositories.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.repositories.visibility.hide","title":"Hide Repositories View"},{"command":"gitlens.views.scm.grouped.repositories.visibility.show","title":"Show Repositories View"},{"command":"gitlens.views.scm.grouped.searchAndCompare","title":"Search & Compare","icon":"$(gitlens-search-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","title":"Detach Search & Compare View","icon":"$(gitlens-search-view)"},{"command":"gitlens.views.scm.grouped.searchAndCompare.regroup","title":"Regroup Search & Compare View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.searchAndCompare.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.searchAndCompare.visibility.hide","title":"Hide Search & Compare View"},{"command":"gitlens.views.scm.grouped.searchAndCompare.visibility.show","title":"Show Search & Compare View"},{"command":"gitlens.views.scm.grouped.stashes","title":"Stashes","icon":"$(gitlens-stashes-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.stashes.detach","title":"Detach Stashes View","icon":"$(gitlens-stashes-view)"},{"command":"gitlens.views.scm.grouped.stashes.regroup","title":"Regroup Stashes View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.stashes.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.stashes.visibility.hide","title":"Hide Stashes View"},{"command":"gitlens.views.scm.grouped.stashes.visibility.show","title":"Show Stashes View"},{"command":"gitlens.views.scm.grouped.tags","title":"Tags","icon":"$(gitlens-tags-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.tags.detach","title":"Detach Tags View","icon":"$(gitlens-tags-view)"},{"command":"gitlens.views.scm.grouped.tags.regroup","title":"Regroup Tags View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.tags.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.tags.visibility.hide","title":"Hide Tags View"},{"command":"gitlens.views.scm.grouped.tags.visibility.show","title":"Show Tags View"},{"command":"gitlens.views.scm.grouped.worktrees","title":"Worktrees","icon":"$(gitlens-worktrees-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.worktrees.detach","title":"Detach Worktrees View","icon":"$(gitlens-worktrees-view)"},{"command":"gitlens.views.scm.grouped.worktrees.regroup","title":"Regroup Worktrees View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.worktrees.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.worktrees.visibility.hide","title":"Hide Worktrees View"},{"command":"gitlens.views.scm.grouped.worktrees.visibility.show","title":"Show Worktrees View"},{"command":"gitlens.views.searchAndCompare.clear","title":"Clear Results","icon":"$(clear-all)"},{"command":"gitlens.views.searchAndCompare.copy","title":"Copy"},{"command":"gitlens.views.searchAndCompare.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.searchAndCompare.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.searchAndCompare.searchCommits","title":"Search Commits...","icon":"$(search)"},{"command":"gitlens.views.searchAndCompare.selectForCompare","title":"Compare References...","icon":"$(compare-changes)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.searchAndCompare.swapComparison","title":"Swap Comparison","icon":"$(arrow-swap)","enablement":"viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/"},{"command":"gitlens.views.searchAndCompare.viewOptionsTitle","title":"Search & Compare View Options","enablement":"false"},{"command":"gitlens.views.selectFileForCompare","title":"Select for Compare"},{"command":"gitlens.views.selectForCompare","title":"Select for Compare"},{"command":"gitlens.views.setAsDefault","title":"Set as Default"},{"command":"gitlens.views.setBranchComparisonToBranch","title":"Compare with Branch (HEAD)","icon":"$(compare-changes)"},{"command":"gitlens.views.setBranchComparisonToWorking","title":"Compare with Working Tree","icon":"$(compare-changes)"},{"command":"gitlens.views.setContributorsStatisticsOff","title":"Hide Contributors Statistics","icon":"$(graph-line)"},{"command":"gitlens.views.setContributorsStatisticsOn","title":"Show Contributors Statistics","icon":"$(graph-line)"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","title":"Filter Commits by Author...","icon":"$(filter)"},{"command":"gitlens.views.setResultsCommitsFilterOff","title":"Clear Filter","icon":"$(filter-filled)"},{"command":"gitlens.views.setResultsFilesFilterOff","title":"Clear Filter"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","title":"Show Left-side Files Only","enablement":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/"},{"command":"gitlens.views.setResultsFilesFilterOnRight","title":"Show Right-side Files Only","enablement":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","title":"Hide Date Markers"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","title":"Show Date Markers"},{"command":"gitlens.views.skipPausedOperation","title":"Skip","icon":"$(debug-step-over)"},{"command":"gitlens.views.stageDirectory","title":"Stage All Changes","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.stageFile","title":"Stage Changes","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.star","title":"Add to Favorites","icon":"$(star-empty)"},{"command":"gitlens.views.star.multi","title":"Add to Favorites","icon":"$(star-empty)"},{"command":"gitlens.views.stash.apply","title":"Apply Stash...","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.delete","title":"Drop Stash...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.delete.multi","title":"Drop Stashes...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.rename","title":"Rename Stash...","icon":"$(edit)","enablement":"!operationInProgress"},{"command":"gitlens.views.stashes.copy","title":"Copy"},{"command":"gitlens.views.stashes.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.stashes.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.stashes.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.stashes.viewOptionsTitle","title":"Stashes View Options","enablement":"false"},{"command":"gitlens.views.switchToAnotherBranch","title":"Switch to Another Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToBranch","title":"Switch to Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToCommit","title":"Checkout Commit...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToTag","title":"Checkout Tag...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.tags.copy","title":"Copy"},{"command":"gitlens.views.tags.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.tags.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.tags.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.tags.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.tags.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.tags.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.tags.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.tags.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.tags.viewOptionsTitle","title":"Tags View Options","enablement":"false"},{"command":"gitlens.views.timeline.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.title.createBranch","title":"Create Branch...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.title.createTag","title":"Create Tag...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.title.createWorktree","title":"Create Worktree...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.undoCommit","title":"Undo Commit","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"gitlens.views.unsetAsDefault","title":"Unset as Default"},{"command":"gitlens.views.unstageDirectory","title":"Unstage All Changes","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"gitlens.views.unstageFile","title":"Unstage Changes","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"gitlens.views.unstar","title":"Remove from Favorites","icon":"$(star-full)"},{"command":"gitlens.views.unstar.multi","title":"Remove from Favorites","icon":"$(star-full)"},{"command":"gitlens.views.workspaces.addRepos","title":"Add Repositories...","icon":"$(add)"},{"command":"gitlens.views.workspaces.addReposFromLinked","title":"Add Repositories from Linked Workspace..."},{"command":"gitlens.views.workspaces.changeAutoAddSetting","title":"Change Linked Workspace Auto-Add Behavior..."},{"command":"gitlens.views.workspaces.convert","title":"Convert to Cloud Workspace...","icon":"$(cloud-upload)"},{"command":"gitlens.views.workspaces.copy","title":"Copy"},{"command":"gitlens.views.workspaces.create","title":"Create Cloud Workspace...","category":"GitLens","icon":"$(add)"},{"command":"gitlens.views.workspaces.createLocal","title":"Create VS Code Workspace...","icon":"$(empty-window)"},{"command":"gitlens.views.workspaces.delete","title":"Delete Workspace...","icon":"$(trash)"},{"command":"gitlens.views.workspaces.info","title":"Learn about Cloud Workspaces...","icon":"$(info)"},{"command":"gitlens.views.workspaces.locateAllRepos","title":"Locate Repositories...","icon":"$(location)"},{"command":"gitlens.views.workspaces.openLocal","title":"Open VS Code Workspace in Current Window...","icon":"$(window)"},{"command":"gitlens.views.workspaces.openLocalNewWindow","title":"Open VS Code Workspace in New Window...","icon":"$(window)"},{"command":"gitlens.views.workspaces.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.workspaces.repo.addToWindow","title":"Add Repository to VS Code Workspace"},{"command":"gitlens.views.workspaces.repo.locate","title":"Locate Repository...","icon":"$(location)"},{"command":"gitlens.views.workspaces.repo.open","title":"Open Repository","icon":"$(window)"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","title":"Open Repository in New Window","icon":"$(empty-window)"},{"command":"gitlens.views.workspaces.repo.remove","title":"Remove from Workspace...","icon":"$(trash)"},{"command":"gitlens.views.worktrees.copy","title":"Copy"},{"command":"gitlens.views.worktrees.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.worktrees.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.worktrees.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.worktrees.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","title":"Hide Branch Comparison"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","title":"Show Branch Comparison"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","title":"Show Branch Pull Requests"},{"command":"gitlens.views.worktrees.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.worktrees.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.worktrees.viewOptionsTitle","title":"Worktrees View Options","enablement":"false"}],"icons":{"gitlens-commit-horizontal":{"description":"commit-horizontal icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f101"}},"gitlens-graph":{"description":"graph icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f102"}},"gitlens-next-commit":{"description":"next-commit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f103"}},"gitlens-prev-commit-menu":{"description":"prev-commit-menu icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f104"}},"gitlens-prev-commit":{"description":"prev-commit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f105"}},"gitlens-compare-ref-working":{"description":"compare-ref-working icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f106"}},"gitlens-branches-view":{"description":"branches-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f107"}},"gitlens-commit-view":{"description":"commit-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f108"}},"gitlens-commits-view":{"description":"commits-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f109"}},"gitlens-compare-view":{"description":"compare-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10a"}},"gitlens-contributors-view":{"description":"contributors-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10b"}},"gitlens-history-view":{"description":"history-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10c"}},"gitlens-history":{"description":"history icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10c"}},"gitlens-remotes-view":{"description":"remotes-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10d"}},"gitlens-repositories-view":{"description":"repositories-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10e"}},"gitlens-search-view":{"description":"search-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10f"}},"gitlens-stashes-view":{"description":"stashes-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f110"}},"gitlens-stashes":{"description":"stashes icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f110"}},"gitlens-tags-view":{"description":"tags-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f111"}},"gitlens-worktrees-view":{"description":"worktrees-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f112"}},"gitlens-gitlens":{"description":"gitlens icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f113"}},"gitlens-stash-pop":{"description":"stash-pop icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f114"}},"gitlens-stash-save":{"description":"stash-save icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f115"}},"gitlens-unplug":{"description":"unplug icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f116"}},"gitlens-open-revision":{"description":"open-revision icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f117"}},"gitlens-switch":{"description":"switch icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f118"}},"gitlens-expand":{"description":"expand icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f119"}},"gitlens-list-auto":{"description":"list-auto icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11a"}},"gitlens-pinned-filled":{"description":"pinned-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11c"}},"gitlens-clock":{"description":"clock icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11d"}},"gitlens-provider-azdo":{"description":"provider-azdo icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11e"}},"gitlens-provider-bitbucket":{"description":"provider-bitbucket icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11f"}},"gitlens-provider-gerrit":{"description":"provider-gerrit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f120"}},"gitlens-provider-gitea":{"description":"provider-gitea icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f121"}},"gitlens-provider-github":{"description":"provider-github icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f122"}},"gitlens-provider-gitlab":{"description":"provider-gitlab icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f123"}},"gitlens-gitlens-inspect":{"description":"gitlens-inspect icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f124"}},"gitlens-workspaces-view":{"description":"workspaces-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f125"}},"gitlens-confirm-checked":{"description":"confirm-checked icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f126"}},"gitlens-confirm-unchecked":{"description":"confirm-unchecked icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f127"}},"gitlens-cloud-patch":{"description":"cloud-patch icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f128"}},"gitlens-cloud-patch-share":{"description":"cloud-patch-share icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f129"}},"gitlens-inspect":{"description":"inspect icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12a"}},"gitlens-repository-filled":{"description":"repository-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12b"}},"gitlens-gitlens-filled":{"description":"gitlens-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12c"}},"gitlens-code-suggestion":{"description":"code-suggestion icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12d"}},"gitlens-provider-jira":{"description":"provider-jira icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f133"}},"gitlens-play-button":{"description":"play-button icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f134"}},"gitlens-rocket-filled":{"description":"rocket-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f135"}},"gitlens-branches-view-filled":{"description":"branches-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f136"}},"gitlens-commits-view-filled":{"description":"commits-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f137"}},"gitlens-contributors-view-filled":{"description":"contributors-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f138"}},"gitlens-remotes-view-filled":{"description":"remotes-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f139"}},"gitlens-repositories-view-filled":{"description":"repositories-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13a"}},"gitlens-search-view-filled":{"description":"search-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13b"}},"gitlens-stashes-view-filled":{"description":"stashes-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13c"}},"gitlens-tags-view-filled":{"description":"tags-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13d"}},"gitlens-worktrees-view-filled":{"description":"worktrees-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13e"}},"gitlens-launchpad-view":{"description":"launchpad-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13f"}},"gitlens-launchpad-view-filled":{"description":"launchpad-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f140"}},"gitlens-merge-target":{"description":"merge-target icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f141"}}},"menus":{"commandPalette":[{"command":"gitlens.addAuthors","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.ai.generateChangelog","when":"gitlens:enabled && !gitlens:untrusted && gitlens:gk:organization:ai:enabled"},{"command":"gitlens.ai.generateCommitMessage","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && gitlens:gk:organization:ai:enabled && config.gitlens.ai.generateCommitMessage.enabled"},{"command":"gitlens.annotations.nextChange","when":"false"},{"command":"gitlens.annotations.previousChange","when":"false"},{"command":"gitlens.applyPatchFromClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.associateIssueWithBranch","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.browseRepoAtRevision","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.browseRepoAtRevisionInNewWindow","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.browseRepoBeforeRevision","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.browseRepoBeforeRevisionInNewWindow","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.clearFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated || resource in gitlens:tabs:annotated)"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.compareHeadWith","when":"gitlens:enabled"},{"command":"gitlens.compareWith","when":"gitlens:enabled"},{"command":"gitlens.compareWorkingWith","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.connectRemoteProvider","when":"config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected"},{"command":"gitlens.copyCurrentBranch","when":"gitlens:enabled"},{"command":"gitlens.copyDeepLinkToBranch","when":"false"},{"command":"gitlens.copyDeepLinkToCommit","when":"false"},{"command":"gitlens.copyDeepLinkToComparison","when":"false"},{"command":"gitlens.copyDeepLinkToFile","when":"false"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"false"},{"command":"gitlens.copyDeepLinkToLines","when":"false"},{"command":"gitlens.copyDeepLinkToRepo","when":"gitlens:enabled"},{"command":"gitlens.copyDeepLinkToTag","when":"false"},{"command":"gitlens.copyDeepLinkToWorkspace","when":"false"},{"command":"gitlens.copyMessageToClipboard","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.copyRelativePathToClipboard","when":"gitlens:enabled"},{"command":"gitlens.copyRemoteBranchesUrl","when":"false"},{"command":"gitlens.copyRemoteBranchUrl","when":"false"},{"command":"gitlens.copyRemoteCommitUrl","when":"gitlens:repos:withRemotes"},{"command":"gitlens.copyRemoteComparisonUrl","when":"false"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"gitlens:repos:withRemotes"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:repos:withRemotes"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"false"},{"command":"gitlens.copyRemotePullRequestUrl","when":"false"},{"command":"gitlens.copyRemoteRepositoryUrl","when":"false"},{"command":"gitlens.copyShaToClipboard","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.copyWorkingChangesToWorktree","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.createCloudPatch","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.createPatch","when":"false && gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.createPullRequestOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffFolderWithRevision","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffLineWithPrevious","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.diffLineWithWorking","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.diffWithNext","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"},{"command":"gitlens.diffWithNextInDiffLeft","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffRight","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"},{"command":"gitlens.diffWithPrevious","when":"resource in gitlens:tabs:tracked && !isInDiffEditor"},{"command":"gitlens.diffWithPreviousInDiffLeft","when":"resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","when":"resource in gitlens:tabs:tracked && isInDiffRightEditor"},{"command":"gitlens.diffWithRevision","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.diffWithRevisionFrom","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.diffWithWorking","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithWorkingInDiffLeft","when":"false"},{"command":"gitlens.diffWithWorkingInDiffRight","when":"false"},{"command":"gitlens.disableDebugLogging","when":"config.gitlens.outputLevel == debug"},{"command":"gitlens.disableRebaseEditor","when":"gitlens:enabled"},{"command":"gitlens.disconnectRemoteProvider","when":"config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrationsConnected"},{"command":"gitlens.enableDebugLogging","when":"config.gitlens.outputLevel != debug"},{"command":"gitlens.enableRebaseEditor","when":"gitlens:enabled"},{"command":"gitlens.externalDiff","when":"!gitlens:hasVirtualFolders && resource in gitlens:tabs:tracked"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.fetchRepositories","when":"gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.ghpr.views.openOrCreateWorktree","when":"false"},{"command":"gitlens.gitCommands","when":"!gitlens:disabled"},{"command":"gitlens.gitCommands.branch","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.prune","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.rename","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.checkout","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.cherryPick","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.history","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.merge","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.rebase","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.add","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.prune","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.remove","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.reset","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.revert","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.show","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.drop","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.list","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.pop","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.push","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.rename","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.status","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.switch","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.open","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gk.switchOrganization","when":"gitlens:gk:hasOrganizations"},{"command":"gitlens.graph.addAuthor","when":"false"},{"command":"gitlens.graph.ai.generateChangelogFrom","when":"false"},{"command":"gitlens.graph.ai.generateCommitMessage","when":"false"},{"command":"gitlens.graph.associateIssueWithBranch","when":"false"},{"command":"gitlens.graph.cherryPick","when":"false"},{"command":"gitlens.graph.cherryPick.multi","when":"false"},{"command":"gitlens.graph.columnAuthorOff","when":"false"},{"command":"gitlens.graph.columnAuthorOn","when":"false"},{"command":"gitlens.graph.columnChangesOff","when":"false"},{"command":"gitlens.graph.columnChangesOn","when":"false"},{"command":"gitlens.graph.columnDateTimeOff","when":"false"},{"command":"gitlens.graph.columnDateTimeOn","when":"false"},{"command":"gitlens.graph.columnGraphCompact","when":"false"},{"command":"gitlens.graph.columnGraphDefault","when":"false"},{"command":"gitlens.graph.columnGraphOff","when":"false"},{"command":"gitlens.graph.columnGraphOn","when":"false"},{"command":"gitlens.graph.columnMessageOff","when":"false"},{"command":"gitlens.graph.columnMessageOn","when":"false"},{"command":"gitlens.graph.columnRefOff","when":"false"},{"command":"gitlens.graph.columnRefOn","when":"false"},{"command":"gitlens.graph.columnShaOff","when":"false"},{"command":"gitlens.graph.columnShaOn","when":"false"},{"command":"gitlens.graph.commitViaSCM","when":"false"},{"command":"gitlens.graph.compareAncestryWithWorking","when":"false"},{"command":"gitlens.graph.compareBranchWithHead","when":"false"},{"command":"gitlens.graph.compareSelectedCommits.multi","when":"false"},{"command":"gitlens.graph.compareWithHead","when":"false"},{"command":"gitlens.graph.compareWithMergeBase","when":"false"},{"command":"gitlens.graph.compareWithUpstream","when":"false"},{"command":"gitlens.graph.compareWithWorking","when":"false"},{"command":"gitlens.graph.copy","when":"false"},{"command":"gitlens.graph.copyDeepLinkToBranch","when":"false"},{"command":"gitlens.graph.copyDeepLinkToCommit","when":"false"},{"command":"gitlens.graph.copyDeepLinkToRepo","when":"false"},{"command":"gitlens.graph.copyDeepLinkToTag","when":"false"},{"command":"gitlens.graph.copyMessage","when":"false"},{"command":"gitlens.graph.copyRemoteBranchUrl","when":"false"},{"command":"gitlens.graph.copyRemoteCommitUrl","when":"false"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","when":"false"},{"command":"gitlens.graph.copySha","when":"false"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","when":"false"},{"command":"gitlens.graph.createBranch","when":"false"},{"command":"gitlens.graph.createCloudPatch","when":"false"},{"command":"gitlens.graph.createPatch","when":"false"},{"command":"gitlens.graph.createPullRequest","when":"false"},{"command":"gitlens.graph.createTag","when":"false"},{"command":"gitlens.graph.createWorktree","when":"false"},{"command":"gitlens.graph.deleteBranch","when":"false"},{"command":"gitlens.graph.deleteTag","when":"false"},{"command":"gitlens.graph.fetch","when":"false"},{"command":"gitlens.graph.hideLocalBranch","when":"false"},{"command":"gitlens.graph.hideRefGroup","when":"false"},{"command":"gitlens.graph.hideRemote","when":"false"},{"command":"gitlens.graph.hideRemoteBranch","when":"false"},{"command":"gitlens.graph.hideTag","when":"false"},{"command":"gitlens.graph.mergeBranchInto","when":"false"},{"command":"gitlens.graph.openBranchOnRemote","when":"false"},{"command":"gitlens.graph.openChangedFileDiffs","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","when":"false"},{"command":"gitlens.graph.openChangedFileRevisions","when":"false"},{"command":"gitlens.graph.openChangedFiles","when":"false"},{"command":"gitlens.graph.openCommitOnRemote","when":"false"},{"command":"gitlens.graph.openCommitOnRemote.multi","when":"false"},{"command":"gitlens.graph.openInWorktree","when":"false"},{"command":"gitlens.graph.openOnlyChangedFiles","when":"false"},{"command":"gitlens.graph.openPullRequest","when":"false"},{"command":"gitlens.graph.openPullRequestChanges","when":"false"},{"command":"gitlens.graph.openPullRequestComparison","when":"false"},{"command":"gitlens.graph.openPullRequestOnRemote","when":"false"},{"command":"gitlens.graph.openWorktree","when":"false"},{"command":"gitlens.graph.openWorktreeInNewWindow","when":"false"},{"command":"gitlens.graph.publishBranch","when":"false"},{"command":"gitlens.graph.pull","when":"false"},{"command":"gitlens.graph.push","when":"false"},{"command":"gitlens.graph.pushWithForce","when":"false"},{"command":"gitlens.graph.rebaseOntoBranch","when":"false"},{"command":"gitlens.graph.rebaseOntoCommit","when":"false"},{"command":"gitlens.graph.rebaseOntoUpstream","when":"false"},{"command":"gitlens.graph.refresh","when":"false"},{"command":"gitlens.graph.renameBranch","when":"false"},{"command":"gitlens.graph.resetColumnsCompact","when":"false"},{"command":"gitlens.graph.resetColumnsDefault","when":"false"},{"command":"gitlens.graph.resetCommit","when":"false"},{"command":"gitlens.graph.resetToCommit","when":"false"},{"command":"gitlens.graph.resetToTag","when":"false"},{"command":"gitlens.graph.resetToTip","when":"false"},{"command":"gitlens.graph.revert","when":"false"},{"command":"gitlens.graph.scrollMarkerLocalBranchOff","when":"false"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","when":"false"},{"command":"gitlens.graph.scrollMarkerPullRequestOff","when":"false"},{"command":"gitlens.graph.scrollMarkerPullRequestOn","when":"false"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","when":"false"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","when":"false"},{"command":"gitlens.graph.scrollMarkerStashOff","when":"false"},{"command":"gitlens.graph.scrollMarkerStashOn","when":"false"},{"command":"gitlens.graph.scrollMarkerTagOff","when":"false"},{"command":"gitlens.graph.scrollMarkerTagOn","when":"false"},{"command":"gitlens.graph.shareAsCloudPatch","when":"false"},{"command":"gitlens.graph.showInDetailsView","when":"false"},{"command":"gitlens.graph.split","when":"gitlens:enabled && config.gitlens.graph.allowMultiple"},{"command":"gitlens.graph.stash.apply","when":"false"},{"command":"gitlens.graph.stash.delete","when":"false"},{"command":"gitlens.graph.stash.rename","when":"false"},{"command":"gitlens.graph.stash.save","when":"false"},{"command":"gitlens.graph.switchToAnotherBranch","when":"false"},{"command":"gitlens.graph.switchToBranch","when":"false"},{"command":"gitlens.graph.switchToCommit","when":"false"},{"command":"gitlens.graph.switchToEditorLayout","when":"gitlens:enabled && config.gitlens.graph.layout != editor"},{"command":"gitlens.graph.switchToPanelLayout","when":"gitlens:enabled && config.gitlens.graph.layout != panel"},{"command":"gitlens.graph.switchToTag","when":"false"},{"command":"gitlens.graph.undoCommit","when":"false"},{"command":"gitlens.inviteToLiveShare","when":"false"},{"command":"gitlens.launchpad.indicator.toggle","when":"gitlens:enabled"},{"command":"gitlens.openAssociatedPullRequestOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openBlamePriorToChange","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openBranchesOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openBranchOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openCloudPatch","when":"false"},{"command":"gitlens.openCommitOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openComparisonOnRemote","when":"false"},{"command":"gitlens.openCurrentBranchOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openFileFromRemote","when":"gitlens:enabled"},{"command":"gitlens.openFileHistory","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openFileOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openFileOnRemoteFrom","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openFileRevision","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openFileRevisionFrom","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openFolderHistory","when":"false"},{"command":"gitlens.openOnlyChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openPatch","when":"false && gitlens:enabled"},{"command":"gitlens.openPullRequestOnRemote","when":"false"},{"command":"gitlens.openRepoOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openRevisionFile","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor"},{"command":"gitlens.openRevisionFileInDiffLeft","when":"false"},{"command":"gitlens.openRevisionFileInDiffRight","when":"false"},{"command":"gitlens.openWorkingFile","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.openWorkingFileInDiffLeft","when":"false"},{"command":"gitlens.openWorkingFileInDiffRight","when":"false"},{"command":"gitlens.pastePatchFromClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.plus.cloudIntegrations.connect","when":"false"},{"command":"gitlens.plus.cloudIntegrations.manage","when":"gitlens:plus"},{"command":"gitlens.plus.hide","when":"config.gitlens.plusFeatures.enabled"},{"command":"gitlens.plus.login","when":"!gitlens:plus"},{"command":"gitlens.plus.manage","when":"gitlens:plus"},{"command":"gitlens.plus.reactivateProTrial","when":"gitlens:plus:state == 5"},{"command":"gitlens.plus.referFriend","when":"gitlens:plus:state == 6"},{"command":"gitlens.plus.refreshRepositoryAccess","when":"gitlens:enabled"},{"command":"gitlens.plus.restore","when":"!config.gitlens.plusFeatures.enabled"},{"command":"gitlens.plus.signUp","when":"!gitlens:plus"},{"command":"gitlens.plus.simulateSubscription","when":"gitlens:enabled && gitlens:debugging"},{"command":"gitlens.plus.startPreviewTrial","when":"false && !gitlens:plus"},{"command":"gitlens.pullRepositories","when":"gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.pushRepositories","when":"gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.quickOpenFileHistory","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.resetAIKey","when":"gitlens:enabled && gitlens:gk:organization:ai:enabled"},{"command":"gitlens.revealCommitInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.scm.ai.generateCommitMessage","when":"false"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.showBranchesView","when":"gitlens:enabled"},{"command":"gitlens.showCommitDetailsView","when":"gitlens:enabled"},{"command":"gitlens.showCommitInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showCommitsInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showCommitsView","when":"gitlens:enabled"},{"command":"gitlens.showContributorsView","when":"gitlens:enabled"},{"command":"gitlens.showDraftsView","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled"},{"command":"gitlens.showFileHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showFileInTimeline","when":"gitlens:enabled && resource in gitlens:tabs:tracked"},{"command":"gitlens.showFolderInTimeline","when":"false"},{"command":"gitlens.showGraph","when":"gitlens:enabled"},{"command":"gitlens.showGraphPage","when":"gitlens:enabled"},{"command":"gitlens.showGraphView","when":"gitlens:enabled"},{"command":"gitlens.showInCommitGraph","when":"false"},{"command":"gitlens.showInCommitGraphView","when":"false"},{"command":"gitlens.showInDetailsView","when":"false"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.showLaunchpad","when":"gitlens:enabled"},{"command":"gitlens.showLaunchpadView","when":"gitlens:enabled"},{"command":"gitlens.showLineCommitInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showLineHistoryView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showPatchDetailsPage","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickCommitDetails","when":"false"},{"command":"gitlens.showQuickCommitFileDetails","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showQuickFileHistory","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"false"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"false"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.showRemotesView","when":"gitlens:enabled"},{"command":"gitlens.showRepositoriesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showSearchAndCompareView","when":"gitlens:enabled"},{"command":"gitlens.showSettingsPage!branches-view","when":"false"},{"command":"gitlens.showSettingsPage!commit-graph","when":"false"},{"command":"gitlens.showSettingsPage!commits-view","when":"false"},{"command":"gitlens.showSettingsPage!contributors-view","when":"false"},{"command":"gitlens.showSettingsPage!file-annotations","when":"false"},{"command":"gitlens.showSettingsPage!file-history-view","when":"false"},{"command":"gitlens.showSettingsPage!line-history-view","when":"false"},{"command":"gitlens.showSettingsPage!remotes-view","when":"false"},{"command":"gitlens.showSettingsPage!repositories-view","when":"false"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"false"},{"command":"gitlens.showSettingsPage!stashes-view","when":"false"},{"command":"gitlens.showSettingsPage!tags-view","when":"false"},{"command":"gitlens.showSettingsPage!views","when":"false"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"false"},{"command":"gitlens.showStashesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showTagsView","when":"gitlens:enabled"},{"command":"gitlens.showTimelinePage","when":"gitlens:enabled"},{"command":"gitlens.showTimelineView","when":"gitlens:enabled"},{"command":"gitlens.showWorkspacesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showWorktreesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.startWork","when":"gitlens:enabled"},{"command":"gitlens.stashApply","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.stashSaveFiles","when":"false"},{"command":"gitlens.switchAIModel","when":"gitlens:enabled && gitlens:gk:organization:ai:enabled"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.timeline.refresh","when":"false"},{"command":"gitlens.timeline.split","when":"gitlens:enabled && config.gitlens.visualHistory.allowMultiple"},{"command":"gitlens.toggleCodeLens","when":"!gitlens:disabled && !gitlens:disabledToggleCodeLens"},{"command":"gitlens.toggleFileBlame","when":"resource in gitlens:tabs:blameable || config.gitlens.blame.toggleMode == window"},{"command":"gitlens.toggleFileBlameInDiffLeft","when":"false"},{"command":"gitlens.toggleFileBlameInDiffRight","when":"false"},{"command":"gitlens.toggleFileChanges","when":"(resource in gitlens:tabs:blameable  || config.gitlens.changes.toggleMode == window) && !gitlens:hasVirtualFolders"},{"command":"gitlens.toggleFileChangesOnly","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"resource in gitlens:tabs:blameable || config.gitlens.heatmap.toggleMode == window"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","when":"false"},{"command":"gitlens.toggleFileHeatmapInDiffRight","when":"false"},{"command":"gitlens.toggleGraph","when":"gitlens:enabled"},{"command":"gitlens.toggleLineBlame","when":"!gitlens:disabled"},{"command":"gitlens.toggleMaximizedGraph","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.views.abortPausedOperation","when":"false"},{"command":"gitlens.views.addAuthor","when":"false"},{"command":"gitlens.views.addAuthor.multi","when":"false"},{"command":"gitlens.views.addAuthors","when":"false"},{"command":"gitlens.views.addPullRequestRemote","when":"false"},{"command":"gitlens.views.addRemote","when":"false"},{"command":"gitlens.views.ai.generateChangelog","when":"false"},{"command":"gitlens.views.ai.generateChangelogFrom","when":"false"},{"command":"gitlens.views.applyChanges","when":"false"},{"command":"gitlens.views.associateIssueWithBranch","when":"false"},{"command":"gitlens.views.branches.copy","when":"false"},{"command":"gitlens.views.branches.refresh","when":"false"},{"command":"gitlens.views.branches.regroup","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.branches.setLayoutToList","when":"false"},{"command":"gitlens.views.branches.setLayoutToTree","when":"false"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"false"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"false"},{"command":"gitlens.views.branches.setShowStashesOff","when":"false"},{"command":"gitlens.views.branches.setShowStashesOn","when":"false"},{"command":"gitlens.views.branches.viewOptionsTitle","when":"false"},{"command":"gitlens.views.browseRepoAtRevision","when":"false"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","when":"false"},{"command":"gitlens.views.browseRepoBeforeRevision","when":"false"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","when":"false"},{"command":"gitlens.views.cherryPick","when":"false"},{"command":"gitlens.views.cherryPick.multi","when":"false"},{"command":"gitlens.views.clearComparison","when":"false"},{"command":"gitlens.views.clearReviewed","when":"false"},{"command":"gitlens.views.closeRepository","when":"false"},{"command":"gitlens.views.collapseNode","when":"false"},{"command":"gitlens.views.commitDetails.refresh","when":"false"},{"command":"gitlens.views.commits.copy","when":"false"},{"command":"gitlens.views.commits.refresh","when":"false"},{"command":"gitlens.views.commits.regroup","when":"false"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"false"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.commits.setShowStashesOff","when":"false"},{"command":"gitlens.views.commits.setShowStashesOn","when":"false"},{"command":"gitlens.views.commits.viewOptionsTitle","when":"false"},{"command":"gitlens.views.compareAncestryWithWorking","when":"false"},{"command":"gitlens.views.compareBranchWithHead","when":"false"},{"command":"gitlens.views.compareFileWithSelected","when":"false"},{"command":"gitlens.views.compareWithHead","when":"false"},{"command":"gitlens.views.compareWithMergeBase","when":"false"},{"command":"gitlens.views.compareWithSelected","when":"false"},{"command":"gitlens.views.compareWithUpstream","when":"false"},{"command":"gitlens.views.compareWithWorking","when":"false"},{"command":"gitlens.views.continuePausedOperation","when":"false"},{"command":"gitlens.views.contributors.copy","when":"false"},{"command":"gitlens.views.contributors.refresh","when":"false"},{"command":"gitlens.views.contributors.regroup","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"false"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"false"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"false"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"false"},{"command":"gitlens.views.contributors.viewOptionsTitle","when":"false"},{"command":"gitlens.views.copy","when":"false"},{"command":"gitlens.views.copyAsMarkdown","when":"false"},{"command":"gitlens.views.copyRemoteCommitUrl","when":"false"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","when":"false"},{"command":"gitlens.views.copyUrl","when":"false"},{"command":"gitlens.views.copyUrl.multi","when":"false"},{"command":"gitlens.views.createBranch","when":"false"},{"command":"gitlens.views.createPullRequest","when":"false"},{"command":"gitlens.views.createTag","when":"false"},{"command":"gitlens.views.createWorktree","when":"false"},{"command":"gitlens.views.deleteBranch","when":"false"},{"command":"gitlens.views.deleteBranch.multi","when":"false"},{"command":"gitlens.views.deleteTag","when":"false"},{"command":"gitlens.views.deleteTag.multi","when":"false"},{"command":"gitlens.views.deleteWorktree","when":"false"},{"command":"gitlens.views.deleteWorktree.multi","when":"false"},{"command":"gitlens.views.dismissNode","when":"false"},{"command":"gitlens.views.draft.open","when":"false"},{"command":"gitlens.views.draft.openOnWeb","when":"false"},{"command":"gitlens.views.drafts.copy","when":"false"},{"command":"gitlens.views.drafts.create","when":"false"},{"command":"gitlens.views.drafts.delete","when":"false"},{"command":"gitlens.views.drafts.info","when":"false"},{"command":"gitlens.views.drafts.refresh","when":"false"},{"command":"gitlens.views.drafts.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.drafts.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.editNode","when":"false"},{"command":"gitlens.views.expandNode","when":"false"},{"command":"gitlens.views.fetch","when":"false"},{"command":"gitlens.views.fileHistory.changeBase","when":"false"},{"command":"gitlens.views.fileHistory.copy","when":"false"},{"command":"gitlens.views.fileHistory.refresh","when":"false"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.graph.openInTab","when":"false"},{"command":"gitlens.views.graph.refresh","when":"false"},{"command":"gitlens.views.graphDetails.refresh","when":"false"},{"command":"gitlens.views.highlightChanges","when":"false"},{"command":"gitlens.views.highlightRevisionChanges","when":"false"},{"command":"gitlens.views.home.disablePreview","when":"false"},{"command":"gitlens.views.home.discussions","when":"false"},{"command":"gitlens.views.home.enablePreview","when":"false"},{"command":"gitlens.views.home.help","when":"false"},{"command":"gitlens.views.home.info","when":"false"},{"command":"gitlens.views.home.issues","when":"false"},{"command":"gitlens.views.home.previewFeedback","when":"false"},{"command":"gitlens.views.home.refresh","when":"false"},{"command":"gitlens.views.home.whatsNew","when":"false"},{"command":"gitlens.views.launchpad.copy","when":"false"},{"command":"gitlens.views.launchpad.info","when":"false"},{"command":"gitlens.views.launchpad.refresh","when":"false"},{"command":"gitlens.views.launchpad.regroup","when":"false"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.launchpad.viewOptionsTitle","when":"false"},{"command":"gitlens.views.lineHistory.changeBase","when":"false"},{"command":"gitlens.views.lineHistory.copy","when":"false"},{"command":"gitlens.views.lineHistory.refresh","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.loadAllChildren","when":"false"},{"command":"gitlens.views.loadMoreChildren","when":"false"},{"command":"gitlens.views.mergeBranchInto","when":"false"},{"command":"gitlens.views.mergeChangesWithWorking","when":"false"},{"command":"gitlens.views.openBranchOnRemote","when":"false"},{"command":"gitlens.views.openBranchOnRemote.multi","when":"false"},{"command":"gitlens.views.openChangedFileDiffs","when":"false"},{"command":"gitlens.views.openChangedFileDiffsIndividually","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","when":"false"},{"command":"gitlens.views.openChangedFileRevisions","when":"false"},{"command":"gitlens.views.openChangedFiles","when":"false"},{"command":"gitlens.views.openChanges","when":"false"},{"command":"gitlens.views.openChangesWithMergeBase","when":"false"},{"command":"gitlens.views.openChangesWithWorking","when":"false"},{"command":"gitlens.views.openCommitOnRemote","when":"false"},{"command":"gitlens.views.openCommitOnRemote.multi","when":"false"},{"command":"gitlens.views.openDirectoryDiff","when":"false"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.views.openFile","when":"false"},{"command":"gitlens.views.openFileRevision","when":"false"},{"command":"gitlens.views.openInIntegratedTerminal","when":"false"},{"command":"gitlens.views.openInTerminal","when":"false"},{"command":"gitlens.views.openInWorktree","when":"false"},{"command":"gitlens.views.openOnlyChangedFiles","when":"false"},{"command":"gitlens.views.openPausedOperationInRebaseEditor","when":"false"},{"command":"gitlens.views.openPreviousChangesWithWorking","when":"false"},{"command":"gitlens.views.openPullRequest","when":"false"},{"command":"gitlens.views.openPullRequestChanges","when":"false"},{"command":"gitlens.views.openPullRequestComparison","when":"false"},{"command":"gitlens.views.openUrl","when":"false"},{"command":"gitlens.views.openUrl.multi","when":"false"},{"command":"gitlens.views.openWorktree","when":"false"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"false"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","when":"false"},{"command":"gitlens.views.patchDetails.close","when":"false"},{"command":"gitlens.views.patchDetails.refresh","when":"false"},{"command":"gitlens.views.pruneRemote","when":"false"},{"command":"gitlens.views.publishBranch","when":"false"},{"command":"gitlens.views.publishRepository","when":"false"},{"command":"gitlens.views.pull","when":"false"},{"command":"gitlens.views.pullRequest.close","when":"false"},{"command":"gitlens.views.pullRequest.copy","when":"false"},{"command":"gitlens.views.pullRequest.refresh","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.push","when":"false"},{"command":"gitlens.views.pushToCommit","when":"false"},{"command":"gitlens.views.pushWithForce","when":"false"},{"command":"gitlens.views.rebaseOntoBranch","when":"false"},{"command":"gitlens.views.rebaseOntoCommit","when":"false"},{"command":"gitlens.views.rebaseOntoUpstream","when":"false"},{"command":"gitlens.views.refreshNode","when":"false"},{"command":"gitlens.views.remotes.copy","when":"false"},{"command":"gitlens.views.remotes.refresh","when":"false"},{"command":"gitlens.views.remotes.regroup","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.remotes.setLayoutToList","when":"false"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"false"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.remotes.viewOptionsTitle","when":"false"},{"command":"gitlens.views.removeRemote","when":"false"},{"command":"gitlens.views.renameBranch","when":"false"},{"command":"gitlens.views.repositories.copy","when":"false"},{"command":"gitlens.views.repositories.refresh","when":"false"},{"command":"gitlens.views.repositories.regroup","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.repositories.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.repositories.setShowBranchesOff","when":"false"},{"command":"gitlens.views.repositories.setShowBranchesOn","when":"false"},{"command":"gitlens.views.repositories.setShowCommitsOff","when":"false"},{"command":"gitlens.views.repositories.setShowCommitsOn","when":"false"},{"command":"gitlens.views.repositories.setShowContributorsOff","when":"false"},{"command":"gitlens.views.repositories.setShowContributorsOn","when":"false"},{"command":"gitlens.views.repositories.setShowRemotesOff","when":"false"},{"command":"gitlens.views.repositories.setShowRemotesOn","when":"false"},{"command":"gitlens.views.repositories.setShowSectionOff","when":"false"},{"command":"gitlens.views.repositories.setShowStashesOff","when":"false"},{"command":"gitlens.views.repositories.setShowStashesOn","when":"false"},{"command":"gitlens.views.repositories.setShowTagsOff","when":"false"},{"command":"gitlens.views.repositories.setShowTagsOn","when":"false"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","when":"false"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","when":"false"},{"command":"gitlens.views.repositories.setShowWorktreesOff","when":"false"},{"command":"gitlens.views.repositories.setShowWorktreesOn","when":"false"},{"command":"gitlens.views.repositories.viewOptionsTitle","when":"false"},{"command":"gitlens.views.resetCommit","when":"false"},{"command":"gitlens.views.resetToCommit","when":"false"},{"command":"gitlens.views.resetToTip","when":"false"},{"command":"gitlens.views.restore","when":"false"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"false"},{"command":"gitlens.views.revealWorktreeInExplorer","when":"false"},{"command":"gitlens.views.revert","when":"false"},{"command":"gitlens.views.scm.grouped.branches","when":"false"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"false"},{"command":"gitlens.views.scm.grouped.branches.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.branches.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.branches.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.branches.visibility.show","when":"false"},{"command":"gitlens.views.scm.grouped.commits","when":"false"},{"command":"gitlens.views.scm.grouped.commits.detach","when":"false"},{"command":"gitlens.views.scm.grouped.commits.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.commits.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.commits.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.commits.visibility.show","when":"false"},{"command":"gitlens.views.scm.grouped.contributors","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.visibility.show","when":"false"},{"command":"gitlens.views.scm.grouped.detachAll","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.visibility.show","when":"false"},{"command":"gitlens.views.scm.grouped.refresh","when":"false"},{"command":"gitlens.views.scm.grouped.regroupAll","when":"false"},{"command":"gitlens.views.scm.grouped.remotes","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.visibility.show","when":"false"},{"command":"gitlens.views.scm.grouped.repositories","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.visibility.show","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.visibility.show","when":"false"},{"command":"gitlens.views.scm.grouped.stashes","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.visibility.show","when":"false"},{"command":"gitlens.views.scm.grouped.tags","when":"false"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"false"},{"command":"gitlens.views.scm.grouped.tags.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.tags.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.tags.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.tags.visibility.show","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.visibility.hide","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.visibility.show","when":"false"},{"command":"gitlens.views.searchAndCompare.clear","when":"false"},{"command":"gitlens.views.searchAndCompare.copy","when":"false"},{"command":"gitlens.views.searchAndCompare.refresh","when":"false"},{"command":"gitlens.views.searchAndCompare.regroup","when":"false"},{"command":"gitlens.views.searchAndCompare.searchCommits","when":"false"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"false"},{"command":"gitlens.views.searchAndCompare.viewOptionsTitle","when":"false"},{"command":"gitlens.views.selectFileForCompare","when":"false"},{"command":"gitlens.views.selectForCompare","when":"false"},{"command":"gitlens.views.setAsDefault","when":"false"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"false"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"false"},{"command":"gitlens.views.setContributorsStatisticsOff","when":"false"},{"command":"gitlens.views.setContributorsStatisticsOn","when":"false"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","when":"false"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"false"},{"command":"gitlens.views.setResultsFilesFilterOff","when":"false"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","when":"false"},{"command":"gitlens.views.setResultsFilesFilterOnRight","when":"false"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"false"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"false"},{"command":"gitlens.views.skipPausedOperation","when":"false"},{"command":"gitlens.views.stageDirectory","when":"false"},{"command":"gitlens.views.stageFile","when":"false"},{"command":"gitlens.views.star","when":"false"},{"command":"gitlens.views.star.multi","when":"false"},{"command":"gitlens.views.stash.apply","when":"false"},{"command":"gitlens.views.stash.delete","when":"false"},{"command":"gitlens.views.stash.delete.multi","when":"false"},{"command":"gitlens.views.stash.rename","when":"false"},{"command":"gitlens.views.stashes.copy","when":"false"},{"command":"gitlens.views.stashes.refresh","when":"false"},{"command":"gitlens.views.stashes.regroup","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.stashes.viewOptionsTitle","when":"false"},{"command":"gitlens.views.switchToAnotherBranch","when":"false"},{"command":"gitlens.views.switchToBranch","when":"false"},{"command":"gitlens.views.switchToCommit","when":"false"},{"command":"gitlens.views.switchToTag","when":"false"},{"command":"gitlens.views.tags.copy","when":"false"},{"command":"gitlens.views.tags.refresh","when":"false"},{"command":"gitlens.views.tags.regroup","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.tags.setLayoutToList","when":"false"},{"command":"gitlens.views.tags.setLayoutToTree","when":"false"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.tags.viewOptionsTitle","when":"false"},{"command":"gitlens.views.timeline.refresh","when":"false"},{"command":"gitlens.views.title.createBranch","when":"false"},{"command":"gitlens.views.title.createTag","when":"false"},{"command":"gitlens.views.title.createWorktree","when":"false"},{"command":"gitlens.views.undoCommit","when":"false"},{"command":"gitlens.views.unsetAsDefault","when":"false"},{"command":"gitlens.views.unstageDirectory","when":"false"},{"command":"gitlens.views.unstageFile","when":"false"},{"command":"gitlens.views.unstar","when":"false"},{"command":"gitlens.views.unstar.multi","when":"false"},{"command":"gitlens.views.workspaces.addRepos","when":"false"},{"command":"gitlens.views.workspaces.addReposFromLinked","when":"false"},{"command":"gitlens.views.workspaces.changeAutoAddSetting","when":"false"},{"command":"gitlens.views.workspaces.convert","when":"false"},{"command":"gitlens.views.workspaces.copy","when":"false"},{"command":"gitlens.views.workspaces.create","when":"gitlens:plus"},{"command":"gitlens.views.workspaces.createLocal","when":"false"},{"command":"gitlens.views.workspaces.delete","when":"false"},{"command":"gitlens.views.workspaces.info","when":"false"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"false"},{"command":"gitlens.views.workspaces.openLocal","when":"false"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"false"},{"command":"gitlens.views.workspaces.refresh","when":"false"},{"command":"gitlens.views.workspaces.repo.addToWindow","when":"false"},{"command":"gitlens.views.workspaces.repo.locate","when":"false"},{"command":"gitlens.views.workspaces.repo.open","when":"false"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"false"},{"command":"gitlens.views.workspaces.repo.remove","when":"false"},{"command":"gitlens.views.worktrees.copy","when":"false"},{"command":"gitlens.views.worktrees.refresh","when":"false"},{"command":"gitlens.views.worktrees.regroup","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.worktrees.setLayoutToList","when":"false"},{"command":"gitlens.views.worktrees.setLayoutToTree","when":"false"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"false"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"false"},{"command":"gitlens.views.worktrees.viewOptionsTitle","when":"false"}],"editor/context":[{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens && editorTextFocus && config.gitlens.menus.editor.compare","group":"1_z_gitlens@0"},{"submenu":"gitlens/editor/context/changes","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.compare","group":"1_z_gitlens_open@1"},{"submenu":"gitlens/editor/context/openOn","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.remote && gitlens:repos:withRemotes","group":"1_z_gitlens_open@2"},{"submenu":"gitlens/editor/annotations","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:blameable && editorTextFocus && config.gitlens.menus.editor.blame","group":"1_z_gitlens_open_file@1"},{"submenu":"gitlens/editor/history","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && config.gitlens.menus.editor.history","group":"1_z_gitlens_open_file@2"}],"editor/context/copy":[{"command":"gitlens.copyRelativePathToClipboard","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens@1"},{"command":"gitlens.copyDeepLinkToLines","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard && editorHasSelection","group":"1_gitlens@2"},{"command":"gitlens.copyDeepLinkToFile","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens@3"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens@4"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens_remote@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens_remote@2"},{"command":"gitlens.copyRemoteCommitUrl","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens_remote@3"},{"command":"gitlens.copyShaToClipboard","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"3_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"3_gitlens@2"}],"editor/lineNumber/context":[{"submenu":"gitlens/editor/lineNumber/context/share","when":"resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.share && gitlens:repos:withRemotes","group":"2_gitlens@2"},{"submenu":"gitlens/editor/lineNumber/context/changes","when":"resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.compare","group":"3_gitlens@1"},{"submenu":"gitlens/editor/lineNumber/context/openOn","when":"resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.remote && gitlens:repos:withRemotes","group":"3_gitlens@2"}],"editor/title":[{"command":"gitlens.graph.refresh","when":"activeWebviewPanelId === gitlens.graph","group":"navigation@-99"},{"command":"gitlens.timeline.refresh","when":"activeWebviewPanelId === gitlens.timeline","group":"navigation@-99"},{"submenu":"gitlens/graph/configuration","when":"activeWebviewPanelId === gitlens.graph","group":"navigation@-98"},{"command":"gitlens.graph.split","when":"activeWebviewPanelId == gitlens.graph && resourceScheme == webview-panel && config.gitlens.graph.allowMultiple","group":"navigation@-97"},{"command":"gitlens.timeline.split","when":"activeWebviewPanelId == gitlens.timeline && resourceScheme == webview-panel && config.gitlens.visualHistory.allowMultiple","group":"navigation@-97"},{"command":"gitlens.clearFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated == computed || (resource in gitlens:tabs:annotated && resource not in gitlens:tabs:annotated:computing)) && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated == computing || resource in gitlens:tabs:annotated:computing) && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.toggleFileBlame","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == blame","group":"navigation@100","alt":"gitlens.toggleFileHeatmap"},{"command":"gitlens.toggleFileChanges","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == changes && !gitlens:hasVirtualFolders","group":"navigation@100","alt":"gitlens.toggleFileBlame"},{"command":"gitlens.toggleFileHeatmap","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == heatmap","group":"navigation@100","alt":"gitlens.toggleFileBlame"},{"submenu":"gitlens/editor/annotations","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && !config.gitlens.fileAnnotations.command && !gitlens:window:annotated","group":"navigation@100"},{"command":"gitlens.diffWithPrevious","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@97","alt":"gitlens.diffWithRevision"},{"command":"gitlens.diffWithPreviousInDiffLeft","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@97","alt":"gitlens.diffWithRevision"},{"command":"gitlens.diffWithPreviousInDiffRight","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@97","alt":"gitlens.diffWithRevision"},{"command":"gitlens.showQuickRevisionDetails","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@98"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@98"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@98"},{"command":"gitlens.diffWithNext","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiffLeft","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiffRight","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@99"},{"command":"gitlens.openWorkingFile","when":"resourceScheme == git && gitlens:enabled && !isInDiffEditor","group":"navigation@-98"},{"command":"gitlens.diffWithWorking","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && !isInDiffEditor","group":"navigation@-99"},{"command":"gitlens.diffWithWorkingInDiffLeft","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-99"},{"command":"gitlens.diffWithWorkingInDiffRight","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"navigation@-99"},{"command":"gitlens.openWorkingFile","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && !isInDiffEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFileInDiffLeft","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFileInDiffRight","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"navigation@-98"},{"command":"gitlens.openRevisionFileInDiffLeft","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-97"},{"command":"gitlens.openRevisionFileInDiffRight","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"navigation@-97"},{"command":"gitlens.openPatch","when":"false && editorLangId == diff"}],"editor/title/context":[{"command":"gitlens.graph.split","when":"activeWebviewPanelId == gitlens.graph && resourceScheme == webview-panel && config.gitlens.graph.allowMultiple","group":"6_split_in_group_gitlens@2"},{"command":"gitlens.timeline.split","when":"activeWebviewPanelId == gitlens.timeline && resourceScheme == webview-panel && config.gitlens.visualHistory.allowMultiple","group":"6_split_in_group_gitlens@2"},{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens && resourceScheme in gitlens:schemes:trackable","group":"2_a_gitlens@0"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.clipboard && gitlens:repos:withRemotes","group":"1_cutcopypaste@100"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.clipboard && gitlens:repos:withRemotes","group":"1_cutcopypaste@101"},{"submenu":"gitlens/editor/changes","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"2_a_gitlens_open@1"},{"submenu":"gitlens/editor/openOn","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.remote && gitlens:repos:withRemotes","group":"2_a_gitlens_open@2"},{"submenu":"gitlens/editor/history","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.history","group":"2_a_gitlens_open_file@1"}],"explorer/context":[{"submenu":"gitlens/explorer/changes","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"4_t_gitlens@0"},{"submenu":"gitlens/explorer/openOn","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.remote && gitlens:repos:withRemotes","group":"4_t_gitlens@1"},{"submenu":"gitlens/explorer/file/history","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history && !listMultiSelection","group":"4_timeline@0"},{"submenu":"gitlens/explorer/folder/history","when":"(explorerResourceIsRoot || explorerResourceIsFolder) && gitlens:enabled && !listMultiSelection && config.gitlens.menus.explorer.history","group":"4_timeline@0"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.clipboard && gitlens:repos:withRemotes","group":"6_copypath@100"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.clipboard && gitlens:repos:withRemotes","group":"6_copypath@101"}],"extension/context":[{"command":"gitlens.getStarted","when":"extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage","when":"extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed","group":"9_gitlens@3"}],"git.commit":[{"command":"gitlens.addAuthors","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && config.gitlens.menus.scmRepository.authors","group":"4_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"4_gitlens@2"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"4_gitlens@3"},{"command":"gitlens.scm.ai.generateCommitMessage","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && gitlens:gk:organization:ai:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage","group":"4_gitlens@4"}],"gitlens/commit/browse":[{"command":"gitlens.views.browseRepoAtRevision","group":"1_gitlens@1"},{"command":"gitlens.views.browseRepoBeforeRevision","group":"1_gitlens@2"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","group":"1_gitlens@3"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","group":"1_gitlens@4"}],"gitlens/commit/changes":[{"command":"gitlens.views.openChangedFileDiffs","group":"1_gitlens@1"},{"command":"gitlens.views.openChangedFileDiffsIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor","group":"1_gitlens@2"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","group":"1_gitlens@3"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor","group":"1_gitlens@4"},{"command":"gitlens.views.openChangedFiles","group":"2_gitlens@1"},{"command":"gitlens.views.openChangedFileRevisions","group":"2_gitlens@2"},{"command":"gitlens.views.openOnlyChangedFiles","group":"2_gitlens@3"}],"gitlens/commit/copy":[{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/","group":"1_gitlens@2"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/","group":"1_gitlens@3"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"1_gitlens@4"}],"gitlens/commit/file/changes":[{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.openPreviousChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|stashed|staged|unstaged)\\b)/","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"1_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"1_gitlens@4"},{"command":"gitlens.externalDiff","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_@1"},{"command":"gitlens.views.highlightChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/","group":"2_gitlens@1"},{"command":"gitlens.views.highlightRevisionChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/","group":"2_gitlens@2"},{"command":"gitlens.views.openChangesWithMergeBase","when":"viewItem =~ /gitlens:file:results\\b/","group":"1_gitlens@2"}],"gitlens/commit/file/commit":[{"command":"gitlens.showInDetailsView","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/","group":"navigation@1"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)\\b/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/","group":"navigation@2"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && gitlens:repos:withRemotes","group":"navigation@3","alt":"gitlens.copyRemoteCommitUrl"},{"command":"gitlens.revealCommitInView","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/","group":"navigation@4"},{"command":"gitlens.views.undoCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+HEAD\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@0"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.revert","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.resetToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.views.switchToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.createPatch","when":"false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.createCloudPatch","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && config.gitlens.cloudPatches.enabled && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_secondary_actions@3"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@4"}],"gitlens/commit/file/history":[{"command":"gitlens.openFileHistory","when":"view != gitlens.views.fileHistory/","group":"1_gitlens@1"},{"command":"gitlens.showFileInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/comparison/results/files/filter":[{"command":"gitlens.views.setResultsFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.setResultsFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/comparison/results/files/filter/inline":[{"command":"gitlens.views.setResultsFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.setResultsFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/comparison/results/files/filtered":[{"command":"gitlens.views.setResultsFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.setResultsFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/comparison/results/files/filtered/inline":[{"command":"gitlens.views.setResultsFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.setResultsFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/editor/annotations":[{"command":"gitlens.clearFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated || resource in gitlens:tabs:annotated)","group":"1_gitlens@1"},{"command":"gitlens.toggleFileBlame","when":"resource in gitlens:tabs:blameable && !isInDiffEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileBlameInDiffLeft","when":"resource in gitlens:tabs:blameable && isInDiffEditor && !isInDiffRightEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileBlameInDiffRight","when":"resource in gitlens:tabs:blameable && isInDiffRightEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileHeatmap","when":"resource in gitlens:tabs:blameable && !isInDiffEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","when":"resource in gitlens:tabs:blameable && isInDiffEditor && !isInDiffRightEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileHeatmapInDiffRight","when":"resource in gitlens:tabs:blameable && isInDiffRightEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileChanges","when":"resource in gitlens:tabs:blameable && !gitlens:hasVirtualFolders","group":"2_gitlens@3"},{"command":"gitlens.showSettingsPage!file-annotations","when":"resource in gitlens:tabs:blameable","group":"8_gitlens@1"}],"gitlens/editor/changes":[{"command":"gitlens.diffWithPrevious","group":"1_gitlens@1"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"1_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"1_gitlens@4"}],"gitlens/editor/context/changes":[{"command":"gitlens.diffLineWithPrevious","when":"resource in gitlens:tabs:tracked && editorTextFocus","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"resource in gitlens:tabs:tracked && editorTextFocus","group":"1_gitlens@2"},{"command":"gitlens.diffWithPrevious","group":"2_gitlens@1"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens","group":"2_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"2_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"2_gitlens@4"},{"command":"gitlens.showQuickCommitFileDetails","group":"3_gitlens@1"},{"command":"gitlens.showCommitsInView","when":"editorTextFocus && editorHasSelection","group":"3_gitlens@2"},{"command":"gitlens.showLineCommitInView","group":"3_gitlens@2"},{"command":"gitlens.showQuickRevisionDetails","when":"resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && !isInDiffEditor","group":"3_gitlens_1@1"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"3_gitlens_1@1"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"3_gitlens_1@1"}],"gitlens/editor/context/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@3","alt":"gitlens.copyRemoteFileUrlFrom"},{"command":"gitlens.openCommitOnRemote","group":"1_gitlens_commit@1","alt":"gitlens.copyRemoteCommitUrl"}],"gitlens/editor/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showFileInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/editor/lineNumber/context/changes":[{"command":"gitlens.diffLineWithPrevious","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","group":"1_gitlens@2"},{"command":"gitlens.showQuickCommitFileDetails","group":"3_gitlens@1"},{"command":"gitlens.showLineCommitInView","group":"3_gitlens@2"}],"gitlens/editor/lineNumber/context/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@3","alt":"gitlens.copyRemoteFileUrlFrom"},{"command":"gitlens.openCommitOnRemote","group":"1_gitlens_commit@1","alt":"gitlens.copyRemoteCommitUrl"}],"gitlens/editor/lineNumber/context/share":[{"command":"gitlens.copyDeepLinkToLines","group":"1_gitlens@1"},{"command":"gitlens.copyDeepLinkToFile","group":"1_gitlens@2"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"resource in gitlens:tabs:tracked","group":"1_gitlens@3"},{"command":"gitlens.copyRemoteFileUrlToClipboard","group":"1_gitlens_remote@2"},{"command":"gitlens.copyRemoteFileUrlFrom","group":"1_gitlens_remote@3"},{"command":"gitlens.copyRemoteCommitUrl","group":"1_gitlens_remote_commit@1"}],"gitlens/editor/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/explorer/changes":[{"command":"gitlens.diffFolderWithRevision","when":"explorerResourceIsFolder && !gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsFolder","group":"1_gitlens@1"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"explorerResourceIsFolder && !gitlens:hasVirtualFolders","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","when":"!explorerResourceIsFolder","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevisionFrom","when":"!explorerResourceIsFolder","group":"1_gitlens@3"}],"gitlens/explorer/file/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showFileInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/explorer/folder/history":[{"command":"gitlens.openFolderHistory","group":"1_gitlens@1"},{"command":"gitlens.showFolderInTimeline","group":"1_gitlens@2"}],"gitlens/explorer/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/graph/commit/changes":[{"command":"gitlens.graph.openChangedFileDiffs","group":"1_gitlens@1"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor","group":"1_gitlens@2"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","when":"webviewItem != gitlens:wip","group":"1_gitlens@3"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor","group":"1_gitlens@4"},{"command":"gitlens.graph.openChangedFiles","group":"2_gitlens@1"},{"command":"gitlens.graph.openChangedFileRevisions","group":"2_gitlens@2"},{"command":"gitlens.graph.openOnlyChangedFiles","group":"2_gitlens@3"}],"gitlens/graph/configuration":[{"command":"gitlens.graph.switchToEditorLayout","group":"1_gitlens@1"},{"command":"gitlens.graph.switchToPanelLayout","group":"1_gitlens@1"},{"command":"gitlens.showSettingsPage!commit-graph","group":"9_gitlens@1"}],"gitlens/graph/markers":[{"command":"gitlens.graph.scrollMarkerLocalBranchOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:enabled\\b/","group":"4_settings@1"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:disabled\\b/","group":"4_settings@1"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:enabled\\b/","group":"4_settings@2"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:disabled\\b/","group":"4_settings@2"},{"command":"gitlens.graph.scrollMarkerPullRequestOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:pullRequests:enabled\\b/","group":"4_settings@3"},{"command":"gitlens.graph.scrollMarkerPullRequestOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:pullRequests:disabled\\b/","group":"4_settings@3"},{"command":"gitlens.graph.scrollMarkerStashOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:enabled\\b/","group":"4_settings@4"},{"command":"gitlens.graph.scrollMarkerStashOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:disabled\\b/","group":"4_settings@4"},{"command":"gitlens.graph.scrollMarkerTagOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:enabled\\b/","group":"4_settings@5"},{"command":"gitlens.graph.scrollMarkerTagOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:disabled\\b/","group":"4_settings@5"}],"gitlens/scm/resourceFolder/changes":[{"command":"gitlens.diffFolderWithRevision","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@2"}],"gitlens/scm/resourceFolder/history":[{"command":"gitlens.openFolderHistory","group":"1_gitlens@2"},{"command":"gitlens.showFolderInTimeline","group":"1_gitlens@2"}],"gitlens/scm/resourceGroup/changes":[{"command":"gitlens.externalDiffAll","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders","group":"2_gitlens@1"},{"command":"gitlens.diffDirectoryWithHead","when":"!gitlens:hasVirtualFolders","group":"2_gitlens@2"},{"command":"gitlens.diffDirectory","when":"!gitlens:hasVirtualFolders","group":"2_gitlens@3"}],"gitlens/scm/resourceState/changes":[{"command":"gitlens.diffWithRevision","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffWithRevisionFrom","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@2"},{"command":"gitlens.externalDiff","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders","group":"2_gitlens@1"}],"gitlens/scm/resourceState/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showFileInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/scm/resourceState/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/share":[{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && !listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes","group":"2_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && !listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes","group":"2_gitlens@2"},{"command":"gitlens.copyDeepLinkToBranch","when":"viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|status:upstream(?!:none))\\b/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.copyDeepLinkToRepo","when":"viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|remote|repo-folder|repository|status:upstream(?!:none))\\b/ && !listMultiSelection","group":"1_gitlens@99"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@50"},{"command":"gitlens.shareAsCloudPatch","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b)|stash|compare:results(?!:))\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_a_gitlens@1"},{"command":"gitlens.copyDeepLinkToCommit","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.views.copyRemoteCommitUrl","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"},{"command":"gitlens.copyDeepLinkToComparison","when":"viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.copyRemoteComparisonUrl","when":"viewItem =~ /gitlens:compare:(results(:commits|(?!:))|branch\\b(?=.*?\\b\\+comparing\\b))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@50"},{"command":"gitlens.copyDeepLinkToFile","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"1_gitlens@26"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"1_gitlens@27"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@2"},{"command":"gitlens.copyRemoteRepositoryUrl","when":"viewItem =~ /gitlens:(remote|repo-folder|repository)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@99"},{"command":"gitlens.copyDeepLinkToTag","when":"viewItem =~ /gitlens:tag\\b/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.copyDeepLinkToWorkspace","when":"viewItem =~ /gitlens:workspace\\b/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.graph.copyDeepLinkToBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.graph.copyDeepLinkToRepo","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection","group":"1_gitlens@99"},{"command":"gitlens.graph.copyRemoteBranchUrl","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@50"},{"command":"gitlens.graph.shareAsCloudPatch","when":"webviewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_a_gitlens@1"},{"command":"gitlens.graph.copyDeepLinkToCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.graph.copyRemoteCommitUrl","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"},{"command":"gitlens.graph.copyDeepLinkToTag","when":"webviewItem =~ /gitlens:tag\\b/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","when":"webviewItems =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"}],"gitlens/view/repositories/sections":[{"command":"gitlens.views.repositories.setShowBranchComparisonOff","when":"config.gitlens.views.repositories.showBranchComparison","group":"1_gitlens@0"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","when":"!config.gitlens.views.repositories.showBranchComparison","group":"1_gitlens@0"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","when":"config.gitlens.views.repositories.showUpstreamStatus","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","when":"!config.gitlens.views.repositories.showUpstreamStatus","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setShowCommitsOff","when":"config.gitlens.views.repositories.showCommits","group":"2_gitlens@2"},{"command":"gitlens.views.repositories.setShowCommitsOn","when":"!config.gitlens.views.repositories.showCommits","group":"2_gitlens@2"},{"command":"gitlens.views.repositories.setShowBranchesOff","when":"config.gitlens.views.repositories.showBranches","group":"2_gitlens@3"},{"command":"gitlens.views.repositories.setShowBranchesOn","when":"!config.gitlens.views.repositories.showBranches","group":"2_gitlens@3"},{"command":"gitlens.views.repositories.setShowRemotesOff","when":"config.gitlens.views.repositories.showRemotes","group":"2_gitlens@4"},{"command":"gitlens.views.repositories.setShowRemotesOn","when":"!config.gitlens.views.repositories.showRemotes","group":"2_gitlens@4"},{"command":"gitlens.views.repositories.setShowStashesOff","when":"config.gitlens.views.repositories.showStashes && !gitlens:hasVirtualFolders","group":"2_gitlens@5"},{"command":"gitlens.views.repositories.setShowStashesOn","when":"!config.gitlens.views.repositories.showStashes && !gitlens:hasVirtualFolders","group":"2_gitlens@5"},{"command":"gitlens.views.repositories.setShowTagsOff","when":"config.gitlens.views.repositories.showTags","group":"2_gitlens@6"},{"command":"gitlens.views.repositories.setShowTagsOn","when":"!config.gitlens.views.repositories.showTags","group":"2_gitlens@6"},{"command":"gitlens.views.repositories.setShowWorktreesOff","when":"config.gitlens.views.repositories.showWorktrees","group":"2_gitlens@7"},{"command":"gitlens.views.repositories.setShowWorktreesOn","when":"!config.gitlens.views.repositories.showWorktrees","group":"2_gitlens@7"},{"command":"gitlens.views.repositories.setShowContributorsOff","when":"config.gitlens.views.repositories.showContributors","group":"2_gitlens@8"},{"command":"gitlens.views.repositories.setShowContributorsOn","when":"!config.gitlens.views.repositories.showContributors","group":"2_gitlens@8"}],"gitlens/view/searchAndCompare/new":[{"command":"gitlens.views.searchAndCompare.searchCommits","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"navigation@10"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"navigation@11"}],"gitlens/views/grouped/branches":[{"command":"gitlens.views.switchToAnotherBranch","when":"gitlens:views:scm:grouped:view == branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"3_gitlens@1"},{"command":"gitlens.views.title.createBranch","when":"gitlens:views:scm:grouped:view == branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"3_gitlens@2"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == branches","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.branches.setAsDefault","when":"gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.default != branches","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"gitlens:views:scm:grouped:view == branches","group":"9_gitlens@3"}],"gitlens/views/grouped/commits":[{"command":"gitlens.pushRepositories","when":"gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"command":"gitlens.pullRepositories","when":"gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@2"},{"command":"gitlens.fetchRepositories","when":"gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@3"},{"command":"gitlens.views.switchToAnotherBranch","when":"gitlens:views:scm:grouped:view == commits && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions_@0"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"gitlens:views:scm:grouped:view == commits && gitlens:views:commits:filtered","group":"8_gitlens_@0"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"gitlens:views:scm:grouped:view == commits","group":"8_gitlens_@1"},{"command":"gitlens.showGraph","when":"gitlens:views:scm:grouped:view == commits && gitlens:plus:enabled","group":"8_gitlens_toggles@0"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == commits","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits.setAsDefault","when":"gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.default != commits","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.commits.detach","when":"gitlens:views:scm:grouped:view == commits","group":"9_gitlens@3"}],"gitlens/views/grouped/contributors":[{"command":"gitlens.views.addAuthors","when":"gitlens:views:scm:grouped:view == contributors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == contributors","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.contributors.setAsDefault","when":"gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.default != contributors","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"gitlens:views:scm:grouped:view == contributors","group":"9_gitlens@3"}],"gitlens/views/grouped/detachOrRegroup":[{"command":"gitlens.views.scm.grouped.commits.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits","group":"2_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.commits","group":"2_gitlens@1"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches","group":"2_gitlens@2"},{"command":"gitlens.views.scm.grouped.branches.regroup","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches","group":"2_gitlens@2"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes","group":"2_gitlens@3"},{"command":"gitlens.views.scm.grouped.remotes.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.remotes","group":"2_gitlens@3"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes","group":"2_gitlens@4"},{"command":"gitlens.views.scm.grouped.stashes.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.stashes && !gitlens:hasVirtualFolders","group":"2_gitlens@4"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags","group":"2_gitlens@5"},{"command":"gitlens.views.scm.grouped.tags.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.tags","group":"2_gitlens@5"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders","group":"2_gitlens@6"},{"command":"gitlens.views.scm.grouped.worktrees.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders","group":"2_gitlens@6"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors","group":"2_gitlens@7"},{"command":"gitlens.views.scm.grouped.contributors.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.contributors","group":"2_gitlens@7"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories","group":"2_gitlens@8"},{"command":"gitlens.views.scm.grouped.repositories.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.repositories","group":"2_gitlens@8"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare","group":"2_gitlens@9"},{"command":"gitlens.views.scm.grouped.searchAndCompare.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.searchAndCompare","group":"2_gitlens@9"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad","group":"2_gitlens@10"},{"command":"gitlens.views.scm.grouped.launchpad.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.launchpad","group":"2_gitlens@10"},{"command":"gitlens.views.scm.grouped.detachAll","when":"view == gitlens.views.scm.grouped","group":"9_gitlens@98"},{"command":"gitlens.views.scm.grouped.regroupAll","when":"view == gitlens.views.scm.grouped","group":"9_gitlens@99"}],"gitlens/views/grouped/launchpad":[{"command":"gitlens.views.launchpad.info","when":"gitlens:views:scm:grouped:view == launchpad","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == launchpad","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.launchpad.setAsDefault","when":"gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.default != launchpad","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"gitlens:views:scm:grouped:view == launchpad","group":"9_gitlens@3"}],"gitlens/views/grouped/more":[{"command":"gitlens.views.branches.setLayoutToList","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.branches.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setLayoutToTree","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.branches.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowStashesOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.branches.setShowStashesOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.showSettingsPage!branches-view","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowStashesOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.commits.setShowStashesOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.showSettingsPage!commits-view","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.showSettingsPage!contributors-view","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && !config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.remotes.setLayoutToList","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.branches.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.branches.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && !config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.showSettingsPage!remotes-view","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens@1"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens@1"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.files.layout == list","group":"3_gitlens@1"},{"submenu":"gitlens/view/repositories/sections","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped","group":"4_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && !config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.showSettingsPage!repositories-view","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && !config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped && config.gitlens.views.stashes.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped && config.gitlens.views.stashes.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped && config.gitlens.views.stashes.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.showSettingsPage!stashes-view","when":"gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.tags.setLayoutToList","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.branches.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setLayoutToTree","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.branches.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && !config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.showSettingsPage!tags-view","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.worktrees.setLayoutToList","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.branches.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.worktrees.setLayoutToTree","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.branches.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped","group":"9_gitlens@1"}],"gitlens/views/grouped/remotes":[{"command":"gitlens.views.addRemote","when":"gitlens:views:scm:grouped:view == remotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == remotes","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.remotes.setAsDefault","when":"gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.default != remotes","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"gitlens:views:scm:grouped:view == remotes","group":"9_gitlens@3"}],"gitlens/views/grouped/repositories":[{"command":"gitlens.pushRepositories","when":"gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"command":"gitlens.pullRepositories","when":"gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@2"},{"command":"gitlens.fetchRepositories","when":"gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@3"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == repositories","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.repositories.setAsDefault","when":"gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.default != repositories","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"gitlens:views:scm:grouped:view == repositories","group":"9_gitlens@3"}],"gitlens/views/grouped/searchAndCompare":[{"command":"gitlens.views.searchAndCompare.clear","when":"gitlens:views:scm:grouped:view == searchAndCompare","group":"2_gitlens_actions_@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == searchAndCompare","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.searchAndCompare.setAsDefault","when":"gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.default != searchAndCompare","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"gitlens:views:scm:grouped:view == searchAndCompare","group":"9_gitlens@3"},{"command":"gitlens.views.searchAndCompare.searchCommits","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"2_gitlens_actions@1"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"2_gitlens_actions@2"}],"gitlens/views/grouped/stashes":[{"command":"gitlens.stashSave","when":"gitlens:views:scm:grouped:view == stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"command":"gitlens.stashApply","when":"gitlens:views:scm:grouped:view == stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@2"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == stashes","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.stashes.setAsDefault","when":"gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.default != stashes","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"gitlens:views:scm:grouped:view == stashes","group":"9_gitlens@3"}],"gitlens/views/grouped/tags":[{"command":"gitlens.views.title.createTag","when":"gitlens:views:scm:grouped:view == tags && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == tags","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.tags.setAsDefault","when":"gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.default != tags","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"gitlens:views:scm:grouped:view == tags","group":"9_gitlens@3"}],"gitlens/views/grouped/visibility":[{"command":"gitlens.views.scm.grouped.commits.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.commits","group":"2_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.commits","group":"2_gitlens@1"},{"command":"gitlens.views.scm.grouped.branches.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.branches","group":"2_gitlens@2"},{"command":"gitlens.views.scm.grouped.branches.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.branches","group":"2_gitlens@2"},{"command":"gitlens.views.scm.grouped.remotes.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.remotes","group":"2_gitlens@3"},{"command":"gitlens.views.scm.grouped.remotes.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.remotes","group":"2_gitlens@3"},{"command":"gitlens.views.scm.grouped.stashes.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.stashes","group":"2_gitlens@4"},{"command":"gitlens.views.scm.grouped.stashes.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.stashes","group":"2_gitlens@4"},{"command":"gitlens.views.scm.grouped.tags.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.tags","group":"2_gitlens@5"},{"command":"gitlens.views.scm.grouped.tags.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.tags","group":"2_gitlens@5"},{"command":"gitlens.views.scm.grouped.worktrees.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.worktrees","group":"2_gitlens@6"},{"command":"gitlens.views.scm.grouped.worktrees.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.worktrees","group":"2_gitlens@6"},{"command":"gitlens.views.scm.grouped.contributors.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.contributors","group":"2_gitlens@7"},{"command":"gitlens.views.scm.grouped.contributors.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.contributors","group":"2_gitlens@7"},{"command":"gitlens.views.scm.grouped.repositories.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.repositories","group":"2_gitlens@8"},{"command":"gitlens.views.scm.grouped.repositories.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.repositories","group":"2_gitlens@8"},{"command":"gitlens.views.scm.grouped.searchAndCompare.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.searchAndCompare","group":"2_gitlens@9"},{"command":"gitlens.views.scm.grouped.searchAndCompare.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.searchAndCompare","group":"2_gitlens@9"},{"command":"gitlens.views.scm.grouped.launchpad.visibility.hide","when":"!config.gitlens.views.scm.grouped.hiddenViews.launchpad","group":"2_gitlens@10"},{"command":"gitlens.views.scm.grouped.launchpad.visibility.show","when":"config.gitlens.views.scm.grouped.hiddenViews.launchpad","group":"2_gitlens@10"}],"gitlens/views/grouped/worktrees":[{"command":"gitlens.views.title.createWorktree","when":"gitlens:views:scm:grouped:view == worktrees","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == worktrees","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.worktrees.setAsDefault","when":"gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.default != workspaces","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"gitlens:views:scm:grouped:view == worktrees","group":"9_gitlens@3"}],"menuBar/edit/copy":[{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editor.clipboard","group":"1_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editor.clipboard","group":"1_gitlens@2"}],"scm/resourceFolder/context":[{"submenu":"gitlens/scm/resourceFolder/changes","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"2_gitlens@1"},{"submenu":"gitlens/scm/resourceFolder/history","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.history","group":"2_gitlens_1@1"},{"command":"gitlens.copyPatchToClipboard","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@97"}],"scm/resourceGroup/context":[{"command":"gitlens.stashSave","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroupInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@-1"},{"command":"gitlens.stashSave","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_modification@100"},{"submenu":"gitlens/scm/resourceGroup/changes","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"2_gitlens@1"},{"command":"gitlens.openChangedFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@2"},{"command":"gitlens.openOnlyChangedFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@3"},{"command":"gitlens.copyPatchToClipboard","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@97"},{"command":"gitlens.shareAsCloudPatch","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@98"}],"scm/resourceState/context":[{"submenu":"gitlens/scm/resourceState/changes","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"navigation"},{"submenu":"gitlens/scm/resourceState/openOn","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.remote && gitlens:repos:withRemotes","group":"navigation"},{"command":"gitlens.stashSaveFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItemInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"submenu":"gitlens/scm/resourceState/history","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_a_gitlens@2"},{"command":"gitlens.stashSaveFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_modification@2"},{"submenu":"gitlens/share","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.share","group":"7_a_gitlens_share@1"},{"command":"gitlens.copyPatchToClipboard","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.patch","group":"7_cutcopypaste@97"},{"command":"gitlens.copyRelativePathToClipboard","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.clipboard && gitlens:repos:withRemotes","group":"7_cutcopypaste@98"}],"scm/sourceControl":[{"command":"gitlens.showGraph","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scm.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"6_gitlens@1"}],"scm/title":[{"command":"gitlens.scm.ai.generateCommitMessage","when":"scmProvider == git && gitlens:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepositoryInline.generateCommitMessage && gitlens:gk:organization:ai:enabled && !gitlens:readonly && !gitlens:untrusted","group":"navigation@-3"},{"command":"gitlens.stashSave","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepositoryInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@-2"},{"command":"gitlens.showGraph","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepositoryInline.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"navigation@-1"},{"command":"gitlens.addAuthors","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.authors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_z_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.patch","group":"2_z_gitlens@2"},{"command":"gitlens.shareAsCloudPatch","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.patch","group":"2_z_gitlens@3"},{"command":"gitlens.scm.ai.generateCommitMessage","when":"scmProvider == git && gitlens:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage && gitlens:gk:organization:ai:enabled && !gitlens:readonly && !gitlens:untrusted","group":"2_z_gitlens@4"},{"command":"gitlens.showGraph","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"2_z_gitlens@5"}],"timeline/item/context":[{"command":"gitlens.openCommitOnRemote","when":"false && gitlens:enabled && gitlens:repos:withRemotes && timelineItem =~ /git:file:commit\\b/","group":"inline@99","alt":"gitlens.copyRemoteCommitUrl"}],"view/item/context":[{"command":"gitlens.ghpr.views.openOrCreateWorktree","when":"viewItem =~ /pullrequest(:local)?:nonactive|description/ && view == pr:github && config.gitlens.menus.ghpr.worktree && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens@1"},{"command":"gitlens.views.copy","when":"viewItem =~ /gitlens:(?=(autolinked:item\\b|branch|commit|contributor|file(?!.*?\\b\\+(staged|unstaged))\\b|folder|history:line|launchpad:item|pullrequest|remote|repository|repo-folder|search:results|stash|tag|workspace|worktree)\\b)/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:(?!(file|message|date-marker)\\b)/","group":"9_gitlens_z@99"},{"command":"gitlens.views.openUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/","group":"inline@99","alt":"gitlens.views.copyUrl"},{"command":"gitlens.views.openUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/ && !listMultiSelection","group":"1_gitlens_actions@99"},{"command":"gitlens.views.openUrl.multi","when":"viewItem =~ /gitlens:autolinked:item\\b/ && listMultiSelection","group":"1_gitlens_actions@99"},{"command":"gitlens.views.copyUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.copyUrl.multi","when":"viewItem =~ /gitlens:autolinked:item\\b/ && listMultiSelection","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.copyAsMarkdown","when":"viewItem =~ /gitlens:autolinked:item\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:autolinked:items\\b/ && config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected","group":"inline@98"},{"command":"gitlens.showSettingsPage!autolinks","when":"viewItem =~ /gitlens:autolinked:items\\b/","group":"inline@99"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:autolinked:items\\b/ && config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected","group":"6_gitlens_actions@1"},{"command":"gitlens.showSettingsPage!autolinks","when":"viewItem =~ /gitlens:autolinked:items\\b/ && !listMultiSelection","group":"8_gitlens_actions@99"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !gitlens:hasVirtualFolders","group":"inline@7","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@7"},{"command":"gitlens.views.switchToBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@7"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+(ahead|behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8","alt":"gitlens.views.pull"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+(ahead|behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8"},{"command":"gitlens.views.publishBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(closed|remote|tracking)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8","alt":"gitlens.views.fetch"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+(behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes","group":"inline@9"},{"command":"gitlens.views.compareBranchWithHead","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.views.compareBranchWithHead","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && gitlens:hasVirtualFolders","group":"inline@97"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders","group":"inline@97"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"1_gitlens_action@1"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.views.switchToBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"1_gitlens_action@2"},{"command":"gitlens.views.openInWorktree","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"1_gitlens_action@3"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:(branch|tag)\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection","group":"1_gitlens_action@100"},{"command":"gitlens.views.publishBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(closed|remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(behind|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+(behind|closed)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.mergeBranchInto","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.views.rebaseOntoBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.rebaseOntoUpstream","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.resetToTip","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.views.associateIssueWithBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@1"},{"command":"gitlens.views.renameBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@2"},{"command":"gitlens.views.deleteBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@3"},{"command":"gitlens.views.deleteBranch.multi","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@3"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@7"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@8"},{"command":"gitlens.views.createWorktree","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@9"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:action:createPullRequest && gitlens:repos:withRemotes","group":"1_gitlens_actions_3@10"},{"command":"gitlens.views.ai.generateChangelogFrom","when":"viewItem =~ /gitlens:(branch|tag)\\b/ && gitlens:gk:organization:ai:enabled && !gitlens:untrusted","group":"1_gitlens_actions_3@100"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openBranchOnRemote.multi","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"3_gitlens_explore@11"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"3_gitlens_explore@12"},{"submenu":"gitlens/commit/browse","when":"viewItem =~ /gitlens:(branch|commit|file\\b(?=.*?\\b\\+committed\\b)|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"3_gitlens_explore@100"},{"command":"gitlens.views.compareWithUpstream","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@1"},{"command":"gitlens.views.compareBranchWithHead","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.views.compareWithMergeBase","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"4_gitlens_compare@3"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@4"},{"command":"gitlens.views.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@5"},{"command":"gitlens.views.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && gitlens:views:canCompare","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection","group":"4_gitlens_compare@99"},{"submenu":"gitlens/share","when":"viewItem =~ /gitlens:(branch|commit|compare:(branch(?=.*?\\b\\+comparing\\b)|results(:commits(?!:)|(?!:)))|remote|repo-folder|repository|stash|status:upstream|tag|workspace|file\\b(?=.*?\\b\\+committed\\b))\\b/","group":"7_gitlens_a_share@1"},{"submenu":"gitlens/commit/copy","when":"viewItem =~ /gitlens:(branch|commit|remote|repo-folder|repository|stash|tag|file\\b(?=.*?\\b\\+committed\\b))\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@10"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.star.multi","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unstar.multi","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.repositories.setShowSectionOff","when":"viewItem =~ /gitlens:(compare:branch(?=.*?\\b\\+root\\b)|branches|branch(?=.*?\\b\\+commits\\b)|reflog|remotes|stashes|status:upstream|tags)\\b/ && view == gitlens.views.repositories && !listMultiSelection","group":"8_gitlens_toggles@99"},{"command":"gitlens.views.collapseNode","when":"viewItem =~ /gitlens:(branch|commit|compare|contributor|folder|grouping|launchpad:item|pseudo:folder|pullrequest|remote|results|search|stash|status|tag|worktree)\\b/ && !listMultiSelection","group":"9_gitlens@1"},{"command":"gitlens.views.expandNode","when":"viewItem =~ /gitlens:(branch|commit|compare|contributor|folder|grouping|launchpad:item|pseudo:folder|pullrequest|remote|results|search|stash|status|tag|worktree)\\b/ && !listMultiSelection","group":"9_gitlens@2"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@10"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@11"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == tree","group":"inline@50"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == list","group":"inline@50"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/","group":"inline@98","alt":"gitlens.copyRemoteBranchesUrl"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"viewItem =~ /gitlens:branches\\b/ && view == gitlens.views.repositories && config.gitlens.views.repositories.branches.showBranchComparison && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","when":"viewItem =~ /gitlens:branches\\b/ && view == gitlens.views.repositories && !config.gitlens.views.repositories.branches.showBranchComparison && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.undoCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@78"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@79","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@80"},{"command":"gitlens.views.openChangedFileDiffs","when":"viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && config.gitlens.views.openChangesInMultiDiffEditor && !listMultiSelection","group":"inline@90","alt":"gitlens.views.openChangedFileDiffsWithWorking"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(commit|stash|tag)\\b/","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:commit\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:repos:withRemotes","group":"inline@99","alt":"gitlens.views.copyRemoteCommitUrl"},{"command":"gitlens.views.cherryPick","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.cherryPick.multi","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.undoCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.revert","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.resetToCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.views.switchToCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.createCloudPatch","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@4"},{"submenu":"gitlens/commit/changes","when":"viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.showInDetailsView","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection","group":"3_gitlens_explore@0"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:(commit|stash)\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"command":"gitlens.revealCommitInView","when":"viewItem =~ /gitlens:commit\\b/ && view =~ /gitlens\\.views\\.(?!commits|branches\\b)/ && !listMultiSelection","group":"3_gitlens_explore@2"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.views.openCommitOnRemote.multi","when":"viewItem =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(commit|stash|tag)\\b/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@4"},{"command":"gitlens.copyPatchToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"viewItem == gitlens:commits:current-branch && !gitlens:views:commits:filtered","group":"inline@50"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"viewItem == gitlens:commits:current-branch && gitlens:views:commits:filtered","group":"inline@50"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/","group":"inline@2"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/","group":"inline@2"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"inline@96"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/","group":"inline@96"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/","group":"inline@97"},{"command":"gitlens.views.clearComparison","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"inline@99"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/ && !listMultiSelection","group":"1_gitlens@1"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/ && !listMultiSelection","group":"1_gitlens@1"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection","group":"1_gitlens@2"},{"command":"gitlens.views.clearReviewed","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection","group":"1_gitlens@3"},{"command":"gitlens.views.clearComparison","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection","group":"1_gitlens@4"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:(branch\\b(?=.*?\\b\\+comparing\\b)|results(?!:))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@1"},{"command":"gitlens.copyPatchToClipboard","when":"viewItem =~ /gitlens:compare:(branch|results(?!:))\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/ && !listMultiSelection","group":"7_gitlens_filter@1"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b/ && !listMultiSelection","group":"7_gitlens_filter@2"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"viewItem =~ /gitlens:compare:branch\\b/ && view == gitlens.views.branches && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"viewItem =~ /gitlens:compare:branch\\b/ && view == gitlens.views.commits && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"viewItem =~ /gitlens:compare:branch(?!.*?\\b\\+root\\b)\\b/ && view == gitlens.views.repositories && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/","group":"inline@99"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/ && !listMultiSelection","group":"1_gitlens_actions@98"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"inline@96"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.clearReviewed","when":"viewItem =~ /gitlens:compare:results(?!:)/ && !listMultiSelection","group":"1_gitlens_actions@3"},{"command":"gitlens.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.createCloudPatch","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.views.openDirectoryDiff","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.ai.generateChangelog","when":"viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:gk:organization:ai:enabled && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:repos:withRemotes","group":"inline@99","alt":"gitlens.copyRemoteComparisonUrl"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:results:commits\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@0"},{"command":"gitlens.views.ai.generateChangelog","when":"viewItem =~ /gitlens:compare:results:commits\\b/ && !listMultiSelection && gitlens:gk:organization:ai:enabled && !gitlens:untrusted","group":"4_gitlens_actions@2"},{"command":"gitlens.inviteToLiveShare","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && gitlens:vsls && gitlens:vsls != guest","group":"inline@1"},{"command":"gitlens.views.addAuthor","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@2"},{"command":"gitlens.views.copy","when":"viewItem =~ /gitlens:contributor\\b/","group":"inline@98"},{"command":"gitlens.inviteToLiveShare","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && gitlens:vsls && gitlens:vsls != guest","group":"1_gitlens_actions@1"},{"command":"gitlens.views.addAuthor","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.addAuthor.multi","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.copyAsMarkdown","when":"viewItem =~ /gitlens:contributor\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.views.addAuthors","when":"viewItem =~ /gitlens:contributors\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.setContributorsStatisticsOff","when":"viewItem == gitlens:contributors && config.gitlens.views.showContributorsStatistics","group":"inline@99"},{"command":"gitlens.views.setContributorsStatisticsOn","when":"viewItem == gitlens:contributors && !config.gitlens.views.showContributorsStatistics","group":"inline@99"},{"command":"gitlens.views.addAuthors","when":"viewItem =~ /gitlens:contributors\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"viewItem == gitlens:date-marker && config.gitlens.views.showRelativeDateMarkers && !listMultiSelection","group":"1_gitlens@0"},{"command":"gitlens.views.draft.openOnWeb","when":"viewItem =~ /gitlens:draft\\b/ && gitlens:plus","group":"inline@99"},{"command":"gitlens.views.draft.open","when":"viewItem =~ /gitlens:draft\\b/ && gitlens:plus","group":"1_gitlens_actions@1"},{"command":"gitlens.views.draft.openOnWeb","when":"viewItem =~ /gitlens:draft\\b/ && gitlens:plus","group":"1_gitlens_actions@2"},{"command":"gitlens.views.drafts.delete","when":"viewItem =~ /gitlens:draft\\b(?=.*?\\b\\+mine\\b)/ && gitlens:plus","group":"6_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@-1"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@-1"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file(:results|\\b(?=.*?\\b\\+(committed|stashed)\\b))/","group":"inline@1","alt":"gitlens.views.openFile"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/ && view =~ /gitlens\\.views\\.(?!fileHistory|lineHistory)\\b/","group":"inline@96"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|unstaged)\\b)/","group":"inline@96"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/","group":"inline@96"},{"command":"gitlens.views.stageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.views.unstageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:repos:withRemotes","group":"inline@99","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.stashSaveFiles","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+(un)?staged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.mergeChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.restore","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"submenu":"gitlens/commit/file/changes","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.showInDetailsView","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@3"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && !listMultiSelection","group":"2_gitlens_quickopen_file@3"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/ && !listMultiSelection","group":"2_gitlens_quickopen_file@4"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen_file@5","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"submenu":"gitlens/commit/file/commit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"submenu":"gitlens/commit/file/history","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"3_gitlens_explore@2"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@3"},{"command":"gitlens.views.compareFileWithSelected","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection && gitlens:views:canCompare:file","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectFileForCompare","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/ && !listMultiSelection","group":"4_gitlens_compare@99"},{"command":"gitlens.copyRelativePathToClipboard","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.copyPatchToClipboard","when":"viewItem =~ /gitlens:file(\\b(?=.*?\\b\\+committed\\b)|:results)/ && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@98"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"8_gitlens_actions@1"},{"command":"gitlens.views.mergeChangesWithWorking","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection","group":"8_gitlens_actions@2"},{"command":"gitlens.views.restore","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"8_gitlens_actions@3"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"submenu":"gitlens/explorer/folder/history","when":"viewItem =~ /gitlens:folder\\b/ && !listMultiSelection","group":"4_timeline@1"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/","group":"inline@1"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"5_gitlens_open@2","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.views.openPullRequestChanges","when":"viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/","group":"inline@2"},{"command":"gitlens.openPullRequestOnRemote","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/","group":"inline@98","alt":"gitlens.copyRemotePullRequestUrl"},{"command":"gitlens.views.openInWorktree","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"inline@99"},{"command":"gitlens.views.openInWorktree","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openPullRequestChanges","when":"viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.openPullRequestOnRemote","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openPullRequestComparison","when":"viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"4_gitlens_compare@1"},{"command":"gitlens.plus.login","when":"viewItem == gitlens:message:signin","group":"inline@1"},{"command":"gitlens.views.loadAllChildren","when":"viewItem =~ /gitlens:pager\\b/","group":"inline@1"},{"command":"gitlens.views.loadAllChildren","when":"viewItem =~ /gitlens:pager\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.abortPausedOperation","when":"viewItem =~ /gitlens:paused-operation\\b/ && !listMultiSelection","group":"inline@3"},{"command":"gitlens.views.abortPausedOperation","when":"viewItem =~ /gitlens:paused-operation\\b/ && !listMultiSelection","group":"1_gitlens_actions@3"},{"command":"gitlens.views.continuePausedOperation","when":"viewItem =~ /gitlens:paused-operation:(cherry-pick|merge|rebase)\\b/ && !listMultiSelection","group":"inline@1"},{"command":"gitlens.views.skipPausedOperation","when":"viewItem =~ /gitlens:paused-operation:(cherry-pick|rebase|revert)\\b/ && !listMultiSelection","group":"inline@2"},{"command":"gitlens.views.continuePausedOperation","when":"viewItem =~ /gitlens:paused-operation:(cherry-pick|merge|rebase)\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.skipPausedOperation","when":"viewItem =~ /gitlens:paused-operation:(cherry-pick|rebase|revert)\\b/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openPausedOperationInRebaseEditor","when":"viewItem =~ /gitlens:paused-operation:rebase\\b/ && !listMultiSelection","group":"inline@4"},{"command":"gitlens.views.openPausedOperationInRebaseEditor","when":"viewItem =~ /gitlens:paused-operation:rebase\\b/ && !listMultiSelection","group":"2_gitlens@1"},{"command":"gitlens.views.openPullRequest","when":"viewItem =~ /gitlens:pullrequest\\b/ && gitlens:action:openPullRequest > 1","group":"inline@1"},{"command":"gitlens.views.openPullRequest","when":"viewItem =~ /gitlens:pullrequest\\b/ && !listMultiSelection && gitlens:action:openPullRequest > 1","group":"1_gitlens_actions@1"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:remote\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/ && config.gitlens.integrations.enabled","group":"inline@98"},{"command":"gitlens.disconnectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/ && config.gitlens.integrations.enabled","group":"inline@98"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"inline@99","alt":"gitlens.copyRemoteRepositoryUrl"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pruneRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection","group":"5_gitlens_open@1"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection","group":"5_gitlens_open@2"},{"command":"gitlens.views.removeRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"6_gitlens_terminal@1"},{"command":"gitlens.views.setAsDefault","when":"viewItem =~ /gitlens:remote\\b(?!.*?\\b\\+default\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unsetAsDefault","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+default\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/ && config.gitlens.integrations.enabled && !listMultiSelection","group":"8_gitlens_actions@2"},{"command":"gitlens.disconnectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/ && config.gitlens.integrations.enabled && !listMultiSelection","group":"8_gitlens_actions@2"},{"command":"gitlens.views.addRemote","when":"viewItem =~ /gitlens:remotes\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == tree","group":"inline@50"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == list","group":"inline@50"},{"command":"gitlens.views.addRemote","when":"viewItem =~ /gitlens:remotes\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@96","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.showGraph","when":"viewItem =~ /gitlens:repo-folder\\b/ && gitlens:plus:enabled","group":"inline@100"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"(view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered","group":"inline@101"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.stashSave","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.stashApply","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@2"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@3"},{"command":"gitlens.showGraph","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:plus:enabled","group":"3_gitlens_explore@1"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection","group":"3_gitlens_explore@2"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.star.multi","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar.multi","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection","group":"8_gitlens_actions_@2"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"!listMultiSelection && (view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered","group":"8_gitlens_filter_@1"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"!listMultiSelection && (view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b/","group":"8_gitlens_filter_@2"},{"command":"gitlens.views.workspaces.convert","when":"viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus","group":"inline@1"},{"command":"gitlens.views.workspaces.convert","when":"viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.addReposFromLinked","when":"viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+linked\\b)(?=.*?\\b\\+current\\b)/ && !listMultiSelection","group":"1_gitlens_actions@3"},{"command":"gitlens.views.workspaces.changeAutoAddSetting","when":"viewItem =~ /(gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)|gitlens:repositories\\b(?=.*?\\b\\+linked\\b))/ && !listMultiSelection","group":"2_gitlens_quickopen@6"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@96","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/","group":"inline@100","alt":"gitlens.views.workspaces.repo.open"},{"command":"gitlens.views.workspaces.repo.open","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_1gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_1gitlens_actions@2"},{"command":"gitlens.views.workspaces.repo.addToWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_1gitlens_actions@3"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_2gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/ && !listMultiSelection","group":"0_2gitlens_actions@2"},{"command":"gitlens.views.workspaces.repo.remove","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/ && !listMultiSelection","group":"0_3gitlens_actions@1"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.stashSave","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.stashApply","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@3"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@4"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.star.multi","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar.multi","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@2"},{"submenu":"gitlens/comparison/results/files/filter/inline","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/","group":"inline@99"},{"submenu":"gitlens/comparison/results/files/filtered/inline","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/","group":"inline@99"},{"command":"gitlens.views.clearReviewed","when":"viewItem =~ /gitlens:results:files\\b/ && !listMultiSelection","group":"1_gitlens@1"},{"submenu":"gitlens/comparison/results/files/filter","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/ && !listMultiSelection","group":"1_gitlens@2"},{"submenu":"gitlens/comparison/results/files/filtered","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/ && !listMultiSelection","group":"1_gitlens@2"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/","group":"inline@1"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/","group":"inline@97"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stash.apply","when":"viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.stash.rename","when":"viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.stash.delete","when":"viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.stash.apply","when":"viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stash.rename","when":"viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.stash.delete","when":"viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.stash.delete.multi","when":"viewItem == gitlens:stash && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.stashSave","when":"viewItem =~ /^gitlens:(stashes|status:files)$/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.stashApply","when":"viewItem == gitlens:stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.stashSave","when":"viewItem =~ /^gitlens:(stashes|status:files)$/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.stashApply","when":"viewItem == gitlens:stashes && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:(?!(missing|none))/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:ahead/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:behind/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.publishBranch","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.publishRepository","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:repos:withRemotes && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.addRemote","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:none/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:repos:withRemotes && !gitlens:untrusted","group":"inline@2"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:status:upstream/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:status:upstream/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:status:upstream\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen_terminal@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"viewItem =~ /gitlens:status:upstream\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen_terminal@2"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:action:createPullRequest && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@3"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen_remote@1"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.push","when":"viewItem == gitlens:status:upstream:ahead && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"viewItem == gitlens:status:upstream:ahead && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pull","when":"viewItem == gitlens:status:upstream:behind && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:status:upstream:same/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:status:upstream:same/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97","alt":"gitlens.copyRemoteBranchUrl"},{"command":"gitlens.views.switchToTag","when":"viewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@10"},{"command":"gitlens.views.switchToTag","when":"viewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.deleteTag","when":"viewItem == gitlens:tag && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.deleteTag.multi","when":"viewItem == gitlens:tag && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@3"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:tags\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:tags\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.addRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/","group":"inline@1"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/","group":"inline@2"},{"command":"gitlens.views.workspaces.createLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?!.*?\\b\\+hasPath\\b)(?!.*?\\b\\+empty\\b)/","group":"inline@3"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/","group":"inline@3","alt":"gitlens.views.workspaces.openLocal"},{"command":"gitlens.views.workspaces.addRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.workspaces.createLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+empty\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@3"},{"command":"gitlens.views.workspaces.openLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@4"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@5"},{"command":"gitlens.views.workspaces.delete","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/ && !listMultiSelection","group":"6_gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/","group":"inline@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.remove","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/ && !listMultiSelection","group":"6_gitlens_actions@1"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/","group":"inline@1","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1","group":"inline@1","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && !listMultiSelection && workspaceFolderCount != 1","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && !listMultiSelection && workspaceFolderCount != 1","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","when":"viewItem =~ /gitlens:worktree\\b/ && listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.revealWorktreeInExplorer","when":"viewItem =~ /gitlens:worktree\\b/ && !listMultiSelection","group":"3_gitlens@1"},{"command":"gitlens.views.deleteWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|default)\\b)/ && !listMultiSelection && !gitlens:readonly","group":"6_gitlens_actions@1"},{"command":"gitlens.views.deleteWorktree.multi","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|default)\\b)/ && listMultiSelection && !gitlens:readonly","group":"6_gitlens_actions@1"},{"command":"gitlens.views.createWorktree","when":"viewItem =~ /gitlens:worktrees\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.createWorktree","when":"viewItem =~ /gitlens:worktrees\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"}],"view/title":[{"command":"gitlens.views.switchToAnotherBranch","when":"view == gitlens.views.branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.views.title.createBranch","when":"view == gitlens.views.branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@11"},{"command":"gitlens.views.branches.setLayoutToList","when":"view == gitlens.views.branches && config.gitlens.views.branches.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.branches.setLayoutToTree","when":"view == gitlens.views.branches && config.gitlens.views.branches.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.branches.refresh","when":"view == gitlens.views.branches","group":"navigation@98"},{"command":"gitlens.views.branches.regroup","when":"view == gitlens.views.branches","group":"navigation@99"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"view == gitlens.views.branches && config.gitlens.views.branches.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"view == gitlens.views.branches && config.gitlens.views.branches.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"view == gitlens.views.branches && config.gitlens.views.branches.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.branches && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.branches && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowStashesOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.branches.setShowStashesOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.branches.regroup","when":"view == gitlens.views.branches","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!branches-view","when":"view == gitlens.views.branches","group":"9_gitlens@1"},{"command":"gitlens.views.commitDetails.refresh","when":"view == gitlens.views.commitDetails","group":"navigation@99"},{"command":"gitlens.pushRepositories","when":"view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@1"},{"command":"gitlens.pullRepositories","when":"view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@2"},{"command":"gitlens.fetchRepositories","when":"view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@3"},{"command":"gitlens.views.switchToAnotherBranch","when":"view == gitlens.views.commits && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.showGraph","when":"view == gitlens.views.commits && gitlens:plus:enabled","group":"navigation@11"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"view == gitlens.views.commits && gitlens:views:commits:filtered","group":"navigation@50"},{"command":"gitlens.views.commits.refresh","when":"view == gitlens.views.commits","group":"navigation@98"},{"command":"gitlens.views.commits.regroup","when":"view == gitlens.views.commits","group":"navigation@99"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"view == gitlens.views.commits && gitlens:views:commits:filtered","group":"2_gitlens@0"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"view == gitlens.views.commits","group":"2_gitlens@1"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"view == gitlens.views.commits && config.gitlens.views.commits.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"view == gitlens.views.commits && config.gitlens.views.commits.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"view == gitlens.views.commits && config.gitlens.views.commits.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.commits && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.commits && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"view == gitlens.views.commits && !gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"view == gitlens.views.commits && gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowStashesOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.commits.setShowStashesOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.showGraph","when":"view == gitlens.views.commits && gitlens:plus:enabled","group":"8_gitlens_toggles@0"},{"command":"gitlens.showRepositoriesView","when":"view == gitlens.views.commits && !gitlens:hasVirtualFolders","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.commits.regroup","when":"view == gitlens.views.commits","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!commits-view","when":"view == gitlens.views.commits","group":"9_gitlens@1"},{"command":"gitlens.views.addAuthors","when":"view == gitlens.views.contributors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.views.contributors.refresh","when":"view == gitlens.views.contributors","group":"navigation@98"},{"command":"gitlens.views.contributors.regroup","when":"view == gitlens.views.contributors","group":"navigation@99"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"view == gitlens.views.contributors && !config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"view == gitlens.views.contributors && !config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.contributors && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.contributors && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"view == gitlens.views.contributors && !gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"view == gitlens.views.contributors && gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"view == gitlens.views.contributors && !config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.views.contributors.regroup","when":"view == gitlens.views.contributors","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!contributors-view","when":"view == gitlens.views.contributors","group":"9_gitlens@1"},{"command":"gitlens.views.drafts.create","when":"view == gitlens.views.drafts && gitlens:plus","group":"navigation@1"},{"command":"gitlens.views.drafts.refresh","when":"view == gitlens.views.drafts","group":"navigation@99"},{"command":"gitlens.views.drafts.setShowAvatarsOff","when":"view == gitlens.views.drafts && config.gitlens.views.drafts.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.drafts.setShowAvatarsOn","when":"view == gitlens.views.drafts && !config.gitlens.views.drafts.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.drafts.info","when":"view == gitlens.views.drafts","group":"8_info@1"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"view == gitlens.views.fileHistory && gitlens:views:fileHistory:canPin && gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"view == gitlens.views.fileHistory && !gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","when":"view == gitlens.views.fileHistory && gitlens:views:fileHistory:cursorFollowing && !gitlens:hasVirtualFolders","group":"navigation@11"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","when":"view == gitlens.views.fileHistory && !gitlens:hasVirtualFolders && !gitlens:views:fileHistory:cursorFollowing","group":"navigation@11"},{"command":"gitlens.views.fileHistory.refresh","when":"view == gitlens.views.fileHistory","group":"navigation@99"},{"command":"gitlens.views.fileHistory.changeBase","when":"view == gitlens.views.fileHistory","group":"1_gitlens@0"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryFollowsRenames && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@1"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryFollowsRenames && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@1"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","when":"view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryShowMergeCommits && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@2"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","when":"view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryShowMergeCommits && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@2"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","when":"view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryShowAllBranches && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@3"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","when":"view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryShowAllBranches && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@3"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","when":"view == gitlens.views.fileHistory && config.gitlens.views.fileHistory.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","when":"view == gitlens.views.fileHistory && !config.gitlens.views.fileHistory.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.fileHistory && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.fileHistory && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.showLineHistoryView","when":"view == gitlens.views.fileHistory && !gitlens:hasVirtualFolders","group":"8_gitlens_toggles@0"},{"command":"gitlens.showSettingsPage!file-history-view","when":"view == gitlens.views.fileHistory","group":"9_gitlens@1"},{"command":"gitlens.views.graph.openInTab","when":"view == gitlens.views.graph","group":"navigation@-100"},{"command":"gitlens.views.graph.refresh","when":"view == gitlens.views.graph","group":"navigation@-99"},{"submenu":"gitlens/graph/configuration","when":"view == gitlens.views.graph","group":"navigation@-98"},{"command":"gitlens.views.graphDetails.refresh","when":"view == gitlens.views.graphDetails","group":"navigation@99"},{"command":"gitlens.views.home.whatsNew","when":"view == gitlens.views.home","group":"navigation@1"},{"command":"gitlens.views.home.previewFeedback","when":"view == gitlens.views.home","group":"navigation@96"},{"command":"gitlens.views.home.disablePreview","when":"view == gitlens.views.home && config.gitlens.home.preview.enabled","group":"navigation@97"},{"command":"gitlens.views.home.enablePreview","when":"view == gitlens.views.home && !config.gitlens.home.preview.enabled","group":"navigation@97"},{"command":"gitlens.views.home.info","when":"view == gitlens.views.home","group":"navigation@98"},{"command":"gitlens.views.home.refresh","when":"view == gitlens.views.home","group":"navigation@99"},{"command":"gitlens.views.home.help","when":"view == gitlens.views.home","group":"1_gitlens@97"},{"command":"gitlens.views.home.issues","when":"view == gitlens.views.home","group":"2_gitlens@98"},{"command":"gitlens.views.home.discussions","when":"view == gitlens.views.home","group":"2_gitlens@99"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == tree","group":"navigation@50"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == auto","group":"navigation@50"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == list","group":"navigation@50"},{"command":"gitlens.views.launchpad.refresh","when":"view == gitlens.views.launchpad","group":"navigation@98"},{"command":"gitlens.views.launchpad.regroup","when":"view == gitlens.views.launchpad","group":"navigation@99"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"view == gitlens.views.launchpad && !config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.launchpad.info","when":"view == gitlens.views.launchpad","group":"8_info@1"},{"command":"gitlens.views.launchpad.regroup","when":"view == gitlens.views.launchpad","group":"9_gitlens@0"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"view == gitlens.views.lineHistory && gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"view == gitlens.views.lineHistory && !gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.refresh","when":"view == gitlens.views.lineHistory","group":"navigation@99"},{"command":"gitlens.views.lineHistory.changeBase","when":"view == gitlens.views.lineHistory","group":"1_gitlens@0"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","when":"view == gitlens.views.lineHistory && config.gitlens.views.lineHistory.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","when":"view == gitlens.views.lineHistory && !config.gitlens.views.lineHistory.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.lineHistory && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.lineHistory && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.showSettingsPage!line-history-view","when":"view == gitlens.views.lineHistory","group":"9_gitlens@1"},{"command":"gitlens.views.patchDetails.refresh","when":"view == gitlens.views.patchDetails","group":"navigation@98"},{"command":"gitlens.views.patchDetails.close","when":"view == gitlens.views.patchDetails","group":"navigation@99"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == tree","group":"navigation@50"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == auto","group":"navigation@50"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == list","group":"navigation@50"},{"command":"gitlens.views.pullRequest.refresh","when":"view == gitlens.views.pullRequest","group":"navigation@98"},{"command":"gitlens.views.pullRequest.close","when":"view == gitlens.views.pullRequest","group":"navigation@99"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","when":"view == gitlens.views.pullRequest && !config.gitlens.views.pullRequest.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.addRemote","when":"view == gitlens.views.remotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@1"},{"command":"gitlens.views.remotes.setLayoutToList","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.remotes.refresh","when":"view == gitlens.views.remotes","group":"navigation@98"},{"command":"gitlens.views.remotes.regroup","when":"view == gitlens.views.remotes","group":"navigation@99"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"view == gitlens.views.remotes && !config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"view == gitlens.views.remotes && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.remotes && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.remotes && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.views.remotes.regroup","when":"view == gitlens.views.remotes","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!remotes-view","when":"view == gitlens.views.remotes","group":"9_gitlens@1"},{"command":"gitlens.pushRepositories","when":"view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@1"},{"command":"gitlens.pullRepositories","when":"view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@2"},{"command":"gitlens.fetchRepositories","when":"view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@3"},{"command":"gitlens.views.repositories.refresh","when":"view == gitlens.views.repositories","group":"navigation@98"},{"command":"gitlens.views.repositories.regroup","when":"view == gitlens.views.repositories","group":"navigation@99"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"view == gitlens.views.repositories && !config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.repositories && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.repositories && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.repositories.regroup","when":"view == gitlens.views.repositories","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!repositories-view","when":"view == gitlens.views.repositories","group":"9_gitlens@1"},{"submenu":"gitlens/view/repositories/sections","when":"(view == gitlens.views.repositories) || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories)","group":"4_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits && !config.gitlens.views.scm.grouped.hiddenViews.commits && (gitlens:views:scm:grouped:view != commits || gitlens:views:scm:grouped:welcome)","group":"navigation@1","alt":"gitlens.views.scm.grouped.commits.detach"},{"submenu":"gitlens/views/grouped/commits","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.views.commits && !gitlens:views:scm:grouped:welcome","group":"navigation@1"},{"command":"gitlens.views.scm.grouped.branches","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches && !config.gitlens.views.scm.grouped.hiddenViews.branches && (gitlens:views:scm:grouped:view != branches || gitlens:views:scm:grouped:welcome)","group":"navigation@2","alt":"gitlens.views.scm.grouped.branches.detach"},{"submenu":"gitlens/views/grouped/branches","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.views.branches && !gitlens:views:scm:grouped:welcome","group":"navigation@2"},{"command":"gitlens.views.scm.grouped.remotes","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes && !config.gitlens.views.scm.grouped.hiddenViews.remotes && (gitlens:views:scm:grouped:view != remotes || gitlens:views:scm:grouped:welcome)","group":"navigation@3","alt":"gitlens.views.scm.grouped.remotes.detach"},{"submenu":"gitlens/views/grouped/remotes","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.views.remotes && !gitlens:views:scm:grouped:welcome","group":"navigation@3"},{"command":"gitlens.views.scm.grouped.stashes","when":"!gitlens:hasVirtualFolders && view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes && !config.gitlens.views.scm.grouped.hiddenViews.stashes && (gitlens:views:scm:grouped:view != stashes || gitlens:views:scm:grouped:welcome)","group":"navigation@4","alt":"gitlens.views.scm.grouped.stashes.detach"},{"submenu":"gitlens/views/grouped/stashes","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.views.stashes && !gitlens:hasVirtualFolders && !gitlens:views:scm:grouped:welcome","group":"navigation@4"},{"command":"gitlens.views.scm.grouped.tags","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags && !config.gitlens.views.scm.grouped.hiddenViews.tags && (gitlens:views:scm:grouped:view != tags || gitlens:views:scm:grouped:welcome)","group":"navigation@5","alt":"gitlens.views.scm.grouped.tags.detach"},{"submenu":"gitlens/views/grouped/tags","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.views.tags && !gitlens:views:scm:grouped:welcome","group":"navigation@5"},{"command":"gitlens.views.scm.grouped.worktrees","when":"!gitlens:hasVirtualFolders && gitlens:plus:enabled && view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees && !config.gitlens.views.scm.grouped.hiddenViews.worktrees && (gitlens:views:scm:grouped:view != worktrees || gitlens:views:scm:grouped:welcome)","group":"navigation@6","alt":"gitlens.views.scm.grouped.worktrees.detach"},{"submenu":"gitlens/views/grouped/worktrees","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders && !gitlens:views:scm:grouped:welcome","group":"navigation@6"},{"command":"gitlens.views.scm.grouped.contributors","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors && !config.gitlens.views.scm.grouped.hiddenViews.contributors && (gitlens:views:scm:grouped:view != contributors || gitlens:views:scm:grouped:welcome)","group":"navigation@7","alt":"gitlens.views.scm.grouped.contributors.detach"},{"submenu":"gitlens/views/grouped/contributors","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.views.contributors && !gitlens:views:scm:grouped:welcome","group":"navigation@7"},{"command":"gitlens.views.scm.grouped.repositories","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories && !config.gitlens.views.scm.grouped.hiddenViews.repositories && (gitlens:views:scm:grouped:view != repositories || gitlens:views:scm:grouped:welcome)","group":"navigation@8","alt":"gitlens.views.scm.grouped.repositories.detach"},{"submenu":"gitlens/views/grouped/repositories","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.views.repositories && !gitlens:views:scm:grouped:welcome","group":"navigation@8"},{"command":"gitlens.views.scm.grouped.searchAndCompare","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare && !config.gitlens.views.scm.grouped.hiddenViews.searchAndCompare && (gitlens:views:scm:grouped:view != searchAndCompare || gitlens:views:scm:grouped:welcome)","group":"navigation@9","alt":"gitlens.views.scm.grouped.searchAndCompare.detach"},{"submenu":"gitlens/views/grouped/searchAndCompare","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.views.searchAndCompare && !gitlens:views:scm:grouped:welcome","group":"navigation@9"},{"command":"gitlens.views.scm.grouped.launchpad","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad && !config.gitlens.views.scm.grouped.hiddenViews.launchpad && (gitlens:views:scm:grouped:view != launchpad || gitlens:views:scm:grouped:welcome)","group":"navigation@10","alt":"gitlens.views.scm.grouped.launchpad.detach"},{"submenu":"gitlens/views/grouped/launchpad","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.views.launchpad && !gitlens:views:scm:grouped:welcome","group":"navigation@10"},{"command":"gitlens.views.scm.grouped.refresh","when":"view == gitlens.views.scm.grouped","group":"navigation@98"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.views.branches","group":"1_gitlens@-1"},{"command":"gitlens.views.scm.grouped.commits.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.views.commits","group":"1_gitlens@-1"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.views.contributors","group":"1_gitlens@-1"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.views.launchpad","group":"1_gitlens@-1"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.views.remotes","group":"1_gitlens@-1"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.views.repositories","group":"1_gitlens@-1"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.views.searchAndCompare","group":"1_gitlens@-1"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.views.stashes","group":"1_gitlens@-1"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.views.tags","group":"1_gitlens@-1"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.views.worktrees","group":"1_gitlens@-1"},{"submenu":"gitlens/views/grouped/detachOrRegroup","when":"view == gitlens.views.scm.grouped && !gitlens:views:scm:grouped:welcome","group":"1_gitlens@1"},{"submenu":"gitlens/views/grouped/visibility","when":"view == gitlens.views.scm.grouped && !gitlens:views:scm:grouped:welcome","group":"1_gitlens@2"},{"command":"gitlens.views.branches.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches","group":"1_gitlens_1@1"},{"command":"gitlens.views.commits.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits","group":"1_gitlens_1@1"},{"command":"gitlens.views.contributors.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors","group":"1_gitlens_1@1"},{"command":"gitlens.views.launchpad.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad","group":"1_gitlens_1@1"},{"command":"gitlens.views.remotes.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes","group":"1_gitlens_1@1"},{"command":"gitlens.views.repositories.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories","group":"1_gitlens_1@1"},{"command":"gitlens.views.searchAndCompare.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare","group":"1_gitlens_1@1"},{"command":"gitlens.views.stashes.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes","group":"1_gitlens_1@1"},{"command":"gitlens.views.tags.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags","group":"1_gitlens_1@1"},{"command":"gitlens.views.worktrees.viewOptionsTitle","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees","group":"1_gitlens_1@1"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens@1"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens@1"},{"command":"gitlens.views.branches.setLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.branches.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.branches.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.worktrees.setLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.branches.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.worktrees.setLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.branches.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.stashes.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.stashes.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.stashes.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.branches.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.branches.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.remotes.setLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.branches.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.branches.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && !config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && !config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && !config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && !config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && !config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowStashesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.branches.setShowStashesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.commits.setShowStashesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.commits.setShowStashesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.showSettingsPage!branches-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!commits-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!contributors-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!remotes-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!repositories-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!stashes-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!tags-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees","group":"9_gitlens@1"},{"submenu":"gitlens/view/searchAndCompare/new","when":"view == gitlens.views.searchAndCompare","group":"navigation@10"},{"command":"gitlens.views.searchAndCompare.clear","when":"view == gitlens.views.searchAndCompare","group":"navigation@98"},{"command":"gitlens.views.searchAndCompare.refresh","when":"view == gitlens.views.searchAndCompare","group":"navigation@98"},{"command":"gitlens.views.searchAndCompare.regroup","when":"view == gitlens.views.searchAndCompare","group":"navigation@99"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"view == gitlens.views.searchAndCompare && !config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.searchAndCompare.regroup","when":"view == gitlens.views.searchAndCompare","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"view == gitlens.views.searchAndCompare","group":"9_gitlens@1"},{"command":"gitlens.stashSave","when":"view == gitlens.views.stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.stashApply","when":"view == gitlens.views.stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@11"},{"command":"gitlens.views.stashes.refresh","when":"view == gitlens.views.stashes","group":"navigation@98"},{"command":"gitlens.views.stashes.regroup","when":"view == gitlens.views.stashes","group":"navigation@99"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.regroup","when":"view == gitlens.views.stashes","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!stashes-view","when":"view == gitlens.views.stashes","group":"9_gitlens@1"},{"command":"gitlens.views.title.createTag","when":"view == gitlens.views.tags && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.views.tags.setLayoutToList","when":"view == gitlens.views.tags && config.gitlens.views.tags.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.tags.setLayoutToTree","when":"view == gitlens.views.tags && config.gitlens.views.tags.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.tags.refresh","when":"view == gitlens.views.tags","group":"navigation@98"},{"command":"gitlens.views.tags.regroup","when":"view == gitlens.views.tags","group":"navigation@99"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"view == gitlens.views.tags && config.gitlens.views.tags.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"view == gitlens.views.tags && config.gitlens.views.tags.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"view == gitlens.views.tags && config.gitlens.views.tags.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"view == gitlens.views.tags && config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"view == gitlens.views.tags && !config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.tags && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.tags && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.tags.regroup","when":"view == gitlens.views.tags","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!tags-view","when":"view == gitlens.views.tags","group":"9_gitlens@1"},{"command":"gitlens.views.timeline.refresh","when":"view == gitlens.views.timeline","group":"navigation@99"},{"command":"gitlens.views.workspaces.create","when":"view == gitlens.views.workspaces && gitlens:plus","group":"navigation@1"},{"command":"gitlens.views.workspaces.refresh","when":"view == gitlens.views.workspaces","group":"navigation@99"},{"command":"gitlens.views.workspaces.info","when":"view == gitlens.views.workspaces","group":"8_info@1"},{"command":"gitlens.views.title.createWorktree","when":"view == gitlens.views.worktrees","group":"navigation@10"},{"command":"gitlens.views.worktrees.setLayoutToList","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.worktrees.setLayoutToTree","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.worktrees.refresh","when":"view == gitlens.views.worktrees","group":"navigation@98"},{"command":"gitlens.views.worktrees.regroup","when":"view == gitlens.views.worktrees","group":"navigation@99"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.worktrees && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.worktrees.regroup","when":"view == gitlens.views.worktrees","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"view == gitlens.views.worktrees","group":"9_gitlens@1"}],"webview/context":[{"command":"gitlens.graph.openWorktree","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)/ && !gitlens:hasVirtualFolders","group":"1_gitlens_action@1"},{"command":"gitlens.graph.switchToAnotherBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(current|checkedout)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.graph.switchToBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.graph.openWorktreeInNewWindow","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)/ && !gitlens:hasVirtualFolders","group":"1_gitlens_action@2"},{"command":"gitlens.graph.openInWorktree","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders","group":"1_gitlens_action@3"},{"command":"gitlens.graph.publishBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.pull","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(behind|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.push","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.fetch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.mergeBranchInto","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.graph.rebaseOntoBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.graph.rebaseOntoUpstream","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.graph.resetToTip","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.graph.associateIssueWithBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@1"},{"command":"gitlens.graph.renameBranch","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@2"},{"command":"gitlens.graph.deleteBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@3"},{"command":"gitlens.graph.createBranch","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@1"},{"command":"gitlens.graph.createTag","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@2"},{"command":"gitlens.graph.createWorktree","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@3"},{"command":"gitlens.graph.createPullRequest","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes","group":"1_gitlens_actions_3@4"},{"command":"gitlens.graph.ai.generateChangelogFrom","when":"webviewItem =~ /gitlens:(branch|tag)\\b/ && gitlens:gk:organization:ai:enabled && !gitlens:untrusted","group":"1_gitlens_actions_3@100"},{"command":"gitlens.graph.openBranchOnRemote","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@1"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"3_gitlens_explore@11"},{"command":"gitlens.graph.compareWithUpstream","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/ && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@1"},{"command":"gitlens.graph.compareBranchWithHead","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.graph.compareWithMergeBase","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"4_gitlens_compare@3"},{"command":"gitlens.graph.compareWithWorking","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@4"},{"command":"gitlens.graph.compareAncestryWithWorking","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@5"},{"submenu":"gitlens/share","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_a_share@1"},{"command":"gitlens.graph.copy","when":"webviewItem =~ /gitlens:(branch|commit|contributor|launchpad:item|pullrequest|stash|tag)\\b/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.graph.copySha","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.graph.copyMessage","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.graph.hideRemote","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@10"},{"command":"gitlens.graph.hideLocalBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|remote)\\b)/","group":"8_gitlens_actions@11"},{"command":"gitlens.graph.hideRemoteBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@11"},{"command":"gitlens.graph.cherryPick","when":"webviewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.undoCommit","when":"webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.revert","when":"webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.resetToCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.resetCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.graph.rebaseOntoCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.graph.switchToCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.graph.createBranch","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.graph.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.graph.createCloudPatch","when":"webviewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.graph.createTag","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@4"},{"submenu":"gitlens/graph/commit/changes","when":"webviewItem =~ /gitlens:(commit|stash|wip)\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.graph.showInDetailsView","when":"webviewItem =~ /gitlens:(commit|stash|wip)\\b/ && !listMultiSelection","group":"3_gitlens_explore@0"},{"command":"gitlens.graph.openCommitOnRemote","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.graph.compareWithHead","when":"webviewItem =~ /gitlens:(commit|stash|tag)\\b/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.copyPatchToClipboard","when":"webviewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_cutcopypaste@97"},{"command":"gitlens.graph.addAuthor","when":"webviewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"submenu":"gitlens/graph/markers","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"0_markers@0"},{"command":"gitlens.graph.columnAuthorOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:visible\\b/","group":"1_columns@1"},{"command":"gitlens.graph.columnAuthorOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:hidden\\b/","group":"1_columns@1"},{"command":"gitlens.graph.columnRefOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:visible\\b/","group":"1_columns@2"},{"command":"gitlens.graph.columnRefOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:hidden\\b/","group":"1_columns@2"},{"command":"gitlens.graph.columnChangesOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:visible\\b/","group":"1_columns@3"},{"command":"gitlens.graph.columnChangesOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:hidden\\b/","group":"1_columns@3"},{"command":"gitlens.graph.columnMessageOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:visible\\b/","group":"1_columns@4"},{"command":"gitlens.graph.columnMessageOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:hidden\\b/","group":"1_columns@4"},{"command":"gitlens.graph.columnDateTimeOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:visible\\b/","group":"1_columns@5"},{"command":"gitlens.graph.columnDateTimeOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:hidden\\b/","group":"1_columns@5"},{"command":"gitlens.graph.columnGraphOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible\\b/","group":"1_columns@6"},{"command":"gitlens.graph.columnGraphOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:hidden\\b/","group":"1_columns@6"},{"command":"gitlens.graph.columnShaOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:visible\\b/","group":"1_columns@7"},{"command":"gitlens.graph.columnShaOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:hidden\\b/","group":"1_columns@7"},{"command":"gitlens.graph.columnGraphCompact","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible(?![^,]*\\+compact\\b)/","group":"2_columns@1"},{"command":"gitlens.graph.columnGraphDefault","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible[^,]*\\+compact\\b/","group":"2_columns@1"},{"command":"gitlens.graph.resetColumnsDefault","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"3_columns@1"},{"command":"gitlens.graph.resetColumnsCompact","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"3_columns@2"},{"command":"gitlens.graph.openPullRequestChanges","when":"webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.openPullRequest","when":"webviewItem =~ /gitlens:pullrequest\\b/ && gitlens:action:openPullRequest > 1","group":"1_gitlens_actions@98"},{"command":"gitlens.graph.openPullRequestOnRemote","when":"webviewItem =~ /gitlens:pullrequest\\b/","group":"1_gitlens_actions@99"},{"command":"gitlens.graph.openPullRequestComparison","when":"webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/","group":"4_gitlens_compare@1"},{"command":"gitlens.graph.stash.apply","when":"webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.stash.rename","when":"webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.stash.delete","when":"webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.switchToTag","when":"webviewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.resetToTag","when":"webviewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.deleteTag","when":"webviewItem == gitlens:tag && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.createBranch","when":"webviewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@4"},{"command":"gitlens.graph.hideTag","when":"webviewItem =~ /gitlens:tag\\b/","group":"8_gitlens_actions@10"},{"command":"gitlens.graph.push","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.pull","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.fetch","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.commitViaSCM","when":"webviewItem == gitlens:wip && !listMultiSelection","group":"1_gitlens@1"},{"command":"gitlens.graph.ai.generateCommitMessage","when":"webviewItem == gitlens:wip && config.gitlens.ai.generateCommitMessage.enabled && !listMultiSelection && gitlens:gk:organization:ai:enabled && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens@2"},{"command":"gitlens.graph.stash.save","when":"webviewItem == gitlens:wip && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","when":"webviewItem == gitlens:wip && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.hideRefGroup","when":"webviewItemGroup =~ /gitlens:refGroup\\b(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@12"},{"command":"gitlens.graph.cherryPick.multi","when":"webviewItems =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.openCommitOnRemote.multi","when":"webviewItems =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.graph.compareSelectedCommits.multi","when":"webviewItems =~ /gitlens:commit\\b/ && listDoubleSelection","group":"4_gitlens_compare@2"}]},"submenus":[{"id":"gitlens/commit/browse","label":"Browse"},{"id":"gitlens/commit/changes","label":"Open Changes"},{"id":"gitlens/commit/copy","label":"Copy As"},{"id":"gitlens/commit/file/changes","label":"Open Changes with"},{"id":"gitlens/commit/file/commit","label":"Commit"},{"id":"gitlens/commit/file/history","label":"File History"},{"id":"gitlens/comparison/results/files/filter","label":"Filter Files","icon":"$(filter)"},{"id":"gitlens/comparison/results/files/filter/inline","label":"Filter Files","icon":"$(filter)"},{"id":"gitlens/comparison/results/files/filtered","label":"Filter Files","icon":"$(filter-filled)"},{"id":"gitlens/comparison/results/files/filtered/inline","label":"Filter Files","icon":"$(filter-filled)"},{"id":"gitlens/editor/annotations","label":"File Annotations","icon":"$(gitlens-gitlens)"},{"id":"gitlens/editor/changes","label":"Open Changes"},{"id":"gitlens/editor/context/changes","label":"Open Changes"},{"id":"gitlens/editor/context/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/editor/history","label":"File History"},{"id":"gitlens/editor/lineNumber/context/changes","label":"Open Changes"},{"id":"gitlens/editor/lineNumber/context/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/editor/lineNumber/context/share","label":"Share"},{"id":"gitlens/editor/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/explorer/changes","label":"Open Changes"},{"id":"gitlens/explorer/file/history","label":"File History"},{"id":"gitlens/explorer/folder/history","label":"Folder History"},{"id":"gitlens/explorer/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/graph/commit/changes","label":"Open Changes"},{"id":"gitlens/graph/configuration","label":"Commit Graph Settings","icon":"$(gear)"},{"id":"gitlens/graph/markers","label":"Scroll Markers"},{"id":"gitlens/scm/resourceFolder/changes","label":"Open Changes with"},{"id":"gitlens/scm/resourceFolder/history","label":"Folder History"},{"id":"gitlens/scm/resourceGroup/changes","label":"Open Changes"},{"id":"gitlens/scm/resourceState/changes","label":"Open Changes with"},{"id":"gitlens/scm/resourceState/history","label":"File History"},{"id":"gitlens/scm/resourceState/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/share","label":"Share"},{"id":"gitlens/view/repositories/sections","label":"Sections"},{"id":"gitlens/view/searchAndCompare/new","label":"New Search or Compare","icon":"$(add)"},{"id":"gitlens/views/grouped/branches","label":"Branches","icon":"$(gitlens-branches-view-filled)"},{"id":"gitlens/views/grouped/commits","label":"Commits","icon":"$(gitlens-commits-view-filled)"},{"id":"gitlens/views/grouped/contributors","label":"Contributors","icon":"$(gitlens-contributors-view-filled)"},{"id":"gitlens/views/grouped/detachOrRegroup","label":"Detach / Regroup Views"},{"id":"gitlens/views/grouped/launchpad","label":"Launchpad","icon":"$(gitlens-launchpad-view-filled)"},{"id":"gitlens/views/grouped/more","label":"View Options","icon":"$(ellipsis)"},{"id":"gitlens/views/grouped/remotes","label":"Remotes","icon":"$(gitlens-remotes-view-filled)"},{"id":"gitlens/views/grouped/repositories","label":"Repositories","icon":"$(gitlens-repositories-view-filled)"},{"id":"gitlens/views/grouped/searchAndCompare","label":"Search & Compare","icon":"$(gitlens-search-view-filled)"},{"id":"gitlens/views/grouped/stashes","label":"Stashes","icon":"$(gitlens-stashes-view-filled)"},{"id":"gitlens/views/grouped/tags","label":"Tags","icon":"$(gitlens-tags-view-filled)"},{"id":"gitlens/views/grouped/visibility","label":"Show / Hide Views"},{"id":"gitlens/views/grouped/worktrees","label":"Worktrees","icon":"$(gitlens-worktrees-view-filled)"}],"keybindings":[{"command":"gitlens.key.alt+,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key.alt+.","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.alt+enter","key":"alt+enter","when":"gitlens:key:alt+enter"},{"command":"gitlens.key.alt+left","key":"alt+left","when":"gitlens:key:alt+left"},{"command":"gitlens.key.alt+right","key":"alt+right","when":"gitlens:key:alt+right"},{"command":"gitlens.key.ctrl+enter","key":"ctrl+enter","when":"gitlens:key:ctrl+enter"},{"command":"gitlens.key.ctrl+left","key":"ctrl+left","when":"gitlens:key:ctrl+left","mac":"cmd+left"},{"command":"gitlens.key.ctrl+right","key":"ctrl+right","when":"gitlens:key:ctrl+right","mac":"cmd+right"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"ctrl+shift+g"},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !quickFixWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !referenceSearchVisible && !codeActionMenuVisible && !parameterHintsVisible && !isInEmbeddedEditor"},{"command":"gitlens.key.left","key":"left","when":"gitlens:key:left"},{"command":"gitlens.key.right","key":"right","when":"gitlens:key:right"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked","mac":"cmd+alt+g shift+,"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor","mac":"cmd+alt+g ."},{"command":"gitlens.diffWithNextInDiffLeft","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffLeft","key":"ctrl+shift+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor","mac":"cmd+alt+g ."},{"command":"gitlens.diffWithNextInDiffRight","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffRight","key":"ctrl+shift+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor","mac":"cmd+alt+g ."},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && !isInDiffEditor"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && !isInDiffEditor","mac":"cmd+alt+g ,"},{"command":"gitlens.diffWithPreviousInDiffLeft","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffLeft","key":"ctrl+shift+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor","mac":"cmd+alt+g ,"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"ctrl+shift+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffRightEditor","mac":"cmd+alt+g ,"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+.","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/","mac":"cmd+alt+g shift+."},{"command":"gitlens.diffWithWorking","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.gitCommands","key":"alt+/","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.gitCommands","key":"ctrl+shift+g /","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g /"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","when":"config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled","mac":"cmd+alt+g c"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g h"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g shift+h"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g s"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","when":"config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens","mac":"cmd+alt+g shift+b"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:blameable"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:blameable","mac":"cmd+alt+g b"},{"command":"gitlens.views.branches.copy","key":"ctrl+c","when":"focusedView == gitlens.views.branches","mac":"cmd+c"},{"command":"gitlens.views.commits.copy","key":"ctrl+c","when":"focusedView == gitlens.views.commits","mac":"cmd+c"},{"command":"gitlens.views.contributors.copy","key":"ctrl+c","when":"focusedView == gitlens.views.contributors","mac":"cmd+c"},{"command":"gitlens.views.drafts.copy","key":"ctrl+c","when":"focusedView == gitlens.views.drafts","mac":"cmd+c"},{"command":"gitlens.views.fileHistory.copy","key":"ctrl+c","when":"focusedView == gitlens.views.fileHistory","mac":"cmd+c"},{"command":"gitlens.views.lineHistory.copy","key":"ctrl+c","when":"focusedView == gitlens.views.lineHistory","mac":"cmd+c"},{"command":"gitlens.views.pullRequest.copy","key":"ctrl+c","when":"focusedView == gitlens.views.pullRequest","mac":"cmd+c"},{"command":"gitlens.views.remotes.copy","key":"ctrl+c","when":"focusedView == gitlens.views.remotes","mac":"cmd+c"},{"command":"gitlens.views.repositories.copy","key":"ctrl+c","when":"focusedView == gitlens.views.repositories","mac":"cmd+c"},{"command":"gitlens.views.scm.grouped.branches","key":"2","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches"},{"command":"gitlens.views.scm.grouped.commits","key":"1","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits"},{"command":"gitlens.views.scm.grouped.contributors","key":"7","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors"},{"command":"gitlens.views.scm.grouped.launchpad","key":"0","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad"},{"command":"gitlens.views.scm.grouped.remotes","key":"3","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes"},{"command":"gitlens.views.scm.grouped.repositories","key":"8","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories"},{"command":"gitlens.views.scm.grouped.searchAndCompare","key":"9","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare"},{"command":"gitlens.views.scm.grouped.stashes","key":"4","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes"},{"command":"gitlens.views.scm.grouped.tags","key":"5","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags"},{"command":"gitlens.views.scm.grouped.worktrees","key":"6","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees"},{"command":"gitlens.views.searchAndCompare.copy","key":"ctrl+c","when":"focusedView == gitlens.views.searchAndCompare","mac":"cmd+c"},{"command":"gitlens.views.stashes.copy","key":"ctrl+c","when":"focusedView == gitlens.views.stashes","mac":"cmd+c"},{"command":"gitlens.views.tags.copy","key":"ctrl+c","when":"focusedView == gitlens.views.tags","mac":"cmd+c"},{"command":"gitlens.views.workspaces.copy","key":"ctrl+c","when":"focusedView == gitlens.views.workspaces","mac":"cmd+c"},{"command":"gitlens.views.worktrees.copy","key":"ctrl+c","when":"focusedView == gitlens.views.worktrees","mac":"cmd+c"}],"customEditors":[{"viewType":"gitlens.rebase","displayName":"GitLens Interactive Rebase Editor","selector":[{"filenamePattern":"git-rebase-todo"}]}],"resourceLabelFormatters":[{"scheme":"gitlens","authority":"*","formatting":{"label":"${path} (${query.ref})","normalizeDriveLetter":true,"tildify":true,"workspaceSuffix":"GitLens"}}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"$(gitlens-gitlens)"},{"id":"gitlensInspect","title":"GitLens Inspect","icon":"$(gitlens-gitlens-inspect)"},{"id":"gitlensPatch","title":"GitLens Patch","icon":"$(gitlens-cloud-patch)"}],"panel":[{"id":"gitlensPanel","title":"GitLens","icon":"$(gitlens-graph)"}]},"viewsWelcome":[{"view":"gitlens.views.drafts","contents":"Cloud Patches ᴘʀᴇᴠɪᴇᴡ — privately and securely share code with specific teammates and other developers, accessible from anywhere. Enhance collaboration without adding noise to your repositories."},{"view":"gitlens.views.drafts","contents":"[Create Cloud Patch](command:gitlens.views.drafts.create)","when":"gitlens:plus"},{"view":"gitlens.views.drafts","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22cloud-patches%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22cloud-patches%22%7D).","when":"!gitlens:plus"},{"view":"gitlens.views.drafts","contents":"An account is required and may require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/) in the future.","when":"gitlens:plus:state != 6"},{"view":"gitlens.views.launchpad","contents":"[Launchpad](command:gitlens.views.launchpad.info \"Learn about Launchpad\") — organizes your pull requests into actionable groups to help you focus and keep your team unblocked."},{"view":"gitlens.views.launchpad","contents":"[Connect an Integration...](command:gitlens.showLaunchpad?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nAllows Launchpad to organize your pull requests into actionable groups and keep your team unblocked.","when":"!gitlens:launchpad:connected"},{"view":"gitlens.views.launchpad","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"gitlens:launchpad:connected && gitlens:plus:state == -1"},{"view":"gitlens.views.launchpad","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nContinuing gives you 3 days to preview Launchpad and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D) for full access to Pro features.","when":"false && gitlens:launchpad:connected && gitlens:plus:state == 0"},{"view":"gitlens.views.launchpad","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"gitlens:launchpad:connected && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.launchpad","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22launchpad-view%22%7D)","when":"gitlens:launchpad:connected && gitlens:plus:state == 4"},{"view":"gitlens.views.launchpad","contents":"Limited-time sale on GitLens Pro.","when":"gitlens:launchpad:connected && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"},{"view":"gitlens.views.launchpad","contents":"Save 50% on GitLens Pro.","when":"gitlens:launchpad:connected && gitlens:plus:state == 4 && gitlens:promo == pro50"},{"view":"gitlens.views.launchpad","contents":"Your Pro trial has ended. Please upgrade for full access to Launchpad and other Pro features.","when":"gitlens:launchpad:connected && gitlens:plus:state == 4"},{"view":"gitlens.views.launchpad","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nReactivate your Pro trial and experience Launchpad and all the new Pro features — free for another 14 days!","when":"gitlens:launchpad:connected && gitlens:plus:state == 5"},{"view":"gitlens.views.scm.grouped","contents":"GitLens groups many related views—Commits, Branches, Stashes, etc—here for easier view management.\n\n[Continue](command:gitlens.views.scm.grouped.welcome.dismiss)\n\nUse the tabs above to navigate, or detach the views you want to keep separated. You can regroup them anytime using the 'x' in the view header.","when":"gitlens:views:scm:grouped:welcome && gitlens:install:new"},{"view":"gitlens.views.scm.grouped","contents":"In GitLens 16, we've grouped many related views—Commits, Branches, Stashes, etc—here for easier view management.\n\n[Continue](command:gitlens.views.scm.grouped.welcome.dismiss)\n\nPrefer them separate? [Restore views to previous locations](command:gitlens.views.scm.grouped.welcome.restore)\n\nUse the tabs above to navigate, or detach the views you want to keep separated. You can regroup them anytime using the 'x' in the view header.","when":"gitlens:views:scm:grouped:welcome && !gitlens:install:new"},{"view":"gitlens.views.scm.grouped","contents":"[Launchpad](command:gitlens.views.launchpad.info \"Learn about Launchpad\") — organizes your pull requests into actionable groups to help you focus and keep your team unblocked.","when":"gitlens:views:scm:grouped:view == launchpad"},{"view":"gitlens.views.scm.grouped","contents":"[Connect an Integration...](command:gitlens.showLaunchpad?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nAllows Launchpad to organize your pull requests into actionable groups and keep your team unblocked.","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connected"},{"view":"gitlens.views.scm.grouped","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == -1"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nContinuing gives you 3 days to preview Launchpad and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D) for full access to Pro features.","when":"gitlens:views:scm:grouped:view == launchpad && false && gitlens:launchpad:connected && gitlens:plus:state == 0"},{"view":"gitlens.views.scm.grouped","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.scm.grouped","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22launchpad-view%22%7D)","when":"gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"Limited-time sale on GitLens Pro.","when":"gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"},{"view":"gitlens.views.scm.grouped","contents":"Save 50% on GitLens Pro.","when":"gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 4 && gitlens:promo == pro50"},{"view":"gitlens.views.scm.grouped","contents":"Your Pro trial has ended. Please upgrade for full access to Launchpad and other Pro features.","when":"gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nReactivate your Pro trial and experience Launchpad and all the new Pro features — free for another 14 days!","when":"gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 5"},{"view":"gitlens.views.scm.grouped","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [file](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [changes](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:views:scm:grouped:view == searchAndCompare && !gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:views:scm:grouped:view == searchAndCompare && gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"Compare a <branch, tag, or ref> with another <branch, tag, or ref>\n\n[Compare References...](command:gitlens.views.searchAndCompare.selectForCompare)","when":"gitlens:views:scm:grouped:view == searchAndCompare && !gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"[Worktrees](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view-pro) ᴾᴿᴼ — minimize context switching by allowing you to work on multiple branches simultaneously.","when":"gitlens:views:scm:grouped:view == worktrees && !gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"[Create Worktree...](command:gitlens.views.createWorktree)","when":"gitlens:views:scm:grouped:view == worktrees && !gitlens:plus:required"},{"view":"gitlens.views.scm.grouped","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:state == -1"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nContinuing gives you 3 days to preview Worktrees and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D) for full access to Pro features.","when":"false && gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.scm.grouped","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.scm.grouped","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"Limited-time sale on GitLens Pro.","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"},{"view":"gitlens.views.scm.grouped","contents":"Save 50% on GitLens Pro.","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == pro50"},{"view":"gitlens.views.scm.grouped","contents":"Your Pro trial has ended. Please upgrade for full access to Worktrees and other Pro features.","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nReactivate your Pro trial and experience Worktrees and all the new Pro features — free for another 14 days!","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.scm.grouped","contents":"Use on privately-hosted repos require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/).","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:state != 6"},{"view":"gitlens.views.searchAndCompare","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [file](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [changes](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"!gitlens:hasVirtualFolders"},{"view":"gitlens.views.searchAndCompare","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:hasVirtualFolders"},{"view":"gitlens.views.searchAndCompare","contents":"Compare a <branch, tag, or ref> with another <branch, tag, or ref>\n\n[Compare References...](command:gitlens.views.searchAndCompare.selectForCompare)","when":"!gitlens:hasVirtualFolders"},{"view":"gitlens.views.workspaces","contents":"Workspaces ᴘʀᴇᴠɪᴇᴡ — group and manage multiple repositories together, accessible from anywhere, streamlining your workflow.\n\nCreate workspaces just for yourself or share (coming soon in GitLens) them with your team for faster onboarding and better collaboration."},{"view":"gitlens.views.workspaces","contents":"[Create Cloud Workspace](command:gitlens.views.workspaces.create)","when":"gitlens:plus"},{"view":"gitlens.views.workspaces","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22workspaces%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22workspaces%22%7D).","when":"!gitlens:plus"},{"view":"gitlens.views.workspaces","contents":"An account is required and may require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/) in the future.","when":"gitlens:plus:state != 6"},{"view":"gitlens.views.worktrees","contents":"[Worktrees](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view-pro) ᴾᴿᴼ — minimize context switching by working on multiple branches simultaneously."},{"view":"gitlens.views.worktrees","contents":"[Create Worktree...](command:gitlens.views.createWorktree)","when":"!gitlens:plus:required"},{"view":"gitlens.views.worktrees","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:plus:state == -1"},{"view":"gitlens.views.worktrees","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nContinuing gives you 3 days to preview Worktrees and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D) for full access to Pro features.","when":"false && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.worktrees","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.worktrees","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)","when":"gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.worktrees","contents":"Limited-time sale on GitLens Pro.","when":"gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"},{"view":"gitlens.views.worktrees","contents":"Save 50% on GitLens Pro.","when":"gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == pro50"},{"view":"gitlens.views.worktrees","contents":"Your Pro trial has ended. Please upgrade for full access to Worktrees and other Pro features.","when":"gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.worktrees","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nReactivate your Pro trial and experience Worktrees and all the new Pro features — free for another 14 days!","when":"gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.worktrees","contents":"Use on privately-hosted repos require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/).","when":"gitlens:plus:state != 6"}],"views":{"scm":[{"id":"gitlens.views.repositories","name":"Repositories","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.repositories || gitlens:views:scm:grouped:views:repositories)","contextualTitle":"GitLens","icon":"$(gitlens-repositories-view)","visibility":"hidden"},{"id":"gitlens.views.commits","name":"Commits","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.commits || gitlens:views:scm:grouped:views:commits)","contextualTitle":"GitLens","icon":"$(gitlens-commits-view)","visibility":"visible"},{"id":"gitlens.views.branches","name":"Branches","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.branches || gitlens:views:scm:grouped:views:branches)","contextualTitle":"GitLens","icon":"$(gitlens-branches-view)","visibility":"collapsed"},{"id":"gitlens.views.remotes","name":"Remotes","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.remotes || gitlens:views:scm:grouped:views:remotes)","contextualTitle":"GitLens","icon":"$(gitlens-remotes-view)","visibility":"collapsed"},{"id":"gitlens.views.stashes","name":"Stashes","when":"!gitlens:disabled && !gitlens:hasVirtualFolders && !(config.gitlens.views.scm.grouped.views.stashes || gitlens:views:scm:grouped:views:stashes)","contextualTitle":"GitLens","icon":"$(gitlens-stashes-view)","visibility":"collapsed"},{"id":"gitlens.views.tags","name":"Tags","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.tags || gitlens:views:scm:grouped:views:tags)","contextualTitle":"GitLens","icon":"$(gitlens-tags-view)","visibility":"collapsed"},{"id":"gitlens.views.worktrees","name":"Worktrees","when":"!gitlens:disabled && !gitlens:hasVirtualFolders && gitlens:plus:enabled && !(config.gitlens.views.scm.grouped.views.worktrees || gitlens:views:scm:grouped:views:worktrees)","contextualTitle":"GitLens","icon":"$(gitlens-worktrees-view)","visibility":"collapsed"},{"id":"gitlens.views.contributors","name":"Contributors","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.contributors || gitlens:views:scm:grouped:views:contributors)","contextualTitle":"GitLens","icon":"$(gitlens-contributors-view)","visibility":"collapsed"},{"id":"gitlens.views.scm.grouped","name":"GitLens","when":"!gitlens:disabled && ((config.gitlens.views.scm.grouped.views.branches || gitlens:views:scm:grouped:views:branches) || (config.gitlens.views.scm.grouped.views.commits || gitlens:views:scm:grouped:views:commits) || (config.gitlens.views.scm.grouped.views.contributors || gitlens:views:scm:grouped:views:contributors) || (config.gitlens.views.scm.grouped.views.launchpad || gitlens:views:scm:grouped:views:launchpad) || (config.gitlens.views.scm.grouped.views.remotes || gitlens:views:scm:grouped:views:remotes) || (config.gitlens.views.scm.grouped.views.repositories || gitlens:views:scm:grouped:views:repositories) || (config.gitlens.views.scm.grouped.views.searchAndCompare || gitlens:views:scm:grouped:views:searchAndCompare) || (config.gitlens.views.scm.grouped.views.stashes || gitlens:views:scm:grouped:views:stashes) || (config.gitlens.views.scm.grouped.views.tags || gitlens:views:scm:grouped:views:tags) || (config.gitlens.views.scm.grouped.views.worktrees || gitlens:views:scm:grouped:views:worktrees))","contextualTitle":"GitLens","icon":"$(gitlens-gitlens)","visibility":"visible"}],"gitlensInspect":[{"type":"webview","id":"gitlens.views.commitDetails","name":"Inspect","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-commit-view)","initialSize":6,"visibility":"visible"},{"id":"gitlens.views.pullRequest","name":"Pull Request","when":"!gitlens:disabled && gitlens:views:pullRequest:visible","contextualTitle":"GitLens","icon":"$(git-pull-request)","initialSize":1,"visibility":"visible"},{"id":"gitlens.views.lineHistory","name":"Line History","when":"!gitlens:disabled && !gitlens:hasVirtualFolders","contextualTitle":"GitLens","icon":"$(gitlens-history-view)","initialSize":1,"visibility":"collapsed"},{"id":"gitlens.views.fileHistory","name":"File History","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-history-view)","initialSize":2,"visibility":"visible"},{"type":"webview","id":"gitlens.views.timeline","name":"Visual File History","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(graph-scatter)","initialSize":1,"visibility":"visible"},{"id":"gitlens.views.searchAndCompare","name":"Search & Compare","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.searchAndCompare || gitlens:views:scm:grouped:views:searchAndCompare)","contextualTitle":"GitLens","icon":"$(gitlens-search-view)","initialSize":2,"visibility":"visible"}],"gitlens":[{"type":"webview","id":"gitlens.views.home","name":"Home","contextualTitle":"GitLens","icon":"$(gitlens-gitlens)","initialSize":6,"visibility":"visible"},{"id":"gitlens.views.launchpad","name":"Launchpad","when":"!(config.gitlens.views.scm.grouped.views.launchpad || gitlens:views:scm:grouped:views:launchpad)","contextualTitle":"GitLens","icon":"$(gitlens-launchpad-view)","initialSize":2,"visibility":"collapsed"},{"id":"gitlens.views.drafts","name":"Cloud Patches","when":"!gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled","contextualTitle":"GitLens","icon":"$(gitlens-cloud-patch)","initialSize":2,"visibility":"collapsed"},{"id":"gitlens.views.workspaces","name":"Cloud Workspaces","when":"!gitlens:untrusted && !gitlens:hasVirtualFolders","contextualTitle":"GitLens","icon":"$(gitlens-workspaces-view)","initialSize":2,"visibility":"collapsed"}],"gitlensPanel":[{"type":"webview","id":"gitlens.views.graph","name":"Graph","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(gitlens-graph)","initialSize":4,"visibility":"visible"},{"type":"webview","id":"gitlens.views.graphDetails","name":"Graph Details","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(gitlens-commit-view)","initialSize":1,"visibility":"visible"}],"gitlensPatch":[{"type":"webview","id":"gitlens.views.patchDetails","name":"Patch","when":"!gitlens:untrusted && config.gitlens.cloudPatches.enabled && gitlens:views:patchDetails:mode","contextualTitle":"GitLens","icon":"$(gitlens-cloud-patch)","initialSize":24}]},"walkthroughs":[{"id":"welcome","title":"Get Started With GitLens","description":"Supercharge Git and unlock untapped knowledge within your repo to better understand, write, and review code.","steps":[{"id":"get-started-community","title":"Welcome to GitLens","description":"Thank you for installing GitLens—the most popular Git extension for VS Code!\n\n**Community vs. Pro**\n\nYou're using **GitLens Community** edition.\nTrack code changes and see who made them with features like in-editor blame annotations, hovers, CodeLens, and more—completely free.\n\n**Leverage powerful workflows with GitLens Pro**\n\nThe **GitLens Pro** edition unlocks advanced features to accelerate PR reviews, gain actionable insights with rich code visuals, and streamline team collaboration to boost productivity.\n\n[Get Started with GitLens Pro](command:gitlens.walkthrough.plus.signUp)","media":{"markdown":"walkthroughs/welcome/get-started-community.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"!gitlens:plus:state || gitlens:plus:state <= 2"},{"id":"welcome-in-trial","title":"Welcome to GitLens Pro","description":"Thanks for starting your **GitLens Pro** trial.\n\nComplete this walkthrough to experience enhanced PR review tools, deeper code history visualizations, and streamlined collaboration to help boost your productivity.\n\n[Continue the Walkthrough](command:gitlens.walkthrough.openWalkthrough)\n\nOnce your trial ends, you'll return to **GitLens Community** — where you can still leverage features like in-editor blame annotations, hovers, CodeLens, and more. [Upgrade to GitLens Pro](command:gitlens.walkthrough.plus.upgrade) today to continue enjoying the full experience.\n\n[Upgrade to GitLens Pro](command:gitlens.walkthrough.plus.upgrade)","media":{"markdown":"walkthroughs/welcome/welcome-in-trial.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 3"},{"id":"welcome-in-trial-expired","title":"Get the most out of GitLens","description":"Thanks for installing GitLens and trying out GitLens Pro.\n\nYou're now on the **GitLens Community** edition.\nTrack code changes and see who made them with features like in-editor blame annotations, hovers, CodeLens, and more—completely free.\n\nLearn more about the [difference between GitLens Community vs. Pro](command:gitlens.walkthrough.openCommunityVsPro).\n\n**Unlock more powerful tools with GitLens Pro**\n\n[Upgrade to GitLens Pro](command:gitlens.walkthrough.plus.upgrade)\n\nWith GitLens Pro, you can accelerate PR reviews, visualize code history in-depth, and enhance collaboration across your team. It's the perfect upgrade to streamline your VS Code workflow.","media":{"markdown":"walkthroughs/welcome/welcome-in-trial-expired.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 4"},{"id":"welcome-in-trial-expired-eligible","title":"Get the most out of GitLens ","description":"Thanks for installing GitLens and trying out GitLens Pro.\n\nYou're using **GitLens Community** edition.\nTrack code changes and see who made them with features like in-editor blame annotations, hovers, CodeLens, and more—completely free.\n\n**Unlock more powerful tools — Try GitLens Pro again** free for another 14 days.\n\n[Reactivate GitLens Pro Trial](command:gitlens.walkthrough.plus.reactivate)\n\nWith GitLens Pro, you can accelerate PR reviews, visualize code history in-depth, and enhance collaboration across your team. It's the perfect upgrade to streamline your VS Code workflow.","media":{"markdown":"walkthroughs/welcome/welcome-in-trial-expired-eligible.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 5"},{"id":"welcome-paid","title":"Discover the Benefits of GitLens Pro","description":"As a **GitLens Pro** user, you have access to powerful tools that accelerate PR reviews, provide deeper code history visualizations, and streamline collaboration across your team.\n\n[Continue the Walkthrough](command:gitlens.walkthrough.openWalkthrough)\n\nTo get the most out of your **GitLens Pro** experience, complete the walkthrough and visit our Help Center for in-depth guides.\n\n**[Learn more in the Help Center](command:gitlens.walkthrough.openHelpCenter)**","media":{"markdown":"walkthroughs/welcome/welcome-paid.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 6"},{"id":"welcome-home-view","title":"(New) The Home View","description":"Compact yet powerful, the Home View helps you quickly start work on issues, create PRs, and manage branches—all from a single intelligent view.\n\nImprove workflow visibility with clear paths to take action on:\n\n- What am I actively working on now?\n- What should I work on next?\n- What have I worked on recently?\n\nThe Home View is the perfect companion for developers looking to reduce tedious context switching and stay focused on their work in VS Code.\n\n\n[Open the Home View](command:gitlens.walkthrough.showHomeView)\n$(gitlens-play-button)  [Watch a video on the Home view](command:gitlens.walkthrough.openHomeViewVideo)","media":{"markdown":"walkthroughs/welcome/home.md"},"completionEvents":["onContext:gitlens:walkthroughState:homeView == true"]},{"id":"visualize-code-history","title":"Interactive Code History","description":"$(gitlens-gitlens)  **Blame Annotations and Hovers**\n\nSee who changed what and why with in-editor blame annotations, hovers, and CodeLens.\n\n$(gitlens-graph)  **Visual Commit Graph & Search**\n\nNavigate complex Git histories with clarity using the interactive Commit Graph to visualize changes and search your repository.\n\n[View your Commit Graph](command:gitlens.walkthrough.showGraph)\n\n$(gitlens-gitlens-inspect)  **GitLens Inspect**\n\nDive deep into the revision history of files, folders, or specific lines. Get the context you need to understand changes faster. [Open GitLens Inspect](command:gitlens.walkthrough.gitlensInspect)\n\n$(gitlens-play-button)  [Watch a video about Interactive Code History](command:gitlens.walkthrough.openInteractiveCodeHistory)","media":{"markdown":"walkthroughs/welcome/visualize-code-history.md"},"completionEvents":["onContext:gitlens:walkthroughState:visualizeCodeHistory == true"]},{"id":"accelerate-pr-reviews","title":"Accelerate PR Reviews","description":"$(gitlens-launchpad-view)  **Launchpad: Your PR Hub**\n\nEasily manage GitHub pull requests by status, prioritize tasks, and spot bottlenecks—all within VS Code.\n\n[View My PRs in Launchpad](command:gitlens.walkthrough.showLaunchpad)\n\n💡 [Connect](command:gitlens.walkthrough.connectIntegrations) your GitHub or host provider to use Launchpad and accelerate PR reviews\n\n$(folder-opened)  **Worktrees: Multi-branch efficiency**\n\nWork on multiple branches simultaneously to handle hotfixes, new features, or experiments—without disrupting your main workspace.\n\n\n[Add a worktree](command:gitlens.walkthrough.worktree.create)\n$(gitlens-play-button)  [Watch how to accelerate code reviews](command:gitlens.walkthrough.openAcceleratePrReviews)","media":{"markdown":"walkthroughs/welcome/accelerate-pr-reviews.md"},"completionEvents":["onContext:gitlens:walkthroughState:prReviews == true"]},{"id":"streamline-collaboration","title":"Streamline Collaboration","description":"$(gitlens-cloud-patch)  **Cloud Patches: Collaborate before PRs**\n\nShare and iterate on code without committing to the repo or affecting CI. Keep your team moving forward with accessible, flexible Cloud Patches.\n\n[Open Cloud Patches](command:gitlens.walkthrough.showDraftsView)\n\n$(gitlens-code-suggestion)  **Code Suggest**\n\nReview GitHub and GitLab pull requests and send suggested changes to teammates directly from GitLens.\n\n$(gitlens-play-button)  [Watch how to enhance collaboration in GitLens](command:gitlens.walkthrough.openStreamlineCollaboration)","media":{"markdown":"walkthroughs/welcome/streamline-collaboration.md"},"completionEvents":["onContext:gitlens:walkthroughState:streamlineCollaboration == true"]},{"id":"improve-workflows-with-integrations","title":"Improve Workflows With Integrations","description":"$(extensions)  **Integrations**\n\nConnect to GitHub, GitLab, and Jira to associate PRs and issues to branches and commits in GitLens. Track and take action on PRs from Launchpad, quickly start work on issues, and get enhanced information in autolinks.\n\n[Connect Integrations](command:gitlens.walkthrough.connectIntegrations)\n\n$(link)  **Autolinks**\n\nGitLens automatically detects patterns in commit messages to generate links for pull requests and issues across services like GitHub, GitLab, Gitea, Gerrit, Google Source, Bitbucket, Azure DevOps, and custom servers.\n\n[Configure autolinks](command:gitlens.walkthrough.showAutolinks) for custom pattern-matching with other services.\n\n$(gitlens-play-button)  [Watch how integrations improve GitLens](command:gitlens.walkthrough.openStartIntegrations)","media":{"markdown":"walkthroughs/welcome/improve-workflows-with-integrations.md"},"completionEvents":["onContext:gitlens:walkthroughState:integrations == true"]}]}]},"scripts":{"analyze:bundle":"webpack --mode production --env analyzeBundle","analyze:bundle:extension":"webpack --mode production --config-name extension:node --env analyzeBundle","analyze:bundle:extension:browser":"webpack --mode production --config-name extension:webworker --env analyzeBundle","analyze:bundle:webviews":"webpack --mode production --config-name webviews:common --config-name webviews --config-name webviews:graph-next --env analyzeBundle","analyze:deps":"webpack --env analyzeDeps","build":"webpack --mode development","build:quick":"webpack --mode development --env skipLint","build:extension":"webpack --mode development --config-name extension:node","build:extension:browser":"webpack --mode development --config-name extension:webworker","build:webviews":"webpack --mode development --config-name webviews:common --config-name webviews --config-name webviews:graph-next","build:icons":"pnpm run icons:svgo && pnpm fantasticon && pnpm run icons:apply && pnpm run icons:export","build:tests":"node ./scripts/esbuild.tests.mjs","// Extracts the contributions from package.json into contributions.json":"//","extract:contributions":"node --experimental-strip-types ./scripts/generateContributions.mts --extract","// Generates contributions in contributions.json into package.json":"//","generate:contributions":"node --experimental-strip-types ./scripts/generateContributions.mts","// Generates command types from contributions.json into src/constants.commands.generated.ts":"//","generate:commandTypes":"node --experimental-strip-types ./scripts/generateCommandTypes.mts","// Generates docs/telemetry-events.md":"//","generate:docs:telemetry":"node ./scripts/generateTelemetryDocs.mjs","generate:emoji":"node ./scripts/generateEmojiShortcodeMap.mjs","// Generates ThirdPartyNotices.txt":"//","generate:licenses":"node ./scripts/generateLicenses.mjs","bundle":"webpack --mode production","bundle:extension":"webpack --mode production --config-name extension:node","clean":"pnpx rimraf --glob dist out .vscode-test .vscode-test-web .eslintcache* tsconfig*.tsbuildinfo","clean:all":"pnpm run clean && pnpm run clean:deps","clean:lint":"pnpx rimraf .eslintcache","clean:deps":"pnpx rimraf node_modules","copy:images":"webpack --config webpack.config.images.mjs","graph:link":"pnpm link @gitkraken/gitkraken-components","graph:link:main":"pushd \"../GitKrakenComponents\" && pnpm link && popd && pnpm graph:link","graph:unlink":"pnpm unlink @gitkraken/gitkraken-components && pnpm install --force","graph:unlink:main":"pnpm graph:unlink && pushd \"../GitKrakenComponents\" && pnpm unlink && popd","icons:apply":"node ./scripts/applyIconsContribution.mjs","icons:export":"node ./scripts/export-codicons.mjs","icons:svgo":"svgo -q -f ./images/icons/ --config svgo.config.js","lint":"pnpm run clean:lint && eslint .","lint:fix":"pnpm run clean:lint && eslint . --fix","lint:webviews":"pnpm run clean:lint && eslint \"src/webviews/apps/**/*.ts?(x)\"","package":"vsce package --no-dependencies","package-pre":"pnpm run patch-pre && pnpm run package --pre-release","patch-pre":"node ./scripts/applyPreReleasePatch.mjs","prep-release":"node ./scripts/prep-release.mjs","pretty":"prettier --config .prettierrc --write .","pretty:check":"prettier --config .prettierrc --check .","pub":"vsce publish --no-dependencies","pub-pre":"vsce publish --no-dependencies --pre-release","rebuild":"pnpm run reset && pnpm run build","reset":"pnpm run clean && pnpm install --force","test":"vscode-test","test:e2e":"playwright test -c tests/e2e/playwright.config.ts","watch":"webpack --watch --mode development","watch:extension":"webpack --watch --mode development --config-name extension","watch:quick":"webpack --watch --mode development --env skipLint","watch:webviews":"webpack --watch --mode development --config-name webviews","watch:tests":"node ./scripts/esbuild.tests.mjs --watch --mode development","web":"vscode-test-web --extensionDevelopmentPath=. --folder-uri=vscode-vfs://github/gitkraken/vscode-gitlens","web:serve":"node -e \"const p = require('path'); const h = require('os').homedir(); require('child_process').execSync('pnpx  serve --cors -l 5000 --ssl-cert '+p.resolve(h, 'certs/localhost.pem')+' --ssl-key '+p.resolve(h, 'certs/localhost-key.pem'), { stdio: 'inherit' })\"","update-dts":"pushd \"src/@types\" && pnpx  @vscode/dts dev && popd","update-dts:main":"pushd \"src/@types\" && pnpx  @vscode/dts main && popd","pretest":"pnpm run build:tests","vscode:prepublish":"pnpm run bundle"},"dependencies":{"@gitkraken/gitkraken-components":"10.7.0","@gitkraken/gitkraken-components-next":"npm:@gitkraken/gitkraken-components@11.0.0-vnext.3","@gitkraken/provider-apis":"0.28.3","@gitkraken/shared-web-components":"0.1.1-rc.15","@gk-nzaytsev/fast-string-truncated-width":"1.1.0","@lit-labs/signals":"0.1.2","@lit/context":"1.1.4","@lit/react":"1.0.7","@lit/task":"1.0.2","@octokit/graphql":"8.2.1","@octokit/request":"9.2.2","@octokit/request-error":"6.1.7","@octokit/types":"13.10.0","@opentelemetry/api":"1.9.0","@opentelemetry/exporter-trace-otlp-http":"0.200.0","@opentelemetry/resources":"2.0.0","@opentelemetry/sdk-trace-base":"2.0.0","@opentelemetry/semantic-conventions":"1.30.0","@r2wc/react-to-web-component":"2.0.4","@shoelace-style/shoelace":"2.20.0","@vscode/codicons":"0.0.36","billboard.js":"3.15.0","https-proxy-agent":"5.0.1","iconv-lite":"0.6.3","lit":"3.2.1","marked":"15.0.7","node-fetch":"2.7.0","os-browserify":"0.3.0","path-browserify":"1.0.1","react":"16.8.4","react-dom":"16.8.4","react-next":"npm:react@19.0.0","react-dom-next":"npm:react-dom@19.0.0","signal-utils":"0.21.1","slug":"10.0.0","sortablejs":"1.15.0"},"devDependencies":{"@eamodio/eslint-lite-webpack-plugin":"0.2.0","@eslint/js":"9.23.0","@playwright/test":"1.51.1","@swc/core":"1.11.13","@twbs/fantasticon":"3.1.0","@types/mocha":"10.0.10","@types/node":"20.14.15","@types/react":"17.0.84","@types/react-next":"npm:@types/react@19.0.12","@types/react-dom":"17.0.26","@types/react-dom-next":"npm:@types/react-dom@19.0.4","@types/sinon":"17.0.4","@types/slug":"5.0.9","@types/sortablejs":"1.15.8","@types/vscode":"1.92.0","@typescript-eslint/parser":"8.28.0","@vscode/test-cli":"0.0.10","@vscode/test-electron":"2.4.1","@vscode/test-web":"0.0.67","@vscode/vsce":"3.3.0","cheerio":"1.0.0-rc.12","circular-dependency-plugin":"5.2.2","clean-webpack-plugin":"4.0.0","copy-webpack-plugin":"13.0.0","csp-html-webpack-plugin":"5.1.0","css-loader":"7.1.2","css-minimizer-webpack-plugin":"7.0.2","cssnano-preset-advanced":"7.0.6","esbuild":"0.25.1","esbuild-loader":"4.3.0","esbuild-node-externals":"1.18.0","esbuild-sass-plugin":"3.3.1","eslint":"9.23.0","eslint-import-resolver-oxc":"0.13.1","eslint-plugin-anti-trojan-source":"1.1.1","eslint-plugin-import-x":"4.9.1","eslint-plugin-lit":"2.0.0","eslint-plugin-wc":"3.0.0","fork-ts-checker-webpack-plugin":"9.0.2","glob":"11.0.1","globals":"16.0.0","html-loader":"5.1.0","html-webpack-plugin":"5.6.3","image-minimizer-webpack-plugin":"4.1.3","license-checker-rseidelsohn":"4.4.2","lz-string":"1.5.0","mini-css-extract-plugin":"2.9.2","ovsx":"0.10.1","playwright":"1.51.1","prettier":"3.1.0","regex-to-strings":"2.1.0","sass":"1.86.0","sass-loader":"16.0.5","schema-utils":"4.3.0","sharp":"0.33.5","sinon":"19.0.4","svgo":"3.3.2","terser-webpack-plugin":"5.3.14","ts-loader":"9.5.2","typescript":"5.8.2","typescript-eslint":"8.28.0","webpack":"5.98.0","webpack-bundle-analyzer":"4.10.2","webpack-cli":"6.0.1","webpack-node-externals":"3.0.0","webpack-require-from":"1.8.6"},"resolutions":{"esbuild":"0.25.1","iconv-lite":"0.6.3","node-fetch":"2.7.0","semver-regex":"4.0.5"},"packageManager":"pnpm@10.6.5"},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/eamodio.gitlens-17.0.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitKraken","metadata":{"installedTimestamp":1745949944387,"source":"gallery","id":"4de763bd-505d-4978-9575-2b7696ecf94e","publisherId":"678d198b-9b2e-49d3-96ff-6d801c9575df","publisherDisplayName":"GitKraken","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":17348464},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"mhutchie.git-graph","uuid":"438221f8-1107-4ccd-a6fe-f3b7fe0856b7"},"manifest":{"name":"git-graph","displayName":"Git Graph","version":"1.30.0","publisher":"mhutchie","author":{"name":"Michael Hutchison","email":"mhutchie@16right.com"},"description":"View a Git Graph of your repository, and perform Git actions from the graph.","keywords":["git","graph","visualise","diff","action"],"categories":["Other"],"homepage":"https://github.com/mhutchie/vscode-git-graph","repository":{"type":"git","url":"https://github.com/mhutchie/vscode-git-graph.git"},"bugs":{"url":"https://github.com/mhutchie/vscode-git-graph/issues"},"qna":"https://github.com/mhutchie/vscode-git-graph/wiki/Support-Resources","license":"SEE LICENSE IN 'LICENSE'","icon":"resources/icon.png","engines":{"vscode":"^1.38.0"},"extensionKind":["workspace"],"activationEvents":["*"],"main":"./out/extension.js","contributes":{"commands":[{"category":"Git Graph","command":"git-graph.view","title":"View Git Graph (git log)","icon":{"light":"resources/cmd-icon-light.svg","dark":"resources/cmd-icon-dark.svg"}},{"category":"Git Graph","command":"git-graph.addGitRepository","title":"Add Git Repository..."},{"category":"Git Graph","command":"git-graph.clearAvatarCache","title":"Clear Avatar Cache"},{"category":"Git Graph","command":"git-graph.endAllWorkspaceCodeReviews","title":"End All Code Reviews in Workspace"},{"category":"Git Graph","command":"git-graph.endSpecificWorkspaceCodeReview","title":"End a specific Code Review in Workspace..."},{"category":"Git Graph","command":"git-graph.fetch","title":"Fetch from Remote(s)"},{"category":"Git Graph","command":"git-graph.removeGitRepository","title":"Remove Git Repository..."},{"category":"Git Graph","command":"git-graph.resumeWorkspaceCodeReview","title":"Resume a specific Code Review in Workspace..."},{"category":"Git Graph","command":"git-graph.version","title":"Get Version Information"},{"category":"Git Graph","command":"git-graph.openFile","title":"Open File","icon":"$(go-to-file)","enablement":"isInDiffEditor && resourceScheme == git-graph && git-graph:codiconsSupported"}],"configuration":{"type":"object","title":"Git Graph","properties":{"git-graph.commitDetailsView.autoCenter":{"type":"boolean","default":true,"description":"Automatically center the Commit Details View when it is opened."},"git-graph.commitDetailsView.fileView.fileTree.compactFolders":{"type":"boolean","default":true,"description":"Render the File Tree in the Commit Details View in a compacted form, such that folders with a single child folder are compressed into a single combined folder element."},"git-graph.commitDetailsView.fileView.type":{"type":"string","enum":["File Tree","File List"],"enumDescriptions":["Display files in a tree structure.","Display files in a list (useful for repositories with deep folder structures)."],"default":"File Tree","description":"Sets the default type of File View used in the Commit Details View. This can be overridden per repository using the controls on the right side of the Commit Details View."},"git-graph.commitDetailsView.location":{"type":"string","enum":["Inline","Docked to Bottom"],"enumDescriptions":["Show the Commit Details View inline with the graph & commits.","Show the Commit Details View docked to the bottom of the Git Graph View."],"default":"Inline","description":"Specifies where the Commit Details View is rendered in the Git Graph View."},"git-graph.contextMenuActionsVisibility":{"type":"object","default":{},"properties":{"branch":{"type":"object","properties":{"checkout":{"type":"boolean","title":"Checkout Branch"},"rename":{"type":"boolean","title":"Rename Branch..."},"delete":{"type":"boolean","title":"Delete Branch..."},"merge":{"type":"boolean","title":"Merge into current branch..."},"rebase":{"type":"boolean","title":"Rebase current branch on Branch..."},"push":{"type":"boolean","title":"Push Branch..."},"createPullRequest":{"type":"boolean","title":"Create Pull Request..."},"createArchive":{"type":"boolean","title":"Create Archive"},"selectInBranchesDropdown":{"type":"boolean","title":"Select in Branches Dropdown"},"unselectInBranchesDropdown":{"type":"boolean","title":"Unselect in Branches Dropdown"},"copyName":{"type":"boolean","title":"Copy Branch Name to Clipboard"}}},"commit":{"type":"object","properties":{"addTag":{"type":"boolean","title":"Add Tag..."},"createBranch":{"type":"boolean","title":"Create Branch..."},"checkout":{"type":"boolean","title":"Checkout..."},"cherrypick":{"type":"boolean","title":"Cherry Pick..."},"revert":{"type":"boolean","title":"Revert..."},"drop":{"type":"boolean","title":"Drop..."},"merge":{"type":"boolean","title":"Merge into current branch..."},"rebase":{"type":"boolean","title":"Rebase current branch on this Commit..."},"reset":{"type":"boolean","title":"Reset current branch to this Commit..."},"copyHash":{"type":"boolean","title":"Copy Commit Hash to Clipboard"},"copySubject":{"type":"boolean","title":"Copy Commit Subject to Clipboard"}}},"remoteBranch":{"type":"object","properties":{"checkout":{"type":"boolean","title":"Checkout Branch..."},"delete":{"type":"boolean","title":"Delete Remote Branch..."},"fetch":{"type":"boolean","title":"Fetch into local branch..."},"merge":{"type":"boolean","title":"Merge into current branch..."},"pull":{"type":"boolean","title":"Pull into current branch..."},"createPullRequest":{"type":"boolean","title":"Create Pull Request"},"createArchive":{"type":"boolean","title":"Create Archive"},"selectInBranchesDropdown":{"type":"boolean","title":"Select in Branches Dropdown"},"unselectInBranchesDropdown":{"type":"boolean","title":"Unselect in Branches Dropdown"},"copyName":{"type":"boolean","title":"Copy Branch Name to Clipboard"}}},"stash":{"type":"object","properties":{"apply":{"type":"boolean","title":"Apply Stash..."},"createBranch":{"type":"boolean","title":"Create Branch from Stash..."},"pop":{"type":"boolean","title":"Pop Stash..."},"drop":{"type":"boolean","title":"Drop Stash..."},"copyName":{"type":"boolean","title":"Copy Stash Name to Clipboard"},"copyHash":{"type":"boolean","title":"Copy Stash Hash to Clipboard"}}},"tag":{"type":"object","properties":{"viewDetails":{"type":"boolean","title":"View Details"},"delete":{"type":"boolean","title":"Delete Tag..."},"push":{"type":"boolean","title":"Push Tag..."},"createArchive":{"type":"boolean","title":"Create Archive"},"copyName":{"type":"boolean","title":"Copy Tag Name to Clipboard"}}},"uncommittedChanges":{"type":"object","properties":{"stash":{"type":"boolean","title":"Stash uncommitted changes..."},"reset":{"type":"boolean","title":"Reset uncommitted changes..."},"clean":{"type":"boolean","title":"Clean untracked files..."},"openSourceControlView":{"type":"boolean","title":"Open Source Control View"}}}},"markdownDescription":"Customise which context menu actions are visible. For example, if you want to hide the rebase action from the branch context menu, a suitable value for this setting is `{ \"branch\": { \"rebase\": false } }`. For more information of how to configure this setting, view the documentation [here](https://github.com/mhutchie/vscode-git-graph/wiki/Extension-Settings#context-menu-actions-visibility)."},"git-graph.customBranchGlobPatterns":{"type":"array","items":{"type":"object","title":"Branch Glob Pattern","required":["name","glob"],"properties":{"name":{"type":"string","title":"Name of pattern","description":"Name used to reference the pattern in the 'Branches' dropdown"},"glob":{"type":"string","title":"Glob pattern","description":"The Glob Pattern <glob-pattern>, as used in 'git log --glob=<glob-pattern>'. For example: heads/feature/*"}}},"default":[],"description":"An array of Custom Branch Glob Patterns to be shown in the 'Branches' dropdown. Example: [{\"name\": \"Feature Requests\", \"glob\": \"heads/feature/*\"}]"},"git-graph.customEmojiShortcodeMappings":{"type":"array","items":{"type":"object","title":"Custom Emoji Shortcode Mapping","required":["shortcode","emoji"],"properties":{"shortcode":{"type":"string","title":"Emoji Shortcode","description":"Emoji Shortcode (e.g. \":sparkles:\")"},"emoji":{"type":"string","title":"Emoji","description":"Emoji (e.g. \"✨\")"}}},"default":[],"description":"An array of custom Emoji Shortcode mappings. Example: [{\"shortcode\": \":sparkles:\", \"emoji\":\"✨\"}]"},"git-graph.customPullRequestProviders":{"type":"array","items":{"type":"object","title":"Pull Request Provider","required":["name","templateUrl"],"properties":{"name":{"type":"string","title":"Name of the Provider","description":"A unique, identifying, display name for the provider."},"templateUrl":{"type":"string","title":"Template URL","markdownDescription":"A template URL that can be used to create a Pull Request, after the $1 - $8 variables have been substituted to construct the final URL. For information on how to configure this setting, see the documentation [here](https://github.com/mhutchie/vscode-git-graph/wiki/Configuring-a-custom-Pull-Request-Provider)."}}},"default":[],"markdownDescription":"An array of custom Pull Request providers that can be used in the \"Pull Request Creation\" Integration. For information on how to configure this setting, see the documentation [here](https://github.com/mhutchie/vscode-git-graph/wiki/Configuring-a-custom-Pull-Request-Provider)."},"git-graph.date.format":{"type":"string","enum":["Date & Time","Date Only","ISO Date & Time","ISO Date Only","Relative"],"enumDescriptions":["Show the date and time (e.g. \"24 Mar 2019 21:34\")","Show the date only (e.g. \"24 Mar 2019\")","Show the ISO date and time (e.g. \"2019-03-24 21:34\")","Show the ISO date only (e.g. \"2019-03-24\")","Show relative times (e.g. \"5 minutes ago\")"],"default":"Date & Time","description":"Specifies the date format to be used in the \"Date\" column on the Git Graph View."},"git-graph.date.type":{"type":"string","enum":["Author Date","Commit Date"],"enumDescriptions":["Use the author date of a commit.","Use the committer date of a commit."],"default":"Author Date","description":"Specifies the date type to be displayed in the \"Date\" column on the Git Graph View."},"git-graph.defaultColumnVisibility":{"type":"object","properties":{"Date":{"type":"boolean","title":"Visibility of the Date column"},"Author":{"type":"boolean","title":"Visibility of the Author column"},"Commit":{"type":"boolean","title":"Visibility of the Commit column"}},"default":{"Date":true,"Author":true,"Commit":true},"description":"An object specifying the default visibility of the Date, Author & Commit columns. Example: {\"Date\": true, \"Author\": true, \"Commit\": true}"},"git-graph.dialog.addTag.pushToRemote":{"type":"boolean","default":false,"description":"Default state of the field indicating whether the tag should be pushed to a remote once it is added."},"git-graph.dialog.addTag.type":{"type":"string","enum":["Annotated","Lightweight"],"default":"Annotated","description":"Default type of the tag being added."},"git-graph.dialog.applyStash.reinstateIndex":{"type":"boolean","default":false,"description":"Default state of the \"Reinstate Index\" checkbox."},"git-graph.dialog.cherryPick.noCommit":{"type":"boolean","default":false,"description":"Default state of the \"No Commit\" checkbox."},"git-graph.dialog.cherryPick.recordOrigin":{"type":"boolean","default":false,"description":"Default state of the \"Record Origin\" checkbox."},"git-graph.dialog.createBranch.checkOut":{"type":"boolean","default":false,"description":"Default state of the \"Check out\" checkbox."},"git-graph.dialog.deleteBranch.forceDelete":{"type":"boolean","default":false,"description":"Default state of the \"Force Delete\" checkbox."},"git-graph.dialog.fetchIntoLocalBranch.forceFetch":{"type":"boolean","default":false,"description":"Default state of the \"Force Fetch\" checkbox."},"git-graph.dialog.fetchRemote.prune":{"type":"boolean","default":false,"description":"Default state of the \"Prune\" checkbox."},"git-graph.dialog.fetchRemote.pruneTags":{"type":"boolean","default":false,"description":"Default state of the \"Prune Tags\" checkbox."},"git-graph.dialog.general.referenceInputSpaceSubstitution":{"type":"string","enum":["None","Hyphen","Underscore"],"enumDescriptions":["Don't replace spaces.","Replace space characters with hyphens, for example: \"new branch\" -> \"new-branch\".","Replace space characters with underscores, for example: \"new branch\" -> \"new_branch\"."],"default":"None","description":"Specifies a substitution that is automatically performed when space characters are entered or pasted into reference inputs on dialogs (e.g. Create Branch, Add Tag, etc.)."},"git-graph.dialog.merge.noCommit":{"type":"boolean","default":false,"description":"Default state of the \"No Commit\" checkbox."},"git-graph.dialog.merge.noFastForward":{"type":"boolean","default":true,"description":"Default state of the \"Create a new commit even if fast-forward is possible\" checkbox."},"git-graph.dialog.merge.squashCommits":{"type":"boolean","default":false,"description":"Default state of the \"Squash Commits\" checkbox."},"git-graph.dialog.merge.squashMessageFormat":{"type":"string","enum":["Default","Git SQUASH_MSG"],"enumDescriptions":["Use the squash message generated by Git Graph.","Use the detailed squash message generated by Git (stored in .git/SQUASH_MSG)."],"default":"Default","description":"Specifies the message format used for the squashed commit (when the \"Squash Commits\" option is selected)."},"git-graph.dialog.popStash.reinstateIndex":{"type":"boolean","default":false,"description":"Default state of the \"Reinstate Index\" checkbox."},"git-graph.dialog.pullBranch.noFastForward":{"type":"boolean","default":false,"description":"Default state of the \"Create a new commit even if fast-forward is possible\" checkbox."},"git-graph.dialog.pullBranch.squashCommits":{"type":"boolean","default":false,"description":"Default state of the \"Squash Commits\" checkbox."},"git-graph.dialog.pullBranch.squashMessageFormat":{"type":"string","enum":["Default","Git SQUASH_MSG"],"enumDescriptions":["Use the squash message generated by Git Graph.","Use the detailed squash message generated by Git (stored in .git/SQUASH_MSG)."],"default":"Default","description":"Specifies the message format used for the squashed commit (when the \"Squash Commits\" option is selected)."},"git-graph.dialog.rebase.ignoreDate":{"type":"boolean","default":true,"description":"Default state of the \"Ignore Date (non-interactive rebase only)\" checkbox."},"git-graph.dialog.rebase.launchInteractiveRebase":{"type":"boolean","default":false,"description":"Default state of the \"Launch Interactive Rebase in new Terminal\" checkbox."},"git-graph.dialog.resetCurrentBranchToCommit.mode":{"type":"string","enum":["Soft","Mixed","Hard"],"enumDescriptions":["Soft - Keep all changes, but reset head","Mixed - Keep working tree, but reset index","Hard - Discard all changes"],"default":"Mixed","description":"Default mode to be used for the reset action."},"git-graph.dialog.resetUncommittedChanges.mode":{"type":"string","enum":["Mixed","Hard"],"enumDescriptions":["Mixed - Keep working tree, but reset index","Hard - Discard all changes"],"default":"Mixed","description":"Default mode to be used for the reset action."},"git-graph.dialog.stashUncommittedChanges.includeUntracked":{"type":"boolean","default":true,"description":"Default state of the \"Include Untracked\" checkbox."},"git-graph.enhancedAccessibility":{"type":"boolean","default":false,"description":"Visual file change A|M|D|R|U indicators in the Commit Details View for users with colour blindness. In the future, this setting will enable any additional accessibility related features of Git Graph that aren't enabled by default."},"git-graph.fileEncoding":{"type":"string","default":"utf8","markdownDescription":"The character set encoding used when retrieving a specific version of repository files (e.g. in the Diff View). A list of all supported encodings can be found [here](https://github.com/ashtuchkin/iconv-lite/wiki/Supported-Encodings).","scope":"resource"},"git-graph.graph.colours":{"type":"array","items":{"type":"string","description":"Colour (HEX or RGB)","pattern":"^\\s*(#[0-9a-fA-F]{6}|#[0-9a-fA-F]{8}|rgb[a]?\\s*\\(\\d{1,3},\\s*\\d{1,3},\\s*\\d{1,3}\\))\\s*$"},"default":["#0085d9","#d9008f","#00d90a","#d98500","#a300d9","#ff0000","#00d9cc","#e138e8","#85d900","#dc5b23","#6f24d6","#ffcc00"],"description":"Specifies the colours used on the graph."},"git-graph.graph.style":{"type":"string","enum":["rounded","angular"],"enumDescriptions":["Use smooth curves when transitioning between branches on the graph.","Use angular lines when transitioning between branches on the graph."],"default":"rounded","description":"Specifies the style of the graph."},"git-graph.graph.uncommittedChanges":{"type":"string","enum":["Open Circle at the Uncommitted Changes","Open Circle at the Checked Out Commit"],"enumDescriptions":["Display the Uncommitted Changes as a grey open circle, connected to the commit referenced by HEAD with a solid grey line. The current file system's state is therefore always displayed as an open circle.","Display the Uncommitted Changes as a grey closed circle, connected to the commit referenced by HEAD with a dotted grey line. The commit referenced by HEAD is therefore always displayed as an open circle."],"default":"Open Circle at the Uncommitted Changes","description":"Specifies how the Uncommitted Changes are displayed on the graph."},"git-graph.integratedTerminalShell":{"type":"string","default":"","description":"Specifies the path and filename of the Shell executable to be used by the Visual Studio Code Integrated Terminal, when it is opened by Git Graph. For example, to use Git Bash on Windows this setting would commonly be set to \"C:\\Program Files\\Git\\bin\\bash.exe\". If this setting is left blank, the default Shell is used.","scope":"machine"},"git-graph.keyboardShortcut.find":{"type":"string","enum":["UNASSIGNED","CTRL/CMD + A","CTRL/CMD + B","CTRL/CMD + C","CTRL/CMD + D","CTRL/CMD + E","CTRL/CMD + F","CTRL/CMD + G","CTRL/CMD + H","CTRL/CMD + I","CTRL/CMD + J","CTRL/CMD + K","CTRL/CMD + L","CTRL/CMD + M","CTRL/CMD + N","CTRL/CMD + O","CTRL/CMD + P","CTRL/CMD + Q","CTRL/CMD + R","CTRL/CMD + S","CTRL/CMD + T","CTRL/CMD + U","CTRL/CMD + V","CTRL/CMD + W","CTRL/CMD + X","CTRL/CMD + Y","CTRL/CMD + Z"],"default":"CTRL/CMD + F","description":"The keybinding for the keyboard shortcut that opens the Find Widget in the Git Graph View."},"git-graph.keyboardShortcut.refresh":{"type":"string","enum":["UNASSIGNED","CTRL/CMD + A","CTRL/CMD + B","CTRL/CMD + C","CTRL/CMD + D","CTRL/CMD + E","CTRL/CMD + F","CTRL/CMD + G","CTRL/CMD + H","CTRL/CMD + I","CTRL/CMD + J","CTRL/CMD + K","CTRL/CMD + L","CTRL/CMD + M","CTRL/CMD + N","CTRL/CMD + O","CTRL/CMD + P","CTRL/CMD + Q","CTRL/CMD + R","CTRL/CMD + S","CTRL/CMD + T","CTRL/CMD + U","CTRL/CMD + V","CTRL/CMD + W","CTRL/CMD + X","CTRL/CMD + Y","CTRL/CMD + Z"],"default":"CTRL/CMD + R","description":"The keybinding for the keyboard shortcut that refreshes the Git Graph View."},"git-graph.keyboardShortcut.scrollToHead":{"type":"string","enum":["UNASSIGNED","CTRL/CMD + A","CTRL/CMD + B","CTRL/CMD + C","CTRL/CMD + D","CTRL/CMD + E","CTRL/CMD + F","CTRL/CMD + G","CTRL/CMD + H","CTRL/CMD + I","CTRL/CMD + J","CTRL/CMD + K","CTRL/CMD + L","CTRL/CMD + M","CTRL/CMD + N","CTRL/CMD + O","CTRL/CMD + P","CTRL/CMD + Q","CTRL/CMD + R","CTRL/CMD + S","CTRL/CMD + T","CTRL/CMD + U","CTRL/CMD + V","CTRL/CMD + W","CTRL/CMD + X","CTRL/CMD + Y","CTRL/CMD + Z"],"default":"CTRL/CMD + H","description":"The keybinding for the keyboard shortcut that scrolls the Git Graph View to be centered on the commit referenced by HEAD."},"git-graph.keyboardShortcut.scrollToStash":{"type":"string","enum":["UNASSIGNED","CTRL/CMD + A","CTRL/CMD + B","CTRL/CMD + C","CTRL/CMD + D","CTRL/CMD + E","CTRL/CMD + F","CTRL/CMD + G","CTRL/CMD + H","CTRL/CMD + I","CTRL/CMD + J","CTRL/CMD + K","CTRL/CMD + L","CTRL/CMD + M","CTRL/CMD + N","CTRL/CMD + O","CTRL/CMD + P","CTRL/CMD + Q","CTRL/CMD + R","CTRL/CMD + S","CTRL/CMD + T","CTRL/CMD + U","CTRL/CMD + V","CTRL/CMD + W","CTRL/CMD + X","CTRL/CMD + Y","CTRL/CMD + Z"],"default":"CTRL/CMD + S","description":"The keybinding for the keyboard shortcut that scrolls the Git Graph View to the first (or next) stash in the loaded commits. The Shift Key Modifier can be applied to this keybinding to scroll the Git Graph View to the last (or previous) stash in the loaded commits."},"git-graph.markdown":{"type":"boolean","default":true,"description":"Parse and render a frequently used subset of inline Markdown formatting rules in commit messages and tag details (bold, italics, bold & italics, and inline code blocks)."},"git-graph.maxDepthOfRepoSearch":{"type":"number","default":0,"description":"Specifies the maximum depth of subfolders to search when discovering repositories in the workspace. Note: Sub-repos are not automatically detected when searching subfolders, however they can be manually added by running the command \"Git Graph: Add Git Repository\" in the Command Palette."},"git-graph.openNewTabEditorGroup":{"type":"string","enum":["Active","Beside","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"],"enumDescriptions":["Open the new tab in the Active Editor Group.","Open the new tab beside the Active Editor Group.","Open the new tab in the First Editor Group.","Open the new tab in the Second Editor Group.","Open the new tab in the Third Editor Group.","Open the new tab in the Fourth Editor Group.","Open the new tab in the Fifth Editor Group.","Open the new tab in the Sixth Editor Group.","Open the new tab in the Seventh Editor Group.","Open the new tab in the Eighth Editor Group.","Open the new tab in the Ninth Editor Group."],"default":"Active","description":"Specifies the Editor Group where Git Graph should open new tabs, when performing the following actions from the Git Graph View: Viewing the Visual Studio Code Diff View, Opening a File, Viewing a File at a Specific Revision."},"git-graph.openToTheRepoOfTheActiveTextEditorDocument":{"type":"boolean","default":false,"description":"Open the Git Graph View to the repository containing the active Text Editor document."},"git-graph.referenceLabels.alignment":{"type":"string","enum":["Normal","Branches (on the left) & Tags (on the right)","Branches (aligned to the graph) & Tags (on the right)"],"enumDescriptions":["Show branch & tag labels on the left of the commit message in the 'Description' column.","Show branch labels on the left of the commit message in the 'Description' column, and tag labels on the right.","Show branch labels aligned to the graph in the 'Graph' column, and tag labels on the right in the 'Description' column."],"default":"Normal","description":"Specifies how branch and tag reference labels are aligned for each commit."},"git-graph.referenceLabels.combineLocalAndRemoteBranchLabels":{"type":"boolean","default":true,"description":"Combine local and remote branch labels if they refer to the same branch, and are on the same commit."},"git-graph.repository.commits.fetchAvatars":{"type":"boolean","default":false,"description":"Fetch avatars of commit authors and committers. By enabling this setting, you consent to commit author and committer email addresses being sent GitHub, GitLab or Gravatar, depending on the repositories remote origin."},"git-graph.repository.commits.initialLoad":{"type":"number","default":300,"description":"Specifies the number of commits to initially load."},"git-graph.repository.commits.loadMore":{"type":"number","default":100,"description":"Specifies the number of additional commits to load when the \"Load More Commits\" button is pressed, or more commits are automatically loaded."},"git-graph.repository.commits.loadMoreAutomatically":{"type":"boolean","default":true,"description":"When the view has been scrolled to the bottom, automatically load more commits if they exist (instead of having to press the \"Load More Commits\" button)."},"git-graph.repository.commits.mute.commitsThatAreNotAncestorsOfHead":{"type":"boolean","default":false,"description":"Display commits that aren't ancestors of the checked-out branch / commit with a muted text color. Muting will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View."},"git-graph.repository.commits.mute.mergeCommits":{"type":"boolean","default":true,"description":"Display merge commits with a muted text color."},"git-graph.repository.commits.order":{"type":"string","enum":["date","author-date","topo"],"enumDescriptions":["Show commits in the commit timestamp order.","Show commits in the author timestamp order.","Avoid showing commits on multiple lines of history intermixed."],"default":"date","markdownDescription":"Specifies the order of commits on the Git Graph View. See [git log](https://git-scm.com/docs/git-log#_commit_ordering) for more information on each order option. This can be overridden per repository via the Git Graph View's Column Header Context Menu."},"git-graph.repository.commits.showSignatureStatus":{"type":"boolean","default":false,"description":"Show the commit's signature status to the right of the Committer in the Commit Details View (only for signed commits). Hovering over the signature icon displays a tooltip with the signature details. Requires Git (>= 2.4.0) & GPG (or equivalent) to be installed on the same machine that is running Visual Studio Code."},"git-graph.repository.fetchAndPrune":{"type":"boolean","default":false,"description":"Before fetching from remote(s) using the Fetch button on the Git Graph View Control Bar, remove any remote-tracking references that no longer exist on the remote(s)."},"git-graph.repository.fetchAndPruneTags":{"type":"boolean","default":false,"description":"Before fetching from remote(s) using the Fetch button on the Git Graph View Control Bar, remove any local tags that no longer exist on the remote(s). Requires Git >= 2.17.0, and the \"Repository: Fetch And Prune\" setting to be enabled. Caution: If you work in repositories that have multiple remotes, it is not recommended to use this setting (instead you can prune tags for a specific remote via \"Fetch Remote\" Dialog from the Repository Settings Widget on the Git Graph View)."},"git-graph.repository.includeCommitsMentionedByReflogs":{"type":"boolean","default":false,"description":"Include commits only mentioned by reflogs in the Git Graph View (only applies when showing all branches). This can be overridden per repository in the Git Graph View's Repository Settings Widget."},"git-graph.repository.onLoad.scrollToHead":{"type":"boolean","default":false,"description":"Automatically scroll the Git Graph View to be centered on the commit referenced by HEAD. This will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View."},"git-graph.repository.onLoad.showCheckedOutBranch":{"type":"boolean","default":false,"description":"Show the checked out branch when a repository is loaded in the Git Graph View. This setting can be used in conjunction with \"Repository > On Load: Show Specific Branches\". Default: false (show all branches)"},"git-graph.repository.onLoad.showSpecificBranches":{"type":"array","items":{"type":"string","description":"A local branch name (e.g. \"master\"), a remote-tracking branch name prefixed with \"remotes/\" (e.g. \"remotes/origin/master\"), or a glob pattern defined in git-graph.customBranchGlobPatterns prefixed with \"--glob=\" (e.g. \"--glob=heads/feature/*\")."},"default":[],"markdownDescription":"Show specific branches when a repository is loaded in the Git Graph View. Branches can be specified as follows: A local branch name (e.g. `master`), a remote-tracking branch name prefixed with \"remotes/\" (e.g. `remotes/origin/master`), or a glob pattern defined in `git-graph.customBranchGlobPatterns` prefixed with \"--glob=\" (e.g. `--glob=heads/feature/*`). This setting can be used in conjunction with \"Repository > On Load: Show Checked Out Branch\". Default: [] (show all branches)"},"git-graph.repository.onlyFollowFirstParent":{"type":"boolean","default":false,"markdownDescription":"Only follow the first parent of commits when discovering the commits to load in the Git Graph View. See [--first-parent](https://git-scm.com/docs/git-log#Documentation/git-log.txt---first-parent) to find out more about this setting. This can be overridden per repository in the Git Graph View's Repository Settings Widget."},"git-graph.repository.showCommitsOnlyReferencedByTags":{"type":"boolean","default":true,"description":"Show Commits that are only referenced by tags in Git Graph."},"git-graph.repository.showRemoteBranches":{"type":"boolean","default":true,"description":"Show Remote Branches in Git Graph by default. This can be overridden per repository from the Git Graph View's Control Bar."},"git-graph.repository.showRemoteHeads":{"type":"boolean","default":true,"description":"Show Remote HEAD Symbolic References in Git Graph (e.g. \"origin/HEAD\")."},"git-graph.repository.showStashes":{"type":"boolean","default":true,"description":"Show Stashes in Git Graph by default. This can be overridden per repository in the Git Graph View's Repository Settings Widget."},"git-graph.repository.showTags":{"type":"boolean","default":true,"description":"Show Tags in Git Graph by default. This can be overridden per repository in the Git Graph View's Repository Settings Widget."},"git-graph.repository.showUncommittedChanges":{"type":"boolean","default":true,"description":"Show uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View."},"git-graph.repository.showUntrackedFiles":{"type":"boolean","default":true,"description":"Show untracked files when viewing the uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View."},"git-graph.repository.sign.commits":{"type":"boolean","default":false,"description":"Enables commit signing with GPG or X.509."},"git-graph.repository.sign.tags":{"type":"boolean","default":false,"description":"Enables tag signing with GPG or X.509."},"git-graph.repository.useMailmap":{"type":"boolean","default":false,"markdownDescription":"Respect [.mailmap](https://git-scm.com/docs/git-check-mailmap#_mapping_authors) files when displaying author & committer names and email addresses."},"git-graph.repositoryDropdownOrder":{"type":"string","enum":["Full Path","Name","Workspace Full Path"],"enumDescriptions":["Sort repositories alphabetically by the full path of the repository.","Sort repositories alphabetically by the name of the repository.","Sort repositories according to the Visual Studio Code Workspace Folder order, then alphabetically by the full path of the repository."],"default":"Workspace Full Path","description":"Specifies the order that repositories are sorted in the repository dropdown on the Git Graph View (only visible when more than one repository exists in the current Visual Studio Code Workspace)."},"git-graph.retainContextWhenHidden":{"type":"boolean","default":true,"description":"Specifies if the Git Graph View's Visual Studio Code context is kept when the panel is no longer visible (e.g. moved to background tab). Enabling this setting will make Git Graph load significantly faster when switching back to the Git Graph tab, however has a higher memory overhead."},"git-graph.showStatusBarItem":{"type":"boolean","default":true,"description":"Show a Status Bar Item that opens the Git Graph View when clicked."},"git-graph.sourceCodeProviderIntegrationLocation":{"type":"string","enum":["Inline","More Actions"],"enumDescriptions":["Show the 'View Git Graph' action on the title of SCM Providers","Show the 'View Git Graph' action in the 'More Actions...' menu on the title of SCM Providers"],"default":"Inline","description":"Specifies where the \"View Git Graph\" action appears on the title of SCM Providers."},"git-graph.tabIconColourTheme":{"type":"string","enum":["colour","grey"],"enumDescriptions":["Show a colour icon which suits most Visual Studio Code colour themes","Show a grey icon which suits Visual Studio Code colour themes that are predominantly grayscale"],"default":"colour","description":"Specifies the colour theme of the icon displayed on the Git Graph tab."},"git-graph.autoCenterCommitDetailsView":{"type":"boolean","default":true,"description":"Automatically center the commit details view when it is opened.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.commitDetailsView.autoCenter","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.commitDetailsView.autoCenter#`"},"git-graph.combineLocalAndRemoteBranchLabels":{"type":"boolean","default":true,"description":"Combine local and remote branch labels if they refer to the same branch, and are on the same commit.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.referenceLabels.combineLocalAndRemoteBranchLabels","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.referenceLabels.combineLocalAndRemoteBranchLabels#`"},"git-graph.commitDetailsViewFileTreeCompactFolders":{"type":"boolean","default":true,"description":"Render the File Tree in the Commit Details / Comparison View in a compacted form, such that folders with a single child folder are compressed into a single combined folder element.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.commitDetailsView.fileView.fileTree.compactFolders","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.commitDetailsView.fileView.fileTree.compactFolders#`"},"git-graph.commitDetailsViewLocation":{"type":"string","enum":["Inline","Docked to Bottom"],"enumDescriptions":["Show the Commit Details View inline with the graph","Show the Commit Details View docked to the bottom of the Git Graph view"],"default":"Inline","description":"Specifies where the Commit Details View is rendered in the Git Graph view.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.commitDetailsView.location","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.commitDetailsView.location#`"},"git-graph.commitOrdering":{"type":"string","enum":["date","author-date","topo"],"enumDescriptions":["Show commits in the commit timestamp order.","Show commits in the author timestamp order.","Avoid showing commits on multiple lines of history intermixed."],"default":"date","markdownDescription":"Specifies the order of commits on the Git Graph view. See [git log](https://git-scm.com/docs/git-log#_commit_ordering) for more information on each order option.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.commits.order","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.commits.order#`"},"git-graph.dateFormat":{"type":"string","enum":["Date & Time","Date Only","ISO Date & Time","ISO Date Only","Relative"],"enumDescriptions":["Show the date and time, for example \"24 Mar 2019 21:34\"","Show the date only, for example \"24 Mar 2019\"","Show the ISO date and time, for example \"2019-03-24 21:34\"","Show the ISO date only, for example \"2019-03-24\"","Show relative times, for example \"5 minutes ago\""],"default":"Date & Time","description":"Specifies the date format to be used in the \"Date\" column on the Git Graph View.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.date.format","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.date.format#`"},"git-graph.dateType":{"type":"string","enum":["Author Date","Commit Date"],"enumDescriptions":["Use the author date of a commit","Use the committer date of a commit"],"default":"Author Date","description":"Specifies the date type to be displayed in the \"Date\" column on the Git Graph View.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.date.type","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.date.type#`"},"git-graph.defaultFileViewType":{"type":"string","enum":["File Tree","File List"],"enumDescriptions":["Display files in a tree structure","Display files in a list (useful for repositories with deep folder structures)"],"default":"File Tree","description":"Sets the default type of File View used in the Commit Details / Comparison Views. This can be overridden per repository using the controls on the right side of the Commit Details / Comparison Views.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.commitDetailsView.fileView.type","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.commitDetailsView.fileView.type#`"},"git-graph.fetchAndPrune":{"type":"boolean","default":false,"description":"Before fetching from remote(s) using the Fetch button on the Git Graph View Control Bar, remove any remote-tracking references that no longer exist on the remote(s).","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.fetchAndPrune","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.fetchAndPrune#`"},"git-graph.fetchAvatars":{"type":"boolean","default":false,"description":"Fetch avatars of commit authors and committers. By enabling this setting, you consent to commit author and committer email addresses being sent GitHub, GitLab or Gravatar, depending on the repositories remote origin.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.commits.fetchAvatars","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.commits.fetchAvatars#`"},"git-graph.graphColours":{"type":"array","items":{"type":"string","description":"Colour (HEX or RGB)","pattern":"^\\s*(#[0-9a-fA-F]{6}|#[0-9a-fA-F]{8}|rgb[a]?\\s*\\(\\d{1,3},\\s*\\d{1,3},\\s*\\d{1,3}\\))\\s*$"},"default":["#0085d9","#d9008f","#00d90a","#d98500","#a300d9","#ff0000","#00d9cc","#e138e8","#85d900","#dc5b23","#6f24d6","#ffcc00"],"description":"Specifies the colours used on the graph.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.graph.colours","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.graph.colours#`"},"git-graph.graphStyle":{"type":"string","enum":["rounded","angular"],"enumDescriptions":["Use smooth curves when transitioning between branches on the graph","Use angular lines when transitioning between branches on the graph"],"default":"rounded","description":"Specifies the style of the graph.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.graph.style","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.graph.style#`"},"git-graph.includeCommitsMentionedByReflogs":{"type":"boolean","default":false,"description":"Include commits only mentioned by reflogs in the Git Graph View (only applies when showing all branches). This can be overridden per repository in the Git Graph View's Repository Settings Widget.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.includeCommitsMentionedByReflogs","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.includeCommitsMentionedByReflogs#`"},"git-graph.initialLoadCommits":{"type":"number","default":300,"description":"Specifies the number of commits to initially load.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.commits.initialLoad","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.commits.initialLoad#`"},"git-graph.loadMoreCommits":{"type":"number","default":100,"description":"Specifies the number of additional commits to load when the \"Load More Commits\" button is pressed, or more commits are automatically loaded.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.commits.loadMore","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.commits.loadMore#`"},"git-graph.loadMoreCommitsAutomatically":{"type":"boolean","default":true,"description":"When the view has been scrolled to the bottom, automatically load more commits if they exist (instead of having to press the \"Load More Commits\" button).","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.commits.loadMoreAutomatically","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.commits.loadMoreAutomatically#`"},"git-graph.muteCommitsThatAreNotAncestorsOfHead":{"type":"boolean","default":false,"description":"Display commits that aren't ancestors of the checked-out branch / commit with a muted text color. Muting will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.commits.mute.commitsThatAreNotAncestorsOfHead","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.commits.mute.commitsThatAreNotAncestorsOfHead#`"},"git-graph.muteMergeCommits":{"type":"boolean","default":true,"description":"Display merge commits with a muted text color.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.commits.mute.mergeCommits","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.commits.mute.mergeCommits#`"},"git-graph.onlyFollowFirstParent":{"type":"boolean","default":false,"markdownDescription":"Only follow the first parent of commits when discovering the commits to load in the Git Graph View. See [--first-parent](https://git-scm.com/docs/git-log#Documentation/git-log.txt---first-parent) to find out more about this setting.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.onlyFollowFirstParent","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.onlyFollowFirstParent#`"},"git-graph.openDiffTabLocation":{"type":"string","enum":["Active","Beside","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"],"enumDescriptions":["Open the Visual Studio Code Diff View in the Active Editor Group.","Open the Visual Studio Code Diff View beside the Active Editor Group.","Open the Visual Studio Code Diff View in the First Editor Group.","Open the Visual Studio Code Diff View in the Second Editor Group.","Open the Visual Studio Code Diff View in the Third Editor Group.","Open the Visual Studio Code Diff View in the Fourth Editor Group.","Open the Visual Studio Code Diff View in the Fifth Editor Group.","Open the Visual Studio Code Diff View in the Sixth Editor Group.","Open the Visual Studio Code Diff View in the Seventh Editor Group.","Open the Visual Studio Code Diff View in the Eighth Editor Group.","Open the Visual Studio Code Diff View in the Ninth Editor Group."],"default":"Active","description":"Specifies which Editor Group the Visual Studio Code Diff View is opened in.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.openNewTabEditorGroup","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.openNewTabEditorGroup#`"},"git-graph.openRepoToHead":{"type":"boolean","default":false,"description":"When opening or switching repositories in the Git Graph View, automatically scroll the view to be centered on the commit referenced by HEAD. This will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.onLoad.scrollToHead","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.onLoad.scrollToHead#`"},"git-graph.referenceLabelAlignment":{"type":"string","enum":["Normal","Branches (on the left) & Tags (on the right)","Branches (aligned to the graph) & Tags (on the right)"],"enumDescriptions":["Show branch & tag labels on the left of the commit message in the 'Description' column.","Show branch labels on the left of the commit message in the 'Description' column, and tag labels on the right.","Show branch labels aligned to the graph in the 'Graph' column, and tag labels on the right in the 'Description' column."],"default":"Normal","description":"Specifies how branch and tag reference labels are aligned for each commit.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.referenceLabels.alignment","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.referenceLabels.alignment#`"},"git-graph.showCommitsOnlyReferencedByTags":{"type":"boolean","default":true,"description":"Show commits that are only referenced by tags in Git Graph.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.showCommitsOnlyReferencedByTags","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.showCommitsOnlyReferencedByTags#`"},"git-graph.showCurrentBranchByDefault":{"type":"boolean","default":false,"description":"Show the current branch by default when Git Graph is opened. Default: false (show all branches)","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.onLoad.showCheckedOutBranch","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.onLoad.showCheckedOutBranch#`"},"git-graph.showSignatureStatus":{"type":"boolean","default":false,"description":"Show the commit's signature status to the right of the Committer in the Commit Details View (only for signed commits). Hovering over the signature icon displays a tooltip with the signature details. Requires Git (>= 2.4.0) & GPG (or equivalent) to be installed on the same machine that is running Visual Studio Code.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.commits.showSignatureStatus","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.commits.showSignatureStatus#`"},"git-graph.showTags":{"type":"boolean","default":true,"description":"Show Tags in Git Graph by default. This can be overridden per repository in the Git Graph View's Repository Settings Widget.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.showTags","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.showTags#`"},"git-graph.showUncommittedChanges":{"type":"boolean","default":true,"description":"Show uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.showUncommittedChanges","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.showUncommittedChanges#`"},"git-graph.showUntrackedFiles":{"type":"boolean","default":true,"description":"Show untracked files when viewing the uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.showUntrackedFiles","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.showUntrackedFiles#`"},"git-graph.useMailmap":{"type":"boolean","default":false,"markdownDescription":"Respect [.mailmap](https://git-scm.com/docs/git-check-mailmap#_mapping_authors) files when displaying author & committer names and email addresses.","deprecationMessage":"Depreciated: This setting has been renamed to git-graph.repository.useMailmap","markdownDeprecationMessage":"Depreciated: This setting has been renamed to `#git-graph.repository.useMailmap#`"}}},"menus":{"commandPalette":[{"command":"git-graph.openFile","when":"isInDiffEditor && resourceScheme == git-graph && git-graph:codiconsSupported"}],"editor/title":[{"command":"git-graph.openFile","group":"navigation","when":"isInDiffEditor && resourceScheme == git-graph && git-graph:codiconsSupported"}],"scm/title":[{"when":"scmProvider == git && config.git-graph.sourceCodeProviderIntegrationLocation == 'Inline'","command":"git-graph.view","group":"navigation"},{"when":"scmProvider == git && config.git-graph.sourceCodeProviderIntegrationLocation == 'More Actions'","command":"git-graph.view","group":"inline"}]}},"scripts":{"vscode:prepublish":"npm run compile","vscode:uninstall":"node ./out/life-cycle/uninstall.js","clean":"node ./.vscode/clean.js","compile":"npm run lint && npm run clean && npm run compile-src && npm run compile-web","compile-src":"tsc -p ./src && node ./.vscode/package-src.js","compile-web":"tsc -p ./web && node ./.vscode/package-web.js","compile-web-debug":"tsc -p ./web && node ./.vscode/package-web.js debug","lint":"eslint -c .eslintrc.json --max-warnings 0 --ext .ts ./src ./tests ./web","package":"vsce package","package-and-install":"npm run package && node ./.vscode/install-package.js","test":"jest --verbose","test-and-report-coverage":"jest --verbose --coverage"},"dependencies":{"iconv-lite":"0.5.0"},"devDependencies":{"@types/jest":"26.0.19","@types/node":"8.10.62","@types/vscode":"1.38.0","@typescript-eslint/eslint-plugin":"4.10.0","@typescript-eslint/parser":"4.10.0","eslint":"7.15.0","jest":"26.6.3","ts-jest":"26.4.4","typescript":"4.0.2","uglify-js":"3.10.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/mhutchie.git-graph-1.30.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"mhutchie","metadata":{"installedTimestamp":1745949948300,"source":"gallery","id":"438221f8-1107-4ccd-a6fe-f3b7fe0856b7","publisherId":"996496dc-099f-469d-b89c-0d7713179365","publisherDisplayName":"mhutchie","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":999133},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"donjayamanne.githistory","uuid":"5960f38e-0bbe-4644-8f9c-9c8824e82511"},"manifest":{"name":"githistory","displayName":"Git History","description":"View git log, file history, compare branches or commits","version":"0.6.20","publisher":"donjayamanne","author":{"name":"Don Jayamanne","email":"don.jayamanne@yahoo.com"},"license":"MIT","homepage":"https://github.com/DonJayamanne/gitHistoryVSCode/blob/main/README.md","repository":{"type":"git","url":"https://github.com/DonJayamanne/gitHistoryVSCode"},"icon":"images/icon.png","bugs":{"url":"https://github.com/DonJayamanne/gitHistoryVSCode/issues"},"galleryBanner":{"color":"#0000FF","theme":"dark"},"engines":{"vscode":"^1.76.0"},"categories":["Other"],"activationEvents":[],"main":"./dist/src/extension","contributes":{"views":{"explorer":[{"id":"commitViewProvider","name":"Commits","when":"!config.gitHistory.hideCommitViewExplorer && git.commit.view.show && git.commit.selected"},{"id":"compareCommitViewProvider","name":"Compare Commits","when":"!config.gitHistory.hideCompareCommitViewExplorer && git.commit.compare.view.show && git.commit.compare.compared"}]},"commands":[{"command":"git.commit.view.hide","title":"Hide Commit View Explorer","category":"Git","icon":"$(close)"},{"command":"git.commit.view.show","title":"Git: Show Commit View Explorer"},{"command":"git.commit.compare.view.hide","title":"Hide Commit Comparison View Explorer","category":"Git","icon":"$(close)"},{"command":"git.commit.compare.view.show","title":"Git: Show Commit Comparison View Explorer"},{"command":"git.viewLineHistory","title":"Git: View Line History"},{"command":"git.viewHistory","title":"Git: View History (git log)","icon":"$(history)"},{"command":"git.viewFileHistory","title":"Git: View File History","icon":"$(history)"},{"command":"git.commit.ViewChangeLog","title":"View Change log"},{"command":"git.commit.cherryPick","title":"Cherrypick into current branch"},{"command":"git.commit.createBranch","title":"Create a branch from this commit"},{"command":"git.commit.FileEntry.ViewFileContents","title":"View File Contents"},{"command":"git.commit.FileEntry.CompareAgainstWorkspace","title":"Compare against workspace version"},{"command":"git.commit.FileEntry.CompareAgainstPrevious","title":"Compare against previous version"},{"command":"git.commit.FileEntry.selectForComparison","title":"Select for comparison"},{"command":"git.commit.FileEntry.compare","title":"Compare against previously selected Commit"},{"command":"git.commit.compare.file.compare","title":"Compare"},{"command":"git.commit.compare.selectForComparison","title":"Select for comparison"},{"command":"git.commit.compare","title":"Compare against previously selected Commit"},{"command":"git.commit.compare.view.showFilesOnly","title":"Show files only"},{"command":"git.commit.compare.view.showFolderView","title":"Show folder view"},{"command":"git.commit.merge","title":"Merge with this commit"},{"command":"git.commit.rebase","title":"Rebase onto this commit"},{"command":"git.commit.view.showFilesOnly","title":"Show files only"},{"command":"git.commit.view.showFolderView","title":"Show folder view"}],"keybindings":[{"command":"git.viewFileHistory","key":"alt+h"}],"menus":{"commandPalette":[{"command":"git.commit.view.hide","when":"git.commit.view.show"},{"command":"git.commit.view.show","when":"!git.commit.view.show"},{"command":"git.commit.compare.view.hide","when":"git.commit.compare.view.show"},{"command":"git.commit.compare.view.show","when":"!git.commit.compare.view.show"}],"editor/title":[{"command":"git.viewFileHistory","group":"navigation","when":"config.git.enabled && !config.gitHistory.editorTitleButtonOpenRepo && resourceScheme == file && gitOpenRepositoryCount != 0 && config.gitHistory.showEditorTitleMenuBarIcons"},{"command":"git.viewHistory","group":"navigation","when":"config.git.enabled && config.gitHistory.editorTitleButtonOpenRepo && resourceScheme == file && gitOpenRepositoryCount != 0 && config.gitHistory.showEditorTitleMenuBarIcons"}],"editor/title/context":[{"command":"git.viewFileHistory","group":"git","when":"config.git.enabled && gitOpenRepositoryCount != 0 && config.gitHistory.showEditorTitleMenuBarIcons"}],"scm/title":[{"command":"git.viewHistory","group":"navigation","when":"config.git.enabled && gitOpenRepositoryCount != 0 && config.gitHistory.sourceCodeProviderIntegrationLocation == 'Inline'"},{"command":"git.viewHistory","group":"inline","when":"config.git.enabled && gitOpenRepositoryCount != 0 && config.gitHistory.sourceCodeProviderIntegrationLocation == 'More Actions'"}],"scm/resourceState/context":[{"command":"git.viewFileHistory","when":"config.git.enabled && gitOpenRepositoryCount != 0"}],"explorer/context":[{"command":"git.viewFileHistory","group":"git","when":"config.git.enabled && gitOpenRepositoryCount != 0"}],"editor/context":[{"command":"git.viewFileHistory","group":"git","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.viewLineHistory","group":"git","when":"config.git.enabled && gitOpenRepositoryCount != 0"}],"view/item/context":[{"command":"git.viewFileHistory","when":"view == commitViewProvider && viewItem == file"},{"command":"git.viewFileHistory","when":"view == compareCommitViewProvider && viewItem == file"},{"command":"git.commit.FileEntry.ViewFileContents","when":"view == commitViewProvider && viewItem == file"},{"command":"git.commit.FileEntry.CompareAgainstWorkspace","when":"view == commitViewProvider && viewItem == file"},{"command":"git.commit.FileEntry.CompareAgainstPrevious","when":"view == commitViewProvider && viewItem == file"},{"command":"git.commit.FileEntry.selectForComparison","when":"view == commitViewProvider && viewItem == file && false"},{"command":"git.commit.FileEntry.compare","when":"view == commitViewProvider && viewItem == file && git.commit.FileEntry.selectForComparison && false"}],"view/title":[{"command":"git.commit.compare.view.hide","when":"view == compareCommitViewProvider","group":"navigation@1"},{"command":"git.commit.compare.view.hide","when":"view == compareCommitViewProvider","group":"zMoreSubMenuItems"},{"command":"git.commit.view.hide","when":"view == commitViewProvider","group":"navigation@1"},{"command":"git.commit.view.hide","when":"view == commitViewProvider","group":"zMoreSubMenuItems"},{"command":"git.commit.cherryPick","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.createBranch","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.merge","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.rebase","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.view.showFilesOnly","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.view.showFolderView","when":"view == commitViewProvider && git.commit.selected","group":"zMoreSubMenuItems"},{"command":"git.commit.compare.view.showFilesOnly","when":"view == compareCommitViewProvider && git.commit.compare.compared","group":"zMoreSubMenuItems"},{"command":"git.commit.compare.view.showFolderView","when":"view == compareCommitViewProvider && git.commit.compare.compared","group":"zMoreSubMenuItems"}]},"configuration":{"type":"object","title":"Git History","properties":{"gitHistory.alwaysPromptRepositoryPicker":{"type":"boolean","default":false,"scope":"window","description":"Always prompt with repository picker when running Git History"},"gitHistory.includeRemoteBranches":{"type":"boolean","default":false,"scope":"resource","description":"Include remote branches when opening Git History"},"gitHistory.showFileHistorySplit":{"type":"boolean","default":true,"scope":"window","description":"Split show file history when file is active."},"gitHistory.hideCommitViewExplorer":{"type":"boolean","default":false,"scope":"window","description":"Whether to display the commit explorer view"},"gitHistory.showEditorTitleMenuBarIcons":{"type":"boolean","default":true,"scope":"window","description":"Whether to display a button in the editor title menu bar"},"gitHistory.editorTitleButtonOpenRepo":{"type":"boolean","default":false,"scope":"window","description":"Prefer to open repository (instead of file) when pressing the editor title button"},"gitHistory.pageSize":{"type":"number","default":100,"scope":"window","description":"Default number of items to be displayed in Git History Viewer"},"gitHistory.avatarCacheExpiration":{"type":"integer","default":60,"scope":"window","description":"Avatar image cache expiration (0 = cache disabled)"},"gitHistory.sideBySide":{"type":"boolean","default":false,"scope":"application","description":"Show commit details in side-by-side view"},"gitHistory.logLevel":{"type":"string","default":"Info","enum":["None","Info","Debug"],"scope":"window","description":"Output log information"},"gitHistory.sourceCodeProviderIntegrationLocation":{"type":"string","enum":["Inline","More Actions"],"enumDescriptions":["Show the 'Git: View History' action on the title of SCM Providers","Show the 'Git: View History' action in the 'More Actions...' menu on the title of SCM Providers"],"default":"Inline","description":"Specifies where the 'Git: View History' action appears on the title of SCM Providers."}}}},"scripts":{"vscode:prepublish":"npm run lint && tsc --skipLibCheck -p ./ && webpack -p --progress","test-compile":"tsc --skipLibCheck --watch -p ./","test":"jest","test-extension":"node ./dist/test/runTest.js","webpack":"webpack -p --progress --colors","webpack-dev":"webpack --progress --colors --watch","lint":"eslint 'src/**/*.ts' && eslint 'browser/src/**/*.ts*'","fix":"eslint --fix \"src/**/*.ts\" && eslint --fix \"browser/src/**/*.ts*\"","precommit":"lint-staged","storybook":"start-storybook","build-storybook":"build-storybook"},"lint-staged":{"src/**/*.ts":["eslint"],"browser/**/*.{ts,tsx}":["eslint"]},"devDependencies":{"@storybook/addon-actions":"^6.3.2","@storybook/addon-info":"^5.3.17","@storybook/addon-links":"^5.3.17","@storybook/addons":"^5.3.17","@storybook/react":"^3.4.12","@types/chai":"^4.2.9","@types/clipboard":"^2.0.1","@types/fs-extra":"^8.0.0","@types/glob":"^7.1.1","@types/gravatar":"^1.4.28","@types/jest":"^25.1.3","@types/jest-cli":"^24.3.0","@types/node":"^13.7.6","@types/node-emoji":"^1.8.1","@types/query-string":"^6.3.0","@types/react":"^16.9.23","@types/react-bootstrap":"^0.32.20","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@types/react-router":"^5.1.4","@types/react-router-dom":"^5.1.3","@types/react-router-redux":"^5.0.18","@types/redux-actions":"^2.2.2","@types/vscode":"^1.46.0","@typescript-eslint/eslint-plugin":"^2.21.0","@typescript-eslint/parser":"^2.21.0","axios":"^0.21.4","babel-loader":"^8.0.6","bootstrap":"^3.4.1","chai":"^4.1.2","copy-webpack-plugin":"^6.1.1","css-loader":"^3.4.2","debounce":"^1.1.0","decache":"^4.3.0","eslint":"^6.8.0","eslint-config-prettier":"^6.10.0","eslint-plugin-prettier":"^3.1.2","extract-loader":"4.0.3","file-loader":"^5.1.0","glob":"^7.1.2","hint.css":"^2.4.1","husky":"^0.14.3","istanbul":"0.4.5","jest":"^25.1.0","jest-cli":"^25.1.0","jest-standard-reporter":"^1.0.4","lint-staged":"^10.0.8","node-emoji":"1.10.0","prettier":"^1.19.1","react":"^16.13.0","react-bootstrap":"^0.32.4","react-docgen-typescript-loader":"^3.7.1","react-dom":"^16.13.0","react-icons":"^3.9.0","react-redux":"^7.2.0","react-router":"^5.1.2","react-router-dom":"^5.1.2","react-router-redux":"^4.0.8","react-split-pane":"0.1.92","redux":"^4.0.5","redux-actions":"^2.2.1","redux-thunk":"2.3.0","remap-istanbul":"^0.13.0","simple-git":"^1.131.0","source-map-support":"^0.5.0","style-loader":"^1.1.3","ts-jest":"^26.4.0","ts-loader":"^6.2.1","ts-node":"^8.6.2","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"^3.8.2","vscode-test":"^1.5.2","webpack":"4.41.6","webpack-cli":"^3.3.11"},"dependencies":{"event-stream":"4.0.1","fs-extra":"^8.1.0","gravatar":"^1.8.1","hash.js":"^1.1.7","iconv-lite":"^0.5.1","inversify":"^5.0.1","query-string":"^6.13.7","reflect-metadata":"^0.1.12","stack-trace":"0.0.10","tmp":"0.1.0","vscode-extension-telemetry":"^0.1.1"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/donjayamanne.githistory-0.6.20","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Don Jayamanne","metadata":{"installedTimestamp":1745949951496,"source":"gallery","id":"5960f38e-0bbe-4644-8f9c-9c8824e82511","publisherId":"1ba8bd00-2ad1-4be0-a007-5b4b954c1ee7","publisherDisplayName":"Don Jayamanne","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1882916},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"waderyan.gitblame","uuid":"2335b326-c334-4e81-bc51-c408fcec6e7c"},"manifest":{"name":"gitblame","displayName":"Git Blame","description":"See git blame information in the status bar.","version":"11.1.2","publisher":"waderyan","engines":{"vscode":">=1.91.0","node":">=20.9.0"},"categories":["Other"],"galleryBanner":{"color":"#f0efe7","theme":"light"},"icon":"images/git_icon.png","activationEvents":["onStartupFinished"],"keywords":["git","gitblame","blame","github","gitlab","bitbucket"],"qna":false,"main":"./out/src/index","scripts":{"vscode:prepublish":"npm run build","build":"node esbuild.mts","package":"npx @vscode/vsce package","lint":"biome ci ./src","pretest":"tsc --project tsconfig.test.json","test":"npm run pretest && node ./out/test/run-test.js"},"devDependencies":{"@biomejs/biome":"1.8.3","@types/mocha":"10.0.10","@types/node":"20.14.6","@types/sinon":"17.0.3","@types/sinonjs__fake-timers":"8.1.5","@types/vscode":"1.91.0","@vscode/test-electron":"2.4.1","esbuild":"0.25.0","mocha":"10.7.3","sinon":"19.0.2","typescript":"5.7.3"},"homepage":"https://github.com/Sertion/vscode-gitblame/blob/main/README.md","bugs":{"url":"https://github.com/Sertion/vscode-gitblame/issues"},"license":"MIT","repository":{"type":"git","url":"https://github.com/Sertion/vscode-gitblame"},"extensionDependencies":["vscode.git"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":false,"description":"Git Blame (extension) executes command line tools in the workspace"}},"contributes":{"commands":[{"command":"gitblame.quickInfo","title":"Git Blame: Show quick info"},{"command":"gitblame.online","title":"Git Blame: View last change online"},{"command":"gitblame.addCommitHashToClipboard","title":"Git Blame: Copy hash to clipboard"},{"command":"gitblame.addToolUrlToClipboard","title":"Git Blame: Copy tool URL to clipboard"},{"command":"gitblame.gitShow","title":"Git Blame: Git show for current line hash"}],"colors":[{"id":"gitblame.inlineMessage","description":"Inline git blame message. Defaults to editorCodeLens.foreground","defaults":{"dark":"editorCodeLens.foreground","light":"editorCodeLens.foreground","highContrast":"editorCodeLens.foreground","highContrastLight":"editorCodeLens.foreground"}}],"configuration":{"type":"object","title":"Git Blame","properties":{"gitblame.infoMessageFormat":{"type":"string","default":"${commit.summary}","description":"Customize the info message"},"gitblame.statusBarMessageClickAction":{"type":"string","default":"Show info message","enum":["Show info message","Open tool URL","Open git show","Copy hash to clipboard"],"enumDescriptions":["Show a info message with a short summary of the commit","Attempt to directly open the tool URL","Run git show in a vscode terminal view","Copies the hash of the current line's commit to the clipboard"]},"gitblame.statusBarMessageFormat":{"type":"string","default":"Blame ${author.name} (${time.ago})","description":"Customize the status bar message"},"gitblame.statusBarMessageNoCommit":{"type":"string","default":"Not Committed Yet","description":"Customize the status bar message"},"gitblame.statusBarPositionPriority":{"type":"number","default":500,"description":"Priority where the status bar view should be placed"},"gitblame.inlineMessageEnabled":{"type":"boolean","default":false,"description":"Show blame information inline (next to the code)"},"gitblame.inlineMessageFormat":{"type":"string","default":"Blame ${author.name} (${time.ago})","description":"Customize the inline message"},"gitblame.inlineMessageNoCommit":{"type":"string","default":"Not Committed Yet","description":"Customize the inline message"},"gitblame.inlineMessageMargin":{"type":"number","default":2,"description":"The amount of margin between line and inline blame view"},"gitblame.currentUserAlias":{"type":"string","default":"","markdownDescription":"Replaces `${author.name}` and `${committer.name}` when the git config `user.email` matches the author's or committer's email address."},"gitblame.remoteName":{"type":"string","default":"origin","description":"The name of the git remote used to build the URL."},"gitblame.commitUrl":{"type":"string","default":"${tool.protocol}//${gitorigin.hostname}${gitorigin.port}${gitorigin.path}${tool.commitpath}${hash}","markdownDescription":"The link to an online tool to view a commit (use `${hash}` for the commit hash)."},"gitblame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Ignore whitespace changes when blaming (`-w` flag)"},"gitblame.isWebPathPlural":{"deprecationMessage":"This setting has been replaced by gitblame.pluralWebPathSubstrings"},"gitblame.pluralWebPathSubstrings":{"type":"array","default":["bitbucket","atlassian"],"markdownDescription":"An array of substrings that, when present in the git origin URL, adds an extra _s_ to the url after _commit_ in `gitblame.commitUrl`'s default behavior"},"gitblame.delayBlame":{"type":"number","default":0,"description":"This setting adds a delay (in milliseconds) before the blame is displayed"},"gitblame.parallelBlames":{"type":"number","minimum":1,"default":2,"description":"Limit allowed parallel git blame process count"},"gitblame.maxLineCount":{"type":"number","default":16384,"markdownDescription":"Will skip blaming files with **more** lines than this value"},"gitblame.revsFile":{"type":"array","default":[],"markdownDescription":"List of refs-file names to look for relative to the closest `.git`-folder. The first file in the list that is accessible will be used with the `-S`-argument in `git blame`."}}}}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/waderyan.gitblame-11.1.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Wade Anderson","metadata":{"installedTimestamp":1745949956066,"source":"gallery","id":"2335b326-c334-4e81-bc51-c408fcec6e7c","publisherId":"531ba7ca-0230-4a97-bfd1-0d02fdb02958","publisherDisplayName":"Wade Anderson","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":48255},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"codezombiech.gitignore","uuid":"3e891cf9-53cb-49a3-8d01-8f0b1f0afb29"},"manifest":{"name":"gitignore","displayName":"gitignore","description":"Lets you pull .gitignore templates from the https://github.com/github/gitignore repository. Language support for .gitignore files.","version":"0.10.0","author":"Marc-André Bühler","publisher":"codezombiech","icon":"icon.png","repository":{"type":"git","url":"https://github.com/CodeZombieCH/vscode-gitignore"},"bugs":{"url":"https://github.com/CodeZombieCH/vscode-gitignore/issues"},"homepage":"https://github.com/CodeZombieCH/vscode-gitignore","license":"MIT","engines":{"vscode":"^1.66.0"},"categories":["Programming Languages","Other"],"keywords":["multi-root ready"],"activationEvents":["onCommand:gitignore.addgitignore"],"main":"./dist/extension.js","contributes":{"commands":[{"command":"gitignore.addgitignore","title":"Add gitignore"}],"configuration":{"type":"object","title":"gitignore extension configuration","properties":{"gitignore.cacheExpirationInterval":{"type":"integer","default":3600,"description":"Number of seconds the list of `.gitignore` files retrieved from github will be cached"}}},"languages":[{"id":"gitignore","aliases":["Gitignore"],"filenames":[".gitignore"],"configuration":"./gitignore.configuration.json"}],"grammars":[{"language":"gitignore","scopeName":"text.gitignore","path":"./syntaxes/gitignore.json"}]},"scripts":{"vscode:prepublish":"npm run package","compile":"npm run check-types && npm run lint && node esbuild.js","watch":"npm-run-all -p watch:*","watch:esbuild":"node esbuild.js --watch","watch:tsc":"tsc --noEmit --watch --project tsconfig.json","package":"npm run check-types && npm run lint && node esbuild.js --production","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","check-types":"tsc --noEmit","lint":"eslint src","test":"vscode-test","vsce-package":"npx @vscode/vsce package"},"devDependencies":{"@eslint/js":"^9.21.0","@types/mocha":"^10.0.10","@types/node":"^22.13.5","@types/vscode":">=1.66.0 <1.67.0","@typescript-eslint/eslint-plugin":"^8.22.0","@typescript-eslint/parser":"^8.22.0","@vscode/test-cli":"^0.0.10","@vscode/test-electron":"^2.4.1","@vscode/vsce":"^3.2.2","esbuild":"^0.25.0","eslint":"^9.19.0","npm-run-all":"^4.1.5","typescript":"^5.7.3","typescript-eslint":"^8.25.0"},"dependencies":{"https-proxy-agent":"^7.0.6"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/codezombiech.gitignore-0.10.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"CodeZombie","metadata":{"installedTimestamp":1745949959193,"source":"gallery","id":"3e891cf9-53cb-49a3-8d01-8f0b1f0afb29","publisherId":"930310c4-ca8b-4e80-9d19-2b1507b2af61","publisherDisplayName":"CodeZombie","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":44373},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vivaxy.vscode-conventional-commits","uuid":"b6b26bce-33f4-4bce-bf92-89812388ed0a"},"manifest":{"name":"vscode-conventional-commits","displayName":"Conventional Commits","description":"💬Conventional Commits for VSCode.","icon":"assets/icon.png","publisher":"vivaxy","version":"1.26.0","engines":{"vscode":"^1.44.0"},"categories":["Snippets","SCM Providers"],"keywords":["git","commit","conventional-commits","gacp","conventional-changelog","commitizen","cz"],"repository":{"type":"git","url":"https://github.com/vivaxy/vscode-conventional-commits.git"},"author":"vivaxy","license":"MIT","bugs":{"url":"https://github.com/vivaxy/vscode-conventional-commits/issues"},"homepage":"https://github.com/vivaxy/vscode-conventional-commits","activationEvents":["onCommand:extension.conventionalCommits","onCommand:extension.conventionalCommits.resetGlobalState","onCommand:extension.conventionalCommits.showNewVersionNotes"],"main":"./dist/extension.js","contributes":{"commands":[{"command":"extension.conventionalCommits","title":"Conventional Commits","icon":{"dark":"./assets/menu-icon-dark.svg","light":"./assets/menu-icon-light.svg"}},{"command":"extension.conventionalCommits.resetGlobalState","title":"Conventional Commits: Reset Global State"},{"command":"extension.conventionalCommits.showNewVersionNotes","title":"Conventional Commits: Show Version Notes"}],"menus":{"scm/title":[{"when":"scmProvider == git","command":"extension.conventionalCommits","group":"navigation"}]},"configuration":{"title":"Conventional Commits","properties":{"conventionalCommits.autoCommit":{"type":"boolean","default":true,"markdownDescription":"Control whether the extension should commit files after: forming the message or closing the editor tab.\n\nWhen `#git.enableSmartCommit#` enabled and `#git.smartCommitChanges#` was set to `all`, It allows to commit all changes when there are no staged changes.\n\nAnd set `#git.postCommitCommand#` to `sync` to run `git.sync` after commit."},"conventionalCommits.storeScopesGlobally":{"type":"boolean","default":false,"markdownDescription":"Control whether the extension should store the defined scopes within your workspace settings or your user settings."},"conventionalCommits.silentAutoCommit":{"type":"boolean","default":false,"markdownDescription":"Control that auto commit should be silent, without focusing source control panel."},"conventionalCommits.emojiFormat":{"type":"string","default":"code","markdownDescription":"Specify which format will be shown in the `gitmoji`.","enum":["code","emoji"],"markdownEnumDescriptions":["Display as `:bug:`","Display as `🐛`"]},"conventionalCommits.gitmoji":{"type":"boolean","default":true,"markdownDescription":"Control whether the extension should prompt for a `gitmoji`."},"conventionalCommits.lineBreak":{"type":"string","default":"","markdownDescription":"Specify which word will be treated as line breaks in the `body`.\n\nBlank means no line breaks."},"conventionalCommits.promptBody":{"type":"boolean","default":true,"markdownDescription":"Control whether the extension should prompt for the `body` section."},"conventionalCommits.promptCI":{"type":"boolean","default":false,"markdownDescription":"Control whether the extension should prompt for skipping CI run."},"conventionalCommits.promptFooter":{"type":"boolean","default":true,"markdownDescription":"Control whether the extension should prompt for the `footer` section."},"conventionalCommits.promptScopes":{"type":"boolean","default":true,"markdownDescription":"Control whether the extension should prompt for the `scope` section."},"conventionalCommits.scopes":{"type":"array","default":[],"markdownDescription":"Specify available selections in the `scope` section."},"conventionalCommits.showEditor":{"type":"boolean","default":false,"markdownDescription":"Control whether the extension should show the commit message as a text document in a separate tab."},"conventionalCommits.showNewVersionNotes":{"type":"boolean","default":true,"markdownDescription":"Control whether the extension should show the new version notes."},"conventionalCommits.editor.keepAfterSave":{"type":"boolean","default":false,"markdownDescription":"Control whether the extension should keep the editor tab open, after saving the commit message."}}}},"scripts":{"vscode:prepublish":"webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch","compile":"tsc -p ./","watch":"tsc -watch -p ./","deploy":"vsce publish --yarn","build":"node prepare.js && vsce package","_build":"vsce package","prepare":"husky install"},"devDependencies":{"@types/node":"^16.0.0","@types/vscode":"^1.44.0","@vscode/vsce":"^2.16.0","clean-webpack-plugin":"^4.0.0","husky":"8","lint-staged":"^13.0.0","ovsx":"^0.5.0","pinst":"^3.0.0","prettier":"^2.0.2","standard-version":"^9.0.0","string-replace-loader":"^3.0.1","ts-loader":"^9.0.0","typescript":"^5.0.0","warnings-to-errors-webpack-plugin":"^2.0.1","webpack":"^5.76.0","webpack-cli":"^4.5.0"},"lint-staged":{"*.{js,ts,css,less,json,md,html,yml,yaml,pcss,jsx,tsx}":["prettier --write"]},"dependencies":{"@commitlint/cli":"^13.0.0","@commitlint/config-conventional":"^13.0.0","@commitlint/load":"^13.0.0","@commitlint/rules":"^13.0.0","@yi-xu-0100/conventional-commit-types-i18n":"1.6.0"},"commitlint":{"extends":["@commitlint/config-conventional"]}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/vivaxy.vscode-conventional-commits-1.26.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"vivaxy","metadata":{"installedTimestamp":1745949962242,"source":"gallery","id":"b6b26bce-33f4-4bce-bf92-89812388ed0a","publisherId":"cd0bc23b-0195-4718-a6dd-c6611ee1c8bf","publisherDisplayName":"vivaxy","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":752509},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"arturock.gitstash","uuid":"c6f98943-7f9b-4776-b2a8-409227a481e2"},"manifest":{"name":"gitstash","displayName":"Git Stash","description":"Give extra stash abilities to Code. Visually browse stashes, review and extract changes. Get all stash commands and more.","version":"5.2.0","publisher":"arturock","license":"MIT","icon":"resources/logo.png","galleryBanner":{"color":"#555555","theme":"dark"},"engines":{"vscode":"^1.52.0"},"categories":["Other"],"keywords":["git","stash","git stash","diff","stash diff","multi-root ready"],"homepage":"https://github.com/arturock/vscode-gitstash/blob/master/README.md","repository":{"type":"git","url":"https://github.com/arturock/vscode-gitstash.git"},"bugs":{"url":"https://github.com/arturock/vscode-gitstash/issues"},"main":"./dist/extension","activationEvents":["*"],"capabilities":{"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"type":"object","title":"GitStash","properties":{"gitstash.advanced.repositorySearchDepth":{"type":"integer","default":1,"description":"Search depth for finding repositories on subdirectories. If value is negative parent directory repositories will be searched"},"gitstash.explorer.enabled":{"type":"boolean","default":true,"description":"Shows or hides the explorer on startup"},"gitstash.explorer.buttons":{"type":"boolean","default":true,"description":"Shows or hides the explorer tree buttons"},"gitstash.explorer.items.repository.labelContent":{"type":"string","default":"${name}","description":"Specifies the format for each repository label\nAvailable tokens:\n${name} - the repository name\n${directory} - the repository directory base name\n${path} - the repository directory path\n${stashesCount} - the number of stashes on the repository"},"gitstash.explorer.items.repository.descriptionContent":{"type":"string","default":"(${stashesCount})","description":"Specifies the format for each repository description\nAvailable tokens:\nSame than repository.labelContent"},"gitstash.explorer.items.repository.tooltipContent":{"type":"string","default":"${path}\n└─ ${name}\n\t${stashesCount} stashes","description":"Specifies the format for each repository tooltip\nAvailable tokens:\nSame than repository.labelContent","editPresentation":"multilineText"},"gitstash.explorer.items.repository.to-clipboardContent":{"type":"string","default":"${name} - ${path}${directory} (${stashesCount} stashes)","description":"Specifies repository data to be set on clipboard\nAvailable tokens:\nSame than repository.labelContent"},"gitstash.explorer.items.stash.labelContent":{"type":"string","default":"${description}","description":"Specifies the format for each stash label\nAvailable tokens:\n${branch} - the branch where the stash was created\n${description} - the custom or default description for the stash\n${dateTimeLong} - the creation date & time, long format\n${dateTimeSmall} - the creation date & time, medium format\n${dateSmall} - the creation date, small format\n${dateTimeIso} - the creation date & time, ISO format\n${dateIso} - the creation date, ISO format\n${ago} - the creation date, ago format\n${index} - the stash index"},"gitstash.explorer.items.stash.descriptionContent":{"type":"string","default":"${branch}, ${dateSmall}","description":"Specifies the format for each stash description \nAvailable tokens:\nSame than stash.labelContent"},"gitstash.explorer.items.stash.tooltipContent":{"type":"string","default":"#${index}  ${dateTimeLong}\n${branch}, ${ago}\n\n${description}","description":"Specifies the format for each stash tooltip \nAvailable tokens:\nSame than stash.labelContent","editPresentation":"multilineText"},"gitstash.explorer.items.stash.popAndApply":{"type":"string","enum":["pop","apply"],"enumDescriptions":["Pop as button, apply as context option","Apply as button, pop as context option"],"default":"pop","description":"Defines if pop or apply will be set as item button (and the secondary action as context menu option)"},"gitstash.explorer.items.stash.diffButton":{"type":"string","enum":["changes-current","current-changes","source-current","current-source"],"enumDescriptions":["Stash changes ⟷ Current","Current ⟷ Stash changes","Stash source ⟷ Current","Current ⟷ Stash source"],"default":"changes-current","description":"Defines which comparison to display from a file diff button"},"gitstash.explorer.items.stash.to-clipboardContent":{"type":"string","default":"#${index} [${branch}] ${description}","description":"Specifies stash data to be set on clipboard\nAvailable tokens:\nSame than stash.labelContent"},"gitstash.explorer.items.file.icons":{"type":"string","enum":["file","letter","dot"],"enumDescriptions":["Show the icon corresponding the file type","Show the classic letter icon","Show a dot indicator"],"default":"file","description":"Defines the icon to show on files"},"gitstash.explorer.items.file.decoration":{"type":"string","enum":["none","badge","color","badge-color"],"enumDescriptions":["Do not add decorations","Add badge","Add colors","Add badge and colors"],"default":"badge-color","description":"Adds decorations to the tree items"},"gitstash.explorer.items.file.labelContent":{"type":"string","default":"${filename}","description":"Specifies the format for each file label\nAvailable tokens:\n${filename} - the file name\n${filepath} - the file path\n${type} - the change type"},"gitstash.explorer.items.file.descriptionContent":{"type":"string","default":"${filepath}","description":"Specifies the format for each file description \nAvailable tokens:\nSame than file.labelContent"},"gitstash.explorer.items.file.tooltipContent":{"type":"string","default":"${filepath}\n└─ ${filename}\n\t• ${type}","description":"Specifies the format for each file tooltip \nAvailable tokens:\nSame than file.labelContent","editPresentation":"multilineText"},"gitstash.explorer.items.file.to-clipboardContent":{"type":"string","default":"${filename} [${type}] - ${filepath}","description":"Specifies file data to be set on clipboard\nAvailable tokens:\n${oldName} - the previous name\nSame than file.labelContent"},"gitstash.explorer.items.renamedFile.labelContent":{"type":"string","default":"${filename}","description":"Specifies the format for each renamed file label\nAvailable tokens:\n${filename} - the file name\n${oldFilename} - the previous file name\n${filepath} - the file path\n${type} - the change type"},"gitstash.explorer.items.renamedFile.descriptionContent":{"type":"string","default":"${filepath}","description":"Specifies the format for each renamed file description \nAvailable tokens:\nSame than renamedFile.labelContent"},"gitstash.explorer.items.renamedFile.tooltipContent":{"type":"string","default":"${filepath}\n└─ ${filename} ← ${oldFilename}\n\t• ${type}","description":"Specifies the format for each renamed file tooltip \nAvailable tokens:\nSame than renamedFile.labelContent","editPresentation":"multilineText"},"gitstash.explorer.items.renamedFile.to-clipboardContent":{"type":"string","default":"${filename} [${type}:${oldName}] - ${filepath}","description":"Specifies file data to be set on clipboard\nAvailable tokens:\nSame than renamedFile.labelContent"},"gitstash.explorer.eagerLoadStashes":{"type":"boolean","default":true,"description":"If enabled, stashes will be preloaded instead of lazy loaded.\nThis is required to see the stashes count but may degrade performance if theres too much data"},"gitstash.explorer.itemDisplayMode":{"type":"string","enum":["show-empty","hide-empty","indicate-empty"],"enumDescriptions":["Empty repositories will be listed","Empty repositories will be hidden","Empty repositories will show a message"],"default":"indicate-empty","description":"Configures if empty repositories should be listed, hidden or indicate its emptiness.\n* This setting only applies if stashes are configured to be preloaded"},"gitstash.editor.diffTitleFormat":{"type":"string","default":"#${stashIndex}: ${filename}  ${hint} (${filepath})","description":"Specifies the format for the diff editor title\nAvailable tokens:\n${filename} - the file name\n${filepath} - the file path\n${fileIndex} - the file index\n${dateTimeLong} - the stash date & time, long format\n${dateTimeSmall} - the stash date & time, medium format\n${dateSmall} - the stash date, small format\n${dateTimeIso} - the stash date & time, ISO format\n${dateIso} - the stash date, ISO format\n${ago} - the stash date, ago format\n${description} - the stash description\n${branch} - the stash branch\n${stashIndex} - the stash index\n${type} - the change type on the file like 'Modified' or 'Deleted'\n${hint} - like ${type} but indicates also the editor position of the change"},"gitstash.log.autoclear":{"type":"boolean","default":false,"description":"Clears the log window before showing the action result"}}},"commands":[{"command":"gitstash.explorer.toggle","title":"Toggle explorer","category":"GitStash"},{"command":"gitstash.explorer.refresh","title":"Refresh explorer","category":"GitStash","icon":"$(refresh)"},{"command":"gitstash.stash","title":"Stash...","category":"GitStash","icon":{"light":"resources/icons/light/stash-push.svg","dark":"resources/icons/dark/stash-push.svg"}},{"command":"gitstash.clear","title":"Clear","category":"GitStash","icon":{"light":"resources/icons/light/clear.svg","dark":"resources/icons/dark/clear.svg"}},{"command":"gitstash.openDir","title":"Open directory","category":"GitStash"},{"command":"gitstash.pop","title":"Pop...","category":"GitStash","icon":{"light":"resources/icons/light/stash-pop.svg","dark":"resources/icons/dark/stash-pop.svg"}},{"command":"gitstash.apply","title":"Apply...","category":"GitStash","icon":{"light":"resources/icons/light/stash-pop.svg","dark":"resources/icons/dark/stash-pop.svg"}},{"command":"gitstash.drop","title":"Drop...","category":"GitStash","icon":"$(trash)"},{"command":"gitstash.branch","title":"Branch...","category":"GitStash"},{"command":"gitstash.diffChangesCurrent","title":"Compare Stash changes ⟷ Current","category":"GitStash","icon":"$(git-compare)"},{"command":"gitstash.diffCurrentChanges","title":"Compare Current ⟷ Stash changes","category":"GitStash","icon":"$(git-compare)"},{"command":"gitstash.diffSourceCurrent","title":"Compare Stash source ⟷ Current","category":"GitStash","icon":"$(git-compare)"},{"command":"gitstash.diffCurrentSource","title":"Compare Current ⟷ Stash source","category":"GitStash","icon":"$(git-compare)"},{"command":"gitstash.applySingle","title":"Stage changes","category":"GitStash","icon":"$(add)"},{"command":"gitstash.createSingle","title":"Stage changes","category":"GitStash","icon":"$(add)"},{"command":"gitstash.openCurrent","title":"Open file","category":"GitStash","icon":"$(go-to-file)"},{"command":"gitstash.stashSelected","title":"Stash selected files...","category":"GitStash"},{"command":"gitstash.clipboardRepositoryPath","title":"Repository path","category":"GitStash"},{"command":"gitstash.clipboardStashMessage","title":"Stash message","category":"GitStash"},{"command":"gitstash.clipboardFilePath","title":"File path","category":"GitStash"},{"command":"gitstash.clipboardInfo","title":"Information","category":"GitStash"}],"views":{"scm":[{"id":"gitstash.explorer","name":"Stashes","when":"hasGitRepository && gitstash.explorer.enabled"}]},"menus":{"commandPalette":[{"command":"gitstash.explorer.refresh","when":"hasGitRepository && gitstash.explorer.enabled"},{"command":"gitstash.explorer.toggle","when":"hasGitRepository"},{"command":"gitstash.stash","when":"hasGitRepository"},{"command":"gitstash.stashSelected","when":"false"},{"command":"gitstash.clear","when":"hasGitRepository"},{"command":"gitstash.openDir","when":"false"},{"command":"gitstash.pop","when":"hasGitRepository"},{"command":"gitstash.apply","when":"hasGitRepository"},{"command":"gitstash.branch","when":"hasGitRepository"},{"command":"gitstash.drop","when":"hasGitRepository"},{"command":"gitstash.applySingle","when":"false"},{"command":"gitstash.createSingle","when":"false"},{"command":"gitstash.openCurrent","when":"false"},{"command":"gitstash.diffChangesCurrent","when":"false"},{"command":"gitstash.diffCurrentChanges","when":"false"},{"command":"gitstash.diffSourceCurrent","when":"false"},{"command":"gitstash.diffCurrentSource","when":"false"},{"command":"gitstash.clipboardRepositoryPath","when":"false"},{"command":"gitstash.clipboardStashMessage","when":"false"},{"command":"gitstash.clipboardFilePath","when":"false"},{"command":"gitstash.clipboardInfo","when":"false"}],"scm/resourceState/context":[{"command":"gitstash.stashSelected","when":"scmProvider == git && scmResourceGroup =~ /^workingTree|index$/"}],"view/title":[{"command":"gitstash.explorer.refresh","when":"view == gitstash.explorer && config.gitstash.explorer.buttons","group":"navigation"}],"view/item/context":[{"command":"gitstash.stash","when":"view == gitstash.explorer && viewItem == repository","group":"inline@1"},{"command":"gitstash.clear","when":"view == gitstash.explorer && viewItem == repository","group":"inline@2"},{"command":"gitstash.openDir","when":"view == gitstash.explorer && viewItem == repository","group":"menu@1"},{"command":"gitstash.apply","when":"view == gitstash.explorer && viewItem == stash && config.gitstash.explorer.items.stash.popAndApply == apply","group":"inline@1"},{"command":"gitstash.pop","when":"view == gitstash.explorer && viewItem == stash && config.gitstash.explorer.items.stash.popAndApply == pop","group":"inline@1"},{"command":"gitstash.drop","when":"view == gitstash.explorer && viewItem == stash","group":"inline@2"},{"command":"gitstash.apply","when":"view == gitstash.explorer && viewItem == stash && config.gitstash.explorer.items.stash.popAndApply != apply","group":"menu@1"},{"command":"gitstash.pop","when":"view == gitstash.explorer && viewItem == stash && config.gitstash.explorer.items.stash.popAndApply != pop","group":"menu@1"},{"command":"gitstash.branch","when":"view == gitstash.explorer && viewItem == stash","group":"menu@2"},{"command":"gitstash.openCurrent","when":"view == gitstash.explorer && viewItem =~ /file:(modified|indexAdded|renamed)/","group":"inline@1"},{"command":"gitstash.diffChangesCurrent","when":"view == gitstash.explorer && viewItem =~ /file/ && config.gitstash.explorer.items.stash.diffButton == changes-current","group":"inline@2"},{"command":"gitstash.diffCurrentChanges","when":"view == gitstash.explorer && viewItem =~ /file/ && config.gitstash.explorer.items.stash.diffButton == current-changes","group":"inline@2"},{"command":"gitstash.diffSourceCurrent","when":"view == gitstash.explorer && viewItem =~ /file/ && config.gitstash.explorer.items.stash.diffButton == source-current","group":"inline@2"},{"command":"gitstash.diffCurrentSource","when":"view == gitstash.explorer && viewItem =~ /file/ && config.gitstash.explorer.items.stash.diffButton == current-source","group":"inline@2"},{"command":"gitstash.applySingle","when":"view == gitstash.explorer && viewItem =~ /file:(modified|indexAdded)/","group":"inline@3"},{"command":"gitstash.createSingle","when":"view == gitstash.explorer && viewItem =~ /file:(untracked)/","group":"inline@3"},{"submenu":"file.compare","when":"view == gitstash.explorer && viewItem =~ /file/","group":"file_compare"},{"submenu":"node.clipboard","when":"view == gitstash.explorer","group":"node_clipboard"}],"file.compare":[{"command":"gitstash.diffChangesCurrent","when":"viewItem =~ /modified|indexAdded|renamed/ && config.gitstash.explorer.items.stash.diffButton != changes-current","group":"file_compare@1"},{"command":"gitstash.diffCurrentChanges","when":"viewItem =~ /modified|indexAdded|renamed/ && config.gitstash.explorer.items.stash.diffButton != current-changes","group":"file_compare@2"},{"command":"gitstash.diffSourceCurrent","when":"viewItem =~ /modified|renamed|deleted/ && config.gitstash.explorer.items.stash.diffButton != source-current","group":"file_compare@3"},{"command":"gitstash.diffCurrentSource","when":"viewItem =~ /modified|renamed|deleted/ && config.gitstash.explorer.items.stash.diffButton != current-source","group":"file_compare@4"}],"node.clipboard":[{"command":"gitstash.clipboardRepositoryPath","when":"view == gitstash.explorer && viewItem == repository","group":"node_clipboard_copy@1"},{"command":"gitstash.clipboardStashMessage","when":"view == gitstash.explorer && viewItem == stash","group":"node_clipboard_copy@1"},{"command":"gitstash.clipboardFilePath","when":"view == gitstash.explorer && viewItem =~ /file/","group":"node_clipboard_copy@1"},{"command":"gitstash.clipboardInfo","group":"node_clipboard_copy@2"}]},"submenus":[{"id":"file.compare","label":"Compare"},{"id":"node.clipboard","label":"Copy"}]},"scripts":{"lint":"eslint -c .eslintrc.js --ext .ts ./src","lint-fix":"npm run lint -- --fix","vscode:prepublish":"npm run lint && webpack --mode development","webpack":"webpack --mode development","webpack-dev":"webpack --watch --mode development","test":"node ./out/test/runTest.js"},"dependencies":{"tmp":"0.2.1"},"devDependencies":{"@types/glob":"^8.1.0","@types/mocha":"^10.0.1","@types/node":"12.12.70","@types/tmp":"0.2.3","@types/vscode":"1.52.0","@typescript-eslint/eslint-plugin":"^5.59.1","@typescript-eslint/parser":"^5.59.1","eslint":"^8.39.0","ts-loader":"^9.4.2","typescript":"^5.0.4","vscode-test":"^1.6.1","webpack":"^5.81.0","webpack-cli":"^5.0.2"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/arturock.gitstash-5.2.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Arturo Rodríguez","metadata":{"installedTimestamp":1745949965679,"source":"gallery","id":"c6f98943-7f9b-4776-b2a8-409227a481e2","publisherId":"43f7d7f1-b833-4e1f-ba0a-932984c77979","publisherDisplayName":"Arturo Rodríguez","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":403944},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"buianhthang.gitflow","uuid":"13c1bf1d-8463-463c-ae7f-eeb77c6c61ec"},"manifest":{"name":"gitflow","displayName":"gitflow","description":"Gitflow integration and support in Visual Studio Code","version":"2.1.0","publisher":"buianhthang","repository":{"type":"git","url":"https://github.com/buianhthang/vscode-gitflow"},"bugs":{"url":"https://github.com/buianhthang/vscode-gitflow/issues"},"homepage":"https://github.com/buianhthang/vscode-gitflow","keywords":["git","flow"],"engines":{"vscode":"^1.45.0"},"categories":["Other"],"galleryBanner":{"color":"#09585e","theme":"dark"},"icon":"res/icon_128.png","activationEvents":["*"],"main":"./out/src/extension","contributes":{"commands":[{"command":"gitflow.initialize","title":"Initialize repository for gitflow","category":"Gitflow"},{"command":"gitflow.featureStart","title":"Feature: start","category":"Gitflow"},{"command":"gitflow.featureRebase","title":"Feature: rebase","category":"Gitflow"},{"command":"gitflow.featureFinish","title":"Feature: finish","category":"Gitflow"},{"command":"gitflow.bugfixStart","title":"Bugfix: start","category":"Gitflow"},{"command":"gitflow.bugfixRebase","title":"Bugfix: rebase","category":"Gitflow"},{"command":"gitflow.bugfixFinish","title":"Bugfix: finish","category":"Gitflow"},{"command":"gitflow.releaseStart","title":"Release: start","category":"Gitflow"},{"command":"gitflow.releaseFinish","title":"Release: finish","category":"Gitflow"},{"command":"gitflow.hotfixStart","title":"Hotfix: start","category":"Gitflow"},{"command":"gitflow.hotfixFinish","title":"Hotfix: finish","category":"Gitflow"}],"configuration":{"properties":{"gitflow.squashFeatureDuringMerge":{"type":"boolean","default":false,"description":"Squash feature during merge"},"gitflow.deleteBranchOnFinish":{"type":"boolean","default":true,"description":"After finishing a branch, delete the branch"},"gitflow.deleteRemoteBranches":{"type":"boolean","default":true,"description":"If true, and `gitflow.deleteBranchOnFinish` is true, remote branches will be deleted when finishing a branch"},"gitflow.default.development":{"type":"string","default":"develop","description":"Default name for the development branch [develop]"},"gitflow.default.production":{"type":"string","default":"master","description":"Default name for the production branch [master]"}}}},"scripts":{"vscode:prepublish":"./node_modules/typescript/bin/tsc -p ./","compile":"./node_modules/typescript/bin/tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"~13.13.5","@types/vscode":"1.45.0","mocha":"^7.1.2","typescript":"^3.8.3"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/buianhthang.gitflow-2.1.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Bui Anh Thang","metadata":{"installedTimestamp":1745949969089,"source":"gallery","id":"13c1bf1d-8463-463c-ae7f-eeb77c6c61ec","publisherId":"dae75a5b-300c-43c7-887f-fdda47e2c5d0","publisherDisplayName":"Bui Anh Thang","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":314373},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"felipecaputo.git-project-manager","uuid":"2bba45f2-4a48-41a6-bb86-d6ba5ab29a9f"},"manifest":{"name":"git-project-manager","displayName":"Git Project Manager","description":"Allows you to change easily between git projects.","icon":"img/icon.png","version":"1.8.2","publisher":"felipecaputo","galleryBanner":{"color":"#202040","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","bugs":{"url":"https://github.com/felipecaputo/git-project-manager/issues","email":"felipe.caputo@gmail.com"},"homepage":"https://github.com/felipecaputo/git-project-manager/blob/master/README.md","repository":{"type":"git","url":"https://github.com/felipecaputo/git-project-manager.git"},"engines":{"vscode":"^1.61.0"},"categories":["Other"],"activationEvents":["onCommand:gitProjectManager.openProject","onCommand:gitProjectManager.openProjectNewWindow","onCommand:gitProjectManager.refreshProjects","onCommand:gitProjectManager.refreshFolder","onCommand:gitProjectManager.openRecents","onCommand:gitProjectManager.openSubFolder","onStartupFinished"],"contributes":{"configuration":{"type":"object","title":"Git Project Manager configuration","properties":{"gitProjectManager.baseProjectsFolders":{"type":"array","default":[],"description":"Specifies the base folders to search for git repositories"},"gitProjectManager.storeRepositoriesBetweenSessions":{"type":"boolean","default":false,"description":"Specifies whether saves repository folders' data between sessions"},"gitProjectManager.ignoredFolders":{"type":"array","default":[],"description":"Specifies folders to be ignored. (node_modules for example), improving search performance"},"gitProjectManager.maxDepthRecursion":{"type":"integer","default":4,"description":"Indicate the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit"},"gitProjectManager.checkRemoteOrigin":{"type":"boolean","default":true,"description":"Indicates if extension will validate and get the remote origin of the git repository"},"gitProjectManager.openInNewWindow":{"type":"boolean","default":false,"description":"Define the behavior when opening a new project, if true a new VSCode will be opened with the selected project"},"gitProjectManager.warnIfFolderNotFound":{"type":"boolean","default":false,"description":"Define if extension should show a warn if a configured project folder is not found while searching for projects"},"gitProjectManager.unversionedProjects":{"type":"array","default":[],"description":"Allows to list projects that are not versioned in \"List Repositories\" command"},"gitProjectManager.recentProjectsListSize":{"type":"integer","default":5,"description":"Number of recent projects to be kept to use with GPM - Open Recent"},"gitProjectManager.searchInsideProjects":{"type":"boolean","default":true,"description":"Define if extension should look for Git projects inside other Git projects."},"gitProjectManager.supportsMercurial":{"type":"boolean","default":false,"description":"Define if extension should look for Mercurial projects too."},"gitProjectManager.supportsSVN":{"type":"boolean","default":false,"description":"Define if extension should look for for SVN projects too."},"gitProjectManager.displayProjectPath":{"type":"boolean","default":false,"description":"Indicates if project path will be displayed in project picker."}}},"commands":[{"command":"gitProjectManager.openProject","title":"Open Git Project","category":"GPM"},{"command":"gitProjectManager.openProjectNewWindow","title":"Open Git Project in a New Window","category":"GPM"},{"command":"gitProjectManager.refreshProjects","title":"Refresh Projects","category":"GPM"},{"command":"gitProjectManager.refreshFolder","title":"Refresh specific projects folder","category":"GPM"},{"command":"gitProjectManager.openRecents","title":"Open Recent Git Project","category":"GPM"},{"command":"gitProjectManager.openSubFolder","title":"Open Git Project from SubFolder","category":"GPM"}],"keybindings":[{"key":"ctrl+alt+p","mac":"cmd+alt+p","command":"gitProjectManager.openProject"},{"key":"alt+shift+p","mac":"alt+shift+p","command":"gitProjectManager.openSubFolder"},{"key":"ctrl+alt+n","mac":"cmd+alt+n","command":"gitProjectManager.openProjectNewWindow"},{"key":"ctrl+shift+q","mac":"cmd+alt+q","command":"gitProjectManager.openRecents"}]},"main":"./out/extension.js","devDependencies":{"@types/chai":"^4.2.22","@types/crypto-js":"^4.0.2","@types/glob":"^7.1.4","@types/mocha":"^9.0.0","@types/node":"^16.11.0","@types/rimraf":"^3.0.2","@types/sinon":"^10.0.4","@types/vscode":"^1.61.0","@typescript-eslint/eslint-plugin":"^5.0.0","@typescript-eslint/parser":"^5.0.0","chai":"^4.3.4","eslint":"^8.0.1","mocha":"^9.1.3","rimraf":"^3.0.2","sinon":"^11.1.2","typescript":"^4.4.4","vscode-test":"^1.6.1"},"scripts":{"vscode:prepublish":"npm run compile","postcompile":"mkdir -p out/test/suite/repo-info-test && cp -R src/test/suite/repo-info-test/*  out/test/suite/repo-info-test","compile":"./node_modules/typescript/bin/tsc -p ./","lint":"eslint src --ext ts","watch":"./node_modules/typescript/bin/tsc -watch -p ./","pretest":"npm run compile","test":"node ./out/test/runTest.js"},"dependencies":{"crypto-js":"^4.1.1","walker":"^1.0.7"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/felipecaputo.git-project-manager-1.8.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Felipe Caputo","metadata":{"installedTimestamp":1745949972922,"source":"gallery","id":"2bba45f2-4a48-41a6-bb86-d6ba5ab29a9f","publisherId":"d2106b92-11a5-4945-97e5-0a0734c7a55c","publisherDisplayName":"Felipe Caputo","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":784633},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ahmadawais.emoji-log-vscode","uuid":"b23a567f-1508-412b-b8db-feb335fd72f3"},"manifest":{"name":"emoji-log-vscode","displayName":"Emoji Log","description":"Emoji-Log — An Emoji Git commit log messages spec standard. [ 📦👌🐛📖🚀🤖 ‼️ ].","version":"1.3.0","author":{"name":"Ahmad Awais","email":"me@AhmadAwais.com"},"publisher":"ahmadawais","license":"MIT","repository":{"type":"git","url":"https://github.com/ahmadawais/Emoji-Log-VSCode"},"engines":{"vscode":"^1.75.0"},"galleryBanner":{"color":"#fad000"},"keywords":["Emoji Log","Emoji Log VSCode","git","emoji","commit","messages"],"categories":["Other"],"icon":"images/icon.png","activationEvents":["onCommand:extension.EmojiLog"],"main":"./out/extension.js","contributes":{"commands":[{"command":"extension.EmojiLog","title":"Emoji Log: Create Emoji Log git commit message [📦👌🐛📖🚀🤖 ‼️]","icon":{"dark":"images/icon_dark.svg","light":"images/icon_light.svg"}}],"menus":{"scm/title":[{"when":"scmProvider == git","command":"extension.EmojiLog","group":"navigation"}]}},"badges":[{"url":"https://img.shields.io/badge/SUPPORT%20THIS%20PROJECT-Become%20a%20VSCode%20Power%20User%20%E2%86%92-gray.svg?colorA=131217&colorB=5734F5&style=flat","href":"https://VSCode.pro/?utm_source=EmojiLogVSCode","description":"Support this project!"}],"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","pretest":"npm run compile"},"devDependencies":{"@types/glob":"^8.0.1","@types/mocha":"^10.0.1","@types/node":"^18.13.0","@types/vscode":"^1.75.1","glob":"^8.1.0","mocha":"^10.2.0","tslint":"^6.1.3","typescript":"^4.9.5"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ahmadawais.emoji-log-vscode-1.3.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Ahmad Awais ⚡","metadata":{"installedTimestamp":1745949976532,"source":"gallery","id":"b23a567f-1508-412b-b8db-feb335fd72f3","publisherId":"530c7464-efca-4776-9142-c6f0aeb4084e","publisherDisplayName":"Ahmad Awais ⚡","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1354677},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"shyykoserhiy.git-autoconfig","uuid":"dd008134-58b1-49df-8fe2-fb34ded873fb"},"manifest":{"name":"git-autoconfig","displayName":"git-autoconfig","description":"Automatic git config user.email and user.name setting for vscode","version":"0.0.2","publisher":"shyykoserhiy","license":"MIT","engines":{"vscode":"^1.10.0"},"icon":"media/icon.png","galleryBanner":{"color":"#000","theme":"dark"},"repository":{"type":"git","url":"https://github.com/ShyykoSerhiy/git-autoconfig.git"},"categories":["Other"],"activationEvents":["*"],"main":"./out/src/extension","contributes":{"commands":[{"command":"git-autoconfig.getConfig","title":"git-autoconfig: Get Config"},{"command":"git-autoconfig.setConfig","title":"git-autoconfig: Set Config"},{"command":"git-autoconfig.unignoreRoot","title":"git-autoconfig: Unignore current project root"},{"command":"git-autoconfig.ignoreRoot","title":"git-autoconfig: Ignore current project root"}],"configuration":{"type":"object","title":"git-autoconfig configuration","properties":{"git-autoconfig.configList":{"type":"array","items":{"type":"object","title":"inner objects","properties":{"user.email":{"type":"string","description":"email associated with git account"},"user.name":{"type":"string","description":"name associated with git account"}}},"default":[],"description":"List of local git configs in format [{'user.email': 'Marvolo@Riddle.Tom', 'user.name': 'Tom Marvolo Riddle'}]"},"git-autoconfig.ignoreRootList":{"type":"array","description":"List of roots where this extension should be ignored","items":{"type":"string"}},"git-autoconfig.queryInterval":{"type":"integer","default":5000,"description":"Interval for querying of git config in ms"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^8.0.3","@types/node":"^6.0.40","mocha":"^8.1.3","typescript":"^3.9.7","vscode":"^1.0.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/shyykoserhiy.git-autoconfig-0.0.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"shyykoserhiy","metadata":{"installedTimestamp":1745949981706,"source":"gallery","id":"dd008134-58b1-49df-8fe2-fb34ded873fb","publisherId":"9d5baa6a-45a1-4148-9464-10076a02e3ec","publisherDisplayName":"shyykoserhiy","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":408662},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"mtxr.sqltools","uuid":"6a2bbab0-d8f0-43fa-9b26-e6a3b7892a0b"},"manifest":{"name":"sqltools","displayName":"SQLTools","description":"Connecting users to many of the most commonly used databases. Welcome to database management done right.","version":"0.28.4","publisher":"mtxr","license":"MIT","preview":false,"repository":{"url":"https://github.com/mtxr/vscode-sqltools.git","type":"git"},"homepage":"https://vscode-sqltools.mteixeira.dev/?umd_source=marketplace&utm_medium=readme&utm_campaign=ext","bugs":{"url":"https://github.com/mtxr/vscode-sqltools/issues"},"main":"./dist/extension.js","author":"Matheus Teixeira <me@mteixeira.dev>","private":true,"engines":{"vscode":"^1.78.0"},"categories":["Programming Languages","Snippets","Formatters","Other"],"keywords":["cassandra","cockroach","cql","database","db","db2","dba","formatter","ibm_db","intersystems","intersystems caché","intersystems iris","mssql","mysql","oracle","oracledb","postgres","postgresql","redshift","rdbms","dbms","sql server","sql","sqlite","sqlplus","sqltools","sap","saphana"],"galleryBanner":{"theme":"dark","color":"#555555"},"icon":"icons/icon-128.png","badges":[{"description":"LICENSE","url":"https://img.shields.io/github/license/mtxr/vscode-sqltools?style=for-the-badge","href":"https://github.com/mtxr/vscode-sqltools/blob/dev/LICENSE.md"}],"activationEvents":["*"],"contributes":{"authentication":[{"id":"sqltools-driver-credentials","label":"SQLTools Driver Credentials"}],"colors":[{"id":"sqltools.currentQueryBg","description":"Background decoration color for current query","defaults":{"dark":"#00a2ff20","light":"#00a2ff20","highContrast":"#00a2ff20"}},{"id":"sqltools.currentQueryOutline","description":"Background decoration color for current query","defaults":{"dark":"#00a2ff20","light":"#00a2ff20","highContrast":"#00a2ff20"}}],"languages":[{"id":"sql","extensions":[".sql",".dsql"],"aliases":["SQL","sql"],"firstLine":"^[\\s\\t]*--[\\s\\t]*\\b[sS][qQ][lL]\\b","configuration":"./language/language-configuration.json"}],"grammars":[{"language":"sql","scopeName":"source.sql","path":"./language/sql.tmLanguage.json"}],"commands":[{"title":"Connect","command":"sqltools.selectConnection","category":"SQLTools","icon":{"light":"icons/connect-light.svg","dark":"icons/connect-dark.svg"}},{"title":"Disconnect","command":"sqltools.closeConnection","category":"SQLTools","icon":{"light":"icons/disconnect-light.svg","dark":"icons/disconnect-dark.svg"}},{"title":"Bookmark Selected Query","command":"sqltools.bookmarkSelection","category":"SQLTools Bookmarks","icon":{"light":"icons/add-light.svg","dark":"icons/add-dark.svg"}},{"title":"Clear","command":"sqltools.clearBookmarks","category":"SQLTools Bookmarks","icon":{"light":"icons/trash-light.svg","dark":"icons/trash-dark.svg"}},{"title":"Delete","command":"sqltools.deleteBookmark","category":"SQLTools Bookmarks"},{"title":"Edit","command":"sqltools.editBookmark","category":"SQLTools Bookmarks","icon":{"light":"icons/edit-light.svg","dark":"icons/edit-dark.svg"}},{"title":"Run","command":"sqltools.runFromBookmarks","category":"SQLTools Bookmarks","icon":{"light":"icons/run-light.svg","dark":"icons/run-dark.svg"}},{"title":"Run","command":"sqltools.runFromHistory","category":"SQLTools History","icon":{"light":"icons/run-light.svg","dark":"icons/run-dark.svg"}},{"title":"Edit From History","command":"sqltools.editHistory","category":"SQLTools History","icon":{"light":"icons/edit-light.svg","dark":"icons/edit-dark.svg"}},{"title":"Clear","command":"sqltools.clearHistory","category":"SQLTools History","icon":{"light":"icons/trash-light.svg","dark":"icons/trash-dark.svg"}},{"title":"Run Current Query","command":"sqltools.executeCurrentQuery","category":"SQLTools Connection"},{"title":"Describe Table","command":"sqltools.describeTable","category":"SQLTools Connection"},{"title":"Format Selected Query For Any Document","command":"sqltools.formatSql","category":"SQLTools"},{"title":"Run Selected Query","command":"sqltools.executeQuery","category":"SQLTools Connection"},{"title":"Run This File","command":"sqltools.executeQueryFromFile","category":"SQLTools Connection"},{"title":"Run Query","command":"sqltools.executeFromInput","category":"SQLTools Connection"},{"title":"Show Output Channel Logs","command":"sqltools.showOutputChannel","category":"SQLTools Management"},{"title":"Show Table Records","command":"sqltools.showRecords","category":"SQLTools Connection","icon":{"light":"icons/show-light.svg","dark":"icons/show-dark.svg"}},{"title":"About","command":"sqltools.aboutVersion","category":"SQLTools Management"},{"title":"Add New Connection","command":"sqltools.openAddConnectionScreen","category":"SQLTools Management","icon":{"light":"icons/add-connection-light.svg","dark":"icons/add-connection-dark.svg"}},{"title":"Edit Connection","command":"sqltools.openEditConnectionScreen","category":"SQLTools Management"},{"title":"Open Settings","command":"sqltools.openSettings","category":"SQLTools Management"},{"title":"Delete Connection","command":"sqltools.deleteConnection","category":"SQLTools Management"},{"title":"Add Name(s) To Cursor","command":"sqltools.insertText","category":"SQLTools Sidebar"},{"title":"Copy Value(s)","command":"sqltools.copyTextFromTreeItem","category":"SQLTools Sidebar"},{"title":"Generate Insert Query","command":"sqltools.generateInsertQuery","category":"SQLTools Sidebar","icon":{"light":"icons/add-light.svg","dark":"icons/add-dark.svg"}},{"title":"Refresh","command":"sqltools.refreshTree","category":"SQLTools Sidebar","icon":{"light":"icons/refresh-light.svg","dark":"icons/refresh-dark.svg"}},{"title":"New SQL File","command":"sqltools.newSqlFile","category":"SQLTools","icon":{"light":"icons/new-sql-file-light.svg","dark":"icons/new-sql-file-dark.svg"}},{"title":"Save Results","command":"sqltools.saveResults","category":"SQLTools Results","icon":{"light":"icons/save-light.svg","dark":"icons/save-dark.svg"}},{"title":"Open Results","command":"sqltools.openResults","category":"SQLTools Results","icon":{"light":"icons/view-light.svg","dark":"icons/view-dark.svg"}},{"title":"Attach Connection To This File","command":"sqltools.attachFileToConnection","category":"SQLTools Internal"},{"title":"Detach Connection From File","command":"sqltools.detachConnectionFromFile","category":"SQLTools Internal"},{"title":"Open Docs","command":"sqltools.openDocs","category":"SQLTools"}],"keybindings":[{"command":"sqltools.copyTextFromTreeItem","key":"ctrl+c","mac":"cmd+c","when":"focusedView == sqltools-view-connectionExplorer && sideBarFocus"},{"command":"workbench.action.quickOpen","key":"ctrl+e ctrl+e","mac":"cmd+e cmd+e","when":"!config.sqltools.disableChordKeybindings && !(editorTextFocus || editorHasSelection)"},{"command":"sqltools.formatSql","key":"ctrl+e ctrl+b","mac":"cmd+e cmd+b","when":"!config.sqltools.disableChordKeybindings && editorTextFocus && !editorReadonly && editorHasSelection"},{"command":"sqltools.executeQuery","key":"ctrl+e ctrl+e","mac":"cmd+e cmd+e","when":"!config.sqltools.disableChordKeybindings && editorTextFocus && editorHasSelection"},{"command":"sqltools.describeTable","key":"ctrl+e ctrl+d","mac":"cmd+e cmd+d","when":"!config.sqltools.disableChordKeybindings"},{"command":"sqltools.runFromHistory","key":"ctrl+e ctrl+h","mac":"cmd+e cmd+h","when":"!config.sqltools.disableChordKeybindings"},{"command":"sqltools.runFromBookmarks","key":"ctrl+e ctrl+a","mac":"cmd+e cmd+a","when":"!config.sqltools.disableChordKeybindings"},{"command":"sqltools.showRecords","key":"ctrl+e ctrl+s","mac":"cmd+e cmd+s","when":"!config.sqltools.disableChordKeybindings"},{"command":"sqltools.deleteBookmark","key":"ctrl+e ctrl+r","mac":"cmd+e cmd+r","when":"!config.sqltools.disableChordKeybindings"},{"command":"sqltools.bookmarkSelection","key":"ctrl+e ctrl+q","mac":"cmd+e q","when":"!config.sqltools.disableChordKeybindings && editorTextFocus && editorHasSelection"}],"configuration":{"type":"object","title":"SQLTools","properties":{"sqltools.disableReleaseNotifications":{"type":"boolean","default":false,"description":"Disable new release notifications."},"sqltools.autoConnectTo":{"type":["string","array"],"default":[],"markdownDescription":"Name(s) of the connection(s) to auto connect on start.","items":{"type":"string"}},"sqltools.showStatusbar":{"type":"boolean","default":true,"description":"Toggle statusbar item visibility.","deprecationMessage":"Deprecated. Use statusbar context menu option instead."},"sqltools.disableChordKeybindings":{"type":"boolean","default":false,"markdownDescription":"SQLTools' default chord keybindings begin with `Ctrl/Cmd+E` and therefore mask the default keybinding of VS Code's `Go to File...` command. When this setting is disabled (the default) you can instead invoke that command with the chord `Ctrl/Cmd+E Ctrl/Cmd+E`. Enable this setting if you don't require SQLTools' chord keybindings."},"sqltools.historySize":{"type":"number","default":100,"description":"Number of queries to keep in History."},"sqltools.completionLanguages":{"type":"array","default":["sql"],"items":{"type":"string"},"markdownDescription":"Languages with SQL completion enabled. Restart to activate changes.\n\nYou can use any language identifier, including those listed at https://code.visualstudio.com/docs/languages/identifiers."},"sqltools.formatLanguages":{"type":"array","default":["sql"],"items":{"type":"string"},"markdownDescription":"Languages with SQL formatting enabled. Restart to activate changes.\n\nYou can use any language identifier, including those listed at https://code.visualstudio.com/docs/languages/identifiers."},"sqltools.codelensLanguages":{"type":"array","default":["sql"],"items":{"type":"string"},"markdownDescription":"Languages that SQLTools will add CodeLenses to.\n\nYou can use any language identifier, including those listed at https://code.visualstudio.com/docs/languages/identifiers.\n\nMore info about codelens, see https://vscode-sqltools.mteixeira.dev/features/codelens"},"sqltools.highlightQuery":{"type":"boolean","default":true,"markdownDescription":"Highlight the query at the cursor position."},"sqltools.format":{"type":"object","properties":{"reservedWordCase":{"type":["string","null"],"enum":["upper","lower","null"],"enumDescriptions":["Convert to UPPERCASE.","Convert to lowercase.","Do not change."],"default":null,"description":"Reserved word case."},"language":{"type":"string","enum":["sql","db2","n1ql","pl/sql"],"default":"sql","description":"Language of formatting."},"linesBetweenQueries":{"type":["string","number"],"enum":["preserve",1,2,3,4,5],"enumDescriptions":["Leave unchanged.","1 linebreak.","2 linebreaks.","3 linebreaks.","4 linebreaks.","5 linebreaks."],"default":1,"description":"Adjust spacing between queries."}}},"sqltools.queryParams.enableReplace":{"type":"boolean","default":false,"description":"Enables query parameter checking."},"sqltools.queryParams.regex":{"type":"string","default":"\\$[\\d]+|\\$\\[([\\d\\w]+)\\]","description":"RegEx used to identify query parameters.","required":true},"sqltools.connections":{"type":"array","markdownDescription":"Connections list.","default":[],"items":{"type":"object","properties":{"name":{"type":"string","description":"Connection name."},"group":{"type":"string","description":"Connection group name."},"server":{"type":"string","description":"Server address.","default":"127.0.0.1"},"port":{"type":"number","description":"Port for connection."},"socketPath":{"type":"string","description":"Path of socket file to connect using UNIX sockets. MySQL only for now."},"database":{"type":"string","description":"Database name."},"domain":{"type":["string","null"],"description":"Connection domain (for MSSQL/Azure only)."},"username":{"type":"string","description":"Connection username."},"password":{"type":["string","null"],"description":"Connection password"},"askForPassword":{"type":"boolean","description":"Ask for password at connection time instead of storing it as plaintext in your settings.","default":false},"driver":{"type":"string","markdownDescription":"Connection driver used for this connection."},"dialect":{"type":"string","description":"Connection Driver","deprecationMessage":"***DEPRECATED*** Replaced by `driver` property. Use `driver` property instead."},"connectString":{"type":["string","null"],"description":"Connect string. Support for Oracle, PostgreSQL and AWS Redshift."},"mssqlOptions":{"type":["null","object"],"markdownDescription":"See https://vscode-sqltools.mteixeira.dev/en/drivers/microsoft-sql-server-azure#11-specific-options for more details.","default":{},"properties":{"encrypt":{"type":["boolean","null"],"default":null,"description":"Encrypt connection."}}},"mysqlOptions":{"type":["object","null"],"description":"See https://vscode-sqltools.mteixeira.dev/en/drivers/my-sql#2-mysqloptions for more details.","default":{},"properties":{"authProtocol":{"type":"string","enum":["xprotocol","default"],"default":"default"},"ssl":{"type":["boolean","object","string","null"],"default":null}}},"pgOptions":{"type":["object","null"],"default":{},"markdownDescription":"See https://vscode-sqltools.mteixeira.dev/en/drivers/postgre-sql#11-specific-options for more details.","properties":{"ssl":{"type":["boolean","object","null"],"default":null}}},"oracleOptions":{"type":["object","null"],"default":{},"markdownDescription":"See https://node-oracledb.readthedocs.io/en/latest/api_manual/oracledb.html#createpoolparams for more details."},"cqlOptions":{"type":["object","null"],"default":{},"markdownDescription":"See https://docs.datastax.com/en/developer/nodejs-driver/4.1/api/type.ClientOptions/ for more details."},"connectionTimeout":{"type":"number","description":"Connection timeout in seconds.","default":15},"previewLimit":{"type":"number","default":50,"description":"Maximum number of records to return in table previews."},"icons":{"type":["object","null"],"default":null,"description":"Define an icon for this connection. If not specified, use defaults.","properties":{"active":{"type":"string","default":null},"connected":{"type":"string","default":null},"disconnected":{"type":"string","default":null}}},"variables":{"type":["object","null"],"default":null,"description":"Connection variables in a key/value pair format. Use this property with `sqltools.queryParams.enableReplace` to replace the variables without prompting.","properties":{}}}}},"sqltools.results.limit":{"type":"number","description":"Maximum number of records to return in results.","default":50},"sqltools.results.showConsoleOnError":{"type":"boolean","description":"Show SQL Console view automatically when an error has occurred.","default":true},"sqltools.results.reuseTabs":{"type":"string","description":"How requests reuse results tabs.","default":"never","enum":["never","connection"],"enumDescriptions":["Every request creates a new tab.","There is a single tab for each connection."]},"sqltools.results.location":{"type":["string"],"default":"next","enum":["none","next","current","end","1","2","3","4","5","6","7","8","9"],"enumDescriptions":["Do not open a results tab.","New group if nothing open. Second group if currently active text editor is in first group. Otherwise third group.","Current active group.","The third group.","First group.","Second group.","Third group.","Fourth group.","Fifth group.","Sixth group.","Seventh group.","Eighth group.","Ninth group."],"markdownDescription":"Define which edit group the results tab should appear in. Empty groups are never created. For example, if setting is 4 but only one group currently exists then the first set of results will create a new group 2, the second a group 3 and the third and subsequent sets of results will appear in group 4."},"sqltools.results.customization":{"type":"object","description":"Properties that customize the appearance of results tables.","default":{},"properties":{"font-family":{"type":"string"},"font-size":{"type":"string"},"table-cell-padding":{"type":"string","default":"2px 4px"}}},"sqltools.tableTreeItemsExpanded":{"type":"boolean","default":false,"description":"Table columns should be expanded on load?"},"sqltools.defaultExportType":{"type":"string","enum":["prompt","csv","json"],"default":"prompt","description":"Default mode for results Export command."},"sqltools.defaultOpenType":{"type":"string","enum":["prompt","csv","json"],"default":"prompt","description":"Default mode for results Open command."},"sqltools.csvExport.delimiter":{"type":"string","minLength":1,"default":",","description":"CSV field delimiter, one character only."},"sqltools.csvExport.header":{"type":"boolean","default":true,"description":"Display the column names on the first line."},"sqltools.csvExport.quote":{"type":"string","default":"\"","description":"The quote characters, an empty value will preserve the original field."},"sqltools.csvExport.quoted":{"type":"boolean","default":false,"description":"Quote all the non-empty fields even if not required."},"sqltools.csvExport.quoted_empty":{"type":"boolean","default":true,"markdownDescription":"Quote empty fields and overrides `#sqltools.csvExport.quoted_string#` on empty strings when defined."},"sqltools.csvExport.quoted_string":{"type":"boolean","default":true,"description":"Quote all fields of type string even if not required."},"sqltools.csvExport.record_delimiter":{"type":"string","minLength":1,"default":"unix","markdownDescription":"String used to delimit record rows or a special value: `unix` (`\\n`), `mac` (`\\r`), `windows` (`\\r\\n`), `ascii` (`\\u001e`), or `unicode` (`\\u2028`)."},"sqltools.useNodeRuntime":{"type":["null","boolean","string"],"default":false,"description":"Enable node runtime usage."},"sqltools.disableNodeDetectNotifications":{"type":"boolean","default":false,"description":"Disable node runtime detection notifications."},"sqltools.languageServerEnv":{"type":"object","default":{},"markdownDescription":"Set environment variables to be passed to language server. For example `ORACLE_HOME`, `PATH`...\n\nRestart to activate changes."},"sqltools.sortColumns":{"type":["null","string"],"enum":["name","ordinalnumber"],"default":"name","description":"Sort columns criteria."},"sqltools.flattenGroupsIfOne":{"type":"boolean","default":false,"description":"Flatten groups that have only one child."},"sqltools.autoOpenSessionFiles":{"type":"boolean","default":true,"description":"Auto open session file when connecting."},"sqltools.sessionFilesFolder":{"type":"string","default":"","description":"Folder for session files to be saved in."},"sqltools.dependencyManager":{"type":"object","description":"Dependency Manager settings.","default":{"packageManager":"npm","installArgs":["install"],"runScriptArgs":["run"],"autoAccept":false},"properties":{"packageManager":{"type":"string","markdownDescription":"Package manager name or path. For example `yarn`, `npm` or absolute paths like `/usr/bin/npm`.","default":"npm"},"installArgs":{"type":"array","markdownDescription":"Array of args passed when installing. If you use `yarn` this shoud be set to `[\"add\"]`.","default":["install"]},"runScriptArgs":{"type":"array","description":"Array of args passed when runnning npm scripts.","default":["run"]},"autoAccept":{"type":"boolean","default":false,"description":"Skip confirmation requests when installing or upgrading dependencies."}}},"sqltools.connectionExplorer.groupConnected":{"type":"boolean","description":"Display connections in two groups, 'Connected' and 'Not Connected'.","default":false}}},"views":{"sqltoolsActivityBarContainer":[{"id":"sqltoolsViewConnectionExplorer","name":"Connections"},{"id":"sqltoolsViewBookmarksExplorer","name":"Bookmarks"},{"id":"sqltoolsViewHistoryExplorer","name":"Query History"}],"sqltoolsPanelContainer":[{"id":"sqltoolsViewConsoleMessages","name":"Messages","when":"sqltools.consoleMessages.active"}]},"viewsContainers":{"activitybar":[{"id":"sqltoolsActivityBarContainer","icon":"icons/sqltools-sidebar.svg","title":"SQLTools"}],"panel":[{"id":"sqltoolsPanelContainer","icon":"icons/sqltools-sidebar.svg","title":"SQL Console"}]},"viewsWelcome":[{"view":"sqltoolsViewConnectionExplorer","contents":"No connections found.\n[Add New Connection](command:sqltools.openAddConnectionScreen)"}],"menus":{"commandPalette":[{"command":"sqltools.insertText","when":"false"},{"command":"sqltools.copyTextFromTreeItem","when":"false"},{"command":"sqltools.refreshTree","when":"false"},{"command":"sqltools.generateInsertQuery","when":"false"},{"command":"sqltools.attachFileToConnection","when":"!sqltools.file.connectionAttached && editorLangId == sql"},{"command":"sqltools.detachConnectionFromFile","when":"sqltools.file.connectionAttached && editorLangId == sql"},{"command":"sqltools.saveResults","when":"sqltools.Results.active"},{"command":"sqltools.openResults","when":"sqltools.Results.active"},{"command":"sqltools.formatSql","when":"editorHasSelection"},{"command":"sqltools.executeQuery","when":"editorHasSelection"},{"command":"sqltools.bookmarkSelection","when":"editorHasSelection"}],"view/title":[{"command":"sqltools.openAddConnectionScreen","when":"view == sqltoolsViewConnectionExplorer","group":"navigation@1"},{"command":"sqltools.newSqlFile","when":"view == sqltoolsViewConnectionExplorer","group":"navigation@2"},{"command":"sqltools.refreshTree","when":"view == sqltoolsViewConnectionExplorer","group":"navigation@3"},{"command":"sqltools.clearBookmarks","when":"view == sqltoolsViewBookmarksExplorer","group":"navigation@1"},{"command":"sqltools.bookmarkSelection","when":"view == sqltoolsViewBookmarksExplorer","group":"navigation@1"},{"command":"sqltools.clearHistory","when":"view == sqltoolsViewHistoryExplorer","group":"navigation@1"}],"view/item/context":[{"command":"sqltools.selectConnection","when":"view == sqltoolsViewConnectionExplorer && viewItem == connection","group":"navigation@0"},{"command":"sqltools.closeConnection","when":"view == sqltoolsViewConnectionExplorer && viewItem == connectedConnection","group":"navigation@0"},{"command":"sqltools.refreshTree","when":"view == sqltoolsViewConnectionExplorer && viewItem == connectedConnection","group":"navigation@0"},{"command":"sqltools.openEditConnectionScreen","when":"view == sqltoolsViewConnectionExplorer && viewItem =~ /^(connection|connectedConnection)$/","group":"navigation@1"},{"command":"sqltools.openSettings","when":"view == sqltoolsViewConnectionExplorer && viewItem =~ /^(connection|connectedConnection)$/","group":"sqltools.dbExplorer.edit@0"},{"command":"sqltools.deleteConnection","when":"view == sqltoolsViewConnectionExplorer && viewItem =~ /^(connection|connectedConnection)$/","group":"sqltools.dbExplorer@0"},{"command":"sqltools.showRecords","when":"view == sqltoolsViewConnectionExplorer && viewItem =~ /^connection\\.(table|view|materializedView)$/","group":"navigation@1"},{"command":"sqltools.describeTable","when":"view == sqltoolsViewConnectionExplorer && viewItem =~ /^connection\\.(table|view)$/","group":"navigation@2"},{"command":"sqltools.generateInsertQuery","when":"!editorReadonly && view == sqltoolsViewConnectionExplorer && viewItem =~ /^connection\\.(table|view)$/","group":"navigation@3"},{"command":"sqltools.insertText","when":"!editorReadonly && view == sqltoolsViewConnectionExplorer && viewItem =~ /^connection\\.(.+)/","group":"sqltools.connectionExplorer.edit@0"},{"command":"sqltools.copyTextFromTreeItem","when":"view == sqltoolsViewConnectionExplorer && viewItem =~ /^connection\\.(.+)/","group":"sqltools.connectionExplorer.edit@1"},{"command":"sqltools.copyTextFromTreeItem","when":"view == sqltoolsViewConsoleMessages","group":"sqltools.connectionExplorer.edit@1"},{"command":"sqltools.selectConnection","when":"view == sqltoolsViewConnectionExplorer && viewItem == connection","group":"inline@0"},{"command":"sqltools.closeConnection","when":"view == sqltoolsViewConnectionExplorer && viewItem == connectedConnection","group":"inline@0"},{"command":"sqltools.generateInsertQuery","when":"view == sqltoolsViewConnectionExplorer && viewItem =~ /^connection\\.(table|view)$/","group":"inline@0"},{"command":"sqltools.showRecords","when":"view == sqltoolsViewConnectionExplorer && viewItem =~ /^connection\\.(table|view|materializedView)$/","group":"inline@1"},{"command":"sqltools.editHistory","when":"view == sqltoolsViewHistoryExplorer && viewItem == history.item","group":"inline@0"},{"command":"sqltools.runFromHistory","when":"view == sqltoolsViewHistoryExplorer && viewItem == history.item","group":"inline@0"},{"command":"sqltools.runFromHistory","when":"view == sqltoolsViewHistoryExplorer && viewItem == history.item","group":"navigation@0"},{"command":"sqltools.editHistory","when":"view == sqltoolsViewBookmarksExplorer && viewItem == history.item","group":"navigation@1"},{"command":"sqltools.runFromBookmarks","when":"view == sqltoolsViewBookmarksExplorer && viewItem == bookmark.item","group":"inline@1"},{"command":"sqltools.editBookmark","when":"view == sqltoolsViewBookmarksExplorer && viewItem == bookmark.item","group":"inline@0"},{"command":"sqltools.runFromBookmarks","when":"view == sqltoolsViewBookmarksExplorer && viewItem == bookmark.item","group":"navigation@0"},{"command":"sqltools.editBookmark","when":"view == sqltoolsViewBookmarksExplorer && viewItem == bookmark.item","group":"navigation@1"},{"command":"sqltools.deleteBookmark","when":"view == sqltoolsViewBookmarksExplorer && viewItem == bookmark.item","group":"sqltools.bmExplorer@0"}],"editor/title":[{"command":"sqltools.saveResults","group":"navigation","when":"sqltools.Results.active"},{"command":"sqltools.openResults","group":"navigation","when":"sqltools.Results.active"}],"editor/context":[{"command":"sqltools.attachFileToConnection","group":"sqltools@0","when":"!sqltools.file.connectionAttached && editorLangId == sql"},{"command":"sqltools.detachConnectionFromFile","group":"sqltools@0","when":"sqltools.file.connectionAttached && editorLangId == sql"},{"command":"sqltools.formatSql","group":"sqltools@2","when":"editorHasSelection"},{"command":"sqltools.executeQuery","group":"sqltools@01","when":"editorHasSelection"},{"command":"sqltools.bookmarkSelection","group":"sqltools@3","when":"editorHasSelection"}],"explorer/context":[{"command":"sqltools.attachFileToConnection","group":"sqltools@0","when":"resourceLangId == sql"}]}},"devDependencies":{"@babel/cli":"^7.5.5","@types/command-exists":"^1.2.0","@types/jest":"^24.0.11","@types/lodash":"^4.14.123","@types/vscode":"^1.72.0","cross-env":"^7.0.2","jest":"^26.6.3","jest-cli":"^26.6.3","ts-jest":"^26.5.4","lodash":"^4.17.19","typescript":"~4.8.3","vscode-test":"^1.5.1"},"dependencies":{"@sqltools/log":"*","@sqltools/plugins":"*","@sqltools/util":"*","command-exists":"1.2.9","vscode-languageclient":"6.1.3"},"scripts":{"test:tsc":"tsc --noEmit -p ./tsconfig.json --skipLibCheck"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/mtxr.sqltools-0.28.4","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Matheus Teixeira","metadata":{"installedTimestamp":1745949985573,"source":"gallery","id":"6a2bbab0-d8f0-43fa-9b26-e6a3b7892a0b","publisherId":"952fc94a-735a-4caa-92ce-e1011fbc9780","publisherDisplayName":"Matheus Teixeira","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":3528100},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"mtxr.sqltools-driver-pg","uuid":"ff850146-c38e-4afe-8a34-705074ae16e2"},"manifest":{"name":"sqltools-driver-pg","displayName":"SQLTools PostgreSQL/Cockroach Driver","description":"SQLTools PostgreSQL/Cockroach Driver","version":"0.5.5","engines":{"vscode":"^1.78.0"},"publisher":"mtxr","license":"MIT","private":true,"repository":{"type":"git","url":"https://github.com/mtxr/vscode-sqltools.git","directory":"packages/drivers.pg"},"bugs":{"url":"https://github.com/mtxr/vscode-sqltools/labels/pg"},"keywords":["sqltools-driver","postgre","postgres","postgresql","cockroach","cockroachdb"],"galleryBanner":{"theme":"dark","color":"#333333"},"icon":"icon.png","categories":["Programming Languages","Snippets","Formatters","Other"],"extensionDependencies":["mtxr.sqltools"],"activationEvents":["*","onLanguage:sql","onCommand:sqltools.*"],"main":"./out/extension.js","scripts":{"test:tsc":"tsc --noEmit -p ./tsconfig.json --skipLibCheck","clean":"rimraf -rf out dist *.vsix","predev":"yarn run clean","dev":"yarn run watch","prebuild":"yarn run clean && yarn run tsc-check","build":"cross-env NODE_ENV=production concurrently \"npm:build:*\"","build:ext":"yarn run compile:ext --define:process.env.NODE_ENV=\"'production'\" --minify","build:ls":"yarn run compile:ls --define:process.env.NODE_ENV=\"'production'\" --minify","esbuild":"esbuild --platform=node --tsconfig=./tsconfig.json --external:vscode --external:pg-native --color=true --format=cjs","prepackage":"yarn run build","package":"vsce package --yarn -o .","compile:ext":"yarn run esbuild --bundle ./src/extension.ts --outfile=./out/extension.js --target=es2017 --define:process.env.PRODUCT=\"'ext'\"","compile:ls":"yarn run esbuild --bundle ./src/ls/plugin.ts --outfile=./out/ls/plugin.js --target=es2015 --define:process.env.PRODUCT=\"'ls'\"","tsc-check":"yarn run ts --noEmit --preserveWatchOutput","watch":"concurrently \"npm:watch:*\"","watch:ext":"yarn run compile:ext --define:process.env.NODE_ENV=\"'development'\" --sourcemap --watch","watch:ls":"yarn run compile:ls --define:process.env.NODE_ENV=\"'development'\" --sourcemap --watch","dev:tsc":"yarn run tsc-check -w","ts":"tsc -p ."},"devDependencies":{"@sqltools/base-driver":"latest","@sqltools/types":"^0.1.6","@types/lodash":"^4.14.123","@types/pg":"^7.14.3","@types/vscode":"^1.72.0","concurrently":"^5.2.0","esbuild":"^0.25.0","lodash":"^4.17.19","pg":"^8.2.1","rimraf":"^3.0.2","typescript":"~4.8.3","@vscode/vsce":"^2.19.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/mtxr.sqltools-driver-pg-0.5.5","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Matheus Teixeira","metadata":{"installedTimestamp":1745949990336,"source":"gallery","id":"ff850146-c38e-4afe-8a34-705074ae16e2","publisherId":"952fc94a-735a-4caa-92ce-e1011fbc9780","publisherDisplayName":"Matheus Teixeira","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":448881},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"alefragnani.bookmarks","uuid":"b689fcc8-d494-4dbf-a228-2c694a578afc"},"manifest":{"name":"Bookmarks","displayName":"Bookmarks","description":"Mark lines and jump to them","version":"13.5.0","publisher":"alefragnani","engines":{"vscode":"^1.78.0"},"categories":["Other"],"keywords":["bookmark","sticky","jump","mark","selection","navigation","multi-root ready"],"extensionKind":["ui","workspace"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"icon":"images/icon.png","license":"GPL-3.0","homepage":"https://github.com/alefragnani/vscode-bookmarks/blob/master/README.md","repository":{"type":"git","url":"https://github.com/alefragnani/vscode-bookmarks.git"},"bugs":{"url":"https://github.com/alefragnani/vscode-bookmarks/issues"},"sponsor":{"url":"https://github.com/sponsors/alefragnani"},"activationEvents":["onStartupFinished"],"main":"./dist/extension-node.js","l10n":"./l10n","contributes":{"viewsContainers":{"activitybar":[{"id":"bookmarks","title":"Bookmarks","icon":"images/bookmark-activity-bar.svg"}]},"views":{"bookmarks":[{"id":"bookmarksExplorer","name":"Explorer"},{"id":"bookmarksHelpAndFeedback","name":"Help and Feedback","visibility":"collapsed"}]},"viewsWelcome":[{"view":"bookmarksExplorer","contents":"In order to use Bookmarks, you have to open a folder or workspace first.\n[Open a Folder](command:_bookmarks.openFolderWelcome)\n[Open a Workspace](command:workbench.action.openWorkspace)\nTo learn more about how to use Bookmarks in VS Code [read the docs](http://github.com/alefragnani/vscode-bookmarks/#bookmarks).","when":"workbenchState == empty"},{"view":"bookmarksExplorer","contents":"No bookmarks yet.\nIn order to use Bookmarks, you have to open a file in the editor.\n[Open a File](command:workbench.action.quickOpen)\nTo learn more about how to use Bookmarks in VS Code [read the docs](http://github.com/alefragnani/vscode-bookmarks/#bookmarks).","when":"workbenchState != empty && !editorIsOpen"},{"view":"bookmarksExplorer","contents":"No bookmarks yet.\nIn order to use Bookmarks, place the cursor in any location in the file and run the command:\n[Bookmarks: Toggle](command:bookmarks.toggle)\nTo learn more about how to use Bookmarks in VS Code [read the docs](http://github.com/alefragnani/vscode-bookmarks/#bookmarks).","when":"workbenchState != empty && editorIsOpen"}],"commands":[{"command":"bookmarks.toggle","title":"Toggle","category":"Bookmarks"},{"command":"bookmarks.jumpToNext","title":"Jump to Next","category":"Bookmarks"},{"command":"bookmarks.jumpToPrevious","title":"Jump to Previous","category":"Bookmarks"},{"command":"_bookmarks.jumpTo","title":"Jump to Document/Line","category":"Bookmarks"},{"command":"bookmarks.selectLines","title":"Select Lines","category":"Bookmarks (Selection)"},{"command":"bookmarks.expandSelectionToNext","title":"Expand Selection to Next","category":"Bookmarks (Selection)"},{"command":"bookmarks.expandSelectionToPrevious","title":"Expand Selection to Previous","category":"Bookmarks (Selection)"},{"command":"bookmarks.shrinkSelection","title":"Shrink Selection","category":"Bookmarks (Selection)"},{"command":"bookmarks.list","title":"List","category":"Bookmarks"},{"command":"bookmarks.toggleLabeled","title":"Toggle Labeled","category":"Bookmarks"},{"command":"bookmarks.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"_bookmarks.viewAsTree#sideBar","title":"View as Tree","icon":"$(list-tree)","enablement":"bookmarks.viewAsList"},{"command":"_bookmarks.viewAsList#sideBar","title":"View as List","icon":"$(list-flat)","enablement":"!bookmarks.viewAsList"},{"command":"bookmarks.openSettings","title":"Open Settings"},{"command":"_bookmarks.sidebar.hidePosition","title":"Hide Position"},{"command":"_bookmarks.sidebar.showPosition","title":"Show Position"},{"command":"bookmarks.clear","title":"Clear","category":"Bookmarks"},{"command":"_bookmarks.clearFromFile","title":"Clear","icon":"$(clear-all)"},{"command":"_bookmarks.deleteBookmark","title":"Delete","icon":"$(close)"},{"command":"_bookmarks.editLabel","title":"Edit Label","icon":"$(edit)"},{"command":"_bookmarks.addBookmarkAtLine#gutter","title":"Add Bookmark"},{"command":"_bookmarks.addLabeledBookmarkAtLine#gutter","title":"Add Labeled Bookmark"},{"command":"_bookmarks.removeBookmarkAtLine#gutter","title":"Remove Bookmark"},{"command":"bookmarks.listFromAllFiles","title":"List from All Files","category":"Bookmarks"},{"command":"bookmarks.clearFromAllFiles","title":"Clear from All Files","category":"Bookmarks"},{"command":"bookmarks.whatsNew","title":"What's New","category":"Bookmarks"},{"command":"_bookmarks.whatsNewContextMenu","title":"What's New"},{"command":"_bookmarks.openFolderWelcome","title":"Open Folder"},{"command":"bookmarks.supportBookmarks","title":"Support Bookmarks","category":"Bookmarks"},{"command":"_bookmarks.openSideBar","title":"Open Side Bar"}],"menus":{"commandPalette":[{"command":"_bookmarks.jumpTo","when":"false"},{"command":"bookmarks.refresh","when":"false"},{"command":"_bookmarks.viewAsTree#sideBar","when":"false"},{"command":"_bookmarks.viewAsList#sideBar","when":"false"},{"command":"bookmarks.openSettings","when":"false"},{"command":"_bookmarks.sidebar.hidePosition","when":"false"},{"command":"_bookmarks.sidebar.showPosition","when":"false"},{"command":"_bookmarks.clearFromFile","when":"false"},{"command":"_bookmarks.deleteBookmark","when":"false"},{"command":"_bookmarks.editLabel","when":"false"},{"command":"_bookmarks.addBookmarkAtLine#gutter","when":"false"},{"command":"_bookmarks.addLabeledBookmarkAtLine#gutter","when":"false"},{"command":"_bookmarks.removeBookmarkAtLine#gutter","when":"false"},{"command":"_bookmarks.whatsNewContextMenu","when":"false"},{"command":"_bookmarks.openFolderWelcome","when":"false"},{"command":"_bookmarks.openSideBar","when":"false"}],"editor/context":[{"submenu":"bookmarks.editor.context","group":"bookmarks"}],"editor/title":[{"submenu":"bookmarks.editor.title","group":"bookmarks"}],"editor/lineNumber/context":[{"command":"_bookmarks.addBookmarkAtLine#gutter","when":"editorLineNumber not in bookmarks.linesWithBookmarks","group":"bookmarks"},{"command":"_bookmarks.addLabeledBookmarkAtLine#gutter","when":"editorLineNumber not in bookmarks.linesWithBookmarks","group":"bookmarks"},{"command":"_bookmarks.removeBookmarkAtLine#gutter","when":"editorLineNumber in bookmarks.linesWithBookmarks","group":"bookmarks"}],"view/title":[{"command":"bookmarks.refresh","when":"view == bookmarksExplorer","group":"navigation@10"},{"command":"_bookmarks.viewAsList#sideBar","when":"view == bookmarksExplorer && !bookmarks.viewAsList","group":"navigation@10"},{"command":"_bookmarks.viewAsTree#sideBar","when":"view == bookmarksExplorer && bookmarks.viewAsList","group":"navigation@10"},{"submenu":"bookmarks.sideBar.title","when":"view == bookmarksExplorer","group":"1_bookmarks"},{"command":"_bookmarks.sidebar.hidePosition","when":"view == bookmarksExplorer && !bookmarks.isHidingPosition","group":"2_bookmarks"},{"command":"_bookmarks.sidebar.showPosition","when":"view == bookmarksExplorer && bookmarks.isHidingPosition","group":"2_bookmarks"},{"command":"bookmarks.openSettings","when":"view == bookmarksExplorer","group":"3_bookmarks"}],"view/item/context":[{"command":"_bookmarks.clearFromFile","when":"view == bookmarksExplorer && viewItem == BookmarkNodeFile"},{"command":"_bookmarks.clearFromFile","when":"view == bookmarksExplorer && viewItem == BookmarkNodeFile","group":"inline"},{"command":"_bookmarks.deleteBookmark","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark","group":"bookmark@2"},{"command":"_bookmarks.deleteBookmark","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark","group":"inline@2"},{"command":"_bookmarks.editLabel","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark","group":"bookmark@1"},{"command":"_bookmarks.editLabel","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark","group":"inline@1"}],"extension/context":[{"command":"_bookmarks.whatsNewContextMenu","group":"bookmarks","when":"extension == alefragnani.bookmarks && extensionStatus == installed"}],"bookmarks.editor.context":[{"command":"bookmarks.toggle","group":"bookmarks","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"},{"command":"bookmarks.toggleLabeled","group":"bookmarks","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"},{"command":"bookmarks.jumpToNext","group":"bookmarks@1","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"},{"command":"bookmarks.jumpToPrevious","group":"bookmarks@1","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"}],"bookmarks.editor.title":[{"command":"bookmarks.list","group":"bookmarks"},{"command":"bookmarks.clear","group":"bookmarks"},{"command":"bookmarks.selectLines","group":"bookmarks"}],"bookmarks.sideBar.title":[{"command":"_bookmarks.viewAsTree#sideBar","group":"bookmarks#sideBar.view@1"},{"command":"_bookmarks.viewAsList#sideBar","group":"bookmarks#sideBar.view@2"}]},"submenus":[{"id":"bookmarks.editor.context","label":"Bookmarks"},{"id":"bookmarks.editor.title","label":"Bookmarks"},{"id":"bookmarks.sideBar.title","label":"View & Sort"}],"configuration":{"type":"object","title":"Bookmarks","properties":{"bookmarks.saveBookmarksInProject":{"type":"boolean","default":false,"description":"Allow bookmarks to be saved (and restored) locally in the opened Project/Folder instead of VS Code"},"bookmarks.gutterIconPath":{"type":"string","default":"","description":"Path to another image to be presented as Bookmark","scope":"machine","deprecationMessage":"Use `bookmarks.gutterIconFillColor` and `bookmarks.gutterIconBorderColor` instead"},"bookmarks.gutterIconFillColor":{"type":"string","default":"#157EFB","description":"Specifies the fill color of the bookmark icon","scope":"application"},"bookmarks.gutterIconBorderColor":{"type":"string","default":"#157EFB","description":"Specifies the border color of the bookmark icon","scope":"application"},"bookmarks.backgroundLineColor":{"type":"string","default":"","description":"Background color of the decoration. Use rgba() and define transparent background colors to play well with other decorations. Ex.: rgba(21, 126, 251, 0.1)","deprecationMessage":"Use `bookmarks.lineBackground` in `workbench.colorCustomizations` instead"},"bookmarks.navigateThroughAllFiles":{"type":"boolean","default":true,"description":"Allow navigation look for bookmarks in all files in the project, instead of only the current"},"bookmarks.wrapNavigation":{"type":"boolean","default":true,"description":"Allow navigation to wrap around at the first and last bookmarks in scope (current file or all files)"},"bookmarks.useWorkaroundForFormatters":{"type":"boolean","default":false,"description":"Use a workaround for formatters like Prettier, which does not notify on document changes and messes Bookmark's Sticky behavior"},"bookmarks.experimental.enableNewStickyEngine":{"type":"boolean","default":true,"description":"Experimental. Enables the new Sticky engine with support for Formatters, improved source change detections and undo operations"},"bookmarks.keepBookmarksOnLineDelete":{"type":"boolean","default":false,"description":"Specifies whether bookmarks on deleted line should be kept on file, moving it down to the next line, instead of deleting it with the line where it was toggled."},"bookmarks.showNoMoreBookmarksWarning":{"type":"boolean","default":true,"description":"Specifies whether a notification will be shown when attempting to navigate between bookmarks when no more exist."},"bookmarks.showCommandsInContextMenu":{"type":"boolean","default":true,"description":"Specifies whether Bookmarks commands are displayed on the context menu"},"bookmarks.sideBar.expanded":{"type":"boolean","default":false,"description":"Specifies whether the Side Bar show be displayed expanded"},"bookmarks.sideBar.countBadge":{"type":"string","default":"all","enum":["all","files","off"],"enumDescriptions":["Show the sum of bookmarks from all files","Show the sum of files that contains some bookmarks","Disable the Bookmarks count badge"],"description":"Controls the count badge on the Bookmark icon on the Activity Bar"},"bookmarks.multicursor.toggleMode":{"type":"string","default":"allLinesAtOnce","enum":["allLinesAtOnce","eachLineIndependently"],"enumDescriptions":["Creates bookmarks in all selected lines at once, if at least one of the lines don't have a bookmark","Literally toggles a bookmark in each line, instead of making all lines equal"],"description":"Specifies how multi cursor handles already bookmarked lines"},"bookmarks.label.suggestion":{"type":"string","default":"dontUse","description":"Specifies how labels are suggested when creating bookmarks","enum":["dontUse","useWhenSelected","suggestWhenSelected","suggestWhenSelectedOrLineWhenNoSelected"],"enumDescriptions":["Don't use the selection (original behavior)","Use the selected text (if available) directly, no confirmation required","Suggests the selected text (if available). You still need to confirm.","Suggests the selected text (if available) or the entire line (when has no selection). You still need to confirm."]},"bookmarks.revealLocation":{"type":"string","default":"center","description":"Specifies the location where the bookmarked line will be revealed","enum":["top","center"],"enumDescriptions":["Reveals the bookmarked line at the top of the editor","Reveals the bookmarked line in the center of the editor"]}}},"keybindings":[{"command":"bookmarks.toggle","key":"ctrl+alt+k","mac":"cmd+alt+k","when":"editorTextFocus"},{"command":"bookmarks.jumpToNext","key":"ctrl+alt+l","mac":"cmd+alt+l","when":"editorTextFocus"},{"command":"bookmarks.jumpToPrevious","key":"ctrl+alt+j","mac":"cmd+alt+j","when":"editorTextFocus"},{"command":"bookmarks.shrinkSelection","key":"shift+alt+k","mac":"shift+alt+k","when":"editorTextFocus"},{"command":"bookmarks.expandSelectionToNext","key":"shift+alt+l","mac":"shift+alt+l","when":"editorTextFocus"},{"command":"bookmarks.expandSelectionToPrevious","key":"shift+alt+j","mac":"shift+alt+j","when":"editorTextFocus"}],"colors":[{"id":"bookmarks.lineBackground","description":"Background color for the bookmarked line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"bookmarks.lineBorder","description":"Background color for the border around the bookmarked line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"bookmarks.overviewRuler","description":"Overview ruler marker color for bookmarks","defaults":{"dark":"#157EFB88","light":"#157EFB88","highContrast":"#157EFB88"}}],"walkthroughs":[{"id":"bookmarksWelcome","title":"Get Started with Bookmarks","description":"Learn more about Bookmarks to optimize your workflow","steps":[{"id":"toggle","title":"Toggle Bookmarks","description":"Easily Mark/Unmark Bookmarks at any position.\nAn icon is added to both the gutter and overview ruler to easily identify the lines with Bookmarks.","media":{"markdown":"walkthrough/toggle.md"}},{"id":"navigateToBookmarks","title":"Navigate to Bookmarks","description":"Quickly jump between bookmarked lines.\nSearch bookmarks using the line's content and/or labels.","media":{"markdown":"walkthrough/navigateToBookmarks.md"}},{"id":"defineLabelsForYourBookmarks","title":"Define labels for your bookmarks","description":"You can define labels for any bookmark, giving them an special meaning other than its position.","media":{"markdown":"walkthrough/defineLabelsForYourBookmarks.md"}},{"id":"exclusiveSideBar","title":"Exclusive Side Bar","description":"An exclusive Side Bar with everything you need to increase your productivity.\n[Open Side Bar](command:_bookmarks.openSideBar)","media":{"markdown":"walkthrough/exclusiveSideBar.md"}},{"id":"workingWithRemotes","title":"Working with Remotes","description":"The extension support [Remote Development](https://code.visualstudio.com/docs/remote/remote-overview) scenarios. Even installed locally, you can use Bookmarks in WSL, Containers, SSH and Codespaces.","media":{"markdown":"walkthrough/workingWithRemotes.md"}},{"id":"customizingAppearance","title":"Customizing Appearance","description":"Customize how Bookmarks are presented, its icon, line and overview ruler\n[Open Settings - Gutter Icon](command:workbench.action.openSettings?%5B%22bookmarks.gutterIcon%22%5D)\n[Open Settings - Line](command:workbench.action.openSettingsJson?%5B%22workbench.colorCustomizations%22%5D)","media":{"markdown":"walkthrough/customizingAppearance.md"}}]}]},"eslintConfig":{"extends":["vscode-ext"]},"scripts":{"build":"webpack --mode development","watch":"webpack --watch --mode development","vscode:prepublish":"webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch","compile":"tsc -watch -p ./","lint":"eslint -c package.json --ext .ts src vscode-bookmarks-core vscode-whats-new"},"dependencies":{"os-browserify":"^0.3.0","path-browserify":"^1.0.1","vscode-ext-codicons":"^1.0.0","vscode-ext-decoration":"1.1.0","vscode-ext-help-and-feedback-view":"^1.0.1","vscode-ext-selection":"1.0.0"},"devDependencies":{"@types/node":"^14.17.27","@types/vscode":"^1.78.0","@types/mocha":"^9.0.0","@types/glob":"^7.1.4","@vscode/test-electron":"^1.6.2","@typescript-eslint/eslint-plugin":"^5.1.0","@typescript-eslint/parser":"^5.1.0","eslint":"^8.1.0","eslint-config-vscode-ext":"^1.1.0","terser-webpack-plugin":"^5.2.4","ts-loader":"^9.2.5","typescript":"^4.4.4","webpack":"^5.76.0","webpack-cli":"^4.8.0","mocha":"^9.1.3"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/alefragnani.bookmarks-13.5.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Alessandro Fragnani","metadata":{"installedTimestamp":1745949994044,"source":"gallery","id":"b689fcc8-d494-4dbf-a228-2c694a578afc","publisherId":"3fbdef65-bdf5-4723-aeaf-9e12a50546ef","publisherDisplayName":"Alessandro Fragnani","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":6509518},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"alefragnani.project-manager","uuid":"1b747f06-3789-4ebd-ac99-f1fe430c3347"},"manifest":{"name":"project-manager","displayName":"Project Manager","description":"Easily switch between projects","version":"12.8.0","publisher":"alefragnani","engines":{"vscode":"^1.74.0"},"categories":["Other"],"keywords":["git","project","folder","workspace","switch","manage","mercurial","svn","multi-root ready"],"extensionKind":["ui","workspace"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"icon":"images/icon.png","license":"GPL-3.0","homepage":"https://github.com/alefragnani/vscode-project-manager/blob/master/README.md","repository":{"type":"git","url":"https://github.com/alefragnani/vscode-project-manager.git"},"bugs":{"url":"https://github.com/alefragnani/vscode-project-manager/issues"},"sponsor":{"url":"https://github.com/sponsors/alefragnani"},"activationEvents":["onStartupFinished"],"main":"./dist/extension","l10n":"./l10n","contributes":{"viewsContainers":{"activitybar":[{"id":"project-manager","title":"Project Manager","icon":"images/project-manager-side-bar.svg"}]},"views":{"project-manager":[{"id":"projectsExplorerFavorites","name":"Favorites"},{"id":"projectsExplorerGit","name":"Git","when":"projectManager.canShowTreeViewGit"},{"id":"projectsExplorerSVN","name":"SVN","when":"projectManager.canShowTreeViewSVN"},{"id":"projectsExplorerAny","name":"Any","when":"projectManager.canShowTreeViewAny"},{"id":"projectsExplorerMercurial","name":"Mercurial","when":"projectManager.canShowTreeViewMercurial"},{"id":"projectsExplorerVSCode","name":"VSCode","when":"projectManager.canShowTreeViewVSCode"},{"id":"projectManagerHelpAndFeedback","name":"Help and Feedback","visibility":"collapsed"}]},"viewsWelcome":[{"view":"projectsExplorerFavorites","contents":"No projects saved yet.\nIn order to save projects, you have to open a folder or workspace first.\n[Open Folder](command:_projectManager.openFolderWelcome)\n[Open Workspace from File](command:workbench.action.openWorkspace)\nTo learn more about how to use Project Manager in VS Code [read the docs](http://github.com/alefragnani/vscode-project-manager/#project-manager).","when":"workbenchState == empty"},{"view":"projectsExplorerFavorites","contents":"No projects saved yet.\nIn order to save the current folder/workspace as a project, execute the command:\n[Project Manager: Save Project](command:projectManager.saveProject)\nTo learn more about how to use Project Manager in VS Code [read the docs](http://github.com/alefragnani/vscode-project-manager/#project-manager).","when":"workbenchState != empty"},{"view":"projectsExplorerGit","contents":"No projects detected.\nIn order to detect Git projects, you have to configure the `baseFolders` where the Git projects are.\n[Open Settings](command:workbench.action.openSettings?%5B%22projectManager.git.baseFolders%22%5D)\n[I don't need Git projects](command:projectManager.hideGitWelcome)\nIt also supports detection of SVN or Mercurial repositories, VS Code or any other folder.\nTo learn more about how to use Project Manager in VS Code [read the docs](https://github.com/alefragnani/vscode-project-manager/#available-settings)."}],"commands":[{"command":"projectManager.saveProject","title":"Project Manager: Save Project","icon":"$(save)"},{"command":"projectManager.listProjects","title":"Project Manager: List Projects to Open"},{"command":"projectManager.listProjectsNewWindow","title":"Project Manager: List Projects to Open in New Window"},{"command":"projectManager.editProjects","title":"Project Manager: Edit Projects","icon":"$(edit)"},{"command":"_projectManager.viewAsTags#sideBarFavorites","title":"View as Tags","icon":"$(list-tree)","enablement":"projectManager.viewAsList"},{"command":"_projectManager.viewAsList#sideBarFavorites","title":"View as List","icon":"$(list-flat)","enablement":"!projectManager.viewAsList"},{"command":"_projectManager.sortBySaved#sideBarFavorites","title":"Sort by Saved","enablement":"projectManager.sortBy != Saved"},{"command":"_projectManager.sortByName#sideBarFavorites","title":"Sort by Name","enablement":"projectManager.sortBy != Name"},{"command":"_projectManager.sortByPath#sideBarFavorites","title":"Sort by Path","enablement":"projectManager.sortBy != Path"},{"command":"_projectManager.sortByRecent#sideBarFavorites","title":"Sort by Recent","enablement":"projectManager.sortBy != Recent"},{"command":"projectManager.filterProjectsByTag","title":"Project Manager: Filter Projects by Tag"},{"command":"projectManager.filterProjectsByTag#sideBar","title":"Filter Projects by Tag","icon":"$(tag)"},{"command":"projectManager.listFavoriteProjects#sideBarFavorites","title":"List Favorite Projects to Open","icon":"$(search)"},{"command":"projectManager.refreshProjects","title":"Project Manager: Refresh Projects"},{"command":"projectManager.refreshVSCodeProjects","title":"Project Manager: Refresh VSCode Projects","icon":"$(refresh)"},{"command":"projectManager.listVSCodeProjects#sideBarVSCode","title":"List VSCode Projects to Open","icon":"$(search)"},{"command":"projectManager.refreshGitProjects","title":"Project Manager: Refresh Git Projects","icon":"$(refresh)"},{"command":"projectManager.listGitProjects#sideBarGit","title":"List Git Projects to Open","icon":"$(search)"},{"command":"projectManager.refreshSVNProjects","title":"Project Manager: Refresh SVN Projects","icon":"$(refresh)"},{"command":"projectManager.listSVNProjects#sideBarSVN","title":"List SVN Projects to Open","icon":"$(search)"},{"command":"projectManager.refreshAnyProjects","title":"Project Manager: Refresh Any Projects","icon":"$(refresh)"},{"command":"projectManager.listAnyProjects#sideBarAny","title":"List Any Projects to Open","icon":"$(search)"},{"command":"projectManager.refreshMercurialProjects","title":"Project Manager: Refresh Mercurial Projects","icon":"$(refresh)"},{"command":"projectManager.listMercurialProjects#sideBarMercurial","title":"List Mercurial Projects to Open","icon":"$(search)"},{"command":"projectManager.openSettings#sideBarFavorites","title":"Open Settings"},{"command":"projectManager.openSettings#sideBarVSCode","title":"Open Settings"},{"command":"projectManager.openSettings#sideBarGit","title":"Open Settings"},{"command":"projectManager.openSettings#sideBarSVN","title":"Open Settings"},{"command":"projectManager.openSettings#sideBarAny","title":"Open Settings"},{"command":"projectManager.openSettings#sideBarMercurial","title":"Open Settings"},{"command":"_projectManager.open","title":"Open"},{"command":"_projectManager.openInNewWindow","title":"Open in New Window","icon":"$(link-external)"},{"command":"projectManager.addToWorkspace#sideBar","title":"Add to Workspace"},{"command":"_projectManager.revealInFinder#sideBar","title":"Reveal in Finder"},{"command":"_projectManager.revealInExplorer#sideBar","title":"Reveal in Explorer"},{"command":"_projectManager.revealInFileManager#sideBar","title":"Reveal in File Manager"},{"command":"projectManager.addToWorkspace","title":"Project Manager: Add Project to Workspace"},{"command":"_projectManager.deleteProject","title":"Delete Project"},{"command":"_projectManager.renameProject","title":"Rename Project"},{"command":"_projectManager.editTags","title":"Edit Tags"},{"command":"projectManager.whatsNew","title":"Project Manager: What's New"},{"command":"_projectManager.whatsNewContextMenu","title":"What's New"},{"command":"projectManager.addToFavorites","title":"Add to Favorites"},{"command":"_projectManager.toggleProjectEnabled","title":"Disable Project"},{"command":"projectManager.hideGitWelcome","title":"Hide Git Welcome Panel"},{"command":"projectManager.showGitWelcome","title":"Show Git Welcome Panel"},{"command":"_projectManager.openFolderWelcome","title":"Open Folder"},{"command":"projectManager.supportProjectManager","title":"Project Manager: Support Project Manager"},{"command":"_projectManager.openSideBar","title":"Open Side Bar"}],"menus":{"commandPalette":[{"command":"_projectManager.open","when":"false"},{"command":"_projectManager.openInNewWindow","when":"false"},{"command":"projectManager.addToWorkspace#sideBar","when":"false"},{"command":"_projectManager.revealInFinder#sideBar","when":"false"},{"command":"_projectManager.revealInExplorer#sideBar","when":"false"},{"command":"_projectManager.revealInFileManager#sideBar","when":"false"},{"command":"_projectManager.deleteProject","when":"false"},{"command":"_projectManager.renameProject","when":"false"},{"command":"_projectManager.editTags","when":"false"},{"command":"_projectManager.viewAsTags#sideBarFavorites","when":"false"},{"command":"_projectManager.viewAsList#sideBarFavorites","when":"false"},{"command":"_projectManager.sortBySaved#sideBarFavorites","when":"false"},{"command":"_projectManager.sortByName#sideBarFavorites","when":"false"},{"command":"_projectManager.sortByPath#sideBarFavorites","when":"false"},{"command":"_projectManager.sortByRecent#sideBarFavorites","when":"false"},{"command":"projectManager.filterProjectsByTag#sideBar","when":"false"},{"command":"projectManager.listFavoriteProjects#sideBarFavorites","when":"false"},{"command":"projectManager.listVSCodeProjects#sideBarVSCode","when":"false"},{"command":"projectManager.listGitProjects#sideBarGit","when":"false"},{"command":"projectManager.listSVNProjects#sideBarSVN","when":"false"},{"command":"projectManager.listAnyProjects#sideBarAny","when":"false"},{"command":"projectManager.listMercurialProjects#sideBarMercurial","when":"false"},{"command":"projectManager.openSettings#sideBarFavorites","when":"false"},{"command":"projectManager.openSettings#sideBarVSCode","when":"false"},{"command":"projectManager.openSettings#sideBarSVN","when":"false"},{"command":"projectManager.openSettings#sideBarGit","when":"false"},{"command":"projectManager.openSettings#sideBarAny","when":"false"},{"command":"projectManager.openSettings#sideBarMercurial","when":"false"},{"command":"_projectManager.whatsNewContextMenu","when":"false"},{"command":"projectManager.hideGitWelcome","when":"false"},{"command":"projectManager.showGitWelcome","when":"false"},{"command":"_projectManager.openFolderWelcome","when":"false"},{"command":"_projectManager.openSideBar","when":"false"}],"view/title":[{"command":"projectManager.saveProject","when":"view == projectsExplorerFavorites","group":"navigation@10"},{"command":"projectManager.editProjects","when":"view == projectsExplorerFavorites","group":"navigation@11"},{"command":"_projectManager.viewAsTags#sideBarFavorites","when":"view == projectsExplorerFavorites && projectManager.viewAsList","group":"navigation@12"},{"command":"_projectManager.viewAsList#sideBarFavorites","when":"view == projectsExplorerFavorites && !projectManager.viewAsList","group":"navigation@13"},{"command":"projectManager.listFavoriteProjects#sideBarFavorites","when":"view == projectsExplorerFavorites","group":"navigation@14"},{"command":"projectManager.filterProjectsByTag#sideBar","when":"view == projectsExplorerFavorites","group":"navigation@14"},{"submenu":"projectManager.sideBar.favorites.title","when":"view == projectsExplorerFavorites","group":"1_projectManager"},{"command":"projectManager.openSettings#sideBarFavorites","when":"view == projectsExplorerFavorites","group":"2_projectManager"},{"command":"projectManager.showGitWelcome","when":"view == projectsExplorerFavorites && projectManager.hiddenGitWelcome","group":"2_projectManager"},{"command":"projectManager.listVSCodeProjects#sideBarVSCode","when":"view == projectsExplorerVSCode","group":"navigation@10"},{"command":"projectManager.refreshVSCodeProjects","when":"view == projectsExplorerVSCode","group":"navigation@11"},{"command":"projectManager.openSettings#sideBarVSCode","when":"view == projectsExplorerVSCode","group":"2_projectManager"},{"command":"projectManager.listGitProjects#sideBarGit","when":"view == projectsExplorerGit","group":"navigation@10"},{"command":"projectManager.refreshGitProjects","when":"view == projectsExplorerGit","group":"navigation@11"},{"command":"projectManager.openSettings#sideBarGit","when":"view == projectsExplorerGit","group":"2_projectManager"},{"command":"projectManager.listSVNProjects#sideBarSVN","when":"view == projectsExplorerSVN","group":"navigation@10"},{"command":"projectManager.refreshSVNProjects","when":"view == projectsExplorerSVN","group":"navigation@11"},{"command":"projectManager.openSettings#sideBarSVN","when":"view == projectsExplorerSVN","group":"2_projectManager"},{"command":"projectManager.listAnyProjects#sideBarAny","when":"view == projectsExplorerAny","group":"navigation@10"},{"command":"projectManager.refreshAnyProjects","when":"view == projectsExplorerAny","group":"navigation@11"},{"command":"projectManager.openSettings#sideBarAny","when":"view == projectsExplorerAny","group":"2_projectManager"},{"command":"projectManager.listMercurialProjects#sideBarMercurial","when":"view == projectsExplorerMercurial","group":"navigation@10"},{"command":"projectManager.refreshMercurialProjects","when":"view == projectsExplorerMercurial","group":"navigation@11"},{"command":"projectManager.openSettings#sideBarMercurial","when":"view == projectsExplorerMercurial","group":"2_projectManager"}],"view/item/context":[{"command":"_projectManager.openInNewWindow","when":"view =~ /projectsExplorer(Favorites|VSCode|Git|SVN|Any|Mercurial)/ && viewItem == ProjectNodeKind","group":"inline"},{"command":"_projectManager.open","when":"view =~ /projectsExplorer(Favorites|VSCode|Git|SVN|Any|Mercurial)/ && viewItem == ProjectNodeKind","group":"navigation"},{"command":"_projectManager.openInNewWindow","when":"view =~ /projectsExplorer(Favorites|VSCode|Git|SVN|Any|Mercurial)/ && viewItem == ProjectNodeKind","group":"navigation"},{"command":"_projectManager.revealInFinder#sideBar","when":"view =~ /projectsExplorer(Favorites|VSCode|Git|SVN|Any|Mercurial)/ && viewItem == ProjectNodeKind && isMac","group":"navigation@2"},{"command":"_projectManager.revealInExplorer#sideBar","when":"view =~ /projectsExplorer(Favorites|VSCode|Git|SVN|Any|Mercurial)/ && viewItem == ProjectNodeKind && isWindows","group":"navigation@2"},{"command":"_projectManager.revealInFileManager#sideBar","when":"view =~ /projectsExplorer(Favorites|VSCode|Git|SVN|Any|Mercurial)/ && viewItem == ProjectNodeKind && isLinux","group":"navigation@2"},{"command":"_projectManager.deleteProject","when":"view == projectsExplorerFavorites && viewItem == ProjectNodeKind","group":"favorites"},{"command":"_projectManager.renameProject","when":"view == projectsExplorerFavorites && viewItem == ProjectNodeKind","group":"favorites"},{"command":"_projectManager.editTags","when":"view == projectsExplorerFavorites && viewItem == ProjectNodeKind","group":"favorites"},{"command":"_projectManager.toggleProjectEnabled","when":"view == projectsExplorerFavorites && viewItem == ProjectNodeKind","group":"favorites"},{"command":"projectManager.addToWorkspace#sideBar","when":"view =~ /projectsExplorer(Favorites|VSCode|Git|SVN|Any|Mercurial)/ && viewItem == ProjectNodeKind","group":"workspace"},{"command":"projectManager.addToFavorites","when":"view =~ /projectsExplorer(VSCode|Git|SVN|Any|Mercurial)/ && viewItem == ProjectNodeKind","group":"workspace"}],"extension/context":[{"command":"_projectManager.whatsNewContextMenu","group":"projectManager","when":"extension == alefragnani.project-manager && extensionStatus == installed"}],"projectManager.sideBar.favorites.title":[{"command":"_projectManager.viewAsList#sideBarFavorites","group":"1_projectManager#sideBarFavorites"},{"command":"_projectManager.viewAsTags#sideBarFavorites","group":"1_projectManager#sideBarFavorites"},{"command":"_projectManager.sortBySaved#sideBarFavorites","group":"2_projectManager#sideBarFavorites"},{"command":"_projectManager.sortByName#sideBarFavorites","group":"2_projectManager#sideBarFavorites"},{"command":"_projectManager.sortByPath#sideBarFavorites","group":"2_projectManager#sideBarFavorites"},{"command":"_projectManager.sortByRecent#sideBarFavorites","group":"2_projectManager#sideBarFavorites"}]},"submenus":[{"id":"projectManager.sideBar.favorites.title","label":"View & Sort"}],"configuration":[{"id":"projectManager-general","title":"Project Manager","properties":{"projectManager.showProjectNameInStatusBar":{"type":"boolean","default":true,"description":"Should display the project name in the Status Bar?"},"projectManager.openInNewWindowWhenClickingInStatusBar":{"type":"boolean","default":false,"description":"Should the project be opened using a New Window when you click the Status Bar?"},"projectManager.removeCurrentProjectFromList":{"type":"boolean","default":true,"description":"Should the current project be hidden in the list of available projects?"},"projectManager.sortList":{"type":"string","default":"Name","description":"List the projects sorted by...(Saved, Name, Path or Recent)","enum":["Saved","Name","Path","Recent"],"scope":"application"},"projectManager.groupList":{"type":"boolean","default":false,"description":"List the projects grouped by...(Favorites, VSCode, Git, Mercurial and SVN)"},"projectManager.projectsLocation":{"type":"string","default":"","description":"Indicates an alternative location where the `projects.json` file is stored"},"projectManager.cacheProjectsBetweenSessions":{"type":"boolean","default":true,"description":"Should cache the VSCode, Git and SVN projects found?"},"projectManager.ignoreProjectsWithinProjects":{"type":"boolean","default":false,"description":"Should ignore projects found inside other projects?"},"projectManager.checkInvalidPathsBeforeListing":{"type":"boolean","default":true,"description":"Should check for invalid paths before listing, showing a message below the project name?"},"projectManager.supportSymlinksOnBaseFolders":{"type":"boolean","default":false,"description":"Should support symlinks on `baseFolders`?"},"projectManager.showParentFolderInfoOnDuplicates":{"type":"boolean","default":false,"description":"Should show the parent folder info when projects with same name are detected?"},"projectManager.filterOnFullPath":{"type":"boolean","default":false,"description":"Should filter projects through full path?"},"projectManager.openInCurrenWindowIfEmpty":{"type":"string","default":"always","enum":["always","onlyUsingCommandPalette","onlyUsingSideBar","never"],"enumDescriptions":["Whenever you call the Open in New Window command, it will open in the current window, if empty","Only open in the current window if you use the Command Palette","Only open in the current window if you use the Side Bar","Works as today. The Open in New Window command will always open in New Window"],"description":"Indicates if the New Window command open the project in current window, when empty.","deprecationMessage":"Use `projectManager.openInCurrentWindowIfEmpty` instead"},"projectManager.openInCurrentWindowIfEmpty":{"type":"string","default":"always","enum":["always","onlyUsingCommandPalette","onlyUsingSideBar","never"],"enumDescriptions":["Whenever you call the Open in New Window command, it will open in the current window, if empty","Only open in the current window if you use the Command Palette","Only open in the current window if you use the Side Bar","Works as today. The Open in New Window command will always open in New Window"],"description":"Indicates if the New Window command open the project in current window, when empty."},"projectManager.confirmSwitchOnActiveWindow":{"type":"string","default":"never","enum":["never","onlyUsingCommandPalette","onlyUsingSideBar","always"],"enumDescriptions":["Whenever you call the Open command, it will ask for confirmation","Only ask for confirmation if you use the Command Palette","Only ask for confirmation if you use the Side Bar","Works as today. No confirmation is required"],"description":"Controls whether the extension should ask for confirmation when opening projects in the active window."},"projectManager.tags":{"type":"array","default":["Personal","Work"],"items":{"type":"string"},"description":"Indicates the list of tags you can use to organize your projects"}}},{"id":"projectManager-git","title":"Git","properties":{"projectManager.git.baseFolders":{"type":"array","default":[],"items":{"type":"string"},"description":"Indicates the base folders to search for Git projects"},"projectManager.git.ignoredFolders":{"type":"array","default":["node_modules","out","typings","test",".haxelib"],"items":{"type":"string"},"description":"Indicates folders to be ignored, like \"node_modules\", \"out\", \"typings\", \"test\""},"projectManager.git.maxDepthRecursion":{"type":"integer","default":4,"description":"Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit"}}},{"id":"projectManager-hg","title":"Mercurial","properties":{"projectManager.hg.baseFolders":{"type":"array","default":[],"items":{"type":"string"},"description":"Indicates the base folders to search for Mercurial projects"},"projectManager.hg.ignoredFolders":{"type":"array","default":["node_modules","out","typings","test",".haxelib"],"items":{"type":"string"},"description":"Indicates folders to be ignored, like \"node_modules\", \"out\", \"typings\", \"test\""},"projectManager.hg.maxDepthRecursion":{"type":"integer","default":4,"description":"Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit"}}},{"id":"projectManager-svn","title":"SVN","properties":{"projectManager.svn.baseFolders":{"type":"array","default":[],"items":{"type":"string"},"description":"Indicates the base folders to search for SVN projects"},"projectManager.svn.ignoredFolders":{"type":"array","default":["node_modules","out","typings","test"],"items":{"type":"string"},"description":"Indicates folders to be ignored, like \"node_modules\", \"out\", \"typings\", \"test\""},"projectManager.svn.maxDepthRecursion":{"type":"integer","default":4,"description":"Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit"}}},{"id":"projectManager-vscode","title":"VS Code","properties":{"projectManager.vscode.baseFolders":{"type":"array","default":[],"items":{"type":"string"},"description":"Indicates the base folders to search for VSCode projects"},"projectManager.vscode.ignoredFolders":{"type":"array","default":["node_modules","out","typings","test"],"items":{"type":"string"},"description":"Indicates folders to be ignored, like \"node_modules\", \"out\", \"typings\", \"test\""},"projectManager.vscode.maxDepthRecursion":{"type":"integer","default":4,"description":"Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit"}}},{"id":"projectManager-any","title":"Any","properties":{"projectManager.any.baseFolders":{"type":"array","default":[],"items":{"type":"string"},"description":"Indicates the base folders to search for any folder projects"},"projectManager.any.ignoredFolders":{"type":"array","default":["node_modules","out","typings","test"],"items":{"type":"string"},"description":"Indicates folders to be ignored, like \"node_modules\", \"out\", \"typings\", \"test\""},"projectManager.any.maxDepthRecursion":{"type":"integer","default":4,"description":"Indicates the maximum depth of folder recursion to search for projects. Any value below 1 means there is no limit"}}}],"keybindings":[{"command":"projectManager.listProjects","key":"shift+alt+p","mac":"cmd+alt+p"}],"walkthroughs":[{"id":"projectManagerWelcome","title":"Get Started with Project Manager","description":"Learn more about Project Manager to optimize your workflow","steps":[{"id":"saveYourFavoriteProjects","title":"Save Your Favorite Projects","description":"Easily acces your favorite projects, no matter where they are located.\n__Don't miss those important projects anymore__\n[Save Project](command:projectManager.saveProject)","media":{"markdown":"walkthrough/saveYourFavoriteProjects.md"}},{"id":"autoDetectGitRepositories","title":"Auto-detect Git Repositories","description":"Define a set of base folders where your Git projects are located and the extension present you.\n[Open Settings](command:workbench.action.openSettings?%5B%22projectManager.git.baseFolders%22%5D)","media":{"markdown":"walkthrough/autoDetectGitRepositories.md"}},{"id":"findAndOpenProjects","title":"Find and Open Your Projects","description":"Quickly access all your projects in the **Command Palette** and it its exclusive **Side Bar**.\n[List Projects to Open](command:projectManager.listProjects)","media":{"markdown":"walkthrough/findAndOpenProjects.md"}},{"id":"organizeWithTags","title":"Organize with Tags","description":"You can organize/categorize your projects using **Tags**. Filter your projects by **Tags** and even choose active **Tags** that are more relevant to the work you are doing.","media":{"markdown":"walkthrough/organizeWithTags.md"}},{"id":"exclusiveSideBar","title":"Exclusive Side Bar","description":"An exclusive Side Bar with everything you need for great productivity.\n[Open Side Bar](command:_projectManager.openSideBar)","media":{"markdown":"walkthrough/exclusiveSideBar.md"}},{"id":"workingWithRemotes","title":"Working with Remotes","description":"The extension support [Remote Development](https://code.visualstudio.com/docs/remote/remote-overview) scenarios, and you may choose how to use it, depending on your needs.","media":{"markdown":"walkthrough/workingWithRemotes.md"}}]}]},"eslintConfig":{"extends":["vscode-ext"]},"scripts":{"build":"webpack --mode development","watch":"webpack --watch --mode development","vscode:prepublish":"webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch","compile":"tsc -p ./","lint":"eslint -c package.json --ext .ts src vscode-project-manager-core vscode-whats-new","pretest":"npm run compile && npm run lint","test-compile":"tsc -p ./ && npm run webpack","just-test":"node ./out/src/test/runTest.js","test":"npm run test-compile && npm run just-test"},"devDependencies":{"@types/node":"^14.17.27","@types/vscode":"^1.73.0","@types/mocha":"^9.0.0","@types/glob":"^7.1.4","@vscode/test-electron":"^1.6.2","@typescript-eslint/eslint-plugin":"^5.1.0","@typescript-eslint/parser":"^5.1.0","eslint":"^8.1.0","eslint-config-vscode-ext":"^1.1.0","terser-webpack-plugin":"^5.2.4","ts-loader":"^9.2.5","typescript":"^4.4.4","webpack":"^5.76.0","webpack-cli":"^4.8.0","mocha":"^9.1.3"},"dependencies":{"minimatch":"^3.0.4","vscode-ext-codicons":"^1.4.0","vscode-ext-help-and-feedback-view":"^1.0.1","walker":"^1.0.7"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/alefragnani.project-manager-12.8.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Alessandro Fragnani","metadata":{"installedTimestamp":1745950000164,"source":"gallery","id":"1b747f06-3789-4ebd-ac99-f1fe430c3347","publisherId":"3fbdef65-bdf5-4723-aeaf-9e12a50546ef","publisherDisplayName":"Alessandro Fragnani","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2738733},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"gruntfuggly.todo-tree","uuid":"261cac81-cd7b-4555-bb41-0c2d2bcd3e70"},"manifest":{"name":"todo-tree","displayName":"Todo Tree","description":"Show TODO, FIXME, etc. comment tags in a tree view","keywords":["todo","task","tasklist","multi-root ready"],"version":"0.0.226","license":"MIT","icon":"resources/todo-tree.png","publisher":"Gruntfuggly","engines":{"vscode":"^1.72.0"},"repository":"https://github.com/Gruntfuggly/todo-tree","bugs":{"url":"https://github.com/Gruntfuggly/todo-tree/issues","email":"gruntfuggly@googlemail.com"},"scripts":{"test":"qunit","vscode:prepublish":"node ./buildCodiconNames.js && webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch"},"categories":["Other"],"activationEvents":["onStartupFinished"],"main":"./dist/extension","contributes":{"viewsContainers":{"activitybar":[{"id":"todo-tree-container","title":"TODOs","icon":"resources/todo-tree-container.svg"}]},"views":{"todo-tree-container":[{"id":"todo-tree-view","name":"TODOs","when":"!todo-tree-is-empty"}]},"menus":{"view/title":[{"command":"todo-tree.exportTree","when":"view =~ /todo-tree/ && todo-tree-show-export-button == true","group":"navigation@1"},{"command":"todo-tree.reveal","when":"view =~ /todo-tree/ && todo-tree-tags-only == false && todo-tree-show-reveal-button == true","group":"navigation@2"},{"command":"todo-tree.scanOpenFilesOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'workspace only' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanCurrentFileOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'open files' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'current file' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanWorkspaceOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'workspace' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.showFlatView","when":"view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == false && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.showTagsOnlyView","when":"view =~ /todo-tree/ && todo-tree-flat == true && todo-tree-tags-only == false && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.showTreeView","when":"view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == true && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.groupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == false && todo-tree-show-group-by-tag-button == true","group":"navigation@5"},{"command":"todo-tree.ungroupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == true && todo-tree-show-group-by-tag-button == true","group":"navigation@5"},{"command":"todo-tree.groupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == false && todo-tree-show-group-by-sub-tag-button == true && todo-tree-has-sub-tags == true","group":"navigation@6"},{"command":"todo-tree.ungroupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == true && todo-tree-show-group-by-sub-tag-button == true && todo-tree-has-sub-tags == true","group":"navigation@6"},{"command":"todo-tree.filter","when":"view =~ /todo-tree/ && todo-tree-filtered == false && todo-tree-show-filter-button == true","group":"navigation@7"},{"command":"todo-tree.filterClear","when":"view =~ /todo-tree/ && todo-tree-filtered == true && todo-tree-show-filter-button == true","group":"navigation@7"},{"command":"todo-tree.refresh","when":"view =~ /todo-tree/ && todo-tree-show-refresh-button == true","group":"navigation@8"},{"command":"todo-tree.expand","when":"view =~ /todo-tree/ && todo-tree-expanded == false && todo-tree-show-expand-button == true","group":"navigation@9"},{"command":"todo-tree.collapse","when":"view =~ /todo-tree/ && todo-tree-expanded == true && todo-tree-show-expand-button == true","group":"navigation@9"}],"view/item/context":[{"command":"todo-tree.filter","when":"view =~ /todo-tree/ && todo-tree-filtered == false","group":"1-filters@1"},{"command":"todo-tree.filterClear","when":"view =~ /todo-tree/ && todo-tree-global-filter-active","group":"1-filters@2"},{"command":"todo-tree.excludeThisFolder","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@3"},{"command":"todo-tree.excludeThisFile","when":"view =~ /todo-tree/ && viewItem == file","group":"1-filters@4"},{"command":"todo-tree.showOnlyThisFolder","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@5"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@6"},{"command":"todo-tree.removeFilter","when":"view =~ /todo-tree/ && todo-tree-folder-filter-active","group":"1-filters@7"},{"command":"todo-tree.resetAllFilters","when":"view =~ /todo-tree/ && todo-tree-folder-filter-active","group":"1-filters@8"},{"command":"todo-tree.toggleItemCounts","when":"view =~ /todo-tree/","group":"2-toggles"},{"command":"todo-tree.toggleBadges","when":"view =~ /todo-tree/","group":"2-toggles"},{"command":"todo-tree.toggleCompactFolders","when":"view =~/todo-tree/ && todo-tree-can-toggle-compact-folders == true","group":"2-toggles"},{"command":"todo-tree.scanOpenFilesOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'open files'","group":"3-view"},{"command":"todo-tree.scanCurrentFileOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'current file'","group":"3-view"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'workspace'","group":"3-view"},{"command":"todo-tree.scanWorkspaceOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'workspace only'","group":"3-view"},{"command":"todo-tree.expand","when":"view =~ /todo-tree/ && todo-tree-expanded == false","group":"4-tree@1"},{"command":"todo-tree.collapse","when":"view =~ /todo-tree/ && todo-tree-expanded == true","group":"4-tree@1"},{"command":"todo-tree.showFlatView","when":"view =~ /todo-tree/ && todo-tree-flat == false","group":"4-tree@2"},{"command":"todo-tree.showTagsOnlyView","when":"view =~ /todo-tree/ && todo-tree-tags-only == false","group":"4-tree@3"},{"command":"todo-tree.showTreeView","when":"view =~ /todo-tree/ && todo-tree-flat == true || todo-tree-tags-only == true","group":"4-tree@4"},{"command":"todo-tree.groupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == false","group":"4-tree@5"},{"command":"todo-tree.ungroupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == true","group":"4-tree@5"},{"command":"todo-tree.groupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == false && todo-tree-has-sub-tags == true","group":"4-tree@6"},{"command":"todo-tree.ungroupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == true && todo-tree-has-sub-tags == true","group":"4-tree@6"},{"command":"todo-tree.exportTree","when":"view =~/todo-tree/","group":"5-misc1"},{"command":"todo-tree.reveal","when":"view =~/todo-tree/","group":"6-misc2"}],"commandPalette":[{"command":"todo-tree.showOnlyThisFolder","when":"false"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","when":"false"},{"command":"todo-tree.excludeThisFolder","when":"false"},{"command":"todo-tree.excludeThisFile","when":"false"}]},"commands":[{"command":"todo-tree.showFlatView","title":"Show Flat View","category":"Todo Tree","icon":"$(list-unordered)"},{"command":"todo-tree.showTagsOnlyView","title":"Show Tags Only View","category":"Todo Tree","icon":"$(list-flat)"},{"command":"todo-tree.showTreeView","title":"Show Tree View","category":"Todo Tree","icon":"$(list-tree)"},{"command":"todo-tree.refresh","title":"Refresh","category":"Todo Tree","icon":"$(refresh)"},{"command":"todo-tree.expand","title":"Expand Tree","category":"Todo Tree","icon":"$(expand-all)","enablement":"todo-tree-collapsible"},{"command":"todo-tree.collapse","title":"Collapse Tree","category":"Todo Tree","icon":"$(collapse-all)","enablement":"todo-tree-collapsible"},{"command":"todo-tree.filter","title":"Filter Tree","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.filterClear","title":"Clear Tree Filter","category":"Todo Tree","icon":"$(clear-all)"},{"command":"todo-tree.groupByTag","title":"Group by Tag","category":"Todo Tree","icon":"$(tag)"},{"command":"todo-tree.ungroupByTag","title":"Ungroup by Tag","category":"Todo Tree","icon":"$(unfold)"},{"command":"todo-tree.groupBySubTag","title":"Group by Sub Tag","category":"Todo Tree","icon":"$(chrome-restore)"},{"command":"todo-tree.ungroupBySubTag","title":"Ungroup by Sub Tag","category":"Todo Tree","icon":"$(chrome-maximize)"},{"command":"todo-tree.scanOpenFilesOnly","title":"Scan Open Files Only","category":"Todo Tree","icon":"$(files)"},{"command":"todo-tree.scanCurrentFileOnly","title":"Scan Current File Only","category":"Todo Tree","icon":"$(symbol-file)"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","title":"Scan Workspace And Open Files","category":"Todo Tree","icon":"$(folder-active)"},{"command":"todo-tree.scanWorkspaceOnly","title":"Scan Workspace Only","category":"Todo Tree","icon":"$(folder)"},{"command":"todo-tree.addTag","title":"Add Tag","category":"Todo Tree"},{"command":"todo-tree.removeTag","title":"Remove Tag","category":"Todo Tree"},{"command":"todo-tree.exportTree","title":"Export Tree","category":"Todo Tree","icon":"$(save)"},{"command":"todo-tree.showOnlyThisFolder","title":"Only Show This Folder","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","title":"Only Show This Folder And Subfolders","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.switchScope","title":"Switch Scope","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.excludeThisFolder","title":"Hide This Folder","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.excludeThisFile","title":"Hide This File","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.removeFilter","title":"Remove Filter","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.resetAllFilters","title":"Reset All Filters","category":"Todo Tree","icon":"$(clear-all)"},{"command":"todo-tree.reveal","title":"Reveal Current File In Tree","category":"Todo Tree","icon":"$(location)"},{"command":"todo-tree.resetCache","title":"Reset Cache","category":"Todo Tree"},{"command":"todo-tree.toggleItemCounts","title":"Toggle Item Counts","category":"Todo Tree"},{"command":"todo-tree.toggleBadges","title":"Toggle Badges","category":"Todo Tree"},{"command":"todo-tree.toggleCompactFolders","title":"Toggle Compact Folders","category":"Todo Tree"},{"command":"todo-tree.goToNext","title":"Go To Next","category":"Todo Tree"},{"command":"todo-tree.goToPrevious","title":"Go To Previous","category":"Todo Tree"},{"command":"todo-tree.revealInFile","title":"Reveal In File","category":"Todo Tree"}],"configuration":[{"title":"General","order":1,"type":"object","properties":{"todo-tree.general.debug":{"default":false,"markdownDescription":"Create a debug channel in the Output view.","type":"boolean"},"todo-tree.general.automaticGitRefreshInterval":{"default":0,"markdownDescription":"Polling interval (in seconds) for automatically refreshing the tree when your repository is updated. Set to '0' to disable.","type":"integer"},"todo-tree.general.periodicRefreshInterval":{"default":0,"markdownDescription":"Periodic refresh interval (in minutes) for automatically refreshing the tree. Set to '0' to disable.","type":"integer"},"todo-tree.general.revealBehaviour":{"default":"start of todo","enum":["start of line","start of todo","end of todo","leave focus in tree"],"markdownDescription":"Sets where the cursor is positioned when revealing a todo.","markdownEnumDescriptions":["Moves the cursor to the start of the line","Moves the cursor to the beginning of the todo","Moves the cursor to the end of the todo","Leave the focus in the tree view"],"type":"string"},"todo-tree.general.exportPath":{"default":"~/todo-tree-%Y%m%d-%H%M.txt","markdownDescription":"Path to use when exporting the tree. Environment variables will be expanded, e.g `${HOME}` and the path is passed through strftime (see <https://github.com/samsonjs/strftime>). Set the extension to `.json` to export as a JSON record.","type":"string"},"todo-tree.general.rootFolder":{"default":"","markdownDescription":"Folder in which to run the search (defaults to the workspace folder).","type":"string"},"todo-tree.general.schemes":{"default":["file","ssh","untitled","vscode-notebook-cell"],"items":{"type":"string"},"markdownDescription":"Editor schemes to find TODOs in. To find TODOs in settings files, for instance, add `vscode-userdata` or for output windows, add `output`.","type":"array"},"todo-tree.general.statusBar":{"default":"none","enum":["none","total","tags","top three","current file"],"markdownDescription":"What to show in the status bar - nothing, total count, counts per tag, top three counts per tag or count of tags in the current file.","markdownEnumDescriptions":["Only show the scanning status in the status bar","Show the total count of tags in the status bar","Show a breakdown of the count of each tag in the status bar","Show the count of the top three tags in the status bar","Show the count of tags in the current file in the status bar"],"type":"string"},"todo-tree.general.showIconsInsteadOfTagsInStatusBar":{"default":false,"markdownDescription":"Show icons instead of tags in the status bar","type":"boolean"},"todo-tree.general.statusBarClickBehaviour":{"default":"reveal","enum":["cycle","reveal","toggle highlights"],"markdownDescription":"What to do when the status bar is clicked.","markdownEnumDescriptions":["Toggle between showing total count and the top three tag counts","Reveal the tree view","Toggle highlighting"],"type":"string"},"todo-tree.general.tagGroups":{"default":{},"markdownDescription":"Allows similar tags to be grouped under the same type, e.g. `{ \"FIX\": [\"FIXME\",\"FIXIT\"] }`. *Note: All tags must also be in the `todo-tree.general.tags` tag list. If a tag group is defined, custom highlights apply to the group, not the tags within the group.*","type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"todo-tree.general.tags":{"default":["BUG","HACK","FIXME","TODO","XXX","[ ]","[x]"],"items":{"type":"string"},"markdownDescription":"List of tags. *Note, if one tag starts with another tag, the longer tag should be specified first to prevent the shorter tag being matched.*","type":"array"},"todo-tree.general.showActivityBarBadge":{"default":false,"markdownDescription":"Show a badge in the activity bar indicating the total number of TODOs","type":"boolean"}}},{"title":"Highlights","order":2,"type":"object","properties":{"todo-tree.highlights.customHighlight":{"default":{"BUG":{"icon":"bug"},"HACK":{"icon":"tools"},"FIXME":{"icon":"flame"},"XXX":{"icon":"x"},"[ ]":{"icon":"issue-draft"},"[x]":{"icon":"issue-closed"}},"markdownDescription":"Custom configuration for highlighting, [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).","type":"object","additionalProperties":{"type":"object","properties":{"foreground":{"type":"string","format":"color-hex"},"background":{"type":"string","format":"color-hex"},"opacity":{"type":"number"},"fontWeight":{"type":"string"},"fontStyle":{"type":"string"},"textDecoration":{"type":"string"},"borderRadius":{"type":"string"},"icon":{"type":"string"},"iconColour":{"type":"string","format":"color-hex"},"gutterIcon":{"type":"boolean"},"rulerColour":{"type":"string","format":"color-hex"},"rulerOpacity":{"type":"number"},"rulerLane":{"type":"string","enum":["none","left","center","right","full"]},"type":{"type":"string","enum":["tag","text","tag-and-comment","tag-and-subTag","text-and-comment","line","whole-line","none"]},"hideFromTree":{"type":"boolean"},"hideFromStatusBar":{"type":"boolean"},"hideFromActivityBar":{"type":"boolean"}}}},"todo-tree.highlights.defaultHighlight":{"default":{},"markdownDescription":"Default configuration for highlighting. [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).","type":"object","properties":{"foreground":{"type":"string","format":"color-hex"},"background":{"type":"string","format":"color-hex"},"opacity":{"type":"number"},"fontWeight":{"type":"string"},"fontStyle":{"type":"string"},"textDecoration":{"type":"string"},"borderRadius":{"type":"string"},"icon":{"type":"string"},"iconColour":{"type":"string","format":"color-hex"},"gutterIcon":{"type":"boolean"},"rulerColour":{"type":"string","format":"color-hex"},"rulerOpacity":{"type":"number"},"rulerLane":{"type":"string","enum":["none","left","center","right","full"]},"type":{"type":"string","enum":["tag","text","tag-and-comment","tag-and-subTag","text-and-comment","line","whole-line","none"]},"hideFromTree":{"type":"boolean"},"hideFromStatusBar":{"type":"boolean"},"hideFromActivityBar":{"type":"boolean"}}},"todo-tree.highlights.enabled":{"default":true,"markdownDescription":"Set to false to disable highlighting.","type":"boolean"},"todo-tree.highlights.highlightDelay":{"default":500,"markdownDescription":"Delay before highlighting tags within files (milliseconds).","type":"integer"},"todo-tree.highlights.useColourScheme":{"default":false,"markdownDescription":"Use a colour scheme to colour the tags. This scheme is applied to the tags in the order of tags. The colours can be modified using `todo-tree.highlights.foregroundColourScheme` and `todo-tree.highlights.backgroundColourScheme`. The colour scheme overrides colours in the default highlight, but not the custom highlight.","type":"boolean"},"todo-tree.highlights.foregroundColourScheme":{"default":["white","black","black","white","white","white","black"],"items":{"type":"string"},"markdownDescription":"A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.","type":"array"},"todo-tree.highlights.backgroundColourScheme":{"default":["red","orange","yellow","green","blue","indigo","violet"],"items":{"type":"string"},"markdownDescription":"A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.","type":"array"}}},{"title":"Filtering","order":3,"type":"object","properties":{"todo-tree.filtering.excludedWorkspaces":{"default":[],"items":{"type":"string"},"markdownDescription":"An array of workspace names to exclude as roots in the tree (wildcards can be used).","type":"array"},"todo-tree.filtering.excludeGlobs":{"default":["**/node_modules/*/**"],"items":{"type":"string"},"markdownDescription":"Globs for use in limiting search results by exclusion (applied after **includeGlobs**), e.g. `[\"**/*.txt\"]` to ignore all .txt files.","type":"array"},"todo-tree.filtering.ignoreGitSubmodules":{"default":false,"markdownDescription":"If true, any subfolders containing a .git file will be ignored when searching.","type":"boolean"},"todo-tree.filtering.includedWorkspaces":{"default":[],"items":{"type":"string"},"markdownDescription":"An array of workspace names to include as roots in the tree (wildcards can be used). An empty array includes all workspace folders.","type":"array"},"todo-tree.filtering.includeGlobs":{"default":[],"items":{"type":"string"},"markdownDescription":"Globs for use in limiting search results by inclusion, e.g. `[\"**/unit-tests/*.js\"]` to only show .js files in unit-tests subfolders.","type":"array"},"todo-tree.filtering.includeHiddenFiles":{"default":false,"markdownDescription":"Include hidden files (starting with a .).","type":"boolean"},"todo-tree.filtering.passGlobsToRipgrep":{"default":true,"markdownDescription":"By default the globs are passed into ripgrep to narrow the search. Set this to false to apply the globs *after* the search (pre 0.0.132 behaviour).","type":"boolean"},"todo-tree.filtering.scopes":{"default":[],"markdownDescription":"Scopes (sets of globs) that can be switched between","type":"array"},"todo-tree.filtering.useBuiltInExcludes":{"default":"none","enum":["none","file excludes","search excludes","file and search excludes"],"markdownDescription":"Add VSCode's `files.exclude` and/or `search.exclude` list to the ignored paths.","markdownEnumDescriptions":["Don't used any built in excludes","Use the Files:Exclude setting","Use the Search:Exclude setting","Use the Files:Exclude and the Search:Exclude setting"],"type":"string"}}},{"title":"Tree","order":4,"type":"object","properties":{"todo-tree.tree.autoRefresh":{"default":true,"markdownDescription":"Refresh the tree when files are opened or saved.","type":"boolean"},"todo-tree.tree.disableCompactFolders":{"default":false,"markdownDescription":"Prevent the tree from showing compact folders.","type":"boolean"},"todo-tree.tree.expanded":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially fully expanded.","type":"boolean"},"todo-tree.tree.filterCaseSensitive":{"default":false,"markdownDescription":"Set to true if you want the view filtering to be case sensitive.","type":"boolean"},"todo-tree.tree.flat":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially as flat list of files.","type":"boolean"},"todo-tree.tree.groupedByTag":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially grouped by tag.","type":"boolean"},"todo-tree.tree.groupedBySubTag":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially grouped by sub tag.","type":"boolean"},"todo-tree.tree.hideIconsWhenGroupedByTag":{"default":false,"markdownDescription":"Save some space by hiding the item icons when grouped by tag.","type":"boolean"},"todo-tree.tree.hideTreeWhenEmpty":{"default":false,"markdownDescription":"Hide the view if it is empty.","type":"boolean"},"todo-tree.tree.labelFormat":{"default":"${tag} ${after}","markdownDescription":"Format for tree items.","type":"string"},"todo-tree.tree.scanAtStartup":{"default":true,"markdownDescription":"Normally the tree is built as soon as the window is opened. If you have a large code base and want to manually start the scan, set this to false.","type":"boolean"},"todo-tree.tree.scanMode":{"default":"workspace","enum":["workspace","open files","current file","workspace only"],"markdownDescription":"Set this to change which files are scanned.","markdownEnumDescriptions":["Scan the whole workspace (or workspaces) and open file","Scan open files only","Scan the current file only","Scan the workspace but don't refresh files open in the editor"],"type":"string"},"todo-tree.tree.showBadges":{"default":true,"markdownDescription":"Show badges and SCM state in the tree view.","type":"boolean"},"todo-tree.tree.showCountsInTree":{"default":false,"markdownDescription":"Show counts of TODOs in the tree.","type":"boolean"},"todo-tree.tree.showInExplorer":{"default":false,"deprecationMessage":"This setting is no longer used. Please drag the view to move it.","type":"boolean"},"todo-tree.tree.showCurrentScanMode":{"default":true,"markdownDescription":"Show the current scan mode at the top of the tree view","type":"boolean"},"todo-tree.tree.showScanOpenFilesOrWorkspaceButton":{"default":false,"deprecationMessage":"This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.","type":"boolean"},"todo-tree.tree.subTagClickUrl":{"default":"","markdownDescription":"The URL to open when clicking on a sub tag in the tree. Can include placeholders as defined in `todo-tree.tree.labelFormat`.","type":"string"},"todo-tree.tree.showTagsFromOpenFilesOnly":{"default":false,"deprecationMessage":"This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.","type":"boolean"},"todo-tree.tree.sortTagsOnlyViewAlphabetically":{"default":false,"markdownDescription":"Sort items in the tags only view alphabetically instead of by file and line number.","type":"boolean"},"todo-tree.tree.sort":{"default":true,"markdownDescription":"ripgrep searches using multiple threads to improve performance. The tree is sorted when it is populated so that it stays stable. If you want to use ripgrep's own sort arguments, set this to false.","type":"boolean"},"todo-tree.tree.tagsOnly":{"default":false,"markdownDescription":"When opening new workspaces, show only tag elements in tree.","type":"boolean"},"todo-tree.tree.tooltipFormat":{"default":"${filepath}, line ${line}","markdownDescription":"Tree item tooltip format.","type":"string"},"todo-tree.tree.trackFile":{"default":true,"markdownDescription":"Track the current file in the tree view.","type":"boolean"}}},{"title":"Buttons","order":5,"type":"object","properties":{"todo-tree.tree.buttons.reveal":{"default":true,"markdownDescription":"Show a button in the tree view title bar to reveal the current item (only when track file is not enabled).","type":"boolean"},"todo-tree.tree.buttons.scanMode":{"default":false,"markdownDescription":"Show a button in the tree view title bar to change the Scan Mode setting.","type":"boolean"},"todo-tree.tree.buttons.viewStyle":{"default":true,"markdownDescription":"Show a button in the tree view title bar to change the view style (tree, flat or tags only).","type":"boolean"},"todo-tree.tree.buttons.groupByTag":{"default":true,"markdownDescription":"Show a button in the tree view title bar to enable grouping items by tag.","type":"boolean"},"todo-tree.tree.buttons.groupBySubTag":{"default":false,"markdownDescription":"Show a button in the tree view title bar to enable grouping items by sub tag.","type":"boolean"},"todo-tree.tree.buttons.filter":{"default":true,"markdownDescription":"Show a button in the tree view title bar allowing the tree to be filtered by entering some text.","type":"boolean"},"todo-tree.tree.buttons.refresh":{"default":true,"markdownDescription":"Show a refresh button in the tree view title bar.","type":"boolean"},"todo-tree.tree.buttons.expand":{"default":true,"markdownDescription":"Show a button in the tree view title bar to expand or collapse the whole tree.","type":"boolean"},"todo-tree.tree.buttons.export":{"default":false,"markdownDescription":"Show a button in the tree view title bar to create a file showing the tree content.","type":"boolean"}}},{"title":"Regex","order":6,"type":"object","properties":{"todo-tree.regex.regex":{"default":"(//|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+.))\\s*($TAGS)","markdownDescription":"Regular expression for matching TODOs. Note: **($TAGS)** will be replaced by the expanded tag list. For some of the extension features to work, **($TAGS)** should be present in the regex, however, the basic functionality should still work if you need to explicitly expand the tag list.","type":"string","minLength":1,"scope":"language-overridable"},"todo-tree.regex.regexCaseSensitive":{"default":true,"markdownDescription":"Use a case sensitive regular expression.","type":"boolean"},"todo-tree.regex.subTagRegex":{"default":"","markdownDescription":"Regular expression for processing the text to the right of the tag, e.g. for extracting a sub tag, or removing unwanted characters.","type":"string"},"todo-tree.regex.enableMultiLine":{"default":false,"markdownDescription":"Force the regex to match over multiple lines. Allows use of `[\\s\\S]` to match anything including newlines.","type":"boolean"},"todo-tree.ripgrep.ripgrep":{"default":"","markdownDescription":"Location of your version of ripgrep.","type":"string"},"todo-tree.ripgrep.ripgrepArgs":{"default":"--max-columns=1000 --no-config ","markdownDescription":"Additional arguments to pass to ripgrep (Use with caution!).","type":"string"}}},{"title":"Ripgrep","order":7,"type":"object","properties":{"todo-tree.ripgrep.ripgrepMaxBuffer":{"default":200,"markdownDescription":"Size of the buffer to use for retrieving output from ripgrep (kilobytes).","type":"integer"},"todo-tree.ripgrep.usePatternFile":{"default":true,"markdownDescription":"A pattern file is used with ripgrep by default. If you experience issues with deleting the pattern file, set this to false to use the legacy method of providing the regex to ripgrep.","type":"boolean"}}}]},"dependencies":{"@primer/octicons":"^17.0.0","comment-patterns":"^0.10.1","fast-strftime":"^1.1.1","find":"^0.3.0","micromatch":"^4.0.2","regexp-match-indices":"^1.0.2","treeify":"^1.1.0"},"devDependencies":{"parse-code-context":"^1.0.0","qunit":"^2.18.0","webpack":"^4.43.0","webpack-cli":"^3.3.12"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/gruntfuggly.todo-tree-0.0.226","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Gruntfuggly","metadata":{"installedTimestamp":1745950005440,"source":"gallery","id":"261cac81-cd7b-4555-bb41-0c2d2bcd3e70","publisherId":"d4906d2e-f2ee-492d-9c7c-02b6160599ec","publisherDisplayName":"Gruntfuggly","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1639854},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"streetsidesoftware.code-spell-checker","uuid":"f6dbd813-b0a0-42c1-90ea-10dde9d925a7"},"manifest":{"name":"code-spell-checker","description":"Spelling checker for source code","displayName":"Code Spell Checker","icon":"images/SpellCheck.png","author":"Jason Dent","license":"GPL-3.0-or-later","version":"4.0.47","publisher":"streetsidesoftware","private":true,"type":"module","main":"./packages/client/dist/extension.cjs","repository":{"type":"git","url":"https://github.com/streetsidesoftware/vscode-spell-checker"},"bugs":{"url":"https://github.com/streetsidesoftware/vscode-spell-checker/issues"},"homepage":"https://streetsidesoftware.github.io/vscode-spell-checker","packageManager":"npm@10.8.2","engineStrict":true,"engines":{"node":">=20.18.1","pnpm":"0","yarn":"0","vscode":"^1.90.0"},"sponsor":{"url":"https://github.com/sponsors/streetsidesoftware"},"extensionKind":["workspace"],"categories":["Linters","Other"],"keywords":["spell","checker","spelling","spellchecker"],"qna":"marketplace","activationEvents":["onStartupFinished"],"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, it is not possible to load the CSpell configuration from a JavaScript file. The configuration must be in a JSON, JSONC, or YAML file. Any configuration that relies upon `node_modules` will not be loaded."},"untrustedWorkspaces":{"supported":"limited","description":"JavaScript configuration files will NOT be loaded.","restrictedConfigurations":["cSpell.trustedWorkspace"]}},"contributes":{"menus":{"editor/context":[{"command":"cSpell.suggestSpellingCorrections","when":"!editorReadonly && editorTextFocus && config.cSpell.showSuggestionsLinkInEditorContextMenu && cSpell.editorMenuContext.showSuggestions && cSpell.context.showDecorations","group":"A_cspell@000"},{"submenu":"cSpell.spelling","group":"A_cspell@001","when":"!editorReadonly && editorTextFocus && config.cSpell.showCommandsInEditorContextMenu"},{"command":"cSpell.show","when":"editorTextFocus && config.cSpell.showCommandsInEditorContextMenu && cSpell.editorMenuContext.hasIssues && !cSpell.context.showDecorations","group":"A_cspell@002"},{"command":"cSpell.hide","when":"editorTextFocus && config.cSpell.showCommandsInEditorContextMenu && cSpell.editorMenuContext.hasIssues && cSpell.context.showDecorations","group":"A_cspell@002"}],"cSpell.spelling":[{"command":"cSpell.suggestSpellingCorrections","when":"editorTextFocus && !config.cSpell.showSuggestionsLinkInEditorContextMenu && cSpell.editorMenuContext.showSuggestions","group":"A_cspell@001"},{"command":"cSpell.addWordToDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToDictionary","group":"A_cspell@010"},{"command":"cSpell.addWordToFolderDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToFolderDictionary","group":"A_cspell@020"},{"command":"cSpell.addWordToWorkspaceDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToWorkspaceDictionary","group":"A_cspell@030"},{"command":"cSpell.addWordToCSpellConfig","when":"editorTextFocus && cSpell.editorMenuContext.addWordToCSpellConfig","group":"A_cspell@050"},{"command":"cSpell.addWordToFolderSettings","when":"editorTextFocus && cSpell.editorMenuContext.addWordToFolderSettings","group":"A_cspell@051"},{"command":"cSpell.addWordToWorkspaceSettings","when":"editorTextFocus && cSpell.editorMenuContext.addWordToWorkspaceSettings","group":"A_cspell@052"},{"command":"cSpell.addWordToUserDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addWordToUserDictionary","group":"A_cspell@055"},{"command":"cSpell.addWordToUserSettings","when":"editorTextFocus && cSpell.editorMenuContext.addWordToUserSettings","group":"A_cspell@056"},{"command":"cSpell.addIssuesToDictionary","when":"editorTextFocus && cSpell.editorMenuContext.addIssuesToDictionary","group":"A_cspell@060"},{"command":"cSpell.addIgnoreWord","when":"editorTextFocus && cSpell.editorMenuContext.addIgnoreWord","group":"A_cspell@090"},{"command":"cSpell.createCSpellConfig","when":"editorTextFocus && cSpell.editorMenuContext.createCSpellConfig","group":"B_cspell@010"},{"command":"cSpell.createCustomDictionary","when":"editorTextFocus && cSpell.editorMenuContext.createCustomDictionary","group":"B_cspell@020"}],"cSpell.configMenu":[{"command":"cSpell.createCSpellConfig","when":"editorTextFocus && cSpell.editorMenuContext.createCSpellConfig","group":"A_cspell@010"},{"command":"cSpell.createCustomDictionary","when":"editorTextFocus && cSpell.editorMenuContext.createCustomDictionary","group":"A_cspell@070"}],"commandPalette":[{"command":"cSpellRegExpTester.testRegExp","when":"config.cSpell.experimental.enableRegexpView"},{"command":"cSpellRegExpTester.editRegExp","when":"view == cSpellRegExpView"}],"view/title":[{"command":"cSpell.show","when":"!cSpell.context.showDecorations && view == cSpellIssuesViewByFile","group":"navigation"},{"command":"cSpell.hide","when":"cSpell.context.showDecorations && view == cSpellIssuesViewByFile","group":"navigation"}],"view/item/context":[{"command":"cSpellRegExpTester.editRegExp","when":"view == cSpellRegExpView && viewItem == regexp","group":"inline"},{"command":"cSpell.issueViewer.item.autoFixSpellingIssues","when":"view == cSpellIssuesViewByIssue && viewItem == issue.hasPreferred","group":"inline"},{"command":"cSpell.issueViewer.item.addWordToDictionary","when":"view == cSpellIssuesViewByIssue && viewItem == issue","group":"inline"},{"command":"cSpell.issuesViewByFile.item.autoFixSpellingIssues","when":"view == cSpellIssuesViewByFile && viewItem == issue.FileWithIssuesTreeItem.hasPreferred","group":"inline"},{"command":"cSpell.issuesViewByFile.item.addWordToDictionary","when":"view == cSpellIssuesViewByFile && viewItem == issue.FileIssueTreeItem","group":"inline"}]},"submenus":[{"id":"cSpell.spelling","label":"Spelling"},{"id":"cSpell.configMenu","label":"Spell Checker Configuration"}],"viewsContainers":{"activitybar":[{"id":"cspell-info-explorer","title":"Spell Checker Info","icon":"resources/dark/check_circle.svg"},{"id":"cspell-regexp-explorer","title":"Regular Expressions","contextualTitle":"Spell Checker","icon":"resources/dark/check_circle.svg"}],"panel":[{"id":"cspellPanel","title":"Spell Checker","icon":"resources/dark/check_circle.svg"}]},"icons":{"cspell-issues":{"description":"cspell-issues lightbulb icon","default":"lightbulb"}},"views":{"cspell-info-explorer":[{"type":"webview","id":"cSpellInfoView","when":"cSpell.context.displayCSpellInfo","icon":"$(lightbulb)","name":"Spell Checker"}],"cspell-regexp-explorer":[{"id":"cSpellRegExpView","name":"Regular Expressions","icon":"$(code)","when":"config.cSpell.experimental.enableRegexpView"}],"cspellPanel":[{"type":"tree","id":"cSpellIssuesViewByFile","name":"File Issues","contextualTitle":"Spell Checker issues by file","icon":"$(lightbulb)","initialSize":4,"visibility":"visible"},{"type":"tree","id":"cSpellIssuesViewByIssue","name":"Issues","contextualTitle":"Spell Checker Issues","icon":"$(lightbulb)","initialSize":1,"visibility":"visible"}]},"viewsWelcome":[],"commands":[{"command":"cSpell.addWordToWorkspaceDictionary","category":"Spell","title":"Add Words to Workspace Dictionary"},{"command":"cSpell.addWordToFolderDictionary","category":"Spell","title":"Add Words to Folder Dictionary"},{"command":"cSpell.addWordToUserDictionary","category":"Spell","title":"Add Words to User Dictionary"},{"command":"cSpell.addWordToWorkspaceSettings","category":"Spell","title":"Add Words to Workspace Settings"},{"command":"cSpell.addWordToFolderSettings","category":"Spell","title":"Add Words to Folder Settings"},{"command":"cSpell.addWordToUserSettings","category":"Spell","title":"Add Words to User Settings"},{"command":"cSpell.enableForWorkspace","category":"Spell","title":"Enable Spell Checking For Workspace"},{"command":"cSpell.disableForWorkspace","category":"Spell","title":"Disable Spell Checking For Workspace"},{"command":"cSpell.enableForGlobal","category":"Spell","title":"Enable Spell Checking by Default"},{"command":"cSpell.disableForGlobal","category":"Spell","title":"Disable Spell Checking by Default"},{"command":"cSpell.enableCurrentLanguage","category":"Spell","title":"Enable Spell Checking Document Type","when":"cSpell.showLegacyCommands.enableCurrentLanguage"},{"command":"cSpell.disableCurrentLanguage","category":"Spell","title":"Disable Spell Checking Document Type","when":"cSpell.showLegacyCommands.disableCurrentLanguage"},{"command":"cSpell.enableCurrentFileType","category":"Spell","title":"Enable Spell Checking File Type","shortTitle":"Enable File Type"},{"command":"cSpell.disableCurrentFileType","category":"Spell","title":"Disable Spell Checking File Type","shortTitle":"Disable File Type"},{"command":"cSpell.displayCSpellInfo","category":"Spell","title":"Show Spell Checker Configuration Info"},{"command":"cSpell.hideCSpellInfo","category":"Spell","title":"Hide Spell Checker Configuration Info"},{"command":"cSpell.toggleEnableForGlobal","category":"Spell","title":"Toggle Spell Checking in User Settings"},{"command":"cSpell.toggleEnableForWorkspace","category":"Spell","title":"Toggle Spell Checking for Workspace"},{"command":"cSpell.toggleEnableSpellChecker","category":"Spell","title":"Toggle Spell Checking"},{"command":"cSpell.removeWordFromFolderDictionary","category":"Spell","title":"Remove Words from the Folder Dictionary"},{"command":"cSpell.removeWordFromWorkspaceDictionary","category":"Spell","title":"Remove Words from the Workspace Dictionaries"},{"command":"cSpell.removeWordFromUserDictionary","category":"Spell","title":"Remove Words from the Global Dictionary"},{"command":"cSpell.logPerfTimeline","category":"Spell","title":"Log CSpell performance times to console"},{"command":"cSpell.addIgnoreWord","category":"Spell","title":"Ignore Words"},{"command":"cSpell.addIgnoreWordsToFolder","category":"Spell","title":"Ignore Word in Folder Settings"},{"command":"cSpell.addIgnoreWordsToWorkspace","category":"Spell","title":"Ignore Words in Workspace Settings"},{"command":"cSpell.addIgnoreWordsToUser","category":"Spell","title":"Ignore Words in User Settings"},{"command":"cSpell.addWordToDictionary","category":"Spell","title":"Add Words to Dictionary","icon":"$(book)"},{"command":"cSpell.addWordToCSpellConfig","category":"Spell","title":"Add Words to CSpell Configuration"},{"command":"cSpell.addIssuesToDictionary","category":"Spell","title":"Add All Spelling Issues to Dictionary"},{"command":"cSpell.createCustomDictionary","category":"Spell","title":"Create a Custom Dictionary File."},{"command":"cSpell.createCSpellConfig","category":"Spell","title":"Create a CSpell Configuration File."},{"command":"cSpell.suggestSpellingCorrections","enablement":"editorTextFocus && cSpell.editorMenuContext.showSuggestions","category":"Spell","title":"Spelling Suggestions..."},{"command":"cSpell.goToNextSpellingIssue","category":"Spell","title":"Go to Next Spelling Issue"},{"command":"cSpell.goToPreviousSpellingIssue","category":"Spell","title":"Go to Previous Spelling Issue"},{"command":"cSpell.goToNextSpellingIssueAndSuggest","category":"Spell","title":"Go to Next Spelling Issue and Suggest"},{"command":"cSpell.goToPreviousSpellingIssueAndSuggest","category":"Spell","title":"Go to Previous Spelling Issue and Suggest"},{"command":"cSpellRegExpTester.testRegExp","title":"Test a Regular Expression on the current document.","enablement":"config.cSpell.experimental.enableRegexpView"},{"command":"cSpellRegExpTester.editRegExp","title":"Edit","icon":"$(edit)","enablement":"config.cSpell.experimental.enableRegexpView"},{"command":"cSpell.experimental.executeDocumentSymbolProvider","title":"Execute Document Symbol Provider on the current document.","icon":"$(code)","enablement":"config.cSpell.experimental.symbols"},{"command":"cSpell.autoFixSpellingIssues","title":"Fix all issues with a preferred suggestion in the current document.","icon":"$(lightbulb-autofix)"},{"command":"cSpell.issueViewer.item.openSuggestionsForIssue","title":"Show Suggestions","icon":"$(list-unordered)","enablement":"view == cSpellIssuesViewByIssue"},{"command":"cSpell.issueViewer.item.autoFixSpellingIssues","title":"Fix issue with preferred suggestion in the current document.","icon":"$(lightbulb-autofix)","enablement":"view == cSpellIssuesViewByIssue"},{"command":"cSpell.issueViewer.item.addWordToDictionary","category":"Spell","title":"Add Word to Dictionary","icon":"$(book)","enablement":"view == cSpellIssuesViewByIssue"},{"command":"cSpell.issuesViewByFile.item.autoFixSpellingIssues","title":"Fix issue with preferred suggestion in the current document.","icon":"$(lightbulb-autofix)","enablement":"view == cSpellIssuesViewByFile"},{"command":"cSpell.issuesViewByFile.item.addWordToDictionary","category":"Spell","title":"Add Word to Dictionary","icon":"$(book)","enablement":"view == cSpellIssuesViewByFile"},{"command":"cSpell.insertDisableNextLineDirective","category":"Spell","title":"Insert Disable Next Line Directive","icon":"$(comment-discussion)"},{"command":"cSpell.insertDisableLineDirective","category":"Spell","title":"Insert Disable Current Line Directive","icon":"$(comment-discussion)"},{"command":"cSpell.insertIgnoreWordsDirective","category":"Spell","title":"Insert Ignore Words Directive","icon":"$(comment-discussion)"},{"command":"cSpell.insertWordsDirective","category":"Spell","title":"Insert Words Directive","icon":"$(comment-discussion)"},{"command":"cSpell.toggleVisible","category":"Spell","title":"Toggle Show Spelling Issues","shortTitle":"Toggle Spelling Issues","icon":"$(eye)"},{"command":"cSpell.show","category":"Spell","title":"Show Spelling Issues","shortTitle":"Show","when":"!cSpell.context.showDecorations","icon":"$(eye)"},{"command":"cSpell.hide","category":"Spell","title":"Hide Spelling Issues","shortTitle":"Hide","when":"cSpell.context.showDecorations","icon":"$(eye-closed)"},{"command":"cSpell.toggleTraceMode","category":"Spell","title":"Toggle Trace Mode","icon":"$(search)"},{"command":"cSpell.createCSpellTerminal","category":"Spell","title":"Open a new CSpell REPL Terminal","icon":"$(terminal)"},{"command":"cSpell.openIssuesPanel","category":"Spell","title":"Open Spell Checker Issues Panel","shortTitle":"Open Spelling Issues","icon":"$(eye)"},{"command":"cSpell.openFileInfoView","category":"Spell","title":"Open Spell Checker File Information View","shortTitle":"Open File Info","icon":"$(eye)"},{"command":"cSpell.reload","category":"Spell","title":"Reload Spell Checker Configuration and Dictionaries","shortTitle":"Reload Config & Dictionaries","icon":"$(sync)"},{"command":"cSpell.restart","category":"Spell","title":"Restart Spell Checker Server","shortTitle":"Restart Spell Checker","icon":"$(sync)"},{"command":"cspell.showActionsMenu","category":"Spell","title":"Show Spell Checker Actions Menu","shortTitle":"Spell Checker Actions","icon":"$(list-unordered)"},{"command":"cSpell.supportRequest","enablement":"config.cSpell.command.enableSupportRequest","category":"Spell","title":"Request Support with the Spell Checker","icon":"$(github)"},{"command":"cSpell.reportIssue","enablement":"config.cSpell.command.reportIssue","category":"Spell","title":"Report an Issue with the Spell Checker","icon":"$(github)"},{"command":"cSpell.about","enablement":"config.cSpell.command.about","category":"Spell","title":"About the Spell Checker","icon":"$(home)"},{"command":"cSpell.releaseNotes","enablement":"config.cSpell.command.releaseNotes","category":"Spell","title":"Show Spell Checker Release Notes","icon":"$(heart)"},{"command":"cSpell.sponsor","enablement":"config.cSpell.command.sponsor","category":"Spell","title":"Sponsor the Spell Checker","icon":"$(heart)"},{"command":"cSpell.rateTheSpellChecker","category":"Spell","title":"Rate the Spell Checker","icon":"$(star)"},{"command":"cSpell.openSettings","category":"Spell","title":"Open Spell Checker Settings","icon":"$(gear)"}],"languages":[{"id":"jsonc","extensions":["cspell-ext.json","cspell-default.json","cspell.json","cspell.config.json","cSpell.json"]}],"jsonValidation":[{"fileMatch":[".cspell.config.json",".cspell.config.jsonc",".cspell.json",".cspell.jsonc","cspell-default.json","cspell-ext.json","cspell-import.json","cspell-imports.json","cspell-include.json","cspell-includes.json","cspell.config.json","cspell.config.jsonc","cspell.json","cspell.jsonc","cSpell.json"],"url":"./node_modules/@cspell/cspell-types/cspell.schema.json"}],"configurationDefaults":{"[markdown]":{"cSpell.fixSpellingWithRenameProvider":true,"cSpell.advanced.feature.useReferenceProviderWithRename":true,"cSpell.advanced.feature.useReferenceProviderRemove":"/^#+\\s/"},"[scss]":{"cSpell.fixSpellingWithRenameProvider":false},"[css]":{"cSpell.fixSpellingWithRenameProvider":false},"[scminput]":{"cSpell.fixSpellingWithRenameProvider":false}},"configuration":[{"additionalProperties":false,"markdownDescription":"Settings that control the behavior of the spell checker.","order":0,"properties":{"cSpell.enabled":{"default":true,"markdownDescription":"Enable / Disable the spell checker.","scope":"resource","type":"boolean"}},"title":"Code Spell Checker","type":"object"},{"additionalProperties":false,"markdownDescription":"Advanced settings that are not commonly used.","order":18,"properties":{"cSpell.advanced.feature.useReferenceProviderRemove":{"markdownDescription":"Used to work around bugs in Reference Providers and Rename Providers.\nAnything matching the provided Regular Expression will be removed from the text\nbefore sending it to the Rename Provider.\n\nSee: [Markdown: Fixing spelling issues in Header sections changes the entire line · Issue #1987](https://github.com/streetsidesoftware/vscode-spell-checker/issues/1987)\n\nIt is unlikely that you would need to edit this setting. If you need to, please open an issue at\n[Spell Checker Issues](https://github.com/streetsidesoftware/vscode-spell-checker/issues)\n\nThis feature is used in connection with `#cSpell.advanced.feature.useReferenceProviderWithRename#`","scope":"language-overridable","title":"Remove Matching Characters Before Rename","type":"string"},"cSpell.advanced.feature.useReferenceProviderWithRename":{"default":false,"markdownDescription":"Use the Reference Provider when fixing spelling issues with the Rename Provider.\nThis feature is used in connection with `#cSpell.fixSpellingWithRenameProvider#`","scope":"language-overridable","title":"Use Reference Provider During Rename","type":"boolean"},"cSpell.fixSpellingWithRenameProvider":{"default":true,"markdownDescription":"Use Rename Provider when fixing spelling issues.","scope":"language-overridable","type":"boolean"},"cSpell.logFile":{"markdownDescription":"Have the logs written to a file instead of to VS Code.","scope":"window","title":"Write Logs to a File","type":"string"},"cSpell.logLevel":{"default":"Error","enum":["None","Error","Warning","Information","Debug"],"enumDescriptions":["Do not log","Log only errors","Log errors and warnings","Log errors, warnings, and info","Log everything (noisy)"],"markdownDescription":"Set the Debug Level for logging messages.","scope":"window","title":"Set Logging Level","type":"string"},"cSpell.trustedWorkspace":{"default":true,"markdownDescription":"Enable loading JavaScript CSpell configuration files.\n\nThis setting is automatically set to `true` in a trusted workspace. It is possible to override the setting to `false` in a trusted workspace,\nbut a setting of `true` in an untrusted workspace will be ignored.\n\nSee:\n- [Visual Studio Code Workspace Trust security](https://code.visualstudio.com/docs/editor/workspace-trust)\n- [Workspace Trust Extension Guide -- Visual Studio Code Extension API](https://code.visualstudio.com/api/extension-guides/workspace-trust)","scope":"window","since":"4.0.0","type":"boolean"}},"title":"Advanced","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings related to CSpell Command Line Tool.","order":5,"properties":{"cSpell.ignoreRandomStrings":{"default":true,"markdownDescription":"Ignore sequences of characters that look like random strings.","type":"boolean"},"cSpell.ignoreRegExpList":{"items":{"type":"string"},"markdownDescription":"List of regular expressions or Pattern names (defined in `#cSpell.patterns#`) to exclude from spell checking.\n\n- When using the VS Code Preferences UI, it is not necessary to escape the `\\`, VS Code takes care of that.\n- When editing the VS Code `settings.json` file,\n  it is necessary to escape `\\`.\n  Each `\\` becomes `\\\\`.\n\nThe default regular expression flags are `gi`. Add `u` (`gui`), to enable Unicode.\n\n| VS Code UI          | settings.json         | Description                                  |\n| :------------------ | :-------------------- | :------------------------------------------- |\n| `/\\\\[a-z]+/gi`      | `/\\\\\\\\[a-z]+/gi`      | Exclude LaTeX command like `\\mapsto`         |\n| `/\\b[A-Z]{3,5}\\b/g` | `/\\\\b[A-Z]{3,5}\\\\b/g` | Exclude full-caps acronyms of 3-5 length.    |\n| `CStyleComment`     | `CStyleComment`       | A built in pattern                           |","scope":"resource","type":"array"},"cSpell.includeRegExpList":{"items":{"type":"string"},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.","scope":"resource","type":"array"},"cSpell.minRandomLength":{"default":40,"markdownDescription":"The minimum length of a random string to be ignored.","type":"number"},"cSpell.overrides":{"items":{"additionalProperties":false,"properties":{"allowCompoundWords":{"default":false,"markdownDescription":"True to enable compound word checking.","type":"boolean"},"caseSensitive":{"default":false,"markdownDescription":"Determines if words must match case and accent rules.\n\nSee [Case Sensitivity](https://cspell.org/docs/case-sensitive/) for more details.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n- `true` - Case and accents are enforced.","type":"boolean"},"description":{"markdownDescription":"Optional description of configuration.","type":"string"},"diagnosticLevel":{"default":"Information","enum":["Error","Warning","Information","Hint"],"enumDescriptions":["Report Spelling Issues as Errors","Report Spelling Issues as Warnings","Report Spelling Issues as Information","Report Spelling Issues as Hints, will not show up in Problems"],"markdownDescription":"The Diagnostic Severity Level determines how issues are shown in the Problems Pane and within the document.\nSet the level to `Hint` to hide the issues from the Problems Pane.\n\nNote: `#cSpell.useCustomDecorations#` must be `false` to use VS Code Diagnostic Severity Levels.\n\nSee: [VS Code Diagnostic Severity Level](https://code.visualstudio.com/api/references/vscode-api#DiagnosticSeverity)","scope":"resource","title":"Set Diagnostic Reporting Level","type":"string"},"diagnosticLevelFlaggedWords":{"enum":["Error","Warning","Information","Hint"],"enumDescriptions":["Report Spelling Issues as Errors","Report Spelling Issues as Warnings","Report Spelling Issues as Information","Report Spelling Issues as Hints, will not show up in Problems"],"markdownDescription":"Flagged word issues found by the spell checker are marked with a Diagnostic Severity Level. This affects the color of the squiggle.\nBy default, flagged words will use the same diagnostic level as general issues. Use this setting to customize them.\n\nSee: [VS Code Diagnostic Severity Level](https://code.visualstudio.com/api/references/vscode-api#DiagnosticSeverity)","scope":"resource","since":"4.0.0","title":"Set Diagnostic Reporting Level for Flagged Words","type":"string"},"dictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries to use. Each entry should match the name of the dictionary.\n\nTo remove a dictionary from the list, add `!` before the name.\n\nFor example, `!typescript` will turn off the dictionary with the name `typescript`.\n\nSee the [Dictionaries](https://cspell.org/docs/dictionaries/)\nand [Custom Dictionaries](https://cspell.org/docs/dictionaries-custom/) for more details.","type":"array"},"dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define custom dictionaries.\nIf `addWords` is `true` words will be added to this dictionary.\n\nThis setting is subject to User/Workspace settings precedence rules: [Visual Studio Code User and Workspace Settings](https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence).\n\nIt is better to use `#cSpell.customDictionaries#`\n\n**Example:**\n\n```js\n\"cSpell.dictionaryDefinitions\": [\n  {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  }\n]\n```","scope":"resource","title":"Dictionary Definitions","type":"array"},"enableFiletypes":{"items":{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThese are in additional to the file types specified by  {@link  Settings.enabledLanguageIds } .\nTo disable a language, prefix with `!` as in `!json`,\n\n\n**Example: individual file types**\n\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```\n\n**Example: enable all file types**\n\n```\n*           // enable checking for all file types\n!json       // except for json\n```","scope":"resource","title":"Enable File Types","type":"array","uniqueItems":true},"enabled":{"default":true,"markdownDescription":"Is the spell checker enabled.","type":"boolean"},"enabledFileTypes":{"additionalProperties":{"type":"boolean"},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThis setting replaces:  {@link  Settings.enabledLanguageIds }  and  {@link  Settings.enableFiletypes } .\n\nA Value of:\n- `true` - enable checking for the file type\n- `false` - disable checking for the file type\n\nA file type of `*` is a wildcard that enables all file types.\n\n**Example: enable all file types**\n\n| File Type | Enabled | Comment |\n| --------- | ------- | ------- |\n| `*`       | `true`  | Enable all file types. |\n| `json`    | `false` | Disable checking for json files. |","since":"8.8.1","title":"Enabled File Types to Check","type":"object"},"enabledLanguageIds":{"items":{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},"markdownDescription":"Specify a list of file types to spell check. It is better to use  {@link  Settings.enabledFileTypes }  to Enable / Disable checking files types.","title":"Enabled Language Ids","type":"array","uniqueItems":true},"filename":{"anyOf":[{"markdownDescription":"These are glob expressions.","type":"string"},{"items":{"markdownDescription":"These are glob expressions.","type":"string"},"type":"array"}],"markdownDescription":"Glob pattern or patterns to match against."},"flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","type":"array"},"id":{"markdownDescription":"Optional identifier.","type":"string"},"ignoreRandomStrings":{"default":true,"markdownDescription":"Ignore sequences of characters that look like random strings.","type":"boolean"},"ignoreRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or pattern names to exclude from spell checking.\n\nExample: `[\"href\"]` - to exclude html href pattern.\n\nRegular expressions use JavaScript regular expression syntax.\n\nExample: to ignore ALL-CAPS words\n\nJSON\n```json\n\"ignoreRegExpList\": [\"/\\\\b[A-Z]+\\\\b/g\"]\n```\n\nYAML\n```yaml\nignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n```\n\nBy default, several patterns are excluded. See\n[Configuration](https://cspell.org/configuration/patterns) for more details.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"ignoreWords":{"items":{"type":"string"},"markdownDescription":"List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the `flagWords`.","type":"array"},"includeRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"language":{"markdownDescription":"Sets the locale.","type":"string"},"languageId":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"},{"items":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"}]},"type":"array"}],"markdownDescription":"Sets the programming language id to match file type."},"languageSettings":{"items":{"additionalProperties":false,"properties":{"allowCompoundWords":{"default":false,"markdownDescription":"True to enable compound word checking.","type":"boolean"},"caseSensitive":{"default":false,"markdownDescription":"Determines if words must match case and accent rules.\n\nSee [Case Sensitivity](https://cspell.org/docs/case-sensitive/) for more details.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n- `true` - Case and accents are enforced.","type":"boolean"},"description":{"markdownDescription":"Optional description of configuration.","type":"string"},"dictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries to use. Each entry should match the name of the dictionary.\n\nTo remove a dictionary from the list, add `!` before the name.\n\nFor example, `!typescript` will turn off the dictionary with the name `typescript`.\n\nSee the [Dictionaries](https://cspell.org/docs/dictionaries/)\nand [Custom Dictionaries](https://cspell.org/docs/dictionaries-custom/) for more details.","type":"array"},"dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define custom dictionaries.\nIf `addWords` is `true` words will be added to this dictionary.\n\nThis setting is subject to User/Workspace settings precedence rules: [Visual Studio Code User and Workspace Settings](https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence).\n\nIt is better to use `#cSpell.customDictionaries#`\n\n**Example:**\n\n```js\n\"cSpell.dictionaryDefinitions\": [\n  {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  }\n]\n```","scope":"resource","title":"Dictionary Definitions","type":"array"},"enabled":{"default":true,"markdownDescription":"Is the spell checker enabled.","type":"boolean"},"flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","type":"array"},"id":{"markdownDescription":"Optional identifier.","type":"string"},"ignoreRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or pattern names to exclude from spell checking.\n\nExample: `[\"href\"]` - to exclude html href pattern.\n\nRegular expressions use JavaScript regular expression syntax.\n\nExample: to ignore ALL-CAPS words\n\nJSON\n```json\n\"ignoreRegExpList\": [\"/\\\\b[A-Z]+\\\\b/g\"]\n```\n\nYAML\n```yaml\nignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n```\n\nBy default, several patterns are excluded. See\n[Configuration](https://cspell.org/configuration/patterns) for more details.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"ignoreWords":{"items":{"type":"string"},"markdownDescription":"List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the `flagWords`.","type":"array"},"includeRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"languageId":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"},{"items":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"}]},"type":"array"}],"markdownDescription":"The language id.  Ex: `typescript`, `html`, or `php`.  `*` -- will match all languages."},"locale":{"anyOf":[{"markdownDescription":"This is a written language locale like: `en`, `en-GB`, `fr`, `es`, `de` or `en,fr` for both English and French","type":"string"},{"items":{"markdownDescription":"This is a written language locale like: `en`, `en-GB`, `fr`, `es`, `de` or `en,fr` for both English and French","type":"string"},"type":"array"}],"markdownDescription":"The locale filter, matches against the language. This can be a comma separated list. `*` will match all locales."},"name":{"markdownDescription":"Optional name of configuration.","type":"string"},"noSuggestDictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","type":"array"},"patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the  {@link  ignoreRegExpList }  and\n {@link  includeRegExpList }  options.\n\nFor example:\n\n```javascript\n\"ignoreRegExpList\": [\"comments\"],\n\"patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    \"name\": \"comments\",\n    \"pattern\": [\"comment-single-line\", \"comment-multi-line\"]\n  }\n]\n```","type":"array"},"suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","type":"array"}},"required":["languageId"],"type":"object"},"markdownDescription":"Additional settings for individual programming languages and locales.","scope":"resource","type":"array"},"loadDefaultConfiguration":{"default":true,"markdownDescription":"By default, the bundled dictionary configurations are loaded. Explicitly setting this to `false`\nwill prevent ALL default configuration from being loaded.","type":"boolean"},"maxDuplicateProblems":{"default":5,"markdownDescription":"The maximum number of times the same word can be flagged as an error in a file.","type":"number"},"maxNumberOfProblems":{"default":10000,"markdownDescription":"The maximum number of problems to report in a file.","type":"number"},"minRandomLength":{"default":40,"markdownDescription":"The minimum length of a random string to be ignored.","type":"number"},"minWordLength":{"default":4,"markdownDescription":"The minimum length of a word before checking it against a dictionary.","type":"number"},"name":{"markdownDescription":"Optional name of configuration.","type":"string"},"noSuggestDictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","type":"array"},"numSuggestions":{"default":10,"markdownDescription":"Number of suggestions to make.","type":"number"},"patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the  {@link  ignoreRegExpList }  and\n {@link  includeRegExpList }  options.\n\nFor example:\n\n```javascript\n\"ignoreRegExpList\": [\"comments\"],\n\"patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    \"name\": \"comments\",\n    \"pattern\": [\"comment-single-line\", \"comment-multi-line\"]\n  }\n]\n```","type":"array"},"pnpFiles":{"default":[".pnp.js",".pnp.cjs"],"items":{"type":"string"},"markdownDescription":"The PnP files to search for. Note: `.mjs` files are not currently supported.","type":"array"},"suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"suggestionNumChanges":{"default":3,"markdownDescription":"The maximum number of changes allowed on a word to be considered a suggestions.\n\nFor example, appending an `s` onto `example` -> `examples` is considered 1 change.\n\nRange: between 1 and 5.","type":"number"},"suggestionsTimeout":{"default":500,"markdownDescription":"The maximum amount of time in milliseconds to generate suggestions for a word.","type":"number"},"usePnP":{"default":false,"markdownDescription":"Packages managers like Yarn 2 use a `.pnp.cjs` file to assist in loading\npackages stored in the repository.\n\nWhen true, the spell checker will search up the directory structure for the existence\nof a PnP file and load it.","type":"boolean"},"words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","type":"array"}},"required":["filename"],"type":"object"},"markdownDescription":"Overrides are used to apply settings for specific files in your project.\n\n**Example:**\n\n```jsonc\n\"cSpell.overrides\": [\n  // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n  {\n    \"filename\": \"**/{*.hrr,*.crr}\",\n    \"languageId\": \"cpp\"\n  },\n  // Force `dutch/**/*.txt` to be treated as Dutch (dictionary needs to be installed separately):\n  {\n    \"filename\": \"**/dutch/**/*.txt\",\n    \"language\": \"nl\"\n  }\n]\n```","scope":"resource","type":"array"},"cSpell.patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the `#cSpell.ignoreRegExpList#` and\n`#cSpell.includeRegExpList#` options.\n\n**Example:**\n\n```jsonc\n\"cSpell.patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  }\n]\n```","scope":"resource","type":"array"}},"title":"CSpell","type":"object"},{"additionalProperties":false,"markdownDescription":"Experimental settings that may change or be removed in the future.","order":19,"properties":{"cSpell.experimental.enableRegexpView":{"default":false,"markdownDescription":"Show Regular Expression Explorer","scope":"application","type":"boolean"},"cSpell.experimental.symbols":{"default":false,"markdownDescription":"Experiment with executeDocumentSymbolProvider.\nThis feature is experimental and will be removed in the future.","scope":"application","title":"Experiment with `executeDocumentSymbolProvider`","type":"boolean"},"cSpell.reportUnknownWords":{"default":true,"markdownDescription":"By default, the spell checker reports all unknown words as misspelled. This setting allows for a more relaxed spell checking, by only\nreporting unknown words as suggestions. Common spelling errors are still flagged as misspelled.\n\n- `true` - report unknown words as misspelled\n- `false` - report unknown words as suggestions","scope":"language-overridable","since":"4.0.2","title":"Strict Spell Checking","type":"boolean"}},"title":"Experimental","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control which files and folders are spell checked.","order":3,"properties":{"cSpell.allowedSchemas":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.enabledSchemes#` instead.","items":{"type":"string"},"markdownDescription":"Control which file schemes will be checked for spelling (VS Code must be restarted for this setting to take effect).\n\n\nSome schemes have special meaning like:\n- `untitled` - Used for new documents that have not yet been saved\n- `vscode-notebook-cell` - Used for validating segments of a Notebook.\n- `vscode-userdata` - Needed to spell check `.code-snippets`\n- `vscode-scm` - Needed to spell check Source Control commit messages.\n- `comment` - Used for new comment editors.","scope":"window","title":"Define Allowed Schemes","type":"array"},"cSpell.checkOnlyEnabledFileTypes":{"default":true,"markdownDescription":"By default, the spell checker checks only enabled file types. Use `#cSpell.enableFiletypes#`\nto turn on / off various file types.\n\nWhen this setting is `false`, all file types are checked except for the ones disabled by `#cSpell.enabledFileTypes#`.\nSee `#cSpell.enableFiletypes#` on how to disable a file type.","scope":"resource","title":"Check Only Enabled File Types","type":"boolean"},"cSpell.checkVSCodeSystemFiles":{"default":false,"markdownDescription":"Spell check VS Code system files.\nThese include:\n- `vscode-userdata:/**/settings.json`\n- `vscode-userdata:/**/keybindings.json`","scope":"application","type":"boolean"},"cSpell.enableFiletypes":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.enabledFileTypes#` instead.","items":{"markdownDescription":"Enable / Disable checking file types (languageIds).\nTo disable a language, prefix with `!` as in `!json`,\n\n\nExample:\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```","pattern":"(^!*(?!\\s)[\\s\\w_.\\-]+$)|(^!*[*]$)","patternErrorMessage":"Allowed characters are `a-zA-Z`, `.`, `-`, `_` and space.","type":"string"},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThese are in additional to the file types specified by `#cSpell.enabledLanguageIds#`.\nTo disable a language, prefix with `!` as in `!json`,\n\n\n**Example: individual file types**\n\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```\n\n**Example: enable all file types**\n\n```\n*           // enable checking for all file types\n!json       // except for json\n```","scope":"resource","title":"Enable File Types","type":"array","uniqueItems":true},"cSpell.enabledFileTypes":{"additionalProperties":{"type":"boolean"},"default":{"*":true,"markdown":true},"markdownDescription":"Enable / Disable checking file types (languageIds).\n\nThis setting replaces: `#cSpell.enabledLanguageIds#` and `#cSpell.enableFiletypes#`.\n\nA Value of:\n- `true` - enable checking for the file type\n- `false` - disable checking for the file type\n\nA file type of `*` is a wildcard that enables all file types.\n\n**Example: enable all file types**\n\n| File Type | Enabled | Comment |\n| --------- | ------- | ------- |\n| `*`       | `true`  | Enable all file types. |\n| `json`    | `false` | Disable checking for json files. |","scope":"resource","title":"Enabled File Types to Check","type":"object"},"cSpell.enabledSchemes":{"additionalProperties":{"type":"boolean"},"default":{"comment":true,"file":true,"gist":true,"repo":true,"sftp":true,"untitled":true,"vscode-notebook-cell":true,"vscode-scm":true,"vscode-userdata":true,"vscode-vfs":true,"vsls":true},"markdownDescription":"Control which file schemes will be checked for spelling (VS Code must be restarted for this setting to take effect).\n\n\nSome schemes have special meaning like:\n- `untitled` - Used for new documents that have not yet been saved\n- `vscode-notebook-cell` - Used for validating segments of a Notebook.\n- `vscode-userdata` - Needed to spell check `.code-snippets`\n- `vscode-scm` - Needed to spell check Source Control commit messages.\n- `comment` - Used for new comment editors.","scope":"window","title":"Specify Allowed Schemes","type":"object"},"cSpell.files":{"items":{"markdownDescription":"These are glob expressions.","type":"string"},"markdownDescription":"Glob patterns of files to be checked.\nGlob patterns are relative to the `#cSpell.globRoot#` of the configuration file that defines them.","scope":"resource","title":"Glob patterns of files to be checked","type":"array"},"cSpell.globRoot":{"markdownDescription":"The root to use for glob patterns found in this configuration.\nDefault: The current workspace folder.\nUse `globRoot` to define a different location. `globRoot` can be relative to the location of this configuration file.\nDefining globRoot, does not impact imported configurations.\n\nSpecial Values:\n\n- `${workspaceFolder}` - Default - globs will be relative to the current workspace folder\n- `${workspaceFolder:<name>}` - Where `<name>` is the name of the workspace folder.","scope":"resource","type":"string"},"cSpell.ignorePaths":{"default":["package-lock.json","node_modules","vscode-extension",".git/{info,lfs,logs,refs,objects}/**",".git/{index,*refs,*HEAD}",".vscode",".vscode-insiders"],"items":{"markdownDescription":"Simple Glob string, the root will be globRoot.","type":"string"},"markdownDescription":"Glob patterns of files to be ignored. The patterns are relative to the `#cSpell.globRoot#` of the configuration file that defines them.","scope":"resource","title":"Glob patterns of files to be ignored","type":"array"},"cSpell.import":{"items":{"markdownDescription":"A File System Path. Relative paths are relative to the configuration file.","type":"string"},"markdownDescription":"Allows this configuration to inherit configuration for one or more other files.\n\nSee [Importing / Extending Configuration](https://cspell.org/configuration/imports/) for more details.","scope":"resource","type":"array"},"cSpell.mergeCSpellSettings":{"default":true,"markdownDescription":"Specify if fields from `.vscode/settings.json` are passed to the spell checker.\nThis only applies when there is a CSpell configuration file in the workspace.\n\nThe purpose of this setting to help provide a consistent result compared to the\nCSpell spell checker command line tool.\n\nValues:\n- `true` - all settings will be merged based upon `#cSpell.mergeCSpellSettingsFields#`.\n- `false` - only use `.vscode/settings.json` if a CSpell configuration is not found.\n\nNote: this setting is used in conjunction with `#cSpell.mergeCSpellSettingsFields#`.","scope":"resource","since":"4.0.0","type":"boolean"},"cSpell.mergeCSpellSettingsFields":{"additionalProperties":false,"default":{"allowCompoundWords":true,"caseSensitive":true,"dictionaries":true,"dictionaryDefinitions":true,"enableGlobDot":true,"features":true,"files":true,"flagWords":true,"gitignoreRoot":true,"globRoot":true,"ignorePaths":true,"ignoreRegExpList":true,"ignoreWords":true,"import":true,"includeRegExpList":true,"language":true,"languageId":true,"languageSettings":true,"loadDefaultConfiguration":true,"minWordLength":true,"noConfigSearch":true,"noSuggestDictionaries":true,"numSuggestions":true,"overrides":true,"patterns":true,"pnpFiles":true,"reporters":true,"suggestWords":true,"useGitignore":true,"usePnP":true,"userWords":true,"validateDirectives":true,"words":true},"markdownDescription":"Specify which fields from `.vscode/settings.json` are passed to the spell checker.\nThis only applies when there is a CSpell configuration file in the workspace and\n`#cSpell.mergeCSpellSettings#` is `true`.\n\nValues:\n- `{ flagWords: true, userWords: false }` - Always allow `flagWords`, but never allow `userWords`.\n\nExample:\n```jsonc\n\"cSpell.mergeCSpellSettingsFields\": { \"userWords\": false }\n```","properties":{"allowCompoundWords":{"type":"boolean"},"caseSensitive":{"type":"boolean"},"dictionaries":{"type":"boolean"},"dictionaryDefinitions":{"type":"boolean"},"enableGlobDot":{"type":"boolean"},"features":{"type":"boolean"},"files":{"type":"boolean"},"flagWords":{"type":"boolean"},"gitignoreRoot":{"type":"boolean"},"globRoot":{"type":"boolean"},"ignorePaths":{"type":"boolean"},"ignoreRegExpList":{"type":"boolean"},"ignoreWords":{"type":"boolean"},"import":{"type":"boolean"},"includeRegExpList":{"type":"boolean"},"language":{"type":"boolean"},"languageId":{"type":"boolean"},"languageSettings":{"type":"boolean"},"loadDefaultConfiguration":{"type":"boolean"},"minWordLength":{"type":"boolean"},"noConfigSearch":{"type":"boolean"},"noSuggestDictionaries":{"type":"boolean"},"numSuggestions":{"type":"boolean"},"overrides":{"type":"boolean"},"patterns":{"type":"boolean"},"pnpFiles":{"type":"boolean"},"reporters":{"type":"boolean"},"suggestWords":{"type":"boolean"},"useGitignore":{"type":"boolean"},"usePnP":{"type":"boolean"},"userWords":{"type":"boolean"},"validateDirectives":{"type":"boolean"},"words":{"type":"boolean"}},"scope":"resource","since":"4.0.0","type":"object"},"cSpell.noConfigSearch":{"markdownDescription":"Prevents searching for local configuration when checking individual documents.","scope":"resource","type":"boolean"},"cSpell.spellCheckOnlyWorkspaceFiles":{"default":false,"markdownDescription":"Only spell check files that are in the currently open workspace.\nThis same effect can be achieved using the `#cSpell.files#` setting.\n\n\n```js\n\"cSpell.files\": [\"/**\"]\n```","scope":"window","title":"Spell Check Only Workspace Files","type":"boolean"},"cSpell.useGitignore":{"default":true,"markdownDescription":"Tells the spell checker to load `.gitignore` files and skip files that match the globs in the `.gitignore` files found.","scope":"resource","type":"boolean"},"cSpell.usePnP":{"markdownDescription":"Packages managers like Yarn 2 use a `.pnp.cjs` file to assist in loading\npackages stored in the repository.\n\nWhen true, the spell checker will search up the directory structure for the existence\nof a PnP file and load it.","scope":"resource","type":"boolean"},"cSpell.workspaceRootPath":{"markdownDescription":"Define the path to the workspace root folder in a multi-root workspace.\nBy default it is the first folder.\n\nThis is used to find the `cspell.json` file for the workspace.\n\n\n**Example: use the `client` folder**\n```\n${workspaceFolder:client}\n```","scope":"resource","title":"Workspace Root Folder Path","type":"string"}},"title":"Files, Folders, and Workspaces","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control dictionaries and language preferences.","order":1,"properties":{"cSpell.caseSensitive":{"markdownDescription":"Determines if words must match case and accent rules.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n  Note: Some languages like Portuguese have case sensitivity turned on by default.\n  You must use `#cSpell.languageSettings#` to turn it off.\n- `true` - Case and accents are enforced by default.","scope":"resource","type":"boolean"},"cSpell.customDictionaries":{"additionalProperties":{"anyOf":[{"title":"Named dictionary to be enabled / disabled\n- `true` - turn on the named dictionary\n- `false` - turn off the named dictionary","type":"boolean"},{"additionalProperties":false,"markdownDescription":"Define a custom dictionary to be included.","properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"anyOf":[{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File","type":"string"},{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"}],"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"title":"Custom Dictionary Entry","type":"object"}]},"markdownDescription":"Define custom dictionaries to be included by default.\nIf `addWords` is `true` words will be added to this dictionary.\n\n\n**Example:**\n\n```js\n\"cSpell.customDictionaries\": {\n  \"project-words\": {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  },\n  \"custom\": true, // Enable the `custom` dictionary\n  \"internal-terms\": false // Disable the `internal-terms` dictionary\n}\n```","scope":"resource","title":"Custom Dictionaries","type":"object"},"cSpell.dictionaries":{"items":{"type":"string"},"markdownDescription":"Optional list of dictionaries to use.\n\nEach entry should match the name of the dictionary.\n\nTo remove a dictionary from the list add `!` before the name.\ni.e. `!typescript` will turn off the dictionary with the name `typescript`.\n\n\nExample:\n\n```jsonc\n// Enable `lorem-ipsum` and disable `typescript`\n\"cSpell.dictionaries\": [\"lorem-ipsum\", \"!typescript\"]\n```","scope":"resource","type":"array"},"cSpell.dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define custom dictionaries.\nIf `addWords` is `true` words will be added to this dictionary.\n\nThis setting is subject to User/Workspace settings precedence rules: [Visual Studio Code User and Workspace Settings](https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence).\n\nIt is better to use `#cSpell.customDictionaries#`\n\n**Example:**\n\n```js\n\"cSpell.dictionaryDefinitions\": [\n  {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  }\n]\n```","scope":"resource","title":"Dictionary Definitions","type":"array"},"cSpell.flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","scope":"resource","type":"array"},"cSpell.ignoreWords":{"items":{"type":"string"},"markdownDescription":"A list of words to be ignored by the spell checker.","scope":"resource","type":"array"},"cSpell.language":{"default":"en","markdownDescription":"Current active spelling language.\n\nExample: `en-GB` for British English\n\nExample: `en,nl` to enable both English and Dutch","scope":"resource","type":"string"},"cSpell.languageSettings":{"items":{"additionalProperties":false,"properties":{"allowCompoundWords":{"default":false,"markdownDescription":"True to enable compound word checking.","type":"boolean"},"caseSensitive":{"default":false,"markdownDescription":"Determines if words must match case and accent rules.\n\nSee [Case Sensitivity](https://cspell.org/docs/case-sensitive/) for more details.\n\n- `false` - Case is ignored and accents can be missing on the entire word.\n  Incorrect accents or partially missing accents will be marked as incorrect.\n- `true` - Case and accents are enforced.","type":"boolean"},"description":{"markdownDescription":"Optional description of configuration.","type":"string"},"dictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries to use. Each entry should match the name of the dictionary.\n\nTo remove a dictionary from the list, add `!` before the name.\n\nFor example, `!typescript` will turn off the dictionary with the name `typescript`.\n\nSee the [Dictionaries](https://cspell.org/docs/dictionaries/)\nand [Custom Dictionaries](https://cspell.org/docs/dictionaries-custom/) for more details.","type":"array"},"dictionaryDefinitions":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to the file.","type":"string"}},"required":["path","name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"markdownDescription":"When `true`, let's the spell checker know that words can be added to this dictionary.","type":"boolean"},"description":{"markdownDescription":"Optional description of the contents / purpose of the dictionary.","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Path to custom dictionary text file.","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Defines the scope for when words will be added to the dictionary.\n\nScope values: `user`, `workspace`, `folder`."}},"required":["path","addWords","name"],"type":"object"}]},"markdownDescription":"Define custom dictionaries.\nIf `addWords` is `true` words will be added to this dictionary.\n\nThis setting is subject to User/Workspace settings precedence rules: [Visual Studio Code User and Workspace Settings](https://code.visualstudio.com/docs/getstarted/settings#_settings-precedence).\n\nIt is better to use `#cSpell.customDictionaries#`\n\n**Example:**\n\n```js\n\"cSpell.dictionaryDefinitions\": [\n  {\n    \"name\": \"project-words\",\n    \"path\": \"${workspaceRoot}/project-words.txt\",\n    \"description\": \"Words used in this project\",\n    \"addWords\": true\n  }\n]\n```","scope":"resource","title":"Dictionary Definitions","type":"array"},"enabled":{"default":true,"markdownDescription":"Is the spell checker enabled.","type":"boolean"},"flagWords":{"items":{"type":"string"},"markdownDescription":"List of words to always be considered incorrect. Words found in `flagWords` override `words`.\n\nFormat of `flagWords`\n- single word entry - `word`\n- with suggestions - `word:suggestion` or `word->suggestion, suggestions`\n\nExample:\n```ts\n\"flagWords\": [\n  \"color: colour\",\n  \"incase: in case, encase\",\n  \"canot->cannot\",\n  \"cancelled->canceled\"\n]\n```","type":"array"},"id":{"markdownDescription":"Optional identifier.","type":"string"},"ignoreRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or pattern names to exclude from spell checking.\n\nExample: `[\"href\"]` - to exclude html href pattern.\n\nRegular expressions use JavaScript regular expression syntax.\n\nExample: to ignore ALL-CAPS words\n\nJSON\n```json\n\"ignoreRegExpList\": [\"/\\\\b[A-Z]+\\\\b/g\"]\n```\n\nYAML\n```yaml\nignoreRegExpList:\n  - >-\n   /\\b[A-Z]+\\b/g\n```\n\nBy default, several patterns are excluded. See\n[Configuration](https://cspell.org/configuration/patterns) for more details.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"ignoreWords":{"items":{"type":"string"},"markdownDescription":"List of words to be ignored. An ignored word will not show up as an error, even if it is\nalso in the `flagWords`.","type":"array"},"includeRegExpList":{"items":{"anyOf":[{"type":"string"},{"markdownDescription":"This matches the name in a pattern definition.","type":"string"},{"enum":["Base64","Base64MultiLine","Base64SingleLine","CStyleComment","CStyleHexValue","CSSHexValue","CommitHash","CommitHashLink","Email","EscapeCharacters","HexValues","href","PhpHereDoc","PublicKey","RsaCert","SshRsa","SHA","HashStrings","SpellCheckerDisable","SpellCheckerDisableBlock","SpellCheckerDisableLine","SpellCheckerDisableNext","SpellCheckerIgnoreInDocSetting","string","UnicodeRef","Urls","UUID","Everything"],"type":"string"}],"markdownDescription":"A PatternRef is a Pattern or PatternId."},"markdownDescription":"List of regular expression patterns or defined pattern names to match for spell checking.\n\nIf this property is defined, only text matching the included patterns will be checked.\n\nWhile you can create your own patterns, you can also leverage several patterns that are\n[built-in to CSpell](https://cspell.org/types/cspell-types/types/PredefinedPatterns.html).","type":"array"},"languageId":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"},{"items":{"anyOf":[{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},{"markdownDescription":"A single string with a comma separated list of file types:\n- `typescript,cpp`\n- `json,jsonc,yaml`\n- etc.","pattern":"^([-\\w_\\s]+)(,[-\\w_\\s]+)*$","type":"string"},{"markdownDescription":"A Negative File Type used to exclude files of that type.\n- `!typescript` - will exclude typescript files.\n- `!cpp,!json` - will exclude cpp and json files.\n- `!typescript,javascript` - will exclude typescript files and include javascript files.","pattern":"^(![-\\w_\\s]+)(,!?[-\\w_\\s]+)*$","type":"string"}]},"type":"array"}],"markdownDescription":"The language id.  Ex: `typescript`, `html`, or `php`.  `*` -- will match all languages."},"locale":{"anyOf":[{"markdownDescription":"This is a written language locale like: `en`, `en-GB`, `fr`, `es`, `de` or `en,fr` for both English and French","type":"string"},{"items":{"markdownDescription":"This is a written language locale like: `en`, `en-GB`, `fr`, `es`, `de` or `en,fr` for both English and French","type":"string"},"type":"array"}],"markdownDescription":"The locale filter, matches against the language. This can be a comma separated list. `*` will match all locales."},"name":{"markdownDescription":"Optional name of configuration.","type":"string"},"noSuggestDictionaries":{"items":{"anyOf":[{"markdownDescription":"This a reference to a named dictionary.\nIt is expected to match the name of a dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"},{"markdownDescription":"This a negative reference to a named dictionary.\n\nIt is used to exclude or include a dictionary by name.\n\nThe reference starts with 1 or more `!`.\n- `!<dictionary_name>` - Used to exclude the dictionary matching `<dictionary_name>`.\n- `!!<dictionary_name>` - Used to re-include a dictionary matching `<dictionary_name>`.\n   Overrides `!<dictionary_name>`.\n- `!!!<dictionary_name>` - Used to exclude a dictionary matching `<dictionary_name>`.\n   Overrides `!!<dictionary_name>`.","pattern":"^(?=!+[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}],"markdownDescription":"Reference to a dictionary by name.\nOne of:\n-  {@link  DictionaryRef } \n-  {@link  DictionaryNegRef }"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","type":"array"},"patterns":{"items":{"additionalProperties":false,"properties":{"description":{"markdownDescription":"Description of the pattern.","type":"string"},"name":{"markdownDescription":"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value.","type":"string"},"pattern":{"anyOf":[{"type":"string"},{"items":{"type":"string"},"type":"array"}],"markdownDescription":"RegExp pattern or array of RegExp patterns."}},"required":["name","pattern"],"type":"object"},"markdownDescription":"Defines a list of patterns that can be used with the  {@link  ignoreRegExpList }  and\n {@link  includeRegExpList }  options.\n\nFor example:\n\n```javascript\n\"ignoreRegExpList\": [\"comments\"],\n\"patterns\": [\n  {\n    \"name\": \"comment-single-line\",\n    \"pattern\": \"/#.*/g\"\n  },\n  {\n    \"name\": \"comment-multi-line\",\n    \"pattern\": \"/(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)/g\"\n  },\n  // You can also combine multiple named patterns into one single named pattern\n  {\n    \"name\": \"comments\",\n    \"pattern\": [\"comment-single-line\", \"comment-multi-line\"]\n  }\n]\n```","type":"array"},"suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","type":"array"}},"required":["languageId"],"type":"object"},"markdownDescription":"Additional settings for individual programming languages and locales.","scope":"resource","type":"array"},"cSpell.noSuggestDictionaries":{"items":{"type":"string"},"markdownDescription":"Optional list of dictionaries that will not be used for suggestions.\nWords in these dictionaries are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\none of these dictionaries, it will be removed from the set of\npossible suggestions.","scope":"resource","type":"array"},"cSpell.suggestWords":{"items":{"type":"string"},"markdownDescription":"A list of suggested replacements for words.\nSuggested words provide a way to make preferred suggestions on word replacements.\nTo hint at a preferred change, but not to require it.\n\nFormat of `suggestWords`\n- Single suggestion (possible auto fix)\n    - `word: suggestion`\n    - `word->suggestion`\n- Multiple suggestions (not auto fixable)\n   - `word: first, second, third`\n   - `word->first, second, third`","type":"array"},"cSpell.useLocallyInstalledCSpellDictionaries":{"default":true,"markdownDescription":"Search for `@cspell/cspell-bundled-dicts` in the workspace folder and use it if found.","scope":"resource","since":"4.0.0","type":"boolean"},"cSpell.userWords":{"items":{"type":"string"},"markdownDescription":"Words to add to global dictionary -- should only be in the user config file.","scope":"resource","type":"array"},"cSpell.words":{"items":{"type":"string"},"markdownDescription":"List of words to be considered correct.","scope":"resource","type":"array"}},"title":"Languages and Dictionaries","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control the appearance of the spell checker.","order":6,"properties":{"cSpell.dark":{"additionalProperties":false,"markdownDescription":"Decoration for dark themes.\n\nSee:\n- `#cSpell.overviewRulerColor#`\n- `#cSpell.textDecoration#`","properties":{"overviewRulerColor":{"default":"#348feb80","markdownDescription":"The CSS color used to show issues in the ruler.\n\nDepends upon `#cSpell.useCustomDecorations#`.\n\nSee:\n- [`<color>` CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)\n- [CSS Colors, W3C Schools](https://www.w3schools.com/cssref/css_colors.php)\n- Hex colors\n- Use \"\" (empty string) to disable.\n\nExamples:\n- `green`\n- `DarkYellow`\n- `#ffff0080` - semi-transparent yellow.\n- `rgb(255 153 0 / 80%)`","scope":"application","since":"4.0.0","type":"string"},"textDecoration":{"markdownDescription":"The CSS Style used to decorate spelling issues. Depends upon `#cSpell.useCustomDecorations#`.\n\nThis setting is used to manually configure the text decoration. If it is not set, the following settings are used:\n- `#cSpell.textDecorationLine#` to pick the line type\n- `#cSpell.textDecorationStyle#` to pick the style\n- `#cSpell.textDecorationColor#` to set the color\n- `#cSpell.textDecorationThickness#` to set the thickness.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n\nFormat:  `<line> [style] <color> [thickness]`\n\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `underline green`\n- `underline dotted yellow 0.2rem`\n- `underline wavy #ff0c 1.5px` - Wavy underline with 1.5px thickness in semi-transparent yellow.\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.","scope":"application","since":"4.0.0","type":"string"},"textDecorationColor":{"default":"#348feb","markdownDescription":"The decoration color for normal spelling issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"textDecorationColorFlagged":{"default":"#f44","markdownDescription":"The decoration color for flagged issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"textDecorationColorSuggestion":{"default":"#8884","markdownDescription":"The decoration color for spelling suggestions.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nCommon Format: `#RGBA` or `#RRGGBBAA` or `#RGB` or `#RRGGBB`\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.2","type":"string"},"textDecorationLine":{"default":"underline","enum":["underline","overline","line-through"],"markdownDescription":"The CSS line type used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)","scope":"application","since":"4.0.0","type":"string"},"textDecorationStyle":{"default":"dashed","enum":["solid","wavy","dotted","dashed","double"],"markdownDescription":"The CSS line style used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)","scope":"application","since":"4.0.0","type":"string"},"textDecorationThickness":{"default":"auto","markdownDescription":"The CSS line thickness used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `auto`\n- `from-font`\n- `0.2rem`\n- `1.5px`\n- `10%`","scope":"application","since":"4.0.0","type":"string"}},"scope":"application","since":"4.0.0","type":"object"},"cSpell.doNotUseCustomDecorationForScheme":{"additionalProperties":{"type":"boolean"},"default":{"vscode-scm":true},"markdownDescription":"Use the VS Code Diagnostic Collection to render spelling issues.\n\nWith some edit boxes, like the source control message box, the custom decorations do not show up.\nThis setting allows the use of the VS Code Diagnostic Collection to render spelling issues.","scope":"application","since":"4.0.0","title":"Use VS Code to Render Spelling Issues","type":"object"},"cSpell.light":{"additionalProperties":false,"markdownDescription":"Decoration for light themes.\n\nSee:\n- `#cSpell.overviewRulerColor#`\n- `#cSpell.textDecoration#`","properties":{"overviewRulerColor":{"default":"#348feb80","markdownDescription":"The CSS color used to show issues in the ruler.\n\nDepends upon `#cSpell.useCustomDecorations#`.\n\nSee:\n- [`<color>` CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)\n- [CSS Colors, W3C Schools](https://www.w3schools.com/cssref/css_colors.php)\n- Hex colors\n- Use \"\" (empty string) to disable.\n\nExamples:\n- `green`\n- `DarkYellow`\n- `#ffff0080` - semi-transparent yellow.\n- `rgb(255 153 0 / 80%)`","scope":"application","since":"4.0.0","type":"string"},"textDecoration":{"markdownDescription":"The CSS Style used to decorate spelling issues. Depends upon `#cSpell.useCustomDecorations#`.\n\nThis setting is used to manually configure the text decoration. If it is not set, the following settings are used:\n- `#cSpell.textDecorationLine#` to pick the line type\n- `#cSpell.textDecorationStyle#` to pick the style\n- `#cSpell.textDecorationColor#` to set the color\n- `#cSpell.textDecorationThickness#` to set the thickness.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n\nFormat:  `<line> [style] <color> [thickness]`\n\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `underline green`\n- `underline dotted yellow 0.2rem`\n- `underline wavy #ff0c 1.5px` - Wavy underline with 1.5px thickness in semi-transparent yellow.\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.","scope":"application","since":"4.0.0","type":"string"},"textDecorationColor":{"default":"#348feb","markdownDescription":"The decoration color for normal spelling issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"textDecorationColorFlagged":{"default":"#f44","markdownDescription":"The decoration color for flagged issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"textDecorationColorSuggestion":{"default":"#8884","markdownDescription":"The decoration color for spelling suggestions.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nCommon Format: `#RGBA` or `#RRGGBBAA` or `#RGB` or `#RRGGBB`\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.2","type":"string"},"textDecorationLine":{"default":"underline","enum":["underline","overline","line-through"],"markdownDescription":"The CSS line type used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)","scope":"application","since":"4.0.0","type":"string"},"textDecorationStyle":{"default":"dashed","enum":["solid","wavy","dotted","dashed","double"],"markdownDescription":"The CSS line style used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)","scope":"application","since":"4.0.0","type":"string"},"textDecorationThickness":{"default":"auto","markdownDescription":"The CSS line thickness used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `auto`\n- `from-font`\n- `0.2rem`\n- `1.5px`\n- `10%`","scope":"application","since":"4.0.0","type":"string"}},"scope":"application","since":"4.0.0","type":"object"},"cSpell.overviewRulerColor":{"default":"#348feb80","markdownDescription":"The CSS color used to show issues in the ruler.\n\nDepends upon `#cSpell.useCustomDecorations#`.\n\nSee:\n- [`<color>` CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)\n- [CSS Colors, W3C Schools](https://www.w3schools.com/cssref/css_colors.php)\n- Hex colors\n- Use \"\" (empty string) to disable.\n\nExamples:\n- `green`\n- `DarkYellow`\n- `#ffff0080` - semi-transparent yellow.\n- `rgb(255 153 0 / 80%)`","scope":"application","since":"4.0.0","type":"string"},"cSpell.showInRuler":{"default":true,"markdownDescription":"Show spelling issues in the editor ruler.\n\nNote: This setting is only used when `#cSpell.useCustomDecorations#` is `true`.","scope":"application","since":"4.0.35","type":"boolean"},"cSpell.textDecoration":{"markdownDescription":"The CSS Style used to decorate spelling issues. Depends upon `#cSpell.useCustomDecorations#`.\n\nThis setting is used to manually configure the text decoration. If it is not set, the following settings are used:\n- `#cSpell.textDecorationLine#` to pick the line type\n- `#cSpell.textDecorationStyle#` to pick the style\n- `#cSpell.textDecorationColor#` to set the color\n- `#cSpell.textDecorationThickness#` to set the thickness.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n\nFormat:  `<line> [style] <color> [thickness]`\n\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `underline green`\n- `underline dotted yellow 0.2rem`\n- `underline wavy #ff0c 1.5px` - Wavy underline with 1.5px thickness in semi-transparent yellow.\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationColor":{"default":"#348feb","markdownDescription":"The decoration color for normal spelling issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nTo change the ruler color, use `#cSpell.overviewRulerColor#`.\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationColorFlagged":{"default":"#f44","markdownDescription":"The decoration color for flagged issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationColorSuggestion":{"default":"#8884","markdownDescription":"The decoration color for spelling suggestions.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- color - see: [text-decoration-color, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color)\n\nCommon Format: `#RGBA` or `#RRGGBBAA` or `#RGB` or `#RRGGBB`\n\nExamples:\n- `green`\n- `yellow`\n- `#ff0c`","scope":"application","since":"4.0.2","type":"string"},"cSpell.textDecorationLine":{"default":"underline","enum":["underline","overline","line-through"],"markdownDescription":"The CSS line type used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- line - `underline`, `overline`, see: [text-decoration-line, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line)","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationStyle":{"default":"dashed","enum":["solid","wavy","dotted","dashed","double"],"markdownDescription":"The CSS line style used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- style - `solid`, `wavy`, `dotted`, see: [text-decoration-style, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style)","scope":"application","since":"4.0.0","type":"string"},"cSpell.textDecorationThickness":{"default":"auto","markdownDescription":"The CSS line thickness used to decorate issues.\n\nSee: [text-decoration - CSS: Cascading Style Sheets, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration)\n- thickness - see: [text-decoration-thickness, MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness)\n\nExamples:\n- `auto`\n- `from-font`\n- `0.2rem`\n- `1.5px`\n- `10%`","scope":"application","since":"4.0.0","type":"string"},"cSpell.useCustomDecorations":{"default":false,"markdownDescription":"Draw custom decorations on Spelling Issues.\n- `true` - Use custom decorations. - VS Code Diagnostic Severity Levels are not used.\n- `false` - Use the VS Code Diagnostic Collection to render spelling issues.\n\nNote: This setting overrides the VS Code Diagnostics setting: `#cSpell.diagnosticLevel#`.","scope":"application","since":"4.0.0","type":"boolean"}},"title":"Appearance","type":"object"},{"additionalProperties":false,"markdownDescription":"Legacy settings that have been deprecated or are not commonly used.","order":20,"properties":{"cSpell.allowCompoundWords":{"default":false,"markdownDescription":"Enable / Disable allowing word compounds.\n- `true` means `arraylength` would be ok\n- `false` means it would not pass.\n\nNote: this can also cause many misspelled words to seem correct.","scope":"resource","type":"boolean"},"cSpell.customFolderDictionaries":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.customDictionaries#` instead.","items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the folder.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"resource","title":"Custom Folder Dictionaries","type":"array"},"cSpell.customUserDictionaries":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.customDictionaries#` instead.","items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the user.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"application","title":"Custom User Dictionaries","type":"array"},"cSpell.customWorkspaceDictionaries":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.customDictionaries#` instead.","items":{"anyOf":[{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","title":"Path to Dictionary Text File","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name"],"type":"object"},{"additionalProperties":false,"properties":{"addWords":{"default":true,"markdownDescription":"Indicate if this custom dictionary should be used to store added words.","title":"Add Words to Dictionary","type":"boolean"},"description":{"markdownDescription":"Optional: A human readable description.","title":"Description of the Dictionary","type":"string"},"ignoreForbiddenWords":{"markdownDescription":"Some dictionaries may contain forbidden words to prevent compounding from generating\nwords that are not valid in the language. These are often\nwords that are used in other languages or might be generated through compounding.\nThis setting allows flagged words to be ignored when checking the dictionary.\nThe effect is similar to the word not being in the dictionary.","type":"boolean"},"name":{"markdownDescription":"The reference name of the dictionary.\n\n\nExample: `My Words` or `custom`\n\n\nIf the name matches a pre-defined dictionary, it will override the pre-defined dictionary.\nIf you use: `typescript` it will replace the built-in TypeScript dictionary.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","title":"Name of Dictionary","type":"string"},"noSuggest":{"markdownDescription":"Indicate that suggestions should not come from this dictionary.\nWords in this dictionary are considered correct, but will not be\nused when making spell correction suggestions.\n\nNote: if a word is suggested by another dictionary, but found in\nthis dictionary, it will be removed from the set of\npossible suggestions.","type":"boolean"},"path":{"markdownDescription":"Define the path to the dictionary text file.\n\n**Note:** if path is `undefined` the `name`d dictionary is expected to be found\nin the `dictionaryDefinitions`.\n\nFile Format: Each line in the file is considered a dictionary entry.\n\nCase is preserved while leading and trailing space is removed.\n\nThe path should be absolute, or relative to the workspace.\n\n**Example:** relative to User's folder\n\n```json\n\"path\": \"~/dictionaries/custom_dictionary.txt\"\n```\n\n**Example:** relative to the `client` folder in a multi-root workspace\n\n```json\n\"path\": \"${workspaceFolder:client}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the current workspace folder in a single-root workspace\n\n**Note:** this might not work as expected in a multi-root workspace since it is based upon the relative\nworkspace for the currently open file.\n\n```json\n\"path\": \"${workspaceFolder}/build/custom_dictionary.txt\"\n```\n\n**Example:** relative to the workspace folder in a single-root workspace or the first folder in\na multi-root workspace\n\n```json\n\"path\": \"./build/custom_dictionary.txt\"\n```","type":"string"},"scope":{"anyOf":[{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},{"items":{"enum":["user","workspace","folder"],"markdownDescription":"Specifies the scope of a dictionary.","type":"string"},"type":"array"}],"markdownDescription":"Options are\n- `user` - words that apply to all projects and workspaces\n- `workspace` - words that apply to the entire workspace\n- `folder` - words that apply to only a workspace folder","title":"Scope of dictionary"}},"required":["name","path"],"type":"object"},{"markdownDescription":"This is the name of a dictionary.\n\nName Format:\n- Must contain at least 1 number or letter.\n- Spaces are allowed.\n- Leading and trailing space will be removed.\n- Names ARE case-sensitive.\n- Must not contain `*`, `!`, `;`, `,`, `{`, `}`, `[`, `]`, `~`.","pattern":"^(?=[^!*,;{}[\\]~\\n]+$)(?=(.*\\w)).+$","type":"string"}]},"markdownDescription":"Define custom dictionaries to be included by default for the workspace.\nIf `addWords` is `true` words will be added to this dictionary.","scope":"resource","title":"Custom Workspace Dictionaries","type":"array"},"cSpell.enabledLanguageIds":{"deprecated":true,"deprecationMessage":"- Use `#cSpell.enabledFileTypes#` instead.","items":{"markdownDescription":"A file type:\n- `*` - will match ALL file types.\n- `typescript`, `cpp`, `json`, etc.","pattern":"^(!?[-\\w_\\s]+)|(\\*)$","type":"string"},"markdownDescription":"Specify a list of file types to spell check. It is better to use `#cSpell.enabledFileTypes#` to Enable / Disable checking files types.","scope":"resource","title":"Enabled Language Ids","type":"array","uniqueItems":true},"cSpell.showStatus":{"default":true,"deprecationMessage":"No longer used.","markdownDescription":"Display the spell checker status on the status bar.","scope":"application","type":"boolean"},"cSpell.showStatusAlignment":{"default":"Right","deprecated":true,"deprecationMessage":"No longer supported.","enum":["Left","Right"],"enumDescriptions":["Left Side of Statusbar","Right Side of Statusbar"],"markdownDescription":"The side of the status bar to display the spell checker status.","scope":"application","type":"string"}},"title":"Legacy","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control the performance of the spell checker.","order":4,"properties":{"cSpell.blockCheckingWhenAverageChunkSizeGreaterThan":{"default":80,"markdownDescription":"The maximum average length of chunks of text without word breaks.\n\n\nA chunk is the characters between absolute word breaks.\nAbsolute word breaks match: `/[\\s,{}[\\]]/`\n\n\n**Error Message:** _Average word length is too long._\n\n\nIf you are seeing this message, it means that the file contains mostly long lines\nwithout many word breaks.","scope":"language-overridable","type":"number"},"cSpell.blockCheckingWhenLineLengthGreaterThan":{"default":10000,"markdownDescription":"The maximum line length.\n\n\nBlock spell checking if lines are longer than the value given.\nThis is used to prevent spell checking generated files.\n\n\n**Error Message:** _Lines are too long._","scope":"language-overridable","type":"number"},"cSpell.blockCheckingWhenTextChunkSizeGreaterThan":{"default":500,"markdownDescription":"The maximum length of a chunk of text without word breaks.\n\n\nIt is used to prevent spell checking of generated files.\n\n\nA chunk is the characters between absolute word breaks.\nAbsolute word breaks match: `/[\\s,{}[\\]]/`, i.e. spaces or braces.\n\n\n**Error Message:** _Maximum word length exceeded._\n\n\nIf you are seeing this message, it means that the file contains a very long line\nwithout many word breaks.","scope":"language-overridable","type":"number"},"cSpell.checkLimit":{"default":500,"markdownDescription":"Set the maximum number of blocks of text to check.\nEach block is 1024 characters.","scope":"resource","type":"number"},"cSpell.spellCheckDelayMs":{"default":50,"markdownDescription":"Delay in ms after a document has changed before checking it for spelling errors.","scope":"application","type":"number"},"cSpell.suggestionsTimeout":{"default":400,"markdownDescription":"The maximum amount of time in milliseconds to generate suggestions for a word.","scope":"resource","type":"number"}},"title":"Performance","type":"object"},{"additionalProperties":false,"markdownDescription":"Settings that control how the spell checker reports and displays errors.","order":2,"properties":{"cSpell.autoFormatConfigFile":{"default":false,"markdownDescription":"If a `cspell` configuration file is updated, format the configuration file\nusing the VS Code Format Document Provider. This will cause the configuration\nfile to be saved prior to being updated.","scope":"window","title":"Auto Format Configuration File","type":"boolean"},"cSpell.diagnosticLevel":{"default":"Information","enum":["Error","Warning","Information","Hint"],"enumDescriptions":["Report Spelling Issues as Errors","Report Spelling Issues as Warnings","Report Spelling Issues as Information","Report Spelling Issues as Hints, will not show up in Problems"],"markdownDescription":"The Diagnostic Severity Level determines how issues are shown in the Problems Pane and within the document.\nSet the level to `Hint` to hide the issues from the Problems Pane.\n\nNote: `#cSpell.useCustomDecorations#` must be `false` to use VS Code Diagnostic Severity Levels.\n\nSee: [VS Code Diagnostic Severity Level](https://code.visualstudio.com/api/references/vscode-api#DiagnosticSeverity)","scope":"resource","title":"Set Diagnostic Reporting Level","type":"string"},"cSpell.diagnosticLevelFlaggedWords":{"enum":["Error","Warning","Information","Hint"],"enumDescriptions":["Report Spelling Issues as Errors","Report Spelling Issues as Warnings","Report Spelling Issues as Information","Report Spelling Issues as Hints, will not show up in Problems"],"markdownDescription":"Flagged word issues found by the spell checker are marked with a Diagnostic Severity Level. This affects the color of the squiggle.\nBy default, flagged words will use the same diagnostic level as general issues. Use this setting to customize them.\n\nSee: [VS Code Diagnostic Severity Level](https://code.visualstudio.com/api/references/vscode-api#DiagnosticSeverity)","scope":"resource","since":"4.0.0","title":"Set Diagnostic Reporting Level for Flagged Words","type":"string"},"cSpell.enabledNotifications":{"additionalProperties":false,"default":{"Average Word Length too Long":true,"Lines too Long":true,"Maximum Word Length Exceeded":true},"markdownDescription":"Control which notifications are displayed.","properties":{"Average Word Length too Long":{"markdownDescription":"Enable notifications if the average word size is too high.","type":"boolean"},"Lines too Long":{"markdownDescription":"Enable notifications if the line is too long.","type":"boolean"},"Maximum Word Length Exceeded":{"markdownDescription":"Enable notifications if the maximum word length is exceeded.","type":"boolean"}},"scope":"resource","since":"4.0.41","title":"Enabled Notifications","type":"object"},"cSpell.hideAddToDictionaryCodeActions":{"default":false,"markdownDescription":"Hide the options to add words to dictionaries or settings.","scope":"resource","type":"boolean"},"cSpell.hideIssuesWhileTyping":{"default":"Word","enum":["Off","Word","Line","Document"],"enumDescriptions":["Show issues while typing","Hide issues while typing in the current word","Hide issues while typing on the line","Hide all issues while typing in the document"],"markdownDescription":"Control how spelling issues are displayed while typing.\nSee: `#cSpell.revealIssuesAfterDelayMS#` to control when issues are revealed.","scope":"application","since":"4.0.0","title":"Hide Issues While Typing","type":"string"},"cSpell.maxDuplicateProblems":{"default":20,"markdownDescription":"The maximum number of times the same word can be flagged as an error in a file.","scope":"resource","type":"number"},"cSpell.maxNumberOfProblems":{"default":100,"markdownDescription":"Controls the maximum number of spelling errors per document.","scope":"resource","type":"number"},"cSpell.minWordLength":{"default":4,"markdownDescription":"The minimum length of a word before checking it against a dictionary.","scope":"resource","type":"number"},"cSpell.numSuggestions":{"default":8,"markdownDescription":"Controls the number of suggestions shown.","scope":"resource","type":"number"},"cSpell.revealIssuesAfterDelayMS":{"default":1500,"markdownDescription":"Reveal hidden issues related to `#cSpell.hideIssuesWhileTyping#` after a delay in milliseconds.","scope":"application","since":"4.0.0","title":"Reveal Issues After a Delay in Milliseconds","type":"number"},"cSpell.showAutocompleteDirectiveSuggestions":{"default":true,"markdownDescription":"Show CSpell in-document directives as you type.\n\n**Note:** VS Code must be restarted for this setting to take effect.","scope":"language-overridable","type":"boolean"},"cSpell.showCommandsInEditorContextMenu":{"default":true,"markdownDescription":"Show Spell Checker actions in Editor Context Menu","scope":"application","type":"boolean"},"cSpell.showSuggestionsLinkInEditorContextMenu":{"default":true,"markdownDescription":"Show Spelling Suggestions link in the top level context menu.","scope":"application","type":"boolean"},"cSpell.suggestionMenuType":{"default":"quickPick","enum":["quickPick","quickFix"],"enumDescriptions":["Suggestions will appear as a drop down at the top of the IDE. (Best choice for Vim Key Bindings)","Suggestions will appear inline near the word, inside the text editor."],"markdownDescription":"The type of menu used to display spelling suggestions.","scope":"resource","type":"string"},"cSpell.suggestionNumChanges":{"default":3,"markdownDescription":"The maximum number of changes allowed on a word to be considered a suggestions.\n\nFor example, appending an `s` onto `example` -> `examples` is considered 1 change.\n\nRange: between 1 and 5.","scope":"resource","type":"number"},"cSpell.validateDirectives":{"markdownDescription":"Verify that the in-document directives are correct.","scope":"window","type":"boolean"}},"title":"Reporting and Display","type":"object"}],"terminal":{"profiles":[{"title":"Spell Checker REPL","id":"cSpell.terminal-profile"}]}},"workspaces":["tools/build-tools","packages/utils-logger","packages/utils-disposables","packages/json-rpc-api","packages/webview-rpc","packages/webview-api","packages/webview-ui","packages/__locale-resolver","packages/__utils","packages/_server","packages/_serverPatternMatcher","packages/client","packages/_integrationTests","scripts","website"],"scripts":{"build-package-schema":"npm --workspace=code-spell-checker-server run build-schema && build-tools update-package-schema && npm run prettier:fix-schema","build":"npm run build:workspaces && npm run build:schema","build:docs":"npm run gen-docs","build:all":"npm run build && npm run build:docs","build:readme":"inject-markdown README.md && prettier -w README.md && inject-markdown website && prettier -w website","build:schema":"npm run build-package-schema","build:workspaces":"npm --workspaces --if-present run build","build:extension":"npm run package-extension","clean":"npm --workspaces --if-present run clean && shx rm -rf \"packages/*/node_modules\" \"modules/*/node_modules\" \"modules/**/dist\" ","build-production":"npm --workspaces --if-present run build-production","build-release":"npm run build && npm run package-extension","build-website":"cd website && npm i && npm run build-site","gen-docs":"npm --if-present -ws run gen-docs","package-extension":"vsce package -o ./build","prettier:check":"prettier . -c","prettier:fix":"npm run prettier:check -- -w","prettier:fix-schema":"prettier -w \"**/*.schema.json\"","test-vsce-build":"shx mkdir -p temp && vsce package -o ./temp/code-spell-checker.vsix","remove-test-files":"shx rm -rf \"packages/*/{out,dist,settingsViewer}/**/*.test.*js\"","vscode:prepublish":"npm run build-production && npm run remove-test-files","lint":"npm run lint:eslint && npm run prettier:fix","lint:eslint":"eslint . --fix --cache","lint-docs":"prettier -w website","lint-docs-ci":"prettier -c website","test-client-integration":"npm --workspace=@internal/integration-tests run test-integration","test":"npm --workspaces --if-present run test && echo OK","update-cspell":"npx npm-check-updates --root -ws --target semver -u \"cspell*\" \"@cspell/*\"  && npm i","update-packages":"npm run update:packages:root && npm run update:packages:website","update:packages:root":"npx npm-check-updates --root -ws --target semver -u && npm i","update:packages:website":"cd website && npm run update-packages","postinstall":"patch-package"},"devDependencies":{"@eslint/js":"^9.25.0","@tsconfig/node20":"^20.1.5","@types/node":"^20.17.30","@types/vscode":"1.90.0","@types/vscode-webview":"^1.57.5","@vitest/coverage-istanbul":"^3.1.1","@vscode/vsce":"^3.3.2","ansi-styles":"^6.2.1","chokidar-cli":"^3.0.0","concurrently":"^9.1.2","esbuild":"^0.25.2","eslint":"^9.25.0","eslint-plugin-n":"^17.17.0","eslint-plugin-simple-import-sort":"^12.1.1","eslint-plugin-unicorn":"^58.0.0","globals":"^16.0.0","inject-markdown":"^3.1.4","jest-mock-vscode":"^4.3.1","ovsx":"^0.10.2","patch-package":"^8.0.0","prettier":"^3.5.3","prettier-plugin-svelte":"^3.3.3","rollup":"^4.40.0","rollup-plugin-dts":"^6.2.1","shx":"^0.4.0","tsup":"^8.4.0","typescript":"~5.8.3","typescript-eslint":"^8.30.1","vite":"^6.3.2","vitest":"^3.1.1"},"dependencies":{"@cspell/cspell-bundled-dicts":"^8.19.1","@cspell/cspell-types":"^8.19.1","@cspell/dict-cspell-bundle":"^1.0.46","cspell":"^8.19.1","regexp-worker":"^3.0.0"},"vsce":{}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/streetsidesoftware.code-spell-checker-4.0.47","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Street Side Software","metadata":{"installedTimestamp":1745950012192,"source":"gallery","id":"f6dbd813-b0a0-42c1-90ea-10dde9d925a7","publisherId":"67600ca7-88fb-4104-9f7e-dd51c00facf2","publisherDisplayName":"Street Side Software","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":6085726},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"mechatroner.rainbow-csv","uuid":"3792588c-3d35-442d-91ea-fe6a755e8155"},"manifest":{"name":"rainbow-csv","displayName":"Rainbow CSV","description":"Highlight CSV and TSV files, Run SQL-like queries","version":"3.19.0","publisher":"mechatroner","license":"MIT","icon":"rainbow_csv_logo.png","engines":{"vscode":"^1.95.0"},"keywords":["csv","tsv","highlight"],"categories":["Data Science","Other","Programming Languages"],"activationEvents":["onLanguage:csv","onLanguage:tsv","onLanguage:csv (semicolon)","onLanguage:csv (pipe)","onLanguage:csv (whitespace)","onLanguage:dynamic csv","onLanguage:plaintext","onCommand:rainbow-csv.RBQL","onCommand:rainbow-csv.RainbowSeparator","onCommand:rainbow-csv.SampleHead","onCommand:rainbow-csv.SampleTail"],"main":"./extension","browser":"./dist/web/extension.js","contributes":{"colors":[{"id":"rainbowtrack1","description":"Color for column tracking one.","defaults":{"dark":"#ff0000","light":"#ff0000","highContrast":"#ff0000","highContrastLight":"#ff0000"}},{"id":"rainbowtrack2","description":"Color for column tracking two.","defaults":{"dark":"#00ff00","light":"#00ff00","highContrast":"#00ff00","highContrastLight":"#00ff00"}},{"id":"rainbowtrack3","description":"Color for column tracking three.","defaults":{"dark":"#0000ff","light":"#0000ff","highContrast":"#0000ff","highContrastLight":"#0000ff"}}],"configuration":{"type":"object","title":"Rainbow CSV","properties":{"rainbow_csv.enable_sticky_header":{"type":"boolean","default":true,"order":1,"description":"Enable sticky header line at the top."},"rainbow_csv.enable_separator_autodetection":{"type":"boolean","default":true,"order":2,"description":"Enable automatic content based separator autodetection."},"rainbow_csv.autodetect_separators":{"type":"array","default":["TAB",",",";","|"],"description":"Enable automatic content-based separator autodetection for the specified list of separators (multicharacter separators are supported).","order":3,"items":{"type":"string","description":"Separator"}},"rainbow_csv.autodetection_min_line_count":{"type":"number","default":10,"order":4,"description":"Minimum number of non-comment lines in file for content-based autodetection."},"rainbow_csv.highlight_rows":{"type":"boolean","default":false,"order":5,"description":"Highlight rows with alternate background colors by default."},"rainbow_csv.virtual_alignment_mode":{"type":"string","enum":["disabled","manual","always"],"enumDescriptions":["Disabled. Align only when \"VirtualAlign\" command is executed","Align when \"Align\" Status Bar button is clicked","Automatically align all files"],"order":6,"default":"disabled","description":"Virtual alignment based on VSCode inlay hints that doesn't change underlying file content."},"rainbow_csv.virtual_alignment_char":{"type":"string","enum":["middot","space"],"enumDescriptions":["Middle dot","Whitespace"],"order":7,"default":"middot","description":"Virtual alignment character."},"rainbow_csv.virtual_alignment_vertical_grid":{"type":"boolean","default":false,"order":8,"description":"Show vertical grid in virtual alignment mode."},"rainbow_csv.enable_tooltip":{"type":"boolean","default":true,"order":9,"description":"Enable column-info tooltip on hover."},"rainbow_csv.enable_tooltip_column_names":{"type":"boolean","default":true,"order":10,"description":"Show column names in tooltip."},"rainbow_csv.enable_cursor_position_info":{"type":"boolean","default":true,"order":11,"description":"Keyboard input text cursor: show info about the cursor CSV column in the status bar."},"rainbow_csv.double_width_alignment":{"type":"boolean","default":true,"order":12,"description":"If enabled treat double width unicode chars e.g. Chinese or Japanese chars as double wide when aligning."},"rainbow_csv.enable_auto_csv_lint":{"type":"boolean","default":true,"order":13,"description":"Automatically run linter for every CSV file."},"rainbow_csv.csv_lint_detect_trailing_spaces":{"type":"boolean","default":false,"order":14,"description":"CSV Lint: detect leading and trailing whitespaces in fields and show warning."},"rainbow_csv.comment_prefix":{"type":"string","default":"","order":15,"description":"Comment lines prefix, e.g. \"#\". Set to empty string to disable."},"rainbow_csv.rbql_output_dir":{"type":"string","default":"TMP","order":16,"description":"Output directory for RBQL result sets, can be `TMP`, `INPUT` or a custom absolute path. `TMP` - output in system tmp dir(default), `INPUT` - output in the same dir as input file, otherwise use provided path as the output directory e.g. `/path/to/custom/dir`."},"rainbow_csv.rbql_with_headers_by_default":{"type":"boolean","default":false,"order":17,"description":"RBQL treats the first line as header by default."},"rainbow_csv.enable_context_menu_head":{"type":"boolean","default":false,"order":18,"description":"Enable \"Preview CSV head\" option in File Explorer context menu for all files."},"rainbow_csv.enable_context_menu_tail":{"type":"boolean","default":false,"order":19,"description":"Enable \"Preview CSV tail\" option in File Explorer context menu for all files."},"rainbow_csv.align_in_scratch_file":{"type":"boolean","default":false,"order":20,"description":"If enabled, aligned content is copied to a new scratch file to keep the original file without modifications (unless the original is itself an untitled scratch document)."},"rainbow_csv.enable_debug_logging":{"type":"boolean","default":false,"order":21,"description":"Dev Mode: Enable Debug Logging. Run command [Developer: Show Logs...] -> [rainbow_csv_debug_channel] to see the output."}}},"submenus":[{"id":"rainbow_csv.submenu","label":"Rainbow CSV"}],"menus":{"editor/context":[{"submenu":"rainbow_csv.submenu"}],"rainbow_csv.submenu":[{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.SetHeaderLine","group":"common@7"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.SetCommentPrefix","group":"common@6"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|plaintext|^[ct]sv/","command":"rainbow-csv.RainbowSeparator","group":"common@5"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.RBQL","group":"common@4"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.ToggleRowBackground","group":"common@3"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.ToggleColumnTracking","group":"common@2"},{"when":"editorTextFocus && editorLangId =~ /plaintext/","command":"rainbow-csv.RainbowSeparatorOn","group":"common@1"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.Align","group":"regular_align@1"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.Shrink","group":"regular_align@2"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.VirtualAlign","group":"virtual_align@1"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.VirtualShrink","group":"virtual_align@2"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.ColumnEditSelect","group":"wgroup@1"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.ColumnEditBefore","group":"wgroup@2"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.ColumnEditAfter","group":"wgroup@3"},{"when":"editorTextFocus && editorLangId =~ /dynamic csv|^[ct]sv/","command":"rainbow-csv.RainbowSeparatorOff","group":"xgroup@1"}],"explorer/context":[{"command":"rainbow-csv.SampleHead","when":"config.rainbow_csv.enable_context_menu_head || resourceLangId =~ /plaintext|^[ct]sv/","group":"rainbow_csv"},{"command":"rainbow-csv.SampleTail","when":"config.rainbow_csv.enable_context_menu_tail","group":"rainbow_csv"}]},"languages":[{"id":"csv","aliases":["CSV","csv"],"extensions":[".csv"],"configuration":"./language-configuration.json"},{"id":"tsv","aliases":["TSV","tsv"],"extensions":[".tsv",".tab"],"configuration":"./language-configuration.json"},{"id":"csv (pipe)","aliases":["CSV (pipe)","csv (pipe)"],"extensions":[],"configuration":"./language-configuration.json"},{"id":"csv (whitespace)","aliases":["CSV (whitespace)","csv (whitespace)"],"extensions":[],"configuration":"./language-configuration.json"},{"id":"csv (semicolon)","aliases":["CSV (semicolon)","csv (semicolon)"],"extensions":[],"configuration":"./language-configuration.json"},{"id":"dynamic csv","aliases":["Dynamic CSV","dynamic csv"],"extensions":[],"configuration":"./language-configuration.json"}],"commands":[{"command":"rainbow-csv.CSVLint","category":"Rainbow CSV","title":"CSV Lint"},{"command":"rainbow-csv.SetVirtualHeader","category":"Rainbow CSV","title":"Set virtual header"},{"command":"rainbow-csv.SetHeaderLine","category":"Rainbow CSV","title":"Set header line"},{"command":"rainbow-csv.SetCommentPrefix","category":"Rainbow CSV","title":"Set selection as comment prefix"},{"command":"rainbow-csv.RBQL","category":"Rainbow CSV","title":"RBQL Query"},{"command":"rainbow-csv.SetJoinTableName","category":"Rainbow CSV","title":"Set join table name for RBQL"},{"command":"rainbow-csv.ColumnEditBefore","category":"Rainbow CSV","title":"Column edit - Before"},{"command":"rainbow-csv.ColumnEditAfter","category":"Rainbow CSV","title":"Column edit - After"},{"command":"rainbow-csv.ColumnEditSelect","category":"Rainbow CSV","title":"Column edit - Selection"},{"command":"rainbow-csv.RainbowSeparator","category":"Rainbow CSV","title":"Set rainbow separator"},{"command":"rainbow-csv.ToggleColumnTracking","category":"Rainbow CSV","title":"Toggle Column Tracking"},{"command":"rainbow-csv.RainbowSeparatorOff","category":"Rainbow CSV","title":"Disable Rainbow CSV"},{"command":"rainbow-csv.RainbowSeparatorOn","category":"Rainbow CSV","title":"Re-enable Rainbow CSV"},{"command":"rainbow-csv.ToggleRowBackground","category":"Rainbow CSV","title":"Toggle Alternating Row Backgound"},{"command":"rainbow-csv.Align","category":"Rainbow CSV","title":"Align CSV Columns with whitespaces"},{"command":"rainbow-csv.Shrink","category":"Rainbow CSV","title":"Shrink CSV table - trim whitespaces"},{"command":"rainbow-csv.VirtualAlign","category":"Rainbow CSV","title":"Virtual Align CSV Columns"},{"command":"rainbow-csv.VirtualShrink","category":"Rainbow CSV","title":"Undo Virtual Align"},{"command":"rainbow-csv.CopyBack","category":"Rainbow CSV","title":"CopyBack"},{"command":"rainbow-csv.SampleHead","title":"Preview big CSV: head"},{"command":"rainbow-csv.SampleTail","title":"Preview big CSV: tail"}],"semanticTokenScopes":[{"language":"dynamic csv","scopes":{"rainbow1":["rainbow1"],"rainbow2":["keyword.rainbow2"],"rainbow3":["entity.name.function.rainbow3"],"rainbow4":["comment.rainbow4"],"rainbow5":["string.rainbow5"],"rainbow6":["variable.parameter.rainbow6"],"rainbow7":["constant.numeric.rainbow7"],"rainbow8":["entity.name.type.rainbow8"],"rainbow9":["markup.bold.rainbow9"],"rainbow10":["invalid.rainbow10"],"comment":["comment"]}}],"configurationDefaults":{"[dynamic csv][csv][tsv][csv (semicolon)][csv (pipe)][csv (whitespace)]":{"editor.semanticHighlighting.enabled":true}},"grammars":[{"language":"csv","scopeName":"text.csv","path":"./syntaxes/csv.tmLanguage.json"},{"language":"tsv","scopeName":"text.tsv","path":"./syntaxes/tsv.tmLanguage.json"},{"language":"csv (pipe)","scopeName":"text.psv","path":"./syntaxes/pipe_simple.tmLanguage.json"},{"language":"csv (whitespace)","scopeName":"text.wspcsv","path":"./syntaxes/wspcsv.tmLanguage.json"},{"language":"csv (semicolon)","scopeName":"text.scsv","path":"./syntaxes/scsv.tmLanguage.json"},{"language":"dynamic csv","scopeName":"text.dynamiccsv","path":"./syntaxes/dynamic_csv.tmLanguage.json"}]},"capabilities":{"hoverProvider":"true"},"scripts":{"vscode:prepublish":"npm run package-web","compile-web":"webpack","lint":"eslint rainbow_utils.js fast_load_utils.js extension.js test/runTest.js && eslint -c .eslintrc_browser.json rainbow_utils.js rbql_client.js dialect_select.js","watch-web":"webpack --watch","package-web":"webpack --mode production --devtool hidden-source-map","start-web-server":"vscode-test-web --version stable --browser=none --extensionDevelopmentPath=. test","test-in-browser":"vscode-test-web --version stable --browser=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/index.js test","test":"node ./test/runTest.js","unit-test-only":"node ./test/suite/run_unit_tests.js"},"devDependencies":{"@types/vscode":"^1.95.0","@vscode/test-web":"^0.0.64","@vscode/test-electron":"^2.4.1","webpack":"^5.96.1","webpack-cli":"^5.1.4","assert":"^2.1.0","process":"^0.11.10","globals":"^15.12.0","eslint":"^9.15.0"},"repository":{"type":"git","url":"https://github.com/mechatroner/vscode_rainbow_csv"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/mechatroner.rainbow-csv-3.19.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"mechatroner","metadata":{"installedTimestamp":1745950018959,"source":"gallery","id":"3792588c-3d35-442d-91ea-fe6a755e8155","publisherId":"0d5438b6-325a-4f88-aa28-6192aa2cf2a6","publisherDisplayName":"mechatroner","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2894545},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"tomoki1207.pdf","uuid":"6db08635-0c6a-45ba-9a4b-8c3e192c63c2"},"manifest":{"name":"pdf","displayName":"vscode-pdf","description":"Display pdf file in VSCode.","version":"1.2.2","publisher":"tomoki1207","engines":{"vscode":"^1.46.0"},"categories":["Programming Languages"],"keywords":["pdf","viewer"],"icon":"vscode-pdf.png","repository":{"type":"git","url":"https://github.com/tomoki1207/vscode-pdfviewer.git"},"bugs":{"url":"https://github.com/tomoki1207/vscode-pdfviewer/issues"},"activationEvents":["onCustomEditor:pdf.preview"],"main":"./out/src/extension","contributes":{"capabilities":{"untrustedWorkspaces":{"supported":true}},"customEditors":[{"viewType":"pdf.preview","displayName":"Pdf Preview","selector":[{"filenamePattern":"*.pdf"}]}],"configuration":{"type":"object","title":"PDF Preview","properties":{"pdf-preview.default.cursor":{"markdownDescription":"The default cursol tool for preview.","type":"string","default":"select","enum":["select","hand"]},"pdf-preview.default.scale":{"markdownDescription":"The default zoom level for preview. Allowed values are `auto`, `page-actual`, `page-fit`, `page-width`, and 1-based scale values. (`1.0` means 100%)","type":"string","default":"auto","pattern":"^(\\d+(?:\\.\\d+)?|auto|page-actual|page-fit|page-width)$"},"pdf-preview.default.sidebar":{"markdownDescription":"Show the sidebar on load. The default visiblity of sidebar for preview.","type":"boolean","default":false},"pdf-preview.default.scrollMode":{"markdownDescription":"The default scroll mode for preview.","type":"string","default":"vertical","enum":["vertical","horizontal","wrapped"]},"pdf-preview.default.spreadMode":{"markdownDescription":"The default spread mode for preview.","type":"string","default":"none","enum":["none","odd","even"]}}}},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -w -p ./","pretest":"npm run compile","test":"node ./out/test/runTest.js","lint":"eslint -c .eslintrc.json --ext .ts ./src","package":"vsce package"},"dependencies":{"@types/vscode":"^1.46.0"},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^12.12.21","@typescript-eslint/eslint-plugin":"^2.28.0","@typescript-eslint/parser":"^2.28.0","eslint":"^6.8.0","eslint-config-prettier":"^6.10.1","eslint-plugin-prettier":"^3.1.3","mocha":"^6.2.2","prettier":"^2.0.4","typescript":"^3.7.3","vsce":"^1.103.1","vscode-dts":"^0.3.1","vscode-test":"^1.3.0"},"extensionKind":["ui"]},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/tomoki1207.pdf-1.2.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"tomoki1207","metadata":{"installedTimestamp":1745950022536,"source":"gallery","id":"6db08635-0c6a-45ba-9a4b-8c3e192c63c2","publisherId":"36dae390-559e-4374-bca8-a49ec1616c36","publisherDisplayName":"tomoki1207","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":8925312},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"jheilingbrunner.vscode-gnupg-tool","uuid":"78084dbe-602a-43f6-bb57-bfa69aa42b56"},"manifest":{"name":"vscode-gnupg-tool","repository":{"type":"git","url":"https://github.com/heilingbrunner/vscode-gnupg-tool.git"},"displayName":"GnuPG-Tool","description":"Tool for a simple usage of GnuPG","version":"1.4.1","publisher":"JHeilingbrunner","license":"MIT","icon":"images/vscode-gnupg-tool-logo.png","engines":{"vscode":"^1.67.0"},"categories":["Other"],"keywords":["encryption","decryption","sign","verify","gnupg","gpg","pgp","crypto"],"galleryBanner":{"color":"#1e1e1e","theme":"dark"},"activationEvents":["*"],"contributes":{"languages":[{"id":"GnuPG ASCII","aliases":["GnuPG ASCII"],"extensions":["asc"],"configuration":"./languages/asc.language-configuration.json"},{"id":"GnuPG Text","aliases":["GnuPG Text"],"extensions":["txt"],"configuration":"./languages/txt.language-configuration.json"},{"id":"GnuPG Signature","aliases":["GnuPG Signature"],"extensions":["sig"],"configuration":"./languages/sig.language-configuration.json"},{"id":"GnuPG Key","aliases":["GnuPG Key"],"extensions":["key"],"configuration":"./languages/key.language-configuration.json"}],"grammars":[{"language":"GnuPG ASCII","scopeName":"source.gnupgascii","path":"./syntaxes/asc.tmLanguage.json"},{"language":"GnuPG Text","scopeName":"source.gnupgtext","path":"./syntaxes/txt.tmLanguage.json"},{"language":"GnuPG Signature","scopeName":"source.gnupgsignature","path":"./syntaxes/sig.tmLanguage.json"},{"language":"GnuPG Key","scopeName":"source.gnupgkey","path":"./syntaxes/key.tmLanguage.json"}],"commands":[{"command":"extension.Environment","title":"Environment ...","category":"GnuPG"},{"command":"extension.Encrypt","title":"Encrypt ...","category":"GnuPG"},{"command":"extension.Decrypt","title":"Decrypt ...","category":"GnuPG"},{"command":"extension.Trust","title":"Trust ...","category":"GnuPG"},{"command":"extension.Keys","title":"Keys ...","category":"GnuPG"},{"command":"extension.CheckGnuPG","title":"Check GnuPG","category":"GnuPG"},{"command":"extension.ListPublicKeys","title":"List Public Keys","category":"GnuPG"},{"command":"extension.ListSecretKeys","title":"List Secret Keys","category":"GnuPG"},{"command":"extension.ShowSmartcard","title":"Show Smartcard","category":"GnuPG"},{"command":"extension.EndSession","title":"End Session","category":"GnuPG"},{"command":"extension.EncryptSelectionAsym","title":"Encrypt Selection w/ Recipients","category":"GnuPG"},{"command":"extension.EncryptSelectionSymm","title":"Encrypt Selection w/ Passphrase","category":"GnuPG"},{"command":"extension.EncryptFileAsym","title":"Encrypt File w/ Recipients","category":"GnuPG"},{"command":"extension.EncryptFileSymm","title":"Encrypt File w/ Passphrase","category":"GnuPG"},{"command":"extension.EncryptPreviewAsym","title":"Preview Encrypted File w/ Recipients","category":"GnuPG"},{"command":"extension.EncryptPreviewSymm","title":"Preview Encrypted File w/ Passphrase","category":"GnuPG"},{"command":"extension.DecryptSelection","title":"Decrypt Selection","category":"GnuPG"},{"command":"extension.DecryptFile","title":"Decrypt File","category":"GnuPG"},{"command":"extension.DecryptPreview","title":"Preview Decrypted File","category":"GnuPG"},{"command":"extension.SignFile","title":"Sign File (detach-sign)","category":"GnuPG"},{"command":"extension.ClearSignFile","title":"Sign File (clear-sign)","category":"GnuPG"},{"command":"extension.VerifyFile","title":"Verify File","category":"GnuPG"},{"command":"extension.ImportKeys","title":"Import Keys","category":"GnuPG"},{"command":"extension.ExportPublicKeys","title":"Export Public Keys","category":"GnuPG"},{"command":"extension.ExportSecretKeys","title":"Export Secret Keys","category":"GnuPG"},{"command":"extension.ExportSecretSubKeys","title":"Export Secret Sub Keys","category":"GnuPG"},{"command":"extension.EditPublicKey","title":"Edit Public Key","category":"GnuPG"},{"command":"extension.GenerateKey","title":"Generate Key","category":"GnuPG"},{"command":"extension.DeleteKey","title":"Delete Public Key","category":"GnuPG"},{"command":"extension.DeleteSecretKey","title":"Delete Secret Key","category":"GnuPG"},{"command":"extension.CopyFingerprintToClipboard","title":"Copy Fingerprint To Clipboard","category":"GnuPG"},{"command":"extension.CopyKeyIdToClipboard","title":"Copy KeyId To Clipboard","category":"GnuPG"},{"command":"extension.GitSetUserSigningKey","title":"Git: Set User.SigningKey","category":"GnuPG"},{"command":"extension.GitUnsetUserSigningKey","title":"Git: Unset User.SigningKey","category":"GnuPG"}],"menus":{"commandPalette":[{"command":"extension.CheckGnuPG","group":"GnuPG"},{"command":"extension.ListPublicKeys","group":"GnuPG"},{"command":"extension.ListSecretKeys","group":"GnuPG"},{"command":"extension.ShowSmartcard","group":"GnuPG"},{"command":"extension.EndSession","group":"GnuPG"},{"command":"extension.GitSetUserSigningKey","group":"GnuPG"},{"command":"extension.GitUnsetUserSigningKey","group":"GnuPG"}],"explorer/context":[{"command":"extension.EncryptPreviewAsym","group":"gnupg1@1","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.EncryptPreviewSymm","group":"gnupg1@2","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.DecryptPreview","group":"gnupg1@3","when":"resourceExtname == .asc"},{"command":"extension.DecryptPreview","group":"gnupg1@3","when":"resourceExtname == .gpg"},{"command":"extension.EncryptFileAsym","group":"gnupg2@1","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.EncryptFileSymm","group":"gnupg2@2","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.DecryptFile","group":"gnupg2@3","when":"resourceExtname == .asc"},{"command":"extension.DecryptFile","group":"gnupg2@3","when":"resourceExtname == .gpg"},{"command":"extension.SignFile","group":"gnupg2@3","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.ClearSignFile","group":"gnupg2@3","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.VerifyFile","group":"gnupg2@4","when":"resourceExtname == .sig"},{"command":"extension.VerifyFile","group":"gnupg2@4","when":"resourceExtname == .asc"},{"command":"extension.VerifyFile","group":"gnupg2@4","when":"resourceExtname == .gpg"},{"command":"extension.ImportKeys","group":"gnupg3@1","when":"resourceExtname == .asc"},{"command":"extension.ImportKeys","group":"gnupg3@1","when":"resourceExtname == .gpg"},{"command":"extension.ImportKeys","group":"gnupg3@1","when":"resourceExtname == .key"}],"editor/context":[{"command":"extension.EncryptSelectionAsym","when":"editorHasSelection","group":"gnupg@1"},{"command":"extension.EncryptSelectionSymm","when":"editorHasSelection","group":"gnupg@2"},{"command":"extension.DecryptSelection","when":"editorHasSelection","group":"gnupg@3"}],"editor/title":[{"command":"extension.EncryptPreviewAsym","group":"gnupg1@1","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.DecryptPreview","group":"gnupg1@3","when":"resourceExtname == .asc"},{"command":"extension.DecryptPreview","group":"gnupg1@3","when":"resourceExtname == .gpg"},{"command":"extension.EncryptFileAsym","group":"gnupg2@1","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.EncryptFileSymm","group":"gnupg2@2","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.DecryptFile","group":"gnupg2@3","when":"resourceExtname == .asc"},{"command":"extension.DecryptFile","group":"gnupg2@3","when":"resourceExtname == .gpg"},{"command":"extension.SignFile","group":"gnupg3@1","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.VerifyFile","group":"gnupg3@2","when":"resourceExtname == .sig"}],"editor/title/context":[{"command":"extension.EncryptPreviewAsym","group":"gnupg1@1","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.DecryptPreview","group":"gnupg1@3","when":"resourceExtname == .asc"},{"command":"extension.DecryptPreview","group":"gnupg1@3","when":"resourceExtname == .gpg"},{"command":"extension.EncryptFileAsym","group":"gnupg2@1","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.EncryptFileSymm","group":"gnupg2@2","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.DecryptFile","group":"gnupg2@3","when":"resourceExtname == .asc"},{"command":"extension.DecryptFile","group":"gnupg2@3","when":"resourceExtname == .gpg"},{"command":"extension.SignFile","group":"gnupg3@1","when":"resourceExtname != .asc && resourceExtname != .gpg && resourceExtname != .sig"},{"command":"extension.VerifyFile","group":"gnupg3@2","when":"resourceExtname == .sig"}]},"configuration":{"type":"object","title":"GnuPG Tool","properties":{"GnuPG.homedir":{"type":"string","default":"","markdownDescription":"The path to keyring, when not using default keyring."}}}},"main":"./dist/extension","scripts":{"vscode:prepublish":"npm run prepublish-with-esbuild","prepublish-with-webpack":"webpack --mode production","prepublish-with-esbuild":"npm run esbuild-base -- --minify","prev-vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch","test":"npm run compile && node ./node_modules/vscode/bin/test","lint":"eslint -c .eslintrc.js --ext .ts --fix ./src","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node","esbuild":"npm run esbuild-base -- --sourcemap","esbuild-watch":"npm run esbuild-base -- --sourcemap --watch"},"devDependencies":{"@types/glob":"^7.2.0","@types/mocha":"^9.1.1","@types/node":"14.x","@types/vscode":"^1.67.0","@typescript-eslint/eslint-plugin":"^5.21.0","@typescript-eslint/parser":"^5.21.0","@vscode/test-electron":"^2.1.3","acorn":"^6.4.1","ajv":"^6.9.1","esbuild":"^0.14.39","eslint":"^8.14.0","glob":"^8.0.3","mocha":"^9.2.2","ts-loader":"^9.2.8","typescript":"^4.6.4","vscode-test":"^1.6.1","webpack":"^5.76.0","webpack-cli":"^4.9.2"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/jheilingbrunner.vscode-gnupg-tool-1.4.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"J. Heilingbrunner","metadata":{"installedTimestamp":1745950029262,"source":"gallery","id":"78084dbe-602a-43f6-bb57-bfa69aa42b56","publisherId":"c4427173-1730-4ccb-9e1e-a022b1e349e4","publisherDisplayName":"J. Heilingbrunner","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":318981},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"sleistner.vscode-fileutils","uuid":"d637104e-1fd7-4063-98fc-8afe46012c9b"},"manifest":{"name":"vscode-fileutils","displayName":"File Utils","description":"A convenient way of creating, duplicating, moving, renaming and deleting files and directories.","version":"3.10.3","private":true,"license":"MIT","publisher":"sleistner","engines":{"vscode":"^1.74.0"},"categories":["Other"],"keywords":["utils","files","move","duplicate","rename"],"icon":"images/icon.png","galleryBanner":{"color":"#1c2237","theme":"dark"},"bugs":{"url":"https://github.com/sleistner/vscode-fileutils/issues"},"repository":{"type":"git","url":"https://github.com/sleistner/vscode-fileutils.git"},"homepage":"https://github.com/sleistner/vscode-fileutils/blob/master/README.md","main":"./out/extension.js","activationEvents":["onCommand:fileutils.renameFile","onCommand:fileutils.moveFile","onCommand:fileutils.duplicateFile","onCommand:fileutils.removeFile","onCommand:fileutils.newFile","onCommand:fileutils.newFileAtRoot","onCommand:fileutils.newFolder","onCommand:fileutils.newFolderAtRoot","onCommand:fileutils.copyFileName"],"contributes":{"commands":[{"command":"fileutils.renameFile","category":"File Utils","title":"Rename..."},{"command":"fileutils.moveFile","category":"File Utils","title":"Move..."},{"command":"fileutils.duplicateFile","category":"File Utils","title":"Duplicate..."},{"command":"fileutils.removeFile","category":"File Utils","title":"Delete"},{"command":"fileutils.newFile","category":"File Utils","title":"New File Relative to Current View..."},{"command":"fileutils.newFileAtRoot","category":"File Utils","title":"New File Relative to Project Root..."},{"command":"fileutils.newFolder","category":"File Utils","title":"New Folder Relative to Current View..."},{"command":"fileutils.newFolderAtRoot","category":"File Utils","title":"New Folder Relative to Project Root..."},{"command":"fileutils.copyFileName","category":"File Utils","title":"Copy Name"}],"menus":{"explorer/context":[{"command":"fileutils.moveFile","group":"7_modification","when":"config.fileutils.menus.context.explorer =~ /moveFile/"},{"command":"fileutils.duplicateFile","group":"7_modification","when":"config.fileutils.menus.context.explorer =~ /duplicateFile/"},{"command":"fileutils.newFileAtRoot","group":"2_workspace","when":"config.fileutils.menus.context.explorer =~ /newFileAtRoot/"},{"command":"fileutils.newFolderAtRoot","group":"2_workspace","when":"config.fileutils.menus.context.explorer =~ /newFolderAtRoot/"},{"command":"fileutils.copyFileName","group":"6_copypath","when":"config.fileutils.menus.context.explorer =~ /copyFileName/"}],"editor/context":[{"command":"fileutils.copyFileName","group":"1_copypath","when":"config.fileutils.menus.context.editor =~ /copyFileName/ && resourceScheme != output"},{"command":"fileutils.renameFile","group":"1_modification@1","when":"config.fileutils.menus.context.editor =~ /renameFile/ && resourceScheme != output"},{"command":"fileutils.moveFile","group":"1_modification@2","when":"config.fileutils.menus.context.editor =~ /moveFile/ && resourceScheme != output"},{"command":"fileutils.duplicateFile","group":"1_modification@3","when":"config.fileutils.menus.context.editor =~ /duplicateFile/ && resourceScheme != output"},{"command":"fileutils.removeFile","group":"1_modification@4","when":"config.fileutils.menus.context.editor =~ /removeFile/ && resourceScheme != output"}],"editor/title/context":[{"command":"fileutils.copyFileName","group":"1_copypath","when":"config.fileutils.menus.context.editorTitle =~ /copyFileName/"},{"command":"fileutils.renameFile","group":"1_modification@1","when":"config.fileutils.menus.context.editorTitle =~ /renameFile/"},{"command":"fileutils.moveFile","group":"1_modification@2","when":"config.fileutils.menus.context.editorTitle =~ /moveFile/"},{"command":"fileutils.duplicateFile","group":"1_modification@3","when":"config.fileutils.menus.context.editorTitle =~ /duplicateFile/"},{"command":"fileutils.removeFile","group":"1_modification@4","when":"config.fileutils.menus.context.editorTitle =~ /removeFile/"}]},"configuration":{"type":"object","title":"File Utils","properties":{"fileutils.typeahead.enabled":{"type":"boolean","default":true,"description":"Controls whether to show a directory selector for new file and new folder command.","markdownDeprecationMessage":"**Deprecated**: Please use `#fileutils.newFile.typeahead.enabled#` or `#fileutils.newFolder.typeahead.enabled#` instead.","deprecationMessage":"Deprecated: Please use fileutils.newFile.typeahead.enabled or fileutils.newFolder.typeahead.enabled instead."},"fileutils.duplicateFile.typeahead.enabled":{"type":"boolean","default":false,"description":"Controls whether to show a directory selector for the duplicate file command."},"fileutils.moveFile.typeahead.enabled":{"type":"boolean","default":false,"description":"Controls whether to show a directory selector for the move file command."},"fileutils.newFile.typeahead.enabled":{"type":"boolean","default":true,"description":"Controls whether to show a directory selector for the new file command."},"fileutils.newFolder.typeahead.enabled":{"type":"boolean","default":true,"description":"Controls whether to show a directory selector for new folder command."},"fileutils.inputBox.pathType":{"type":"string","default":"root","enum":["root","workspace"],"enumDescriptions":["Absolute file path of the opened workspace or folder (e.g. /Users/Development/myWorkspace)","Relative file path of the opened workspace or folder (e.g. /myWorkspace)"],"description":"Controls the path that is shown in the input box."},"fileutils.inputBox.pathTypeIndicator":{"type":"string","default":"@","maxLength":50,"description":"Controls the indicator that is shown in the input box when the path type is workspace. This setting only has an effect when 'fileutils.inputBox.pathType' is set to 'workspace'.","markdownDescription":"Controls the indicator that is shown in the input box when the path type is workspace. \n\nThis setting only has an effect when `#fileutils.inputBox.pathType#` is set to `workspace`.\n\nFor example, if the path type is `workspace` and the indicator is `@`, the path will be shown as `@/myWorkspace`."},"fileutils.menus.context.explorer":{"type":"array","default":["moveFile","duplicateFile","newFileAtRoot","newFolderAtRoot","copyFileName"],"items":{"type":"string","enum":["moveFile","duplicateFile","newFileAtRoot","newFolderAtRoot","copyFileName"],"enumDescriptions":["Move","Duplicate","New File Relative to Project Root","New Folder Relative to Project Root","Copy Name"]},"uniqueItems":true,"description":"Controls whether to show the command in the explorer context menu.","order":90},"fileutils.menus.context.editor":{"type":"array","default":["renameFile","moveFile","duplicateFile","removeFile","copyFileName"],"items":{"type":"string","enum":["renameFile","moveFile","duplicateFile","removeFile","copyFileName"],"enumDescriptions":["Rename","Move","Duplicate","Remove","Copy Name"]},"uniqueItems":true,"description":"Controls whether to show the command in the editor context menu.","order":100},"fileutils.menus.context.editorTitle":{"type":"array","default":["renameFile","moveFile","duplicateFile","removeFile","copyFileName"],"items":{"type":"string","enum":["renameFile","moveFile","duplicateFile","removeFile","copyFileName"],"enumDescriptions":["Rename","Move","Duplicate","Remove","Copy Name"]},"uniqueItems":true,"description":"Controls whether to show the command in the editor title context menu.","order":110}}}},"scripts":{"vscode:prepublish":"npm run -S esbuild-base -- --minify","esbuild-base":"npm run clean && esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node","watch":"scripts/dev-env && npm run -S esbuild-base -- --sourcemap --watch","tsc:watch":"tsc -watch -p ./","pretest":"tsc -p ./","test":"node ./out/test/runTest.js","lint":"eslint './{src,test}/**/*.ts'","lint:fix":"npm run lint -- --fix","semantic-release":"semantic-release","prepare":"[ ! -x ./node_modules/.bin/husky ] && exit 0; husky install","clean":"rimraf out"},"devDependencies":{"@enter-at/eslint-config-typescript-prettier":"1.7.12","@semantic-release/changelog":"6.0.3","@semantic-release/git":"10.0.1","@tsconfig/node18":"1.0.3","@types/bluebird":"3.5.38","@types/bluebird-retry":"0.11.5","@types/brace-expansion":"1.1.0","@types/chai":"4.3.5","@types/mocha":"10.0.1","@types/node":"18.11.18","@types/sinon":"10.0.15","@types/sinon-chai":"3.2.9","@types/vscode":"1.74.0","@vscode/test-electron":"2.3.3","bluebird":"3.7.2","bluebird-retry":"0.11.0","chai":"4.3.7","esbuild":"0.18.15","eslint":"8.45.0","husky":"8.0.3","mocha":"10.2.0","prettier":"2.8.8","semantic-release":"20.1.3","semantic-release-vsce":"5.6.0","sinon":"15.2.0","sinon-chai":"3.7.0","typescript":"4.9.5"},"dependencies":{"brace-expansion":"2.0.1","fast-glob":"3.3.1"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/sleistner.vscode-fileutils-3.10.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Steffen Leistner","metadata":{"installedTimestamp":1745950032893,"source":"gallery","id":"d637104e-1fd7-4063-98fc-8afe46012c9b","publisherId":"99ce6203-6065-4d93-983f-c3a097ebbfe2","publisherDisplayName":"Steffen Leistner","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":155302},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"esbenp.prettier-vscode","uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90"},"manifest":{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"11.0.0","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"sponsor":{"url":"https://opencollective.com/prettier"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.80.0"},"keywords":["multi-root ready","prettier","formatter","javascript","handlebars","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","ember","glimmer","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","browser":"./dist/web-extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../plugins-pnpm && pnpm i && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install && cd ../../v3 && yarn install && cd ../plugin-tailwindcss && npm i && cd ../v3-plugins && npm i && cd ../v3-plugin-override && yarn install","prettier":"prettier --write '**/*.{ts,json,md,hbs,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack && cp -r ./src/worker ./out","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","chrome":"yarn webpack && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .","prepare":"husky"},"lint-staged":{"**/*.{ts,json,md,yml,hbs,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/mocha":"^10.0.7","@types/node":"20.11.30","@types/prettier":"^2.7.2","@types/resolve":"^1.20.3","@types/semver":"^7.5.8","@types/sinon":"^17.0.3","@types/tmp":"^0.2.6","@types/vscode":"^1.80.0","@typescript-eslint/eslint-plugin":"^5.45.0","@typescript-eslint/parser":"^5.45.0","@vscode/test-electron":"^2.4.1","@vscode/test-web":"^0.0.56","copy-webpack-plugin":"^12.0.2","eslint":"^8.31.0","eslint-config-prettier":"^9.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","husky":"^9.1.4","lint-staged":"^15.2.9","mocha":"^10.7.3","path-browserify":"^1.0.1","process":"^0.11.10","sinon":"^17.0.1","tmp":"^0.2.3","ts-loader":"^9.5.1","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.15.0","vscode-nls-dev":"^4.0.4","webpack":"^5.93.0","webpack-cli":"^5.0.1"},"dependencies":{"find-up":"5.0.0","prettier":"^2.8.8","resolve":"^1.22.8","semver":"^7.6.3","vscode-nls":"^5.2.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Only the built-in version of Prettier will be used when running in untrusted mode.","restrictedConfigurations":["prettier.documentSelectors","prettier.resolveGlobalModules","prettier.ignorePath","prettier.prettierPath","prettier.configPath","prettier.useEditorConfig","prettier.resolveGlobalModules","prettier.withNodeModules"]}},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on.","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter.","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether Prettier is enabled or not. Reload required.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"This extension will process files in `node_modules`.","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a `.prettierignore` file.","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the `prettier` module, eg: `./node_modules/prettier`.","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file.","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit.","scope":"language-overridable"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab.","scope":"language-overridable"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single instead of double quotes.","scope":"language-overridable"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. \nValid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"language-overridable"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals.","scope":"language-overridable"},"prettier.singleAttributePerLine":{"type":"boolean","default":false,"markdownDescription":"Enforces single attribute per line in HTML, JSX, Vue and Angular.","scope":"language-overridable"},"prettier.bracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","scope":"language-overridable"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","deprecationMessage":"This option has been deprecated in v2.4.0, use `bracketSameLine` instead.","scope":"language-overridable"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line.","scope":"language-overridable"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"language-overridable"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special `@format` marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the `@format` marker.","scope":"language-overridable"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs.","scope":"language-overridable"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines.","scope":"language-overridable"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter.","scope":"language-overridable"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX.","scope":"language-overridable"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global [whitespace sensitivity](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting) for HTML files.\nValid options:\n- `css` - Respect the default value of CSS `display` property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.","scope":"language-overridable"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue SFC files.","scope":"language-overridable"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier.","scope":"language-overridable"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted.\nValid options:\n- `\"as-needed\"` - Only add quotes around object properties where required.\n- `\"consistent\"` - If at least one property in an object requires quotes, quote all properties.\n- `\"preserve\"` - Respect the input use of quotes in object properties.","scope":"language-overridable"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"language-overridable"},"prettier.experimentalTernaries":{"type":"boolean","default":false,"markdownDescription":"Try prettier's [new ternary formatting](https://github.com/prettier/prettier/pull/13183) before it becomes the default behavior.","scope":"language-overridable"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]},{"id":"handlebars","extensions":[".hbs",".handlebars"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/esbenp.prettier-vscode-11.0.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Prettier","metadata":{"installedTimestamp":1745950036505,"source":"gallery","id":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","publisherId":"d16f4e39-2ffb-44e3-9c0d-79d873570e3a","publisherDisplayName":"Prettier","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":10015788},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"dbaeumer.vscode-eslint","uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a"},"manifest":{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"3.0.10","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.90.0"},"activationEvents":["onStartupFinished"],"extensionKind":["workspace"],"enabledApiProposals":[],"main":"./client/out/extension","capabilities":{"virtualWorkspaces":{"supported":false,"description":"Using ESLint is not possible in virtual workspaces."},"untrustedWorkspaces":{"supported":false,"description":"The extension requires workspace trust because it loads configuration files and code from the workspace and executes it."}},"contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled or not."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules.","deprecationMessage":"The setting is deprecated. The Package Manager is automatically detected now."},"eslint.problems.shortenToSingleLine":{"type":"boolean","default":false,"description":"Shortens the text spans of underlined problems to their first related line.","scope":"resource"},"eslint.nodeEnv":{"scope":"resource","type":["string","null"],"default":null,"markdownDescription":"The value of `NODE_ENV` to use when running eslint tasks."},"eslint.nodePath":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"A path added to `NODE_PATH` when resolving the eslint module."},"eslint.options":{"scope":"resource","type":"object","default":{},"markdownDescription":"The eslint options object to provide args normally passed to eslint when executed from a command line (see https://eslint.org/docs/developer-guide/nodejs-api#eslint-class)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off.","deprecationMessage":"The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member."},"eslint.quiet":{"scope":"resource","type":"boolean","default":false,"description":"Turns on quiet mode, which ignores warnings."},"eslint.onIgnoredFiles":{"scope":"resource","type":"string","enum":["warn","off"],"default":"off","description":"Whether ESLint should issue a warning on ignored files."},"eslint.migration.2_x":{"scope":"application","type":"string","enum":["off","on"],"default":"on","description":"Whether ESlint should migrate auto fix on save settings."},"eslint.useESLintClass":{"scope":"resource","type":"boolean","default":false,"description":"Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available."},"eslint.useFlatConfig":{"scope":"resource","type":"boolean","default":null,"markdownDescription":"Controls whether flat config should be used or not. This setting requires ESLint version 8.57 or later and is interpreted according to the [ESLint Flat Config rollout plan](https://eslint.org/blog/2023/10/flat-config-rollout-plans/)."},"eslint.experimental.useFlatConfig":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"Use ESLint version 8.57 or later and `eslint.useFlatConfig` instead.","description":"Enables support of experimental Flat Config (aka eslint.config.js). Requires ESLint version >= 8.21 < 8.57.0)."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"mode":{"type":"string","enum":["auto","location"],"default":"location"}},"required":["mode"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}},"deprecationMessage":"Use the new !cwd form.","required":["directory"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["directory"]},{"type":"object","properties":{"pattern":{"type":"string","description":"A glob pattern to match a working directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["pattern"]}]},"markdownDescription":"Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly."},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint."},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language."}},"deprecationMessage":"Auto Fix is enabled by default. Use the single string form."}]},"description":"An array of language ids which should be validated by ESLint. If not installed ESLint will show an error."},"eslint.ignoreUntitled":{"scope":"resource","type":"boolean","default":false,"description":"If true, untitled files won't be validated by ESLint."},"eslint.probe":{"scope":"resource","type":"array","items":{"type":"string"},"default":["astro","javascript","javascriptreact","typescript","typescriptreact","html","mdx","vue","markdown","json","jsonc"],"description":"An array of language ids for which the extension should probe if support is installed."},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"This option is deprecated. Use eslint.lintTask.enable instead.","description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.enable":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.options":{"scope":"resource","type":"string","default":".","markdownDescription":"Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface)."},"eslint.runtime":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"The location of the node binary to run ESLint under."},"eslint.execArgv":{"scope":"machine-overridable","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"default":null,"markdownDescription":"Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size"},"eslint.debug":{"scope":"window","type":"boolean","default":false,"markdownDescription":"Enables ESLint debug mode (same as `--debug` on the command line)"},"eslint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true,"location":"separateLine","commentStyle":"line"},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the disable code actions."},"location":{"type":"string","enum":["separateLine","sameLine"],"default":"separateLine","description":"Configure the disable rule code action to insert the comment on the same line or a new line."},"commentStyle":{"type":"string","enum":["line","block"],"default":"line","definition":"The comment style to use when disabling a rule on a specific line."}},"additionalProperties":false,"markdownDescription":"Show disable lint rule in the quick fix menu."},"eslint.codeAction.showDocumentation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the documentation code actions."}},"additionalProperties":false,"markdownDescription":"Show open lint rule documentation web page in the quick fix menu."},"eslint.codeActionsOnSave.mode":{"scope":"resource","type":"string","enum":["all","problems"],"enumDescriptions":["Fixes all possible problems in the file. This option might take some time.","Fixes only reported problems that have non-overlapping textual edits. This option runs a lot faster."],"default":"all","markdownDescription":"Specifies the code action mode. Possible values are 'all' and 'problems'."},"eslint.codeActionsOnSave.rules":{"scope":"resource","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"default":null,"markdownDescription":"The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration"},"eslint.format.enable":{"scope":"resource","type":"boolean","default":false,"description":"Enables ESLint as a formatter."},"eslint.rules.customizations":{"items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn","off"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array","description":"Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules."},"eslint.notebooks.rules.customizations":{"items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn","off"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array","description":"A special rules customization section for text cells in notebook documents."},"eslint.timeBudget.onValidation":{"scope":"resource","type":"object","properties":{"warn":{"type":"number","default":4000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning."},"error":{"type":"number","default":8000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on validation before showing an error."}},"default":{"warn":4000,"error":8000},"markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning or error."},"eslint.timeBudget.onFixes":{"scope":"resource","type":"object","properties":{"warn":{"type":"number","default":3000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning."},"error":{"type":"number","default":6000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing an error."}},"default":{"warn":3000,"error":6000},"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning or error."}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"},{"title":"Migrate Settings","category":"ESLint","command":"eslint.migrateSettings"},{"title":"Restart ESLint Server","category":"ESLint","command":"eslint.restart"},{"title":"Revalidate all open files","category":"ESLint","command":"eslint.revalidate"}],"taskDefinitions":[{"type":"eslint"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"ignore","extensions":[".eslintignore"]},{"id":"jsonc","filenames":[".eslintrc.json"]}]},"scripts":{"vscode:prepublish":"npm run webpack","webpack":"npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js","webpack:dev":"npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js","compile":"tsc -b","compile:client":"tsc -b ./client/tsconfig.json","compile:server":"tsc -b ./server/tsconfig.json","watch":"tsc -b -w","test":"cd client && npm test && cd ..","lint":"node ./build/bin/all.js run lint","clean":"rimraf client/out && rimraf server/out","postinstall":"node ./build/bin/all.js install","symlink:lsp":"node ./build/bin/symlink.js"},"devDependencies":{"@types/mocha":"^10.0.6","@types/node":"^18.14.6","@typescript-eslint/eslint-plugin":"^7.1.1","@typescript-eslint/parser":"^7.1.1","eslint":"^8.57.0","merge-options":"^3.0.4","mocha":"^10.3.0","rimraf":"^5.0.5","ts-loader":"^9.5.1","typescript":"^5.3.3","webpack":"^5.90.3","webpack-cli":"^5.1.4","shelljs":"^0.8.5"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/dbaeumer.vscode-eslint-3.0.10","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745950041373,"source":"gallery","id":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","publisherId":"29859a75-d81b-4f0e-8578-2c80ecee6f99","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":806411},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"stylelint.vscode-stylelint","uuid":"ec35b5a3-9802-4c68-b5ff-e85f19ec0977"},"manifest":{"name":"vscode-stylelint","version":"1.5.0","license":"MIT","description":"Official Stylelint extension for Visual Studio Code","main":"dist/index.js","displayName":"Stylelint","publisher":"stylelint","repository":{"type":"git","url":"https://github.com/stylelint/vscode-stylelint.git"},"homepage":"https://github.com/stylelint/vscode-stylelint#readme","bugs":"https://github.com/stylelint/vscode-stylelint/issues","qna":"https://stackoverflow.com/questions/tagged/vscode+stylelint","sponsor":{"url":"https://opencollective.com/stylelint"},"icon":"media/stylelint.png","engines":{"vscode":">=1.83.0"},"galleryBanner":{"color":"#000000","theme":"dark"},"categories":["Linters","Snippets","Programming Languages"],"keywords":["css","less","sass","scss","sugarss","lint","linter","style","stylelint","validation","check"],"activationEvents":["onStartupFinished"],"contributes":{"configuration":{"type":"object","title":"Stylelint","properties":{"stylelint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Control whether Stylelint is enabled or not."},"stylelint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"location":"separateLine"},"properties":{"location":{"type":"string","enum":["separateLine","sameLine"],"default":"separateLine","description":"Configure whether disable comments are added on the same line or a new line."}},"additionalProperties":false,"description":"Options for the disable lint rule action in the quick fix menu."},"stylelint.config":{"scope":"resource","type":["object","null"],"default":null,"description":"A Stylelint configuration object."},"stylelint.configFile":{"scope":"resource","type":"string","default":"","description":"Path to a JSON, YAML, or JS file that contains your configuration object. Use this option if you don't want Stylelint to search for a configuration file."},"stylelint.configBasedir":{"scope":"resource","type":"string","default":"","description":"A path to the directory that relative paths defining \"extends\" and \"plugins\" are relative to."},"stylelint.customSyntax":{"scope":"resource","type":"string","default":"","description":"An absolute path to a custom PostCSS-compatible syntax module."},"stylelint.reportDescriptionlessDisables":{"scope":"resource","type":"boolean","default":false,"description":"Report `stylelint-disable` comments without a description."},"stylelint.ignoreDisables":{"scope":"resource","type":"boolean","default":false,"description":"Ignore `stylelint-disable` (e.g. `/* stylelint-disable block-no-empty */`) comments."},"stylelint.reportNeedlessDisables":{"scope":"resource","type":"boolean","default":false,"description":"Also report errors for `stylelint-disable` comments that are not blocking a lint warning."},"stylelint.reportInvalidScopeDisables":{"scope":"resource","type":"boolean","default":false,"description":"Also report errors for `stylelint-disable` comments that used for rules that don't exist within the configuration object."},"stylelint.stylelintPath":{"scope":"resource","type":"string","default":"","description":"Supply a custom path to the Stylelint module."},"stylelint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules."},"stylelint.validate":{"scope":"resource","type":"array","items":{"type":"string"},"default":["css","postcss"],"description":"An array of language ids which should be validated by Stylelint."},"stylelint.snippet":{"scope":"resource","type":"array","items":{"type":"string"},"default":["css","postcss"],"description":"An array of language ids which snippets are provided by Stylelint."}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"Stylelint","command":"stylelint.executeAutofix"},{"title":"Restart Stylelint Server","category":"Stylelint","command":"stylelint.restart"}],"jsonValidation":[{"fileMatch":"**/.stylelintrc*","url":"https://json.schemastore.org/stylelintrc.json"}],"languages":[{"id":"ignore","filenames":[".stylelintignore"]}]},"dependencies":{"fast-diff":"^1.3.0","path-is-inside":"^1.0.2","rfdc":"^1.4.1","semver":"^7.6.0","serialize-error":"^8.1.0","triple-beam":"^1.4.1","vscode-languageclient":"^9.0.1","vscode-languageserver":"^9.0.1","vscode-languageserver-protocol":"^3.17.5","vscode-languageserver-textdocument":"^1.0.12","vscode-languageserver-types":"^3.17.5","vscode-uri":"^3.0.8","winston":"^3.14.2","winston-transport":"^4.7.1"},"devDependencies":{"@stylelint/postcss-css-in-js":"^0.38.0","@stylelint/prettier-config":"^3.0.0","@types/jest":"^29.5.12","@types/path-is-inside":"^1.0.3","@types/semver":"^7.5.8","@types/triple-beam":"^1.3.5","@types/vscode":"1.83.0","@typescript-eslint/eslint-plugin":"^8.3.0","@typescript-eslint/parser":"^8.3.0","@vscode/test-cli":"^0.0.10","@vscode/test-electron":"^2.4.1","cspell":"^8.14.2","esbuild":"^0.25.0","eslint":"^8.57.0","eslint-config-stylelint":"^22.0.0","eslint-plugin-jest":"^28.8.1","fast-glob":"^3.2.7","jest":"^29.7.0","npm-run-all":"^4.1.5","postcss":"^8.4.44","postcss-sass":"^0.5.0","postcss-scss":"^4.0.9","prettier":"^3.4.2","stylelint":"^16.15.0","stylelint-processor-glamorous":"^0.3.0","stylelint-processor-styled-components":"^1.10.0","stylelint-scss":"^6.11.1","ts-jest":"^29.2.6","ts-node":"^10.9.2","typed-emitter":"^2.1.0","typescript":"^5.5.4"},"scripts":{"build":"tsc -p tsconfig.src.json","build-bundle-watch":"run:p build-watch bundle-watch","build-watch":"npm run build -- --watch","bundle":"npm run bundle-base -- --sourcemap","bundle-base":"ts-node --transpile-only -P tsconfig.scripts.json scripts/bundle.ts","bundle-watch":"npm run bundle-base -- --sourcemap --watch","build-bundle":"run-s build bundle","format":"prettier . --write","lint":"run-s \"lint:*\"","lint:formatting":"prettier . --check","lint:js":"eslint .","lint:spelling":"cspell lint --no-progress","lint:types":"tsc -b","lint:unit-tests":"ts-node --transpile-only -P tsconfig.scripts.json scripts/enforce-unit-tests-per-file.ts","test":"npm run build-bundle && npm run jest -- ","test:e2e":"npm run build-bundle && vscode-test && prettier -w --parser jsonc test/e2e/workspace/workspace.code-workspace","test:integration":"npm run jest -- --projects test/integration","test:unit":"npm run jest -- --projects test/unit","test:node-versions":"node scripts/test-node-versions.js","jest":"node --experimental-vm-modules node_modules/jest/bin/jest.js","vscode:prepublish":"npm run build && npm run bundle-base -- --minify"},"prettier":"@stylelint/prettier-config","volta":{"node":"22.13.1","npm":"11.0.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/stylelint.vscode-stylelint-1.5.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Stylelint","metadata":{"installedTimestamp":1745950044685,"source":"gallery","id":"ec35b5a3-9802-4c68-b5ff-e85f19ec0977","publisherId":"9b5a71ad-b322-429c-aad2-a10a3f15781d","publisherDisplayName":"Stylelint","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1321625},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"aaron-bond.better-comments","uuid":"7a0110bb-231a-4598-aa1b-0769ea46d28b"},"manifest":{"name":"better-comments","displayName":"Better Comments","icon":"icon.png","description":"Improve your code commenting by annotating with alert, informational, TODOs, and more!","version":"3.0.2","publisher":"aaron-bond","author":{"name":"Aaron Bond"},"homepage":"https://github.com/aaron-bond/better-comments/blob/master/README.md","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/aaron-bond/better-comments"},"sponsor":{"url":"https://github.com/sponsors/aaron-bond"},"bugs":"https://github.com/aaron-bond/better-comments/issues","categories":["Formatters"],"engines":{"vscode":"^1.65.0"},"extensionKind":["ui","workspace"],"activationEvents":["onStartupFinished"],"galleryBanner":{"color":"#e3f4ff","theme":"light"},"browser":"./out/web/extension.js","main":"./out/extension","scripts":{"vscode:prepublish":"npm run compile && npm run package-web","compile":"tsc -p ./","watch":"tsc -watch -p ./","lint":"tslint -c tslint.json 'src/**/*.ts'","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"contributes":{"configuration":{"title":"Better Comments configuration","properties":{"better-comments.multilineComments":{"type":"boolean","description":"Whether the multiline comment highlighter should be active","default":true},"better-comments.highlightPlainText":{"type":"boolean","description":"Whether the plaintext comment highlighter should be active","default":false},"better-comments.tags":{"type":"array","description":"Tags which are used to color the comments. Changes require a restart of VS Code to take effect","default":[{"tag":"!","color":"#FF2D00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"?","color":"#3498DB","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"//","color":"#474747","strikethrough":true,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"todo","color":"#FF8C00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"*","color":"#98C379","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false}]}}}},"dependencies":{"json5":"^2.2.1"},"devDependencies":{"@types/json5":"^2.2.0","@types/node":"^17.0.23","@types/vscode":"^1.65.0","path-browserify":"^1.0.1","process":"^0.11.10","ts-loader":"^9.3.1","tslint":"^6.1.3","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.10.0","webpack":"^5.74.0","webpack-cli":"^4.10.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/aaron-bond.better-comments-3.0.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Aaron Bond","metadata":{"installedTimestamp":1745950048255,"source":"gallery","id":"7a0110bb-231a-4598-aa1b-0769ea46d28b","publisherId":"02145bab-b083-4d1e-b8ec-08d7abdd68da","publisherDisplayName":"Aaron Bond","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":358341},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"oderwat.indent-rainbow","uuid":"eaa2127d-cb69-4ab9-8505-a60c9ee5f28b"},"manifest":{"name":"indent-rainbow","description":"Makes indentation easier to read","version":"8.3.1","publisher":"oderwat","author":{"name":"Hans Raaf"},"icon":"assets/icon.png","license":"MIT","engines":{"vscode":"^1.52.0"},"repository":{"url":"https://github.com/oderwat/vscode-indent-rainbow.git","type":"git"},"bugs":{"url":"https://github.com/oderwat/vscode-indent-rainbow/issues"},"categories":["Other"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"Indent-Rainbow configuration","properties":{"indentRainbow.includedLanguages":{"type":"array","default":[],"description":"For which languages indent-rainbow should be activated. When empty will use for all languages."},"indentRainbow.excludedLanguages":{"type":"array","default":["plaintext"],"description":"For which languages indent-rainbow should be deactivated. When left empty will ignore."},"indentRainbow.ignoreErrorLanguages":{"type":"array","default":["markdown"],"description":"For which languages indent-rainbow should skip indent error detection (use '*' to deactivate errors for all languages)."},"indentRainbow.updateDelay":{"type":"integer","default":100,"description":"The delay in ms until the editor gets updated."},"indentRainbow.indentSetter":{"type":"object","default":{},"description":"Automatically change indent settings for languages (see README.md for details)."},"indentRainbow.errorColor":{"type":"string","default":"rgba(128,32,32,0.6)","description":"Indent color for when there is an error in the indentation, for example if you have your tabs set to 2 spaces but the indent is 3 spaces. Can be any type of web based color format (hex, rgba, rgb)."},"indentRainbow.tabmixColor":{"type":"string","default":"rgba(128,32,96,0.6)","description":"Indent color for when there is a mix between spaces and tabs in the indentation. Can be any type of web based color format (hex, rgba, rgb) or a empty string(to be disabled this coloring)."},"indentRainbow.ignoreLinePatterns":{"type":"array","default":["/[ \t]* [*]/g","/[ \t]+[/]{2}/g"],"description":"Skip error highlighting for RegEx patterns. Defaults to c/cpp decorated block and full line comments."},"indentRainbow.colors":{"type":"array","default":["rgba(255,255,64,0.07)","rgba(127,255,127,0.07)","rgba(255,127,255,0.07)","rgba(79,236,236,0.07)"],"description":"An array with color (hex, rgba, rgb) strings which are used as colors, can be any length."},"indentRainbow.colorOnWhiteSpaceOnly":{"type":"boolean","default":false,"description":"If error color is disabled, indent colors will be rendered until the length of rendered characters (white spaces, tabs, and other ones) is divisible by tabsize. Turn on this option to render white spaces and tabs only."},"indentRainbow.indicatorStyle":{"type":"string","default":"classic","enum":["classic","light"],"markdownDescription":"Classic mode uses a full colored tab to indicate the indendation. Light mode will only display a colored border similar to the default indent guide lines. You can disable the default indicators with `#editor.guides.indentation#`."},"indentRainbow.lightIndicatorStyleLineWidth":{"type":"number","default":1,"description":"This property defines the indent indicator lineWidth when using light mode."}}}},"browser":"./dist/web/extension.js","main":"./out/src/extension","scripts":{"vscode:prepublish":"npm run compile && npm run package-web","compile":"tsc -p ./","watch":"tsc -watch -p ./","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"devDependencies":{"@types/glob":"^7.1.3","@types/mocha":"^8.0.4","@types/node":"^12.11.7","@types/vscode":"^1.52.0","@typescript-eslint/eslint-plugin":"^4.11.1","@typescript-eslint/parser":"^4.11.1","eslint":"^7.16.0","glob":"^7.1.6","mocha":"^9.1.4","ts-loader":"^9.2.3","typescript":"^4.1.2","vscode-test":"^1.4.1","webpack":"^5.45.1","webpack-cli":"^4.7.2"},"dependencies":{"@vscode/test-web":"^0.0.8"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/oderwat.indent-rainbow-8.3.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"oderwat","metadata":{"installedTimestamp":1745950051750,"source":"gallery","id":"eaa2127d-cb69-4ab9-8505-a60c9ee5f28b","publisherId":"ac064ae0-224d-4351-9aa4-45ef7bf3ed21","publisherDisplayName":"oderwat","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":8864868},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"timonwong.shellcheck","uuid":"f95d8fff-f70a-4ae5-bb06-5c47ddbc8fc6"},"manifest":{"name":"shellcheck","displayName":"ShellCheck","description":"Integrates ShellCheck into VS Code, a linter for Shell scripts.","version":"0.37.7","publisher":"timonwong","author":"Timon Wong <timon86.wang@gmail.com> (https://github.com/timonwong)","contributors":["Felipe Santos <felipecassiors@gmail.com> (https://github.com/felipecrs)"],"license":"MIT","categories":["Linters","Programming Languages"],"keywords":["shell","shellscript","linter","lint","sh","bash","dash","ksh","posix"],"homepage":"https://github.com/vscode-shellcheck/vscode-shellcheck#readme","private":true,"repository":{"type":"git","url":"https://github.com/vscode-shellcheck/vscode-shellcheck.git"},"bugs":{"url":"https://github.com/vscode-shellcheck/vscode-shellcheck/issues"},"sponsor":{"url":"https://github.com/vscode-shellcheck/vscode-shellcheck"},"icon":"shellcheck.png","activationEvents":["onLanguage:shellscript","workspaceContains:**/.shellcheckrc"],"main":"./dist/extension.js","capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only the user defined `shellcheck` executable will be taken into account when running in untrusted mode.","restrictedConfigurations":["shellcheck.executablePath"]},"virtualWorkspaces":{"supported":false,"description":"Virtual Workspaces are not supported due to dependency on a local `shellcheck` binary."}},"contributes":{"snippets":[{"language":"shellscript","path":"./snippets/snippets.json"}],"languages":[{"id":"shellcheckrc","extensions":[".shellcheckrc"],"configuration":"./languages/shellcheckrc/language-configuration.json"},{"id":"shellcheck-output","configuration":"./languages/shellcheck-output/language-configuration.json"}],"grammars":[{"language":"shellcheckrc","scopeName":"source.shellcheckrc","path":"./languages/shellcheckrc/tmLanguage.json"},{"language":"shellcheck-output","scopeName":"shellcheck-output","path":"./languages/shellcheck-output/tmLanguage.json"}],"commands":[{"command":"shellcheck.runLint","title":"ShellCheck: Lint Current Document"},{"command":"shellcheck.collectDiagnostics","title":"ShellCheck: Collect Diagnostics For Current Document"}],"configuration":{"title":"ShellCheck","type":"object","properties":{"shellcheck.enable":{"description":"Whether ShellCheck is enabled or not.","type":"boolean","scope":"resource","default":true},"shellcheck.enableQuickFix":{"description":"Whether to enable the _Quick Fix_ feature or not.","type":"boolean","scope":"resource","default":true},"shellcheck.executablePath":{"description":"Path to the `shellcheck` executable (bundled binaries will be used if empty).","examples":["shellcheck"],"type":"string","scope":"machine-overridable"},"shellcheck.run":{"description":"Whether ShellCheck is run on save, on type, or manually.","type":"string","enum":["onSave","onType","manual"],"scope":"resource","default":"onType"},"shellcheck.exclude":{"markdownDescription":"Exclude certain error codes. For example, to exclude [SC1017](https://shellcheck.net/wiki/SC1017), enter _1017_. Enumerated error codes can be found [in this gist](https://gist.github.com/nicerobot/53cee11ee0abbdc997661e65b348f375). Always prefer to use a `.shellcheckrc` file instead of this setting.","type":"array","items":{"type":"string","pattern":"^(SC)?\\d{4}$","patternErrorMessage":"Valid shellcheck error code should be 4-digit numbers, 1017 for example.\n"},"scope":"resource","default":[],"examples":[["1017"]]},"shellcheck.customArgs":{"markdownDescription":"Custom arguments to pass when calling the `shellcheck` binary. Always prefer to use a `.shellcheckrc` file instead of this setting.","type":"array","items":{"type":"string"},"scope":"resource","default":[],"examples":[["--external-sources"]]},"shellcheck.ignorePatterns":{"markdownDescription":"Configure glob patterns for excluding files and folders by ShellCheck. Glob patterns are interpreted relative to the workspace's root folder. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/glob-patterns).","examples":[{"**/*.zsh":true,"**/*.zsh*":true,"**/.git/*.sh":true,"**/folder/**/*.sh":true}],"type":"object","scope":"resource","additionalProperties":{"type":"boolean","description":"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."},"default":{"**/*.csh":true,"**/*.cshrc":true,"**/*.fish":true,"**/*.login":true,"**/*.logout":true,"**/*.tcsh":true,"**/*.tcshrc":true,"**/*.xonshrc":true,"**/*.xsh":true,"**/*.zsh":true,"**/*.zshrc":true,"**/zshrc":true,"**/*.zprofile":true,"**/zprofile":true,"**/*.zlogin":true,"**/zlogin":true,"**/*.zlogout":true,"**/zlogout":true,"**/*.zshenv":true,"**/zshenv":true,"**/*.zsh-theme":true}},"shellcheck.ignoreFileSchemes":{"description":"Matching file schemes are being ignored by shellcheck.","type":"array","items":{"type":"string"},"scope":"application","default":["git","gitfs","output"]},"shellcheck.useWorkspaceRootAsCwd":{"description":"Whether to use the workspace root directory as the current working directory when launching `shellcheck`. Otherwise, the directory of the file being linted will be used.","type":"boolean","scope":"resource","default":false},"shellcheck.logLevel":{"description":"The trace level the extension logs at, defaults to 'info'.","type":"string","scope":"window","enum":["trace","debug","info","warn","error","off"],"default":"info"},"shellcheck.disableVersionCheck":{"description":"Whether to disable shellcheck binary version check, which prompts for updating when an outdated version is found.","type":"boolean","scope":"machine-overridable","default":false}}}},"scripts":{"prepare":"bindl","check-types":"tsc --noEmit","check-types:watch":"tsc --noEmit --watch","build":"npm run check-types && node esbuild.mjs","build:watch":"node esbuild.mjs --watch","build:prod":"npm run check-types && node esbuild.mjs --production","build:test":"tsc --project tsconfig.test.json","build:test:watch":"tsc --project tsconfig.test.json --watch","build:all":"run-p build build:test","build:all:watch":"run-p check-types:watch build:watch build:test:watch","vscode:prepublish":"npm run build:prod","lint":"eslint .","lint:fix":"eslint --fix .","format":"prettier --write .","format:check":"prettier --check .","spell":"cspell \"**\"","pretest":"npm run build:all","test":"vscode-test","posttest":"npm run lint && npm run format:check && npm run spell && installed-check --ignore-dev","release":"semantic-release"},"dependencies":{"execa":"^5.1.1","lodash":"^4.17.21","minimatch":"^9.0.5","semver":"^7.7.1"},"devDependencies":{"@semantic-release/changelog":"^6.0.3","@semantic-release/git":"^10.0.1","@types/lodash":"^4.17.15","@types/node":"^16.18.126","@types/semver":"^7.5.8","@types/vscode":"~1.66.0","@vscode/test-cli":"^0.0.10","@vscode/test-electron":"^2.4.1","bindl":"^5.1.2","conventional-changelog-conventionalcommits":"^8.0.0","cspell":"^8.17.3","esbuild":"^0.24.2","eslint":"^9.19.0","installed-check":"^9.3.0","neostandard":"^0.12.1","npm-run-all":"^4.1.5","prettier":"^3.4.2","semantic-release":"^24.2.1","semantic-release-stop-before-publish":"^1.0.0","semantic-release-vsce":"^6.0.6","typescript":"^5.7.3"},"engines":{"vscode":"^1.66.0","node":">=16"},"volta":{"node":"22.13.0","npm":"11.0.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/timonwong.shellcheck-0.37.7-darwin-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"darwin-x64","publisherDisplayName":"Timon Wong","metadata":{"installedTimestamp":1745950061603,"source":"gallery","id":"f95d8fff-f70a-4ae5-bb06-5c47ddbc8fc6","publisherId":"04757770-dd50-443e-aae4-e1c7cf9c24f5","publisherDisplayName":"Timon Wong","targetPlatform":"darwin-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":35265479},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"rogalmic.bash-debug","uuid":"f4f0748b-9f86-461e-84f9-73bf2e1f91c2"},"manifest":{"name":"bash-debug","displayName":"Bash Debug","version":"0.3.9","publisher":"rogalmic","description":"A debugger extension for bash scripts (using bashdb).","author":{"name":"Michal Rogalinski","email":"rogalinsky@gmail.com"},"license":"MIT","keywords":["multi-root ready"],"engines":{"vscode":"^1.40.0","node":"^12.8.1"},"icon":"images/bash-debug-icon.png","categories":["Debuggers"],"private":true,"repository":{"type":"git","url":"https://github.com/rogalmic/vscode-bash-debug.git"},"bugs":{"url":"https://github.com/rogalmic/vscode-bash-debug/issues"},"badges":[{"url":"https://img.shields.io/github/downloads/rogalmic/vscode-bash-debug/latest/total.svg","href":"https://github.com/rogalmic/vscode-bash-debug/releases/latest","description":"Download latest beta release (master branch)"},{"url":"https://img.shields.io/github/stars/rogalmic/vscode-bash-debug.svg?style=social&label=Stars","href":"https://github.com/rogalmic/vscode-bash-debug/stargazers","description":"Star the project in github"},{"url":"https://img.shields.io/badge/paypal-donate-blue.svg","href":"https://paypal.me/rogalmic","description":"Donate some $ to keep project going"}],"dependencies":{"child-process":"^1.0.2","npm-which":"^3.0.1","shell-quote":"^1.7.2","vscode-debugadapter":"1.40.0","vscode-debugprotocol":"1.40.0"},"devDependencies":{"@types/mocha":"7.0.2","@types/node":"12.12.14","jsdoctest":"1.7.1","mocha":"7.1.2","standard-version":"^8.0.0","tslint":"6.1.2","typescript":"3.9.5","vsce":"1.77.0","vscode":"1.1.36","vscode-debugadapter-testsupport":"1.41.0"},"scripts":{"prepare":"tsc -p ./src","compile":"tsc -p ./src","tslint":"tslint ./src/**/*.ts","watch":"tsc -w -p ./src","test":"mocha -u tdd ./out/tests/; node_modules/.bin/mocha --require jsdoctest out/bashRuntime.js out/handlePath.js","postinstall":"node ./node_modules/vscode/bin/install","package":"vsce package","publish":"vsce publish","release":"standard-version"},"main":"./out/extension","activationEvents":["onDebug","onCommand:extension.bash-debug.getProgramName","onCommand:extension.bash-debug.selectProgramName"],"contributes":{"breakpoints":[{"language":"shellscript"}],"debuggers":[{"type":"bashdb","label":"Bash Debug","program":"./out/bashDebug.js","runtime":"node","configurationAttributes":{"launch":{"// `type`, `request` and `name` are required implicitly.":null,"required":["program"],"properties":{"args":{"// type: Array<string> -> warning `Incorrect type. Expected Array<string>` in launch.json":null,"description":"Command line arguments in array of strings format. (i.e. [\"--opt\", \"arg\"])","default":[]},"argsString":{"// type: string -> warning `Incorrect type. Expected string` in launch.json":null,"description":"Command line arguments in string format. (i.e. \"--opt arg\"]. The arguments in this string will be appended to the arguments of `args`, if present.)","default":""},"cwd":{"type":"string","description":"Working directory. (i.e. `cd $cwd; bashdb <options> $program` will be executed internally).","default":"${workspaceFolder}"},"program":{"type":"string","description":"Absolute path to a script. See also: https://code.visualstudio.com/docs/editor/variables-reference","default":"${file}"},"pathBash":{"type":"string","description":"Specify absolute path to bash. Refer to https://github.com/rogalmic/vscode-bash-debug/blob/master/README.md#usage","default":""},"pathBashdb":{"type":"string","description":"Specify absolute path to bashdb (on Windows, path in Linux Subsystem).","default":"/usr/local/bin/bashdb"},"pathBashdbLib":{"type":"string","description":"Specify absolute path to bashdb libs (on Windows, path in Linux Subsystem).","default":"/usr/share/bashdb"},"pathCat":{"type":"string","description":"Specify absolute path to cat (on Windows, path in Linux Subsystem).","default":"/usr/bin/cat"},"pathMkfifo":{"type":"string","description":"Specify absolute path to mkfifo (on Windows, path in Linux Subsystem).","default":"/usr/bin/mkfifo"},"pathPkill":{"type":"string","description":"Specify absolute path to pkill (on Windows, path in Linux Subsystem). On macOS, please use /usr/bin/pkill instead of /usr/local/bin/pkill, otherwise vscode crashes. see https://github.com/rogalmic/vscode-bash-debug/wiki/macOS:-avoid-use-of--usr-local-bin-pkill for details.","default":"/usr/local/bin/pkill"},"showDebugOutput":{"type":"boolean","description":"Defines if bashdb output will be visible together with script output.","default":true},"trace":{"type":"boolean","description":"Enable logging of the Debug Adapter Protocol.","default":true},"terminalKind":{"enum":["integrated","external","debugConsole"],"description":"Can be set to 'integrated', 'external' or 'debugConsole'. Using 'integrated' or 'external' may require explicit terminal interpreter set for workspace.","default":"debugConsole"},"env":{"type":"object","description":"Environment variables defined as an object with key value pairs - {\"MYVAR\" : \"MY VALUE\"}.","default":{}}}}},"// Template for initial launch.json":null,"// Added when: launch.json is missing && (":null,"//   Add configuration... (in debug pane) -> Bash Debug ||":null,"//   >Debug: Open launch.json -> Bash Debug ||":null,"//   (>Debug: Start Debugging -> Bash Debug && file type is not shellscript)":null,"// )":null,"initialConfigurations":[{"type":"bashdb","request":"launch","name":"Bash-Debug (simplest configuration)","program":"${file}"}],"// Added when select 'Add configuration...' -> 'Bash Debug' in debug pane":null,"// `label` is shown in IntelliSense and `name` is shown in DEBUG side-bar.":null,"configurationSnippets":[{"label":"Bash-Debug (hardcoded script name)","description":"Debug a bash script (specify the path to the script in launch.json)","body":{"type":"bashdb","request":"launch","name":"Bash-Debug (hardcoded script name)","cwd":"^\"\\${workspaceFolder}\"","program":"^\"\\${workspaceFolder}/path/to/script.sh\"","args":[]}},{"label":"Bash-Debug (select script from list of sh files)","description":"Debug a bash script (select script from the list of sh files before starting debug)","body":{"type":"bashdb","request":"launch","name":"Bash-Debug (select script from list of sh files)","cwd":"^\"\\${workspaceFolder}\"","program":"^\"\\${command:SelectScriptName}\"","args":[]}},{"label":"Bash-Debug (type in script name)","description":"Debug a bash script (specify the script path before starting debug)","body":{"type":"bashdb","request":"launch","name":"Bash-Debug (type in script name)","cwd":"^\"\\${workspaceFolder}\"","program":"^\"\\${command:AskForScriptName}\"","args":[]}}],"variables":{"AskForScriptName":"extension.bash-debug.getProgramName","SelectScriptName":"extension.bash-debug.selectProgramName"}}]}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/rogalmic.bash-debug-0.3.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"rogalmic","metadata":{"installedTimestamp":1745950066985,"source":"gallery","id":"f4f0748b-9f86-461e-84f9-73bf2e1f91c2","publisherId":"60aabfd6-4033-4422-8bfe-e34a659226cb","publisherDisplayName":"rogalmic","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1058866},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.isort","uuid":"4ad0ce32-ff3f-49f0-83b5-93e5dc00cfff"},"manifest":{"name":"isort","displayName":"isort","description":"Import organization support for Python files using isort.","version":"2025.0.0","preview":true,"serverInfo":{"name":"isort","module":"isort"},"publisher":"ms-python","license":"MIT","homepage":"https://github.com/Microsoft/vscode-isort","repository":{"type":"git","url":"https://github.com/microsoft/vscode-isort.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-isort/issues"},"icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"keywords":["python","formatting","isort"],"engines":{"vscode":"^1.74.0"},"categories":["Programming Languages","Formatters"],"extensionDependencies":["ms-python.python"],"capabilities":{"virtualWorkspaces":{"supported":false,"description":"Virtual Workspaces are not supported with isort."}},"activationEvents":["onLanguage:python","workspaceContains:pyproject.toml","workspaceContains:.isort"],"main":"./dist/extension.js","l10n":"./l10n","scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","tests":"node ./out/test/ts_tests/runTest.js","vsce-package":"vsce package -o isort.vsix"},"contributes":{"languages":[{"filenames":["pyproject.toml",".isort"],"id":"toml"}],"configuration":{"properties":{"isort.args":{"default":[],"markdownDescription":"Arguments passed to isort for organizing imports in Python files. Each argument should be provided as a separate string in the array. <br> Example: <br> `\"isort.args\" : [\"--settings-file\", \"<file>\"]`","items":{"type":"string"},"scope":"resource","type":"array"},"isort.check":{"default":false,"markdownDescription":"Whether to run `isort --check` on open Python files and report sorting issues as a \"Hint\" in the Problems window. You can update `isort.severity` to show sorting issues with higher severity. ","scope":"resource","type":"boolean","tags":["experimental"]},"isort.importStrategy":{"default":"useBundled","markdownDescription":"Defines which isort binary to be used to lint Python files. When set to `useBundled`, the extension will use the isort binary that is shipped with the extension. When set to `fromEnvironment`, the extension will attempt to use the isort binary and all dependencies that are available in the currently selected environment. Note: If the extension can't find a valid isort binary in the selected environment, it will fallback to using the isort binary that is shipped with the extension The `isort.path` setting may also be ignored when this setting is set to `fromEnvironment`. ","enum":["useBundled","fromEnvironment"],"enumDescriptions":["Always use the bundled version of isort shipped with the extension.","Use isort from the selected environment. If the extension fails to find a valid isort binary, it will fallback to using the bundled version of isort."],"scope":"resource","type":"string"},"isort.interpreter":{"default":[],"markdownDescription":"Path to a Python executable or a command that will be used to launch the isort server and any subprocess. Accepts an array of a single or multiple strings. When set to `[]`, the extension will use the path to the selected Python interpreter.","scope":"resource","items":{"type":"string"},"type":"array"},"isort.path":{"default":[],"markdownDescription":"Path of the isort binary to be used by this extension. Note: This may slow down formatting. <br> Examples: <br>- `\"isort.path\" : [\"~/global_env/isort\"]` <br> - `\"isort.path\" : [\"conda\", \"run\", \"-n\", \"lint_env\", \"python\", \"-m\", \"isort\"]`. ","scope":"resource","items":{"type":"string"},"type":"array","examples":[["~/global_env/isort"],["~/.env/python","-m","isort"]]},"isort.serverEnabled":{"default":true,"markdownDescription":"**Experimental** setting to control whether to run isort in a server-like mode. By default `isort` is run behind LSP server, but you can disable this setting to run isort directly. Disabling this setting will also disable import sorting via Code Actions or Organize Imports, but you can still sort imports through the **isort: Sort Imports** command.","scope":"machine","type":"boolean"},"isort.severity":{"default":{"W":"Warning","E":"Hint"},"additionalProperties":{"type":"string","enum":["Error","Hint","Information","Warning"]},"markdownDescription":"Mapping of isort's message types to VS Code's diagnostic severity levels as displayed in the Problems window.","scope":"resource","type":"object"},"isort.showNotifications":{"default":"off","markdownDescription":"Controls when notifications are shown by this extension.  Accepted values are `onError`, `onWarning`, `always` and `off`.","enum":["off","onError","onWarning","always"],"enumDescriptions":["Never display a notification. Any errors or warning are still available in the logs.","Show notifications for errors.","Show notifications for errors and warnings.","Show all notifications."],"scope":"machine","type":"string"}}},"commands":[{"title":"Restart Server","category":"isort","command":"isort.restart"}]},"dependencies":{"fs-extra":"^11.2.0","vscode-languageclient":"^8.1.0"},"devDependencies":{"@types/chai":"^4.3.11","@types/chai-arrays":"^2.0.3","@types/chai-as-promised":"^7.1.8","@types/fs-extra":"^11.0.4","@types/glob":"^8.1.0","@types/mocha":"^10.0.6","@types/node":"16.x","@types/sinon":"^17.0.3","@types/vscode":"^1.74.0","@typescript-eslint/eslint-plugin":"^6.19.0","@typescript-eslint/parser":"^6.19.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.22.0","chai":"^4.3.10","chai-arrays":"^2.2.0","chai-as-promised":"^7.1.1","eslint":"^8.56.0","glob":"^10.3.10","mocha":"^10.2.0","prettier":"^3.2.4","sinon":"^17.0.1","ts-loader":"^9.5.1","typemoq":"^2.1.0","typescript":"^5.3.3","webpack":"^5.89.0","webpack-cli":"^5.1.4"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-python.isort-2025.0.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745950073775,"source":"gallery","id":"4ad0ce32-ff3f-49f0-83b5-93e5dc00cfff","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2890812},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.black-formatter","uuid":"859e640c-c157-47da-8699-9080b81c8371"},"manifest":{"name":"black-formatter","displayName":"Black Formatter","description":"Formatting support for Python files using the Black formatter.","version":"2025.2.0","preview":true,"serverInfo":{"name":"Black","module":"black"},"publisher":"ms-python","license":"MIT","homepage":"https://github.com/Microsoft/vscode-black-formatter","repository":{"type":"git","url":"https://github.com/microsoft/vscode-black-formatter.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-black-formatter/issues"},"icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"keywords":["python","formatting","black"],"engines":{"vscode":"^1.82.0"},"categories":["Programming Languages","Formatters"],"extensionDependencies":["ms-python.python"],"capabilities":{"virtualWorkspaces":{"supported":false,"description":"Virtual Workspaces are not supported with Black formatter."}},"activationEvents":["onLanguage:python","workspaceContains:pyproject.toml","workspaceContains:.black","workspaceContains:*.py"],"main":"./dist/extension.js","l10n":"./l10n","scripts":{"compile":"webpack","compile-tests":"tsc -p . --outDir out","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","lint":"eslint src --ext ts","package":"webpack --mode production --devtool hidden-source-map","pretest":"npm run compile-tests && npm run compile && npm run lint","tests":"node ./out/test/ts_tests/runTest.js","smoke-tests":"node ./out/test/ts_tests/runSmokeTest.js","vsce-package":"vsce package -o black-formatter.vsix","vscode:prepublish":"npm run package","watch":"webpack --watch","watch-tests":"tsc -p . -w --outDir out"},"contributes":{"languages":[{"filenames":["pyproject.toml",".black"],"id":"toml"}],"configuration":{"properties":{"black-formatter.args":{"default":[],"items":{"type":"string"},"markdownDescription":"Arguments passed to Black to format Python files. Each argument should be provided as a separate string in the array. \n Example: \n `\"black-formatter.args\" = [\"--config\", \"<file>\"]`","scope":"resource","type":"array"},"black-formatter.cwd":{"default":"${workspaceFolder}","markdownDescription":"Sets the current working directory used to format Python files with Black. By default, it uses the root directory of the workspace `${workspaceFolder}`. You can set it to `${fileDirname}` to use the parent folder of the file being formatted as the working directory for Black.","scope":"resource","type":"string","examples":["${workspaceFolder}/src","${fileDirname}"]},"black-formatter.importStrategy":{"default":"useBundled","enum":["fromEnvironment","useBundled"],"markdownDescription":"Defines which Black formatter binary to be used to format Python files. When set to `useBundled`, the extension will use the Black formatter binary that is shipped with the extension. When set to `fromEnvironment`, the extension will attempt to use the Black formatter binary and all dependencies that are available in the currently selected environment. **Note**: If the extension can't find a valid Black formatter binary in the selected environment, it will fallback to using the binary that is shipped with the extension. The `black-formatter.path` setting takes precedence and overrides the behavior of `black-formatter.importStrategy`.","markdownEnumDescriptions":["Use the Black binary from the selected Python environment. If the extension fails to find a valid Black binary, it will fallback to using the bundled version of Black.","Always use the bundled version of Black to format Python files."],"scope":"resource","type":"string"},"black-formatter.interpreter":{"default":[],"items":{"type":"string"},"markdownDescription":"Path to a Python executable or a command that will be used to launch the Black server and any subprocess. Accepts an array of a single or multiple strings. When set to `[]`, the extension will use the path to the selected Python interpreter. If passing a command, each argument should be provided as a separate string in the array.","scope":"resource","type":"array"},"black-formatter.path":{"default":[],"examples":[["-m","black","~/.env/python"],["~/global_env/black"]],"items":{"type":"string"},"markdownDescription":"Path or command to be used by the extension to format Python files with Black. Accepts an array of a single or multiple strings. If passing a command, each argument should be provided as a separate string in the array. If set to `[\"black\"]`, it will use the version of Black available in the `PATH` environment variable. Note: Using this option may slowdown formatting. \n  Examples: \n  - `[\"~/global_env/black\"]` \n  - `[\"conda\", \"run\", \"-n\", \"lint_env\", \"python\", \"-m\", \"black\"]`","scope":"resource","type":"array"},"black-formatter.showNotifications":{"default":"off","enum":["always","off","onError","onWarning"],"markdownDescription":"Controls when notifications are shown by this extension.","markdownEnumDescriptions":["Notifications are show for anything that the server chooses to show when formatting Python files.","All notifications are turned off, any errors or warnings when formatting Python files are still available in the logs.","Notifications are shown only in the case of an error when formatting Python files.","Notifications are shown for any errors and warnings when formatting Python files."],"scope":"machine","type":"string"},"black-formatter.serverTransport":{"default":"stdio","enum":["stdio","pipe"],"markdownDescription":"Selects the transport protocol to be used by the Black server. When set to `stdio`, the extension will use the standard input/output streams to communicate with the Black server. When set to `pipe`, the extension will use a named pipe (on Windows) or Unix Domain Socket (on Linux/Mac) to communicate with the Black server. The `stdio` transport protocol is the default and recommended option for most users.","markdownEnumDescriptions":["Use the standard input/output streams to communicate with the Black server.","Use a named pipe (on windows) and Unix Domain Socket (on linux/mac) to communicate with the Black server."],"scope":"window","type":"string"}}},"commands":[{"title":"Restart Server","category":"Black Formatter","command":"black-formatter.restart"}]},"dependencies":{"@vscode/python-extension":"^1.0.5","fs-extra":"^11.2.0","vscode-languageclient":"^9.0.1"},"devDependencies":{"@types/chai":"^4.3.14","@types/fs-extra":"^11.0.4","@types/glob":"^8.1.0","@types/mocha":"^10.0.6","@types/node":"16.x","@types/sinon":"^17.0.3","@types/vscode":"^1.74.0","@typescript-eslint/eslint-plugin":"^7.4.0","@typescript-eslint/parser":"^7.4.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.10","eslint":"^8.57.0","glob":"^10.3.12","mocha":"^10.4.0","prettier":"^3.2.5","sinon":"^17.0.1","ts-loader":"^9.5.1","typemoq":"^2.1.0","typescript":"^5.4.3","webpack":"^5.91.0","webpack-cli":"^5.1.4"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/ms-python.black-formatter-2025.2.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1745950082608,"source":"gallery","id":"859e640c-c157-47da-8699-9080b81c8371","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":3943976},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"yzhang.markdown-all-in-one","uuid":"98790d67-10fa-497c-9113-f6c7489207b2"},"manifest":{"name":"markdown-all-in-one","displayName":"Markdown All in One","description":"All you need to write Markdown (keyboard shortcuts, table of contents, auto preview and more)","icon":"images/Markdown-mark.png","version":"3.6.3","publisher":"yzhang","engines":{"vscode":"^1.77.0"},"categories":["Programming Languages","Formatters","Other"],"keywords":["markdown"],"bugs":{"url":"https://github.com/yzhang-gh/vscode-markdown/issues"},"repository":{"type":"git","url":"https://github.com/yzhang-gh/vscode-markdown"},"license":"MIT","activationEvents":["onLanguage:markdown","onLanguage:rmd","onLanguage:quarto","workspaceContains:README.md"],"main":"./dist/node/main.js","contributes":{"colors":[{"id":"markdown.extension.editor.codeSpan.background","description":"Background color of code spans in the Markdown editor.","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"markdown.extension.editor.codeSpan.border","description":"Border color of code spans in the Markdown editor.","defaults":{"dark":"editor.selectionBackground","light":"editor.selectionBackground","highContrast":"editor.selectionBackground"}},{"id":"markdown.extension.editor.formattingMark.foreground","description":"Color of formatting marks (paragraphs, hard line breaks, links, etc.) in the Markdown editor.","defaults":{"dark":"editorWhitespace.foreground","light":"editorWhitespace.foreground","highContrast":"diffEditor.insertedTextBorder"}},{"id":"markdown.extension.editor.trailingSpace.background","description":"Background color of trailing space (U+0020) characters in the Markdown editor.","defaults":{"dark":"diffEditor.diagonalFill","light":"diffEditor.diagonalFill","highContrast":"editorWhitespace.foreground"}}],"commands":[{"command":"markdown.extension.toc.create","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Create Table of Contents","category":"Markdown All in One"},{"command":"markdown.extension.toc.update","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Update Table of Contents","category":"Markdown All in One"},{"command":"markdown.extension.toc.addSecNumbers","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Add/Update section numbers","category":"Markdown All in One"},{"command":"markdown.extension.toc.removeSecNumbers","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Remove section numbers","category":"Markdown All in One"},{"command":"markdown.extension.printToHtml","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Print current document to HTML","category":"Markdown All in One"},{"command":"markdown.extension.printToHtmlBatch","enablement":"workspaceFolderCount >= 1","title":"Print documents to HTML (select a source folder)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleCodeSpan","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle code span","icon":"$(code)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleMath","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle math environment","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleMathReverse","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle math environment (in reverse order)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleList","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle list","icon":"$(list-unordered)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleCodeBlock","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle code block","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleBold","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle Bold","icon":"$(bold)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleItalic","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle Italic","icon":"$(italic)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleStrikethrough","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle Strikethrough","category":"Markdown All in One"},{"command":"markdown.extension.checkTaskList","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle TaskList","icon":"$(tasklist)","category":"Markdown All in One"}],"menus":{"editor/context":[{"command":"markdown.extension.printToHtml","when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","group":"markdown.print@1"},{"command":"markdown.extension.printToHtmlBatch","when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && workspaceFolderCount >= 1","group":"markdown.print@2"}],"editor/title":[{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.editing.toggleBold","group":"navigation@1"},{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.editing.toggleItalic","group":"navigation@2"},{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.editing.toggleCodeSpan","group":"navigation@3"},{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.editing.toggleList","group":"navigation@4"},{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.checkTaskList","group":"navigation@5"}]},"keybindings":[{"command":"markdown.extension.editing.toggleBold","key":"ctrl+b","mac":"cmd+b","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.editing.toggleItalic","key":"ctrl+i","mac":"cmd+i","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.editing.toggleStrikethrough","key":"alt+s","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !isMac"},{"command":"markdown.extension.editing.toggleHeadingUp","key":"ctrl+shift+]","mac":"ctrl+shift+]","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.editing.toggleHeadingDown","key":"ctrl+shift+[","mac":"ctrl+shift+[","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.editing.toggleMath","key":"ctrl+m","mac":"cmd+m","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.onEnterKey","key":"enter","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && (!suggestWidgetVisible || config.editor.acceptSuggestionOnEnter == 'off') && !editorHasMultipleSelections && vim.mode != 'Normal' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && vim.mode != 'SearchInProgressMode' && vim.mode != 'CommandlineInProgress' && vim.mode != 'Replace' && vim.mode != 'EasyMotionMode' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'SurroundInputMode' && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onCtrlEnterKey","key":"ctrl+enter","mac":"cmd+enter","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && (!suggestWidgetVisible || config.editor.acceptSuggestionOnEnter == 'off') && !editorHasMultipleSelections && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onShiftEnterKey","key":"shift+enter","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && (!suggestWidgetVisible || config.editor.acceptSuggestionOnEnter == 'off') && !editorHasMultipleSelections && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onTabKey","key":"tab","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible && !inlineSuggestionVisible && !editorHasMultipleSelections && !editorTabMovesFocus && !inSnippetMode && !hasSnippetCompletions && !hasOtherSuggestions && markdown.extension.editor.cursor.inList && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !tabShouldJumpToInlineEdit && !tabShouldAcceptInlineEdit"},{"command":"markdown.extension.onShiftTabKey","key":"shift+tab","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible && !editorHasMultipleSelections && !editorTabMovesFocus && !inSnippetMode && !hasSnippetCompletions && !hasOtherSuggestions && markdown.extension.editor.cursor.inList && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onBackspaceKey","key":"backspace","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible && !editorHasMultipleSelections && vim.mode != 'Normal' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && vim.mode != 'SearchInProgressMode' && vim.mode != 'CommandlineInProgress' && vim.mode != 'Replace' && vim.mode != 'EasyMotionMode' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'SurroundInputMode' && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onMoveLineUp","key":"alt+up","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onMoveLineDown","key":"alt+down","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onCopyLineUp","win":"shift+alt+up","mac":"shift+alt+up","linux":"ctrl+shift+alt+up","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onCopyLineDown","win":"shift+alt+down","mac":"shift+alt+down","linux":"ctrl+shift+alt+down","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onIndentLines","key":"ctrl+]","mac":"cmd+]","when":"editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onOutdentLines","key":"ctrl+[","mac":"cmd+[","when":"editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.checkTaskList","key":"alt+c","when":"editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !isMac"},{"command":"markdown.extension.closePreview","key":"ctrl+shift+v","mac":"cmd+shift+v","when":"activeWebviewPanelId == 'markdown.preview'"},{"command":"markdown.extension.closePreview","key":"ctrl+k v","mac":"cmd+k v","when":"activeWebviewPanelId == 'markdown.preview'"},{"command":"markdown.extension.editing.paste","key":"ctrl+v","mac":"cmd+v","when":"editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && editorHasSelection"}],"configuration":{"type":"object","title":"Markdown All in One","properties":{"markdown.extension.completion.enabled":{"type":"boolean","default":false,"description":"Whether to enable auto-completion.","scope":"resource"},"markdown.extension.completion.respectVscodeSearchExclude":{"type":"boolean","default":true,"markdownDescription":"Whether to exclude files from auto-completion using VS Code's `#search.exclude#` setting. (`node_modules`, `bower_components` and `*.code-search` are **always excluded**, not affected by this option.)","scope":"resource"},"markdown.extension.completion.root":{"type":"string","default":"","description":"The root folder for path auto-completion.","scope":"resource"},"markdown.extension.italic.indicator":{"type":"string","default":"*","markdownDescription":"Use `*` or `_` to wrap italic text.","enum":["*","_"]},"markdown.extension.bold.indicator":{"type":"string","default":"**","markdownDescription":"Use `**` or `__` to wrap bold text.","enum":["**","__"]},"markdown.extension.katex.macros":{"type":"object","default":{},"description":"User-defined KaTeX macros."},"markdown.extension.list.indentationSize":{"type":"string","enum":["adaptive","inherit"],"markdownEnumDescriptions":["Adaptive indentation size according to the context, trying to **left align the sublist with its parent's content**. For example:\n\n```markdown\n- Parent\n  - Sublist\n\n1. Parent\n   1. Sublist\n\n10. Parent with longer marker\n    1. Sublist\n```","Use the configured tab size of the current document (see the status bar). For example (with `tabSize: 4`):\n\n```markdown\n- Parent\n    - Sublist\n\n1. Parent\n    1. Sublist\n\n10. Parent with longer marker\n    1. Sublist\n```"],"default":"adaptive","markdownDescription":"List indentation scheme. (Also affects TOC generation.)\n\nWhether to use different indentation sizes on different list contexts or stick to VS Code's tab size.","scope":"resource"},"markdown.extension.list.toggle.candidate-markers":{"type":"array","default":["-","*","+","1.","1)"],"items":{"enum":["-","*","+","1.","1)"]},"minItems":1,"maxItems":5,"uniqueItems":true,"description":"List candidate markers. It will cycle through those markers"},"markdown.extension.math.enabled":{"type":"boolean","default":true,"description":"Enable basic math support (Powered by KaTeX)."},"markdown.extension.orderedList.autoRenumber":{"type":"boolean","default":true,"description":"Auto fix ordered list markers."},"markdown.extension.orderedList.marker":{"type":"string","default":"ordered","description":"Ordered list marker.","enum":["one","ordered"],"markdownEnumDescriptions":["Always use `1.` as ordered list marker.","Use increasing numbers as ordered list marker."]},"markdown.extension.preview.autoShowPreviewToSide":{"type":"boolean","default":false,"description":"Auto show preview to side."},"markdown.extension.print.absoluteImgPath":{"type":"boolean","default":true,"description":"Convert image path to absolute path.","scope":"resource"},"markdown.extension.print.imgToBase64":{"type":"boolean","default":false,"description":"Convert images to base64 when printing to HTML.","scope":"resource"},"markdown.extension.print.includeVscodeStylesheets":{"type":"boolean","default":true,"description":"Include VS Code's basic Markdown styles so that the exported HTML looks similar as inside VS Code."},"markdown.extension.print.onFileSave":{"type":"boolean","default":false,"description":"Print current document to HTML when file is saved.","scope":"resource"},"markdown.extension.print.pureHtml":{"type":"boolean","default":false,"description":"Print current document to pure HTML (without any stylesheets).","scope":"resource"},"markdown.extension.print.theme":{"type":"string","default":"light","enum":["light","dark"],"description":"Theme of the exported HTML. Only affects code blocks.","scope":"resource"},"markdown.extension.print.validateUrls":{"type":"boolean","default":true,"description":"Enable/disable URL validation when printing."},"markdown.extension.showActionButtons":{"type":"boolean","default":false,"description":"Show buttons (e.g. toggle bold, italic) on the editor toolbar."},"markdown.extension.syntax.decorations":{"type":"boolean","default":null,"markdownDeprecationMessage":"(**Deprecated**) Use `#markdown.extension.theming.decoration.renderCodeSpan#` instead. See <https://github.com/yzhang-gh/vscode-markdown/issues/888> for details."},"markdown.extension.syntax.decorationFileSizeLimit":{"type":"number","default":50000,"description":"If a file is larger than this size (in byte/B), we won't attempt to render syntax decorations."},"markdown.extension.syntax.plainTheme":{"type":"boolean","default":false,"markdownDescription":"(**Experimental**) Report issue at <https://github.com/yzhang-gh/vscode-markdown/issues/185>."},"markdown.extension.tableFormatter.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable [GitHub Flavored Markdown](https://github.github.com/gfm/) table formatter."},"markdown.extension.tableFormatter.normalizeIndentation":{"type":"boolean","default":false,"markdownDescription":"Normalize table indentation to closest multiple of configured editor tab size."},"markdown.extension.tableFormatter.delimiterRowNoPadding":{"type":"boolean","default":false,"markdownDescription":"Don't add padding to the delimiter row."},"markdown.extension.theming.decoration.renderCodeSpan":{"type":"boolean","default":true,"markdownDescription":"Apply a border around a [code span](https://spec.commonmark.org/0.29/#code-spans).","scope":"application"},"markdown.extension.theming.decoration.renderHardLineBreak":{"type":"boolean","default":false,"markdownDescription":"(**Experimental**)","scope":"application"},"markdown.extension.theming.decoration.renderLink":{"type":"boolean","default":false,"markdownDescription":"(**Experimental**)","scope":"application"},"markdown.extension.theming.decoration.renderParagraph":{"type":"boolean","default":false,"markdownDescription":"(**Experimental**)","scope":"application"},"markdown.extension.theming.decoration.renderStrikethrough":{"type":"boolean","default":true,"markdownDescription":"Show a line through the middle of a [strikethrough](https://github.github.com/gfm/#strikethrough-extension-).","scope":"application"},"markdown.extension.theming.decoration.renderTrailingSpace":{"type":"boolean","default":false,"markdownDescription":"Shade the background of trailing space (U+0020) characters on a [line](https://spec.commonmark.org/0.29/#line).","scope":"application"},"markdown.extension.toc.levels":{"type":"string","default":"1..6","markdownDescription":"Range of levels for table of contents. Use `x..y` for level `x` to `y`.","pattern":"^[1-6]\\.\\.[1-6]$"},"markdown.extension.toc.omittedFromToc":{"type":"object","default":{},"description":"Lists of headings to omit by project file.\nExample:\n{ \"README.md\": [\"# Introduction\"] }"},"markdown.extension.toc.orderedList":{"type":"boolean","default":false,"description":"Use ordered list, that is:\n1. ...\n2. ..."},"markdown.extension.toc.plaintext":{"type":"boolean","default":false,"description":"Just plain text TOC, no links."},"markdown.extension.toc.slugifyMode":{"type":"string","default":"github","markdownDescription":"The method to generate heading ID. This affects **links to headings** in **TOC**, **code completion**, and **printing**.","enum":["github","azureDevops","bitbucket-cloud","gitea","gitlab","vscode","zola"],"enumDescriptions":["GitHub","Azure DevOps","Bitbucket Cloud","Gitea","GitLab","Visual Studio Code","Zola"]},"markdown.extension.toc.unorderedList.marker":{"type":"string","default":"-","markdownDescription":"Use `-`, `*`, or `+` in the table of contents (for **unordered** list).","enum":["-","*","+"]},"markdown.extension.toc.updateOnSave":{"type":"boolean","default":true,"description":"Auto update TOC on save."},"markdown.extension.extraLangIds":{"type":"array","default":[],"items":{"enum":["rmd","quarto"]},"description":"List of extra supported languages (e.g., rmd, quarto), default []."}}},"markdown.markdownItPlugins":true,"markdown.previewStyles":["./media/checkbox.css","./node_modules/katex/dist/katex.min.css","./node_modules/markdown-it-github-alerts/styles/github-colors-light.css","./node_modules/markdown-it-github-alerts/styles/github-colors-dark-media.css","./node_modules/markdown-it-github-alerts/styles/github-base.css"],"grammars":[{"scopeName":"markdown.math_display","path":"./syntaxes/math_display.markdown.tmLanguage.json","injectTo":["text.html.markdown"]},{"scopeName":"markdown.math_inline","path":"./syntaxes/math_inline.markdown.tmLanguage.json","injectTo":["text.html.markdown"]},{"scopeName":"text.katex","path":"./syntaxes/katex.tmLanguage.json"}]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, some features may not work well."}},"scripts":{"vscode:prepublish":"npm run build","build":"npm run build-wasm && node ./build/build.js","build-wasm":"cd ./src/zola-slug && wasm-pack build --release","dev-build":"webpack --mode development","dev-compile":"tsc --build --watch --verbose","pretest":"tsc --build","test":"node ./out/test/runTest.js"},"dependencies":{"@neilsustc/markdown-it-katex":"^1.0.0","entities":"^3.0.1","grapheme-splitter":"^1.0.4","highlight.js":"^11.5.1","image-size":"^0.9.3","katex":"^0.16.4","markdown-it":"^13.0.2","markdown-it-github-alerts":"^0.1.2","markdown-it-task-lists":"^2.1.1","string-similarity":"^4.0.4","zola-slug":"file:./src/zola-slug/pkg"},"devDependencies":{"@types/glob":"^7.2.0","@types/katex":"^0.14.0","@types/markdown-it":"^13.0.7","@types/mocha":"^9.1.0","@types/node":"~14.18.13","@types/string-similarity":"^4.0.0","@types/vscode":"~1.63.2","@vscode/test-electron":"^1.6.2","@vscode/vsce":"^2.26.1","glob":"^7.2.0","mocha":"^9.2.2","ts-loader":"^9.2.8","typescript":"~4.5.5","webpack":"^5.91.0","webpack-cli":"^4.9.2"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/yzhang.markdown-all-in-one-3.6.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Yu Zhang","metadata":{"installedTimestamp":1745950088457,"source":"gallery","id":"98790d67-10fa-497c-9113-f6c7489207b2","publisherId":"36c8b41c-6ef6-4bf5-a5b7-65bef29b606f","publisherDisplayName":"Yu Zhang","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2497213},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"redhat.vscode-yaml","uuid":"2061917f-f76a-458a-8da9-f162de22b97e"},"manifest":{"name":"vscode-yaml","displayName":"YAML","description":"YAML Language Support by Red Hat, with built-in Kubernetes syntax support","author":"Red Hat","contributors":[{"name":"Joshua Pinkney","email":"jpinkney@redhat.com"},{"name":"Yevhen Vydolob","email":"yvydolob@redhat.com"}],"license":"MIT","version":"1.18.0","publisher":"redhat","bugs":"https://github.com/redhat-developer/vscode-yaml/issues","repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-yaml"},"icon":"icon/icon128.png","engines":{"npm":">=7.0.0","vscode":"^1.63.0"},"categories":["Programming Languages","Linters","Snippets","Formatters"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["onLanguage:yaml","onLanguage:dockercompose","onLanguage:github-actions-workflow"],"keywords":["kubernetes","yaml","autocompletion","validation"],"main":"./dist/extension","browser":"./dist/extension-web","contributes":{"languages":[{"id":"yaml","aliases":["YAML","yaml"],"extensions":[".yml",".eyaml",".eyml",".yaml"],"filenames":[".clang-format","_clang-format",".clang-tidy"],"firstLine":"^#cloud-config","configuration":"./language-configuration.json"}],"grammars":[{"language":"yaml","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"}],"configuration":{"title:":"YAML","properties":{"redhat.telemetry.enabled":{"type":"boolean","default":null,"markdownDescription":"Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).","scope":"window","tags":["telemetry","usesOnlineServices"]},"yaml.yamlVersion":{"type":"string","default":"1.2","enum":["1.1","1.2"],"markdownDescription":"Default YAML spec version"},"yaml.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the YAML language service."},"yaml.schemas":{"type":"object","default":{},"description":"Associate schemas to YAML files in the current workspace"},"yaml.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default YAML formatter"},"yaml.format.singleQuote":{"type":"boolean","default":false,"description":"Use single quotes instead of double quotes"},"yaml.format.bracketSpacing":{"type":"boolean","default":true,"description":"Print spaces between brackets in objects"},"yaml.format.proseWrap":{"type":"string","default":"preserve","enum":["preserve","never","always"],"description":"Always: wrap prose if it exceeds the print width, Never: never wrap the prose, Preserve: wrap prose as-is"},"yaml.format.printWidth":{"type":"integer","default":80,"description":"Specify the line length that the printer will wrap on"},"yaml.validate":{"type":"boolean","default":true,"description":"Enable/disable validation feature"},"yaml.hover":{"type":"boolean","default":true,"description":"Enable/disable hover feature"},"yaml.completion":{"type":"boolean","default":true,"description":"Enable/disable completion feature"},"yaml.customTags":{"type":"array","default":[],"description":"Custom tags for the parser to use"},"yaml.schemaStore.enable":{"type":"boolean","default":true,"description":"Automatically pull available YAML schemas from JSON Schema Store"},"yaml.schemaStore.url":{"type":"string","default":"https://www.schemastore.org/api/json/catalog.json","description":"URL of schema store catalog to use"},"yaml.disableAdditionalProperties":{"type":"boolean","default":false,"description":"Globally set additionalProperties to false for all objects. So if its true, no extra properties are allowed inside yaml."},"yaml.disableDefaultProperties":{"type":"boolean","default":false,"description":"Disable adding not required properties with default values into completion text."},"yaml.maxItemsComputed":{"type":"integer","default":5000,"description":"The maximum number of outline symbols and folding regions computed (limited for performance reasons)."},"yaml.suggest.parentSkeletonSelectedFirst":{"type":"boolean","default":false,"description":"If true, the user must select some parent skeleton first before autocompletion starts to suggest the rest of the properties. When yaml object is not empty, autocompletion ignores this setting and returns all properties and skeletons"},"yaml.style.flowMapping":{"type":"string","enum":["allow","forbid"],"default":"allow","description":"Forbid flow style mappings"},"yaml.style.flowSequence":{"type":"string","enum":["allow","forbid"],"default":"allow","description":"Forbid flow style sequences"},"yaml.keyOrdering":{"type":"boolean","default":false,"description":"Enforces alphabetical ordering of keys in mappings when set to true"},"yaml.extension.recommendations":{"type":"boolean","default":"true","description":"Suggest additional extensions based on YAML usage."}}},"configurationDefaults":{"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.quickSuggestions":{"other":true,"comments":false,"strings":true},"editor.autoIndent":"keep"}}},"extensionDependencies":[],"scripts":{"build":"yarn run clean && yarn run lint && yarn run vscode:prepublish","check-dependencies":"node ./scripts/check-dependencies.js","clean":"rimraf out && rimraf dist","compile":"webpack --mode none","format":"prettier --write .","lint":"eslint -c .eslintrc.js --ext .ts src test","test":"yarn test-compile && sh scripts/e2e.sh","ui-test":"yarn test-compile && extest setup-and-run -y out/test/ui-test/allTestsSuite.js -c 1.76.2","vscode:prepublish":"webpack --mode production","watch":"webpack --mode development --watch --info-verbosity verbose","test-compile":"yarn clean && tsc -p ./ && webpack --mode development","run-in-chromium":"npm run compile && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."},"devDependencies":{"@types/chai":"^4.2.12","@types/fs-extra":"^9.0.6","@types/mocha":"^2.2.48","@types/node":"^12.12.6","@types/sinon":"^10.0.6","@types/sinon-chai":"^3.2.5","@types/vscode":"^1.63.0","@types/webpack":"^4.4.10","@typescript-eslint/eslint-plugin":"^7.11.0","@typescript-eslint/parser":"^7.11.0","@vscode/test-electron":"^2.4.0","@vscode/test-web":"0.0.11","buffer":"^6.0.3","chai":"^4.2.0","crypto-browserify":"^3.12.0","eslint":"^8.57.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","glob":"^7.1.6","mocha":"^9.1.2","path-browserify":"^1.0.1","prettier":"2.2.1","process":"^0.11.10","rimraf":"^3.0.2","sinon":"^12.0.1","sinon-chai":"^3.7.0","ts-loader":"^9.2.5","ts-node":"^3.3.0","typescript":"^5.4.5","umd-compat-loader":"^2.1.2","url":"^0.11.0","util":"^0.12.5","vscode-extension-tester":"^5.3.0","webpack":"^5.76.1","webpack-cli":"^5.0.1"},"dependencies":{"@redhat-developer/vscode-redhat-telemetry":"^0.8.0","fs-extra":"^9.1.0","request-light":"^0.5.7","vscode-languageclient":"7.0.0","vscode-nls":"^3.2.1","vscode-uri":"^2.0.3","whatwg-fetch":"^3.6.2","yaml-language-server":"1.18.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/redhat.vscode-yaml-1.18.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Red Hat","metadata":{"installedTimestamp":1745950093356,"source":"gallery","id":"2061917f-f76a-458a-8da9-f162de22b97e","publisherId":"eed56242-9699-4317-8bc7-e9f4b9bdd3ff","publisherDisplayName":"Red Hat","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":5543607},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"redhat.vscode-xml","uuid":"6703768d-d42f-474e-9f6e-5f288d53f6e8"},"manifest":{"name":"vscode-xml","displayName":"XML","description":"XML Language Support by Red Hat","version":"0.28.1","author":"Red Hat","publisher":"redhat","icon":"icons/icon128.png","license":"EPL-2.0","bugs":"https://github.com/redhat-developer/vscode-xml/issues","preview":true,"keywords":["xml","xsl","xsd","dtd","RelaxNG","rng","rnc","TEI","MEI","SVG"],"xmlServer":{"version":"0.30.1"},"binaryServerDownloadUrl":{"linux":"https://github.com/redhat-developer/vscode-xml/releases/download/0.28.1/lemminx-linux.zip","alpine":"https://github.com/redhat-developer/vscode-xml/releases/download/0.28.1/lemminx-alpine.zip","osx-x86_64":"https://github.com/redhat-developer/vscode-xml/releases/download/0.28.1/lemminx-osx-x86_64.zip","osx-aarch_64":"https://github.com/redhat-developer/vscode-xml/releases/download/0.28.1/lemminx-osx-aarch_64.zip","win32":"https://github.com/redhat-developer/vscode-xml/releases/download/0.28.1/lemminx-win32.zip"},"capabilities":{"untrustedWorkspaces":{"supported":"limited","restrictedConfigurations":["xml.extension.jars","xml.java.home","xml.server.vmargs","xml.validation.resolveExternalEntities","xml.downloadExternalResources.enabled"]}},"engines":{"vscode":"^1.67.0"},"activationEvents":["onLanguage:xml","onLanguage:xsl","onLanguage:dtd","onLanguage:svg","onCommand:xml.open.docs","onCommand:xml.open.docs.home"],"main":"./dist/extension","scripts":{"vscode:prepublish":"webpack --mode production","compile":"webpack --mode none","watch":"webpack --mode development --watch","test-compile":"tsc -p ./","pretest":"npm run test-compile","test":"node ./out/test/runTest.js","eslint":"npx eslint .","build-server":"./node_modules/.bin/gulp build_server"},"repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-xml"},"categories":["Programming Languages","Linters","Formatters","Snippets"],"devDependencies":{"@eslint/js":"^9.16.0","@types/fs-extra":"^8.1.2","@types/glob":"^7.1.4","@types/node":"^18.17.1","@types/vscode":"^1.37.0","@types/yauzl":"^2.9.1","eslint":"^9.16.0","eslint-webpack-plugin":"^4.2.0","gulp":"^5.0.0","ts-loader":"^9.3.1","typescript":"^4.9.4","typescript-eslint":"^8.16.0","vscode-test":"^1.2.0","webpack":"^5.76.0","webpack-cli":"^4.10.0"},"dependencies":{"@redhat-developer/vscode-redhat-telemetry":"^0.9.1","expand-home-dir":"^0.0.3","fs-extra":"^8.1.0","glob":"^7.1.4","jdk-utils":"^0.4.3","path-exists":"^4.0.0","vscode-languageclient":"^8.0.1","yauzl":"^2.10.0"},"contributes":{"languages":[{"id":"dtd","extensions":[".dtd",".ent",".mod"],"aliases":["DTD","dtd"]},{"id":"rnc","extensions":[".rnc"],"aliases":["RelaxNG Compact","rnc"],"configuration":"./rnc.language-configuration.json"}],"grammars":[{"language":"dtd","scopeName":"text.xml.dtd","path":"./syntaxes/dtd.tmLanguage.json"},{"language":"rnc","scopeName":"source.rnc","path":"./syntaxes/rnc.tmLanguage.json"}],"configuration":{"type":"object","title":"XML","properties":{"redhat.telemetry.enabled":{"type":"boolean","default":null,"markdownDescription":"Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).","scope":"window","tags":["usesOnlineServices","telemetry"]},"xml.java.home":{"type":["string","null"],"default":null,"markdownDescription":"Specifies the folder path to the JDK (11 or more recent) used to launch the XML Language Server if the Java server is being run.\nOn Windows, backslashes must be escaped, i.e.\n`\"xml.java.home\": \"C:\\\\Program Files\\\\Java\\\\jdk11\"`. For more information, please refer to [this document](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22java-home%22%7D%5D).","scope":"window"},"xml.server.vmargs":{"type":["string","null"],"default":"-Xmx64M","markdownDescription":"Specifies extra VM arguments used to launch the XML Language Server. Eg. use `-Xmx1G  -XX:+UseG1GC -XX:+UseStringDeduplication` to increase the heap size to 1GB and enable String deduplication with the G1 Garbage collector. Please refer to [this document](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-vm-arguments%22%7D%5D) for more information on the Java server arguments.","scope":"window"},"xml.server.workDir":{"type":"string","default":"~/.lemminx","markdownDescription":"Set a custom folder path for cached XML Schemas. An absolute path is expected, although the `~` prefix (for the user home directory) is supported. Default is `~/.lemminx`. Please refer to the [cache documentation](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-cache-path%22%7D%5D) for more information.","scope":"window"},"xml.server.preferBinary":{"type":"boolean","default":false,"description":"By default, vscode-xml tries to run the Java version of the XML Language Server. If no Java is detected, vscode-xml runs the binary XML language server. When this setting is enabled, the binary will also be used even if Java is installed. If there are additions to the XML Language Server provided by other extensions, Java will be used (if available) even if this setting is enabled.","scope":"window"},"xml.server.silenceExtensionWarning":{"type":"boolean","default":false,"description":"The XML Language server allows other VSCode extensions to extend its functionality. It requires Java-specific features in order to do this. If extensions to the XML language server are detected, but a binary XML language server is run, a warning will appear. This setting can be used to disable this warning.","scope":"window"},"xml.server.binary.path":{"type":"string","description":"Specify the path of a custom binary version of the XML server to use. A binary will be downloaded if this is not set.","scope":"machine"},"xml.server.binary.args":{"type":"string","markdownDescription":"Command line arguments to supply to the binary server when the binary server is being used. Takes into effect after relaunching VSCode. Please refer to [this website for the available options](https://www.graalvm.org/reference-manual/native-image/HostedvsRuntimeOptions/). For example, you can increase the maximum memory that the server can use to 1 GB by adding `-Xmx1g`","scope":"machine"},"xml.server.binary.trustedHashes":{"type":"array","items":{"type":"string"},"markdownDescription":"List of the SHA256 hashes of trusted copies of the lemminx (XML language server) binary. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22trusted-binary-hashes%22%7D%5D) for more information","default":[],"scope":"application"},"xml.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","markdownDescription":"Traces the communication between VS Code and the XML language server in the Output view. Default is `off`.","scope":"window"},"xml.logs.client":{"type":"boolean","default":true,"markdownDescription":"Enable/disable logging to the Output view. Default is `true`."},"xml.downloadExternalResources.enabled":{"type":"boolean","default":true,"markdownDescription":"Download external resources like referenced DTD, XSD. Default is `true`.","scope":"window"},"xml.catalogs":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Register XML catalog files. See how to configure [XML catalog with XSD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-catalog-with-xsd%22%7D%5D) or [XML catalog with DTD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-catalog-with-dtd%22%7D%5D) for more information.","scope":"window"},"xml.fileAssociations":{"type":"array","default":[],"items":{"type":"object","properties":{"pattern":{"type":"string","markdownDescription":"File glob pattern. Example: `**/*.Format.ps1xml`\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"},"systemId":{"type":"string","description":"The path or URL to the XML schema (XSD or DTD)."}},"required":["pattern","systemId"]},"markdownDescription":"Allows XML schemas/ DTD to be associated to file name patterns. Please refer to [XML file association with XSD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-file-association-with-xsd%22%7D%5D) or [XML file association with DTD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-file-association-with-dtd%22%7D%5D) for more information. \n\nExample:\n```json\n[{\n  \"pattern\": \"file1.xml\",\n  \"systemId\": \"path/to/file.xsd\"\n},\n{\n  \"pattern\": \"**/*.xsd\",\n  \"systemId\": \"http://www.w3.org/2001/XMLSchema.xsd\"\n}]\n```","scope":"window"},"xml.foldings.includeClosingTagInFold":{"type":"boolean","default":false,"markdownDescription":"Minimize the closing tag after folding. Default is `false`.","scope":"window"},"xml.format.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable/disable ability to format document. Default is `true`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatenabled%22%7D%5D) for more information.","scope":"window"},"xml.format.emptyElements":{"type":"string","enum":["ignore","collapse","expand"],"default":"ignore","markdownDescription":"Expand/collapse empty elements. Default is `ignore`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatemptyelements%22%7D%5D) for more information.","scope":"window"},"xml.format.enforceQuoteStyle":{"type":"string","enum":["preferred","ignore"],"markdownEnumDescriptions":["Use preferred quote style set by `xml.preferences.quoteStyle` when formatting.","Ignore quote style formatting."],"default":"ignore","markdownDescription":"Enforce `preferred` quote style (set by `#xml.preferences.quoteStyle#`) or `ignore` quote style when formatting. Default is `ignore`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatenforcequotestyle%22%7D%5D) for more information.","scope":"window"},"xml.format.legacy":{"type":"boolean","default":false,"markdownDescription":"Enable/disable legacy formatter. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatlegacy%22%7D%5D) for more information.","scope":"window"},"xml.format.grammarAwareFormatting":{"type":"boolean","default":true,"markdownDescription":"Use Schema/DTD grammar information while formatting. Default is `true`. Not supported by legacy formatter. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatgrammarawareformatting%22%7D%5D) for more information.","scope":"window"},"xml.format.joinCDATALines":{"type":"boolean","default":false,"markdownDescription":"Set to `true` to join lines in CDATA content during formatting. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatjoincdatalines%22%7D%5D) for more information.","scope":"window"},"xml.format.joinCommentLines":{"type":"boolean","default":false,"markdownDescription":"Join comment content on format. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatjoincommentlines%22%7D%5D) for more information.","scope":"window"},"xml.format.joinContentLines":{"type":"boolean","default":false,"markdownDescription":"Normalize the whitespace of content inside an element. Newlines and excess whitespace are removed. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatjoincontentlines%22%7D%5D) for more information.","scope":"window"},"xml.format.maxLineWidth":{"type":"integer","default":100,"markdownDescription":"Max line width. Set to `0` to disable this setting. Default is `100`. Not supported by legacy formatter. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatmaxlinewidth%22%7D%5D) for more information.","scope":"window"},"xml.format.preserveAttributeLineBreaks":{"type":"boolean","default":true,"markdownDescription":"Preserve line breaks that appear before and after attributes. This setting is overridden if `#xml.format.splitAttributes#` is set to `splitNewLine` or `alignWithFirstAttr`. Default is `true`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreserveattributelinebreaks%22%7D%5D) for more information.","scope":"window"},"xml.format.preserveEmptyContent":{"type":"boolean","default":false,"markdownDescription":"Preserve empty content/whitespace in a tag. Default is `false`. Supported only with legacy formatter. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreserveemptycontent%22%7D%5D) for more information.","scope":"window"},"xml.format.preservedNewlines":{"type":"integer","enum":[0,1,2,3],"default":2,"markdownDescription":"Preserve new lines that separate tags. The value represents the maximum number of new lines per section. A value of 0 removes all new lines. Default is `2`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreservednewlines%22%7D%5D) for more information.","scope":"window"},"xml.format.preserveSpace":{"type":"array","default":["xsl:text","xsl:comment","xsl:processing-instruction","literallayout","programlisting","screen","synopsis","pre","xd:pre"],"items":{"type":"string"},"markdownDescription":"Element names for which spaces will be preserved. Not supported by legacy formatter. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreservespace%22%7D%5D) for more information.","scope":"window"},"xml.format.spaceBeforeEmptyCloseTag":{"type":"boolean","default":true,"markdownDescription":"Insert space before end of self closing tag. \nExample:\n  ```<tag/> -> <tag />```. Default is `true`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatspacebeforeemptyclosetag%22%7D%5D) for more information.","scope":"window"},"xml.format.xsiSchemaLocationSplit":{"type":"string","enum":["onElement","onPair","none"],"markdownEnumDescriptions":["Put a new line after each namespace and URI, arranging them into one column.","Put a new line after each URI, arranging the content into pairs of namespace and URI.","Ignore `xsi:schemaLocation` content formatting."],"default":"onPair","markdownDescription":"Split `xsi:schemaLocation` content. Default is `onPair`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatxsischemalocationsplit%22%7D%5D) for more information","scope":"window"},"xml.format.splitAttributes":{"type":"string","enum":["preserve","splitNewLine","alignWithFirstAttr"],"default":"preserve","markdownDescription":"Split multiple attributes each onto a new line or align attributes to the first. Default is `preserve`. Indicate level of indentation with `#xml.format.splitAttributesIndentSize#`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatsplitattributes%22%7D%5D) for more information.","scope":"window"},"xml.format.splitAttributesIndentSize":{"type":"number","default":2,"markdownDescription":"How many levels to indent the attributes by when `#xml.format.splitAttributes#` is `true`. Default value is `2`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatsplitattributesindentsize%22%7D%5D) for more information"},"xml.format.closingBracketNewLine":{"type":"boolean","default":false,"markdownDescription":"The option to put a closing bracket on a newline when `#xml.format.splitAttributes#` is `true`. Default value is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatclosingbracketnewline%22%7D%5D) for more information."},"xml.completion.autoCloseTags":{"type":"boolean","default":true,"markdownDescription":"Enable/disable autoclosing of XML tags. Default is `true`. \n\nIMPORTANT: Turn off `#editor.autoClosingTags#` for this to work.","scope":"window"},"xml.completion.autoCloseRemovesContent":{"type":"boolean","default":true,"markdownDescription":"Enable/disable the content of an element being removed when the element start tag is turned into a self-closing tag. The default setting is to remove the content. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22auto-close-removes-content%22%7D%5D) for more information.","scope":"window"},"xml.codeLens.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable XML CodeLens. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22CodeLens%22%2C%22section%22%3A%22Code%20Lens%22%7D%5D) for information about CodeLens features"},"xml.preferences.quoteStyle":{"type":"string","enum":["single","double"],"default":"double","markdownDescription":"Preferred quote style to use for completion: `single` quotes, `double` quotes. Default is `double`.","scope":"window"},"xml.preferences.showSchemaDocumentationType":{"type":"string","default":"all","enum":["documentation","appinfo","all","none"],"markdownEnumDescriptions":["Documentation comes from the `xs:documentation` element.","Documentation comes from the `xs:appinfo` element.","Documentation comes from the `xs:documentation` and `xs:appinfo` elements.","Displays no documentation."],"markdownDescription":"Specifies the source of the XML schema documentation displayed on hover and completion. Default is `all`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22documentation-type%22%7D%5D) for more information.","scope":"window"},"xml.validation.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable/disable all validation. Default is `true`.","scope":"window"},"xml.validation.namespaces.enabled":{"type":"string","default":"always","enum":["always","never","onNamespaceEncountered"],"markdownEnumDescriptions":["Enable namespaces validation.","Disable namespaces validation.","Enable namespaces validation only when the root element declares an xmlns namespace."],"markdownDescription":"Enable/disable namespaces validation. Default is `always`. Ignored if `#xml.validation.enabled#` is set to `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xmlnamespaceschemaenabled%22%7D%5D) for more information.","scope":"window"},"xml.validation.schema.enabled":{"type":"string","default":"always","enum":["always","never","onValidSchema"],"markdownEnumDescriptions":["Enable schema based validation.","Disable schema based validation.","Enable schema based validation only when the declared xsi:schemaLocation hint or xsi:noNamespaceSchemaLocation is valid for the root element."],"markdownDescription":"Enable/disable schema based validation. Default is `always`. Ignored if `#xml.validation.enabled#` is set to `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xmlvalidationschemaenabled%22%7D%5D) for more information.","scope":"window"},"xml.validation.disallowDocTypeDecl":{"type":"boolean","default":false,"markdownDescription":"Enable/disable if a fatal error is thrown if the incoming document contains a DOCTYPE declaration. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22disallow-doc-type-declarations%22%7D%5D) for more information","scope":"window"},"xml.validation.resolveExternalEntities":{"type":"boolean","default":false,"markdownDescription":"Enable/disable resolve of external entities. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22resolve-external-entities%22%7D%5D) for more information. Disabled for untrusted workspaces","scope":"window"},"xml.validation.xInclude.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable validation for `xi:include`. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xmlvalidationxincludeenabled%22%7D%5D) for more information.","scope":"window"},"xml.validation.noGrammar":{"type":"string","enum":["ignore","hint","info","warning","error"],"default":"hint","markdownDescription":"The message severity when a document has no associated grammar. Default is `hint`.","scope":"window"},"xml.symbols.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable/disable document symbols (Outline). Default is `true`. No symbols are given if `\"xml.symbols.enabled\": false`.","scope":"window"},"xml.validation.filters":{"type":"array","default":[{"pattern":"**.exsd","noGrammar":"ignore","schema":{"enabled":"never"}},{"pattern":"**{.project,.classpath,plugin.xml,feature.xml,category.xml,.target,.product}","noGrammar":"ignore"}],"items":{"type":"object","properties":{"pattern":{"type":"string","markdownDescription":"File glob pattern. Example: `**/*.Format.ps1xml`\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"}},"required":["pattern"]}},"xml.symbols.excluded":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Disable document symbols (Outline) for the given file name patterns. Updating file name patterns does not automatically reload the Outline view for the relevant file(s). Each file must either be reopened or changed, in order to trigger an Outline view reload.\n\nExample:\n```\n[\n \"**/*LargeFile.xml\"\n]```.","scope":"window"},"xml.symbols.maxItemsComputed":{"type":"integer","default":5000,"markdownDescription":"The maximum number of outline symbols and folding regions computed (limited for performance reasons). Default is `5000`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xmlsymbolsmaxitemscomputed%22%7D%5D) for more information."},"xml.symbols.showReferencedGrammars":{"type":"boolean","default":true,"markdownDescription":"Show referenced grammars in the Outline. Default is `true`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xmlsymbolsshowreferencedgrammars%22%7D%5D) for more information.","scope":"window"},"xml.symbols.filters":{"type":"array","default":[],"items":{"type":"object","properties":{"pattern":{"type":"string","markdownDescription":"File glob pattern. Example: `**/*.Format.ps1xml`\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"},"expressions":{"type":"array","default":[],"items":{"type":"object","description":"The XML symbol expression.","properties":{"xpath":{"type":"string","markdownDescription":"The XPath expression of the filter."},"excluded":{"type":"boolean","description":"Exclude/Include the node which matches the XPath expression."},"inlineAttribute":{"type":"boolean","description":"Whether or not to show an attribute expression inline with the owning element instead of nested."},"showAttributeName":{"type":"boolean","description":"Whether or not the attribute expression name should be shown along with its value (for inline attributes only)."}}},"markdownDescription":"Array of XML symbol expressions"}},"required":["pattern","expressions"]},"markdownDescription":"Allows XML symbols filter to be associated to file name patterns. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xmlsymbolsfilters%22%7D%5D) for more information.. \n\nExample:\n```json\n[\n  {\n    \"pattern\": \"pom.xml\",\n    \"expressions\": [\n      {\n        \"xpath\": \"//text()\"\n      }\n    ]\n  }\n]\n```","scope":"window"},"xml.references":{"type":"array","default":[],"items":{"type":"object","properties":{"pattern":{"type":"string","markdownDescription":"matches the files that reference declared with `expressions` applies to.\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"},"prefix":{"type":"string","description":"The prefix to use (ex : '#')  for from for all the declared reference expressions."},"multiple":{"type":"boolean","description":"true if the from attribute, text can declare several from references and false otherwise for all the declared reference expressions."},"expressions":{"type":"array","default":[],"items":{"type":"object","properties":{"prefix":{"type":"string","description":"The prefix to use (ex : '#')  for from."},"multiple":{"type":"boolean","description":"true if the from attribute, text can declare several from references and false otherwise."},"from":{"type":"string","description":"The from reference DOM node (attribute, text) declared with XPath (ex: foo/@attr, foo/text())."},"to":{"type":"string","description":"The to reference DOM node (attribute, text) declared with XPath (ex: foo/@attr, foo/text())."}}},"required":["from","to"]}},"required":["pattern","expressions"]},"markdownDescription":"Allows references for the given file name patterns. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Features/XMLReferencesFeatures%22%2C%22section%22%3A%22xmlreferencesfeatures%22%7D%5D) for more information.","scope":"window"},"xml.colors":{"type":"array","default":[],"items":{"type":"object","properties":{"pattern":{"type":"string","markdownDescription":"matches the files that colors declared with `expressions` applies to.\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"},"expressions":{"type":"array","default":[],"items":{"type":"object","properties":{"xpath":{"type":"string","description":"The color DOM node (attribute, text) declared with XPath (ex: foo/@color, foo/text())"}}},"required":["xpath"]}},"required":["pattern","expressions"]},"markdownDescription":"Allows colors for the given file name patterns. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Features/XMLColorsFeatures%22%2C%22section%22%3A%22xmlcolorsfeatures%22%7D%5D) for more information.","scope":"window"},"xml.filePathSupport.mappings":{"type":"array","default":[],"items":{"type":"object","properties":{"pattern":{"type":"string","markdownDescription":"matches the files that file path declared with `expressions` applies to.\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"},"expressions":{"type":"array","default":[],"items":{"type":"object","properties":{"xpath":{"type":"string","description":"The file path DOM node (attribute, text) declared with XPath (ex: foo/@path, foo/text())"},"filter":{"type":"array","items":{"type":"string"},"description":"String array which contains allowed file extensions (ex: [\".png\", \".gif\", \".jpg\"])"},"separator":{"type":"string","description":"Separator character to use if multiple file paths are allowed (ex: \";\")"}}},"required":["xpath"]}},"required":["pattern","expressions"]},"markdownDescription":"Allows file path for the given file name patterns. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Features/XMLFilePathSupport%22%2C%22section%22%3A%22xmlfilepathsfeatures%22%7D%5D) for more information.","scope":"window"},"xml.extension.jars":{"type":"array","default":[],"markdownDescription":"An array of paths to JARs that should be contributed to the LemMinX classpath. The paths can include glob patterns. This is intended to be used as a tool for developing extensions to vscode-xml. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22extension-jars%22%7D%5D) for more information","scope":"window"}}},"configurationDefaults":{"[xml]":{"editor.autoClosingBrackets":"never","files.trimFinalNewlines":true},"[xsl]":{"editor.autoClosingBrackets":"never","files.trimFinalNewlines":true},"[dtd]":{"editor.autoClosingBrackets":"never","files.trimFinalNewlines":true},"[svg]":{"editor.autoClosingBrackets":"never","files.trimFinalNewlines":true}},"commands":[{"command":"xml.open.docs.home","title":"Open XML Documentation","category":"XML"},{"command":"xml.validation.current.file","title":"Revalidate current XML file","category":"XML"},{"command":"xml.validation.all.files","title":"Revalidate all opened XML files","category":"XML"},{"command":"xml.command.bind.grammar","title":"Bind to grammar/schema file","category":"XML"},{"command":"xml.restart.language.server","title":"Restart XML Language Server","category":"XML"},{"command":"xml.refactor.surround.with.tags","title":"Surround with Tags (Wrap)","category":"XML"},{"command":"xml.refactor.surround.with.comments","title":"Surround with Comments","category":"XML"},{"command":"xml.refactor.surround.with.cdata","title":"Surround with CDATA","category":"XML"}],"menus":{"commandPalette":[{"command":"xml.validation.current.file","when":"editorLangId in xml.supportedLanguageIds && XMLLSReady"},{"command":"xml.validation.all.files","when":"XMLLSReady"},{"command":"xml.command.bind.grammar","when":"resourceFilename =~ /xml/ && editorIsOpen && XMLLSReady"},{"command":"xml.restart.language.server","when":"XMLLSReady"},{"command":"xml.refactor.surround.with.tags","when":"editorLangId in xml.supportedLanguageIds && XMLLSReady"},{"command":"xml.refactor.surround.with.comments","when":"editorLangId in xml.supportedLanguageIds && XMLLSReady"},{"command":"xml.refactor.surround.with.cdata","when":"editorLangId in xml.supportedLanguageIds && XMLLSReady"}],"editor/context":[{"command":"xml.refactor.surround.with.tags","when":"editorLangId in xml.supportedLanguageIds && XMLLSReady","group":"1_modification"},{"command":"xml.refactor.surround.with.comments","when":"editorLangId in xml.supportedLanguageIds && XMLLSReady","group":"1_modification"},{"command":"xml.refactor.surround.with.cdata","when":"editorLangId in xml.supportedLanguageIds && XMLLSReady","group":"1_modification"}]},"jsonValidation":[{"fileMatch":"package.json","url":"./schemas/package.schema.json"}]}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/redhat.vscode-xml-0.28.1-darwin-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"darwin-x64","publisherDisplayName":"Red Hat","metadata":{"installedTimestamp":1745950098071,"source":"gallery","id":"6703768d-d42f-474e-9f6e-5f288d53f6e8","publisherId":"eed56242-9699-4317-8bc7-e9f4b9bdd3ff","publisherDisplayName":"Red Hat","targetPlatform":"darwin-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":72366275},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"jwsandeman.cyberpunk2077-theme","uuid":"0874834b-6b77-4319-952d-a6b3b8daeaf0"},"manifest":{"name":"cyberpunk2077-theme","displayName":"Cyberpunk 2077","description":"A theme inspired by CD Projekt RED's Cyberpunk 2077","version":"1.4.4","publisher":"JWSandeman","icon":"images/icon.png","repository":{"type":"git","url":"https://github.com/jwsandeman/cyberpunk2077-theme"},"keywords":["theme","dark theme","jwsandeman","cyberpunk2077","cyberpunk2077-theme","cyberpunk","dracula","abyss","atlantic night","moonlight","palenight","night owl","lucy"],"engines":{"vscode":"^1.67.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"cyberpunk2077","uiTheme":"vs-dark","path":"./themes/cyberpunk2077-color-theme.json"}]},"dependencies":{"generator-code":"^1.11.5"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/jwsandeman.cyberpunk2077-theme-1.4.4","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"JW Sandeman","metadata":{"installedTimestamp":1745955497032,"pinned":true,"source":"gallery","id":"0874834b-6b77-4319-952d-a6b3b8daeaf0","publisherId":"20e2fe8c-cb55-4500-8e21-a05f828f4937","publisherDisplayName":"JW Sandeman","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":842400},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"code-connoisseur74.sax-synth-color-theme","uuid":"8693091e-5914-4f1b-ab88-7b7e663be359"},"manifest":{"name":"sax-synth-color-theme","displayName":"Sax Synth Color Theme","description":"A synthwave inspired color theme for sax players.","version":"0.0.1","publisher":"Code-Connoisseur74","engines":{"vscode":"^1.88.0"},"categories":["Themes"],"keywords":["vscode","theme","synthwave","synth","wave","practical synth","sax","sax-synth","sax synth","saxsynth","sax synthwave","saxsynthwave","sax synth wave","sax synth color theme","background","dark","dark theme","dark-theme","darktheme","2077","cyberpunk","cyberpunk 2077","vaporwave","night","night theme","midnight","midnight theme","midnight-theme","midnight purple","midnight-purple","midnightpurple","purple","purple theme","purple-theme","purpletheme","dark purple","dark-purple","darkpurple","dark purple theme","dark-purple-theme","darkpurpletheme"],"repository":{"type":"git","url":"https://github.com/CodeConnoisseur74/synth-sax-color-theme"},"contributes":{"themes":[{"label":"Sax Synth Color Theme","uiTheme":"vs-dark","path":"./themes/Sax Synth Color Theme-color-theme.json"}]},"images":["sax-synth-logo.png","sax-synth-background-image.png","sax-synth.png","menu-highlight.png","icon-highlight.png"],"icon":"sax-synth-logo.jpg"},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/code-connoisseur74.sax-synth-color-theme-0.0.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"CodeConnoisseur74","metadata":{"installedTimestamp":1745955650131,"pinned":true,"source":"gallery","id":"8693091e-5914-4f1b-ab88-7b7e663be359","publisherId":"df56b4ce-fd08-448b-8247-8daeff02fbad","publisherDisplayName":"CodeConnoisseur74","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2929915},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"neonspork.cyberstorm","uuid":"7363c4e1-71b3-419b-9912-f3a62b7d0e0d"},"manifest":{"name":"cyberstorm","publisher":"neonSpork","displayName":"cyberStorm","repository":"https://github.com/NeonSpork/cyberstorm","icon":"images/cyberStorm_logo.png","description":"Cyberpunk neon dark and stormy theme","version":"0.1.1","engines":{"vscode":"^1.61.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"cyberStorm","uiTheme":"vs-dark","path":"./themes/cyberStorm-color-theme.json"}]},"keywords":["cyber","punk","cyberpunk","neon","retrowave","theme"]},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/neonspork.cyberstorm-0.1.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"JB Leiknes","metadata":{"installedTimestamp":1745955780778,"pinned":true,"source":"gallery","id":"7363c4e1-71b3-419b-9912-f3a62b7d0e0d","publisherId":"da743981-45b2-4ab0-8c44-582cad561836","publisherDisplayName":"JB Leiknes","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":353347},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"drcika.apc-extension","uuid":"c445982f-a615-472b-a90e-0a9edd88b8e8"},"manifest":{"name":"apc-extension","displayName":"Apc Customize UI++","description":"Advanced VSCode user interface customizations. Very experimental.","icon":"logo.png","version":"0.4.1","repository":"https://github.com/drcika/apc-extension","publisher":"drcika","license":"MIT","engines":{"vscode":"^1.92.0"},"categories":["Themes","Other"],"keywords":["custom","customise","UI","activity bar","interface","titlebar","activitybar"],"activationEvents":["onStartupFinished"],"capabilities":{"untrustedWorkspaces":{"supported":true}},"main":"./dist/extension.js","contributes":{"commands":[{"command":"apc.extension.enable","title":"Enable Apc extension"},{"command":"apc.extension.disable","title":"Disable Apc extension"}],"configuration":{"type":"object","title":"Apc","properties":{"apc.font.family":{"type":"string"},"apc.monospace.font.family":{"type":"string"},"apc.parts.font.family":{"type":"object","properties":{"monaco-menu":{"type":"string"},"banner":{"type":"string"},"titlebar":{"type":"string"},"statusbar":{"type":"string"},"panel":{"type":"string"},"extension-editor":{"type":"string"},"settings-body":{"type":"string"},"auxiliarybar":{"type":"string"},"tabs":{"type":"string"},"sidebar":{"type":"string"}}},"apc.listRow":{"type":"object","properties":{"fontSize":{"type":"number","default":13},"height":{"type":"number","default":22},"lists":{"type":"array","default":["customview-tree","results","open-editors","explorer-folders-view","outline-tree","scm-view","debug-view-content","debug-breakpoints","tree"],"items":{"type":"string","enum":["customview-tree","tabs-list","results","open-editors","explorer-folders-view","tree","outline-tree","scm-view","debug-view-content","debug-breakpoints","settings-toc-wrapper","settings-tree-container","quick-input-list","monaco-table","select-box-dropdown-list-container","extensions-list","notifications-list-container"]}},"parts":{"type":"object","format":{"fontSize":{"type":"number","default":13},"height":{"type":"number","default":22},"input":{"type":"number","default":34,"description":"Only for scm-view"},"actionButton":{"type":"number","default":34,"description":"Only for scm-view"}}}}},"apc.iframe.style":{"type":["string","object"]},"apc.imports":{"type":"array","description":"Css files are watched in real time, no need to restart the application","items":{"type":["string","object"]}},"apc.stylesheet":{"type":"object","markdownDescription":"Additional stylesheet definitions.\n```\n\"apc.stylesheet\" : {\n\t\"body\" : {\n\t\t\"font-size\": \"12px\"\n\t}\n}\n```\n"},"apc.statusBar":{"type":"object","properties":{"fontSize":{"type":"number","default":12},"height":{"type":"number","default":22},"position":{"type":"string","enum":["top","bottom","editor-top","editor-bottom"],"default":"bottom"}}},"apc.activityBar":{"type":"object","properties":{"size":{"type":"number","default":48},"itemSize":{"type":"number","description":"Works only if apc.activityBar.size is specified, default apc.activityBar.size"},"itemMargin":{"type":"number","default":3},"position":{"type":"string","enum":["bottom"]}}},"apc.menubar.compact":{"type":"boolean","default":false,"description":"Enables compact menu bar on macos"},"apc.electron":{"type":"object","description":"see https://www.electronjs.org/docs/latest/tutorial/window-customization","properties":{"frame":{"description":"see https://www.electronjs.org/docs/latest/tutorial/window-customization","type":"boolean","default":true},"transparent":{"description":"see https://www.electronjs.org/docs/latest/tutorial/window-customization","type":"boolean","default":false},"opacity":{"type":"number","default":1,"description":"Set the initial opacity of the window, between 0.0 (fully transparent) and 1.0 (fully opaque). This is only implemented on Windows and macOS."},"vibrancy":{"description":"macos - Adds a vibrancy effect to the browser window. Passing null or an empty string will remove the vibrancy effect on the window. Note that appearance-based, light, dark, medium-light, and ultra-dark have been deprecated and will be removed in an upcoming version of macOS.","type":"string","enum":["appearance-based","light","dark","titlebar","selection","menu","popover","sidebar","medium-light","ultra-dark","header","sheet","window","hud","fullscreen-ui","tooltip","content","under-window","under-page"]},"backgroundMaterial":{"description":"windows - This sets the window's system-drawn background material, including behind the non-client area. This is only supported on WIndows 11 22H@ and up.","type":"string","enum":["auto","none","mica","acrylic","tabbed"]},"visualEffectState":{"description":"macos - Specify how the material appearance should reflect window activity state on macOS. Must be used with the vibrancy property.","type":"string","enum":["followWindow","active","inactive"]},"backgroundColor":{"description":"Color in Hex, RGB, RGBA, HSL, HSLA or named CSS color format. The alpha channel is optional for the hex type. default light theme #fff, dark theme #000","type":"string"},"titleBarStyle":{"description":"see https://www.electronjs.org/docs/latest/tutorial/window-customization","type":"string","enum":["hidden","hiddenInset","customButtonsOnHover"]},"trafficLightPosition":{"description":"see https://www.electronjs.org/docs/latest/tutorial/window-customization","type":"object","properties":{"x":{"type":"number"},"y":{"type":"number"}}},"titleBarOverlay":{"description":"see https://www.electronjs.org/docs/latest/tutorial/window-customization","type":["object","boolean"],"properties":{"color":{"type":"string","format":"color"},"symbolColor":{"type":"string","format":"color"},"height":{"type":"number"}}}}},"apc.header":{"type":"object","properties":{"fontSize":{"type":"number","default":13},"height":{"type":"number","default":35},"default":{"type":"number","default":35},"compact":{"type":"number","default":22}}},"apc.sidebar.titlebar":{"type":"object","properties":{"fontSize":{"type":"number","default":11},"height":{"type":"number","default":35}}},"apc.theme":{"type":"array","items":{"type":"object","properties":{"color":{"type":"string","format":"color"},"tokens":{"type":"array","items":{"type":"string"}}}}},"apc.buttons":{"type":"array","description":"Views to include on the status bar with associated icons","default":[],"uniqueItems":true,"items":{"type":"object","properties":{"text":"string","tooltip":{"type":["string","null"]},"vscommand":{"type":["string","null"]},"command":{"type":["string","null"]},"priority":{"type":["number","null"]}}}}}}},"extensionKind":["ui"],"scripts":{"start":"tsc -watch -p ./","package":"vsce package","publish":"vsce publish","vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/glob":"^8.1.0","@types/mocha":"^10.0.1","@types/node":"16.x","@types/vscode":"^1.77.0","@typescript-eslint/eslint-plugin":"^5.56.0","@typescript-eslint/parser":"^5.56.0","@vscode/test-electron":"^2.3.0","eslint":"^8.36.0","mocha":"^10.2.0","ts-loader":"^9.4.2","typescript":"^4.9.5","vsce":"^2.15.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/drcika.apc-extension-0.4.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"drcika","metadata":{"installedTimestamp":1745955842392,"pinned":true,"source":"gallery","id":"c445982f-a615-472b-a90e-0a9edd88b8e8","publisherId":"4339fafa-4bed-499a-af81-4eb425456c60","publisherDisplayName":"drcika","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":815037},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"alexowl.transparent-color-theme","uuid":"6a83c274-c79e-4510-815d-3de5253acb06"},"manifest":{"name":"transparent-color-theme","displayName":"Transparent Color Theme","description":"Experience the ultimate coding environment with the Transparent Color theme. Designed exclusively for macOS, this theme brings the stunning vibrancy background blur of macOS to Visual Studio Code. Enjoy a sleek and modern coding experience with translucent backgrounds that seamlessly blend with the rest of your macOS interface.","version":"1.1.0","engines":{"vscode":"^1.81.0"},"publisher":"alexowl","author":{"name":"Alex Owl","email":"AlexOwl@protonmail.com","url":"https://AlexOwl.github.com/"},"repository":"https://github.com/AlexOwl/vscode-transparent-color-theme","bugs":{"url":"https://github.com/AlexOwl/vscode-transparent-color-theme/issues"},"homepage":"https://AlexOwl.github.com/vscode-transparent-color-theme","icon":"images/icon.png","galleryBanner":{"color":"#8CC7F3","theme":"dark"},"keywords":["theme","transparent","macos","vibrancy","ultra-dark","glass"],"categories":["Themes"],"contributes":{"themes":[{"label":"Transparent Color Theme","uiTheme":"vs-dark","path":"./themes/Transparent Color Theme-color-theme.json"}]},"extensionPack":["drcika.apc-extension","BrandonKirbyson.vscode-animations"]},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/alexowl.transparent-color-theme-1.1.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Alex Owl","metadata":{"installedTimestamp":1745955842389,"pinned":true,"source":"gallery","id":"6a83c274-c79e-4510-815d-3de5253acb06","publisherId":"46859f80-97fa-4e07-910a-abfc54564d29","publisherDisplayName":"Alex Owl","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":3735599},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"brandonkirbyson.vscode-animations","uuid":"7d7c0d21-6653-4c11-9310-75b7180bbf81"},"manifest":{"name":"vscode-animations","displayName":"VSCode Animations","description":"Clean and customizable animations for VSCode","version":"2.0.7","repository":{"type":"git","url":"https://github.com/BrandonKirbyson/VSCode-Animations"},"extensionDependencies":[],"extensionKind":["ui"],"icon":"static/logo.png","author":{"name":"Brandon Kirbyson","email":"brandonkirbyson@gmail.com"},"publisher":"BrandonKirbyson","readme":"README.md","homepage":"https://github.com/BrandonKirbyson/VSCode-Animations#readme","license":"MIT","engines":{"vscode":"^1.64.0"},"categories":["Themes","Other"],"keywords":["vscode","visual studio code","theme","animations","animation","animate","custom","clean","smooth"],"activationEvents":["onStartupFinished"],"main":"./dist/extension.js","contributes":{"commands":[{"command":"VSCode-Animations.enableAnimations","title":"Enable Animations","category":"Animations"},{"command":"VSCode-Animations.disableAnimations","title":"Disable Animations","category":"Animations"},{"command":"VSCode-Animations.openAnimationSettings","title":"Open Animation Settings","category":"Animations"},{"command":"VSCode-Animations.changeInstallMethod","title":"Change Install Method","category":"Animations"},{"command":"VSCode-Animations.openCustomCSS","title":"Open Custom CSS","category":"Animations"},{"command":"VSCode-Animations.installAnimations","title":"Install Animations","category":"Animations"},{"command":"VSCode-Animations.getScriptPath","title":"Get Script Path","category":"Animations"}],"configuration":{"title":"Animations","properties":{"animations.Enabled":{"type":"boolean","default":true,"description":"Whether or not to enable animations"},"animations.Install-Method":{"type":"string","enum":["Custom CSS and JS","Custom UI Style","Apc Customize UI++"],"default":"Custom CSS and JS","markdownDescription":"The extension to use for injecting the animations. **NOTE:** This is a **very important** setting, if you don't know what this means, leave it as `Custom CSS and JS`"},"animations.Auto-Install":{"type":"boolean","default":true,"markdownDescription":"Whether or not to automatically install the animations with the [Custom CSS and JS extension](https://github.com/be5invis/vscode-custom-css), default: `true`. **IMPORTANT:** If set to `false`, you will need to manually install the animations by using the command `Animations: Get Script Path` to copy the path into your favorite custom injection extension (ex: [apc-extension](https://github.com/drcika/apc-extension)). **ONLY do this if you understand what this means.**"},"animations.Smooth-Mode":{"type":"boolean","default":true,"markdownDescription":"Make everything **SMOOTH**! Whether or not to use smooth animations on all windows (sidebars, split screens, etc.)"},"animations.Custom-CSS":{"type":"boolean","default":true,"description":"Whether or not to use the custom CSS file"},"animations.Focus-Dimming-Amount":{"type":"number","default":50,"maximum":100,"minimum":0,"markdownDescription":"The amount to dim parts of vscode when a new window gains focus, default: `50%`"},"animations.Focus-Dimming-Mode":{"type":"string","enum":["None","Full Window","Everything But Editor","Everything But Terminal","Everything But Editor and Terminal"],"default":"None","markdownDescription":"The mode to use for focus dimming, `None` disables dimming entirely, `Window` will dim the entire window, `Everything But Editor`, `Everything But Terminal`, and `Everything But Editor and Terminal` will dim everything but the editor, terminal, or both based on option, default: `Full Window`"},"animations.Command-Palette":{"type":"string","enum":["None","Scale","Slide","Fade"],"default":"Scale","description":"The animation to use for the command palette"},"animations.Tabs":{"type":"string","enum":["None","Scale","Slide","Flip"],"default":"Scale","description":"The animation to use for tabs"},"animations.Active":{"type":"string","enum":["None","Indent","Scale"],"default":"Scale","description":"The animation to use for the active list item"},"animations.Scrolling":{"type":"string","enum":["None","Scale","Slide","Fade"],"default":"Scale","description":"The animation to use for when new list items appear when scrolling"},"animations.Default-Duration":{"type":"number","default":300,"maximum":10000,"minimum":0,"markdownDescription":"The default duration of all the animations in milliseconds, default: `300`, **NOTE:** This is the default duration for all animations, you can change the duration of each animation individually in the `Durations` section"},"animations.Durations":{"type":"object","description":"The durations of the animations in milliseconds","additionalProperties":false,"properties":{"Command-Palette":{"type":"number","default":300,"maximum":10000,"minimum":0,"markdownDescription":"The duration of the animation for the command palette in milliseconds, default: `300`"},"Tabs":{"type":"number","default":200,"maximum":10000,"minimum":0,"markdownDescription":"The duration of the animation for tabs in milliseconds, default: `200`"},"Active":{"type":"number","default":200,"maximum":10000,"minimum":0,"markdownDescription":"The duration of the animation for files in milliseconds, default: `200`"},"Scrolling":{"type":"number","default":200,"maximum":10000,"minimum":0,"markdownDescription":"The duration of the animation for when new list items appear when scrolling in milliseconds, default: `200`"},"Smooth-Mode":{"type":"number","default":200,"maximum":10000,"minimum":0,"markdownDescription":"The duration of the animation for when new list items appear when scrolling in milliseconds, default: `200`"},"Focus-Dimming":{"type":"number","default":200,"maximum":10000,"minimum":0,"markdownDescription":"The duration of the animation for when a new window gains focus in milliseconds, default: `200`"}}},"animations.CursorAnimation":{"type":"boolean","default":false,"description":"Whether or not to enable the cursor animation"},"animations.UseCursorColorForCursorAnimation":{"type":"boolean","default":false,"description":"Whether or not to use the cursor color of the theme for the cursor animation, `false` will use the color set in the `CursorAnimationOptions`"},"animations.CursorAnimationOptions":{"type":"object","description":"The cursor animation settings","additionalProperties":false,"default":{"Color":"#ffffff","CursorStyle":"block","TrailLength":8},"properties":{"Color":{"type":"string","default":"#ffffff","description":"The color of the cursor animation"},"CursorStyle":{"type":"string","enum":["line","block"],"default":"block","markdownDescription":"The type of cursor to use, either `line` or `block`"},"TrailLength":{"type":"number","default":8,"minimum":1,"maximum":50,"markdownDescription":"The length of the cursor trail, should stay around `8`, higher might cause performance issues"}}}}}},"scripts":{"vscode:prepublish":"npm run package","compile":"webpack & sass --watch --no-source-map src/scss:dist/css","watch":"webpack --watch & sass --watch --no-source-map src/scss:dist/css","package":"webpack --mode production && sass --no-source-map src/scss:dist/css","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/glob":"^8.1.0","@types/mocha":"^10.0.1","@types/node":"16.x","@types/vscode":"^1.64.0","@types/webpack":"^5.28.1","@typescript-eslint/eslint-plugin":"^5.59.1","@typescript-eslint/parser":"^5.59.1","@vscode/test-electron":"^2.3.0","eslint":"^8.39.0","glob":"^8.1.0","mocha":"^10.2.0","ts-loader":"^9.4.2","typescript":"^5.0.4","webpack":"^5.81.0","webpack-cli":"^5.0.2"},"dependencies":{"ts-node":"^10.9.1"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/brandonkirbyson.vscode-animations-2.0.7","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Brandon Kirbyson","metadata":{"installedTimestamp":1745955842394,"pinned":true,"source":"gallery","id":"7d7c0d21-6653-4c11-9310-75b7180bbf81","publisherId":"55df104d-985f-438b-b4c6-3a5c30f35183","publisherDisplayName":"Brandon Kirbyson","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":32749665},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"illixion.vscode-vibrancy-continued","uuid":"da69820f-32f2-49c6-915b-aa8e49455529"},"manifest":{"name":"vscode-vibrancy-continued","displayName":"Vibrancy Continued","description":"Vibrancy Effect for Visual Studio Code","version":"1.1.48","publisher":"illixion","author":{"email":"illixion@illixion.com","name":"illixion","url":"https://illixion.com"},"engines":{"vscode":"^1.63.0"},"categories":["Other","Themes"],"repository":{"type":"git","url":"https://github.com/illixion/vscode-vibrancy-continued"},"bugs":{"url":"https://github.com/illixion/vscode-vibrancy-continued/issues"},"sponsor":{"url":"https://github.com/sponsors/illixion"},"qna":"https://github.com/illixion/vscode-vibrancy-continued/discussions/categories/q-a","preview":false,"icon":"images/logo.png","extensionKind":["ui"],"galleryBanner":{"color":"#42BFF5"},"activationEvents":["*"],"main":"./extension/index.js","contributes":{"commands":[{"command":"extension.installVibrancy","title":"Enable Vibrancy"},{"command":"extension.uninstallVibrancy","title":"Disable Vibrancy"},{"command":"extension.updateVibrancy","title":"Reload Vibrancy"}],"configuration":{"title":"Vibrancy Effect","properties":{"vscode_vibrancy.type":{"description":"Native method of Vibrancy Effect","type":"string","default":"auto","enum":["auto","acrylic","under-window","fullscreen-ui","titlebar","selection","menu","popover","sidebar","content","header","hud","sheet","tooltip","under-page","window","appearance-based","dark","ultra-dark","light","medium-light"],"enumDescriptions":["Automatically switch with system version","(Windows 10 only) Fluent design blur","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","(macOS only)","DEPRECATED in VS 1.86 (macOS only)","DEPRECATED in VS 1.86 (macOS only)","DEPRECATED in VS 1.86 (macOS only)","DEPRECATED in VS 1.86 (macOS only)","DEPRECATED in VS 1.86 (macOS only)"]},"vscode_vibrancy.opacity":{"description":"Opacity of Vibrancy Effect. -1 is theme default.","type":"number","default":"-1","minimum":"-1","maximum":"1"},"vscode_vibrancy.theme":{"description":"Select Vibrancy theme.","type":"string","default":"Default Dark","enum":["Default Dark","Dark (Only Subbar)","Default Light","Light (Only Subbar)","Tokyo Night Storm","Tokyo Night Storm (Outer)","Noir et blanc","Dark (Exclude Tab Line)","Solarized Dark+","Catppuccin Mocha","GitHub Dark Default","Custom theme (use imports)"]},"vscode_vibrancy.enableAutoTheme":{"description":"Enable automatic dark/light mode switching based on OS mode. Requires \"window.autoDetectColorScheme\" to also be enabled.","type":"boolean","default":false},"vscode_vibrancy.preferedDarkTheme":{"type":"string","default":"Default Dark","enum":["Default Dark","Dark (Only Subbar)","Default Light","Light (Only Subbar)","Tokyo Night Storm","Tokyo Night Storm (Outer)","Noir et blanc","Dark (Exclude Tab Line)","Solarized Dark+","Catppuccin Mocha","GitHub Dark Default","Custom theme (use imports)"]},"vscode_vibrancy.preferedLightTheme":{"type":"string","default":"Default Light","enum":["Default Light","Dark (Only Subbar)","Default Dark","Light (Only Subbar)","Tokyo Night Storm","Tokyo Night Storm (Outer)","Noir et blanc","Dark (Exclude Tab Line)","Solarized Dark+","Catppuccin Mocha","GitHub Dark Default","Custom theme (use imports)"]},"vscode_vibrancy.imports":{"description":"Import CSS/JS files, as file paths.","type":"array","default":["/path/to/file"]},"vscode_vibrancy.refreshInterval":{"description":"Refresh interval (in milliseconds) for making the background transparent after window resizing. Lower values make the update less visible at the cost of increased CPU utilization.","type":"number","default":"10"},"vscode_vibrancy.preventFlash":{"description":"Use an alternative method to prevent window flashing when resizing. Eliminates the need for a refresh interval, but may be less compatible in some cases.","type":"boolean","default":true}}}},"scripts":{"build-win10":"node-gyp rebuild","vscode:uninstall":"node ./extension/uninstallHook.js"},"dependencies":{"env-paths":"^3.0.0","fs-extra":"^10.1.0","mz":"^2.7.0"},"devDependencies":{"node-addon-api":"^5.0.0","node-gyp":"^9.1.0"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/illixion.vscode-vibrancy-continued-1.1.48-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Ixion","metadata":{"installedTimestamp":1746017239441,"pinned":true,"source":"gallery","id":"da69820f-32f2-49c6-915b-aa8e49455529","publisherId":"959bc563-e508-41c8-b638-4244ffb346cb","publisherDisplayName":"Ixion","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":72722157},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"mkhl.shfmt","uuid":"0c2ca002-79c2-4b79-95a5-61a5b188a4f7"},"manifest":{"name":"shfmt","displayName":"shfmt","description":"format shell programs","icon":"assets/icon.png","version":"1.3.1","publisher":"mkhl","license":"0BSD","repository":{"type":"git","url":"https://codeberg.org/mkhl/vscode-shfmt"},"engines":{"vscode":"^1.71.0"},"categories":["Formatters"],"activationEvents":["onLanguage:shellscript"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"workspaces can override the path to the executable"}},"contributes":{"configuration":{"title":"shfmt","properties":{"shfmt.executablePath":{"type":"string","default":"shfmt","scope":"machine-overridable","description":"Path to or name of the shfmt executable"},"shfmt.executableArgs":{"type":"array","items":{"type":"string"},"default":[],"scope":"machine-overridable","description":"Additional arguments to pass to the shfmt executable"},"shfmt.formatIgnored":{"type":"boolean","default":"false","scope":"resource","markdownDescription":"Format files marked `ignore` with [EditorConfig](https://editorconfig.org/)? (shfmt itself only ignores them when scanning directories.)"}}}},"extensionDependencies":["editorconfig.editorconfig"],"main":"./dist/extension.js","scripts":{"version":"bin/version $npm_package_version && git add CHANGELOG.md","vscode:prepublish":"npm run build -- --minify","clean":"rimraf ./out ./dist","build":"esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --platform=node --external:vscode","compile:source":"npm run build -- --sourcemap","compile:tests":"tsc","watch:source":"npm run compile:source -- --watch","watch:tests":"npm run compile:tests -- --watch","lint":"eslint --cache --cache-location ./node_modules/.cache/eslint/ ./src --ext ts","fix":"npm run lint -- --fix","pretest":"run-p compile:*","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/glob":"^8.0.0","@types/mocha":"^10.0.0","@types/node":"16.x","@types/sinon":"^10.0.0","@types/vscode":"1.71.x","@typescript-eslint/eslint-plugin":"^5.8.0","@typescript-eslint/parser":"^5.8.0","@vscode/test-electron":"^2.0.0","esbuild":"^0.16.0","eslint":"^8.5.0","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^4.0.0","glob":"^8.0.3","mocha":"^10.1.0","npm-run-all":"^4.1.5","prettier":"^2.5.1","rimraf":"^3.0.2","sinon":"^15.0.0","typescript":"^4.5.4"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/mkhl.shfmt-1.3.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"mkhl","metadata":{"installedTimestamp":1746023571851,"pinned":true,"source":"gallery","id":"0c2ca002-79c2-4b79-95a5-61a5b188a4f7","publisherId":"577d6c37-7054-4ca5-b4ce-9250409f3903","publisherDisplayName":"mkhl","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":32275},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"editorconfig.editorconfig","uuid":"f60a60a6-95ba-42d4-b41c-3d24c1b89588"},"manifest":{"name":"EditorConfig","displayName":"EditorConfig for VS Code","description":"EditorConfig Support for Visual Studio Code","publisher":"EditorConfig","version":"0.17.2","icon":"EditorConfig_icon.png","engines":{"vscode":"^1.90.0"},"author":"EditorConfig Team","license":"MIT","categories":["Other"],"keywords":["editor","config","multi-root ready"],"homepage":"https://github.com/editorconfig/editorconfig-vscode/blob/main/README.md","repository":{"type":"git","url":"https://github.com/editorconfig/editorconfig-vscode.git"},"bugs":{"url":"https://github.com/editorconfig/editorconfig-vscode/issues"},"galleryBanner":{"color":"#37699A","theme":"dark"},"activationEvents":["onStartupFinished"],"main":"./out/editorConfigMain.js","types":"./out/editorConfigMain.d.ts","contributes":{"commands":[{"command":"EditorConfig.generate","title":"Generate .editorconfig"}],"configuration":{"title":"EditorConfig","properties":{"editorconfig.generateAuto":{"type":"boolean","default":true,"description":"Automatically generates an .editorconfig file according to your current editor settings."},"editorconfig.template":{"type":"string","default":"default","description":"If generateAuto is false, this template path will be used for each newly-generated .editorconfig file."},"editorconfig.showMenuEntry":{"type":"boolean","default":true,"description":"Show the 'Generate .editorconfig' entry in the context menu of the Explorer view."}}},"menus":{"commandPalette":[{"command":"EditorConfig.generate","when":"explorerResourceIsFolder && config.editorconfig.showMenuEntry"}],"explorer/context":[{"command":"EditorConfig.generate","when":"explorerResourceIsFolder && config.editorconfig.showMenuEntry","group":"EditorConfig@1"}]},"languages":[{"id":"editorconfig","extensions":[".editorconfig"],"aliases":["EditorConfig","editorconfig"],"filenames":[],"configuration":"./editorconfig.language-configuration.json"}],"grammars":[{"language":"editorconfig","scopeName":"source.editorconfig","path":"./syntaxes/editorconfig.tmLanguage.json"}]},"capabilities":{"virtualWorkspaces":{"supported":false,"description":"The `editorconfig` dependency requires fs access for parsing the config to use."},"untrustedWorkspaces":{"supported":true}},"dependencies":{"editorconfig":"^2.0.1"},"devDependencies":{"@types/mocha":"^10.0.10","@types/node":"^20.17.19","@types/vscode":"^1.90.0","@typescript-eslint/eslint-plugin":"^8.25.0","@typescript-eslint/parser":"^8.25.0","@vscode/test-electron":"^2.4.1","eslint":"^8.0.0","eslint-config-prettier":"^10.0.2","eslint-config-xo":"^0.45.0","eslint-plugin-prettier":"^5.2.3","glob":"^11.0.1","mocha":"^11.1.0","prettier":"^3.5.2 ","rimraf":"^6.0.1","typescript":"~5.7.3","@vscode/vsce":"^3.2.2","vscode-test-utils":"^1.0.0"},"scripts":{"clean":"rimraf out","prebuild":"npm run clean","build":"tsc","postbuild":"cp -r src/test/suite/fixtures out/test/suite && cp -r src/test/untitled-suite/fixtures out/test/untitled-suite && cp src/DefaultTemplate.editorconfig out","lint":"eslint src/**/*.ts","pretest":"npm run lint && npm run build","watch":"tsc -watch","check-types":"tsc --noEmit","test":"node out/test/runTest.js","vscode:prepublish":"npm run build"},"eslintConfig":{"extends":["xo","prettier"],"env":{"jest":true,"node":true},"rules":{"prettier/prettier":"error"},"plugins":["prettier"]},"prettier":{"arrowParens":"avoid","proseWrap":"always","semi":false,"singleQuote":true,"trailingComma":"all"}},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/editorconfig.editorconfig-0.17.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"EditorConfig","metadata":{"installedTimestamp":1746023571856,"pinned":true,"source":"gallery","id":"f60a60a6-95ba-42d4-b41c-3d24c1b89588","publisherId":"1ed869e4-8588-4af4-a51e-9c1c86b034b9","publisherDisplayName":"EditorConfig","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":658598},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"bmewburn.vscode-intelephense-client","uuid":"ffda6552-0ad5-431b-a4fa-0905a7e4f3f0"},"manifest":{"name":"vscode-intelephense-client","displayName":"PHP Intelephense","description":"PHP code intelligence for Visual Studio Code","author":{"name":"Ben Mewburn","email":"ben@mewburn.id.au"},"license":"SEE LICENSE IN LICENSE.txt","sponsor":{"url":"https://intelephense.com"},"version":"1.14.4","publisher":"bmewburn","engines":{"vscode":"^1.82.0"},"categories":["Programming Languages","Linters","Formatters"],"preview":false,"activationEvents":["onLanguage:php"],"keywords":["php","intellisense","references","symbols","format","multi-root ready","language server","autocomplete","language","support"],"bugs":{"url":"https://github.com/bmewburn/vscode-intelephense/issues"},"homepage":"https://intelephense.com","repository":{"type":"git","url":"https://github.com/bmewburn/vscode-intelephense.git"},"icon":"images/elephpant.png","main":"./lib/extension","files":["/lib","/images","/CHANGELOG.md","/README.md","/LICENSE.txt","/package.json"],"extensionKind":["workspace"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"An alternate Node.js runtime or maximum memory value cannot be provided via workspace settings in an untrusted workspace.","restrictedConfigurations":["intelephense.runtime","intelephense.maxMemory"]},"virtualWorkspaces":{"supported":"limited","description":"Virtual Workspaces are not indexed. Language intelligence and symbol recognition is limited to open files."}},"contributes":{"languages":[{"id":"php"}],"commands":[{"command":"intelephense.index.workspace","title":"Index workspace","category":"Intelephense"},{"command":"intelephense.cancel.indexing","title":"Cancel indexing","category":"Intelephense"},{"command":"intelephense.enter.key","title":"Enter licence key","category":"Intelephense"}],"menus":{"commandPalette":[{"command":"intelephense.index.workspace","when":"resourceLangId == php"},{"command":"intelephense.cancel.indexing","when":"resourceLangId == php"},{"command":"intelephense.enter.key"}]},"configuration":{"type":"object","title":"intelephense","properties":{"intelephense.compatibility.correctForBaseClassStaticUnionTypes":{"type":"boolean","default":true,"description":"Resolves `BaseClass|static` union types to `static` instead of `BaseClass`.","scope":"window"},"intelephense.compatibility.correctForArrayAccessArrayAndTraversableArrayUnionTypes":{"type":"boolean","default":true,"description":"Resolves `ArrayAccess` and `Traversable` implementations that are unioned with a typed array to generic syntax. eg `ArrayAccessOrTraversable|ElementType[]` => `ArrayAccessOrTraversable<mixed, ElementType>`.","scope":"window"},"intelephense.compatibility.preferPsalmPhpstanPrefixedAnnotations":{"type":"boolean","default":false,"description":"Prefer `@psalm-` and `@phpstan-` prefixed `@return`, `@var`, `@param` tags when determining symbol types.","scope":"window"},"intelephense.files.maxSize":{"type":"number","default":1000000,"description":"Maximum file size in bytes.","scope":"window"},"intelephense.files.associations":{"type":"array","default":["*.php","*.phtml"],"description":"Configure glob patterns to make files available for language server features. Inherits from files.associations.","scope":"window"},"intelephense.files.exclude":{"type":"array","items":{"type":"string"},"default":["**/.git/**","**/.svn/**","**/.hg/**","**/CVS/**","**/.DS_Store/**","**/node_modules/**","**/bower_components/**","**/vendor/**/{Tests,tests}/**","**/.history/**","**/vendor/**/vendor/**"],"description":"Configure glob patterns to exclude certain files and folders from all language server features. Inherits from files.exclude.","scope":"resource"},"intelephense.stubs":{"type":"array","items":{"type":"string","enum":["aerospike","amqp","apache","apcu","ast","bcmath","blackfire","brotli","bz2","calendar","cassandra","com_dotnet","Core","couchbase","couchbase_v2","crypto","ctype","cubrid","curl","date","dba","decimal","dio","dom","ds","eio","elastic_apm","enchant","Ev","event","exif","expect","fann","FFI","ffmpeg","fileinfo","filter","fpm","frankenphp","ftp","gd","gearman","geoip","geos","gettext","gmagick","gmp","gnupg","grpc","hash","http","ibm_db2","iconv","igbinary","imagick","imap","inotify","interbase","intl","json","jsonpath","judy","ldap","leveldb","libevent","libsodium","libvirt-php","libxml","lua","LuaSandbox","lzf","mailparse","mapscript","mbstring","mcrypt","memcache","memcached","meminfo","meta","ming","mongo","mongodb","mosquitto-php","mqseries","msgpack","mssql","mysql","mysqli","mysql_xdevapi","ncurses","newrelic","oauth","oci8","odbc","openssl","opentelemetry","pam","parallel","Parle","pcntl","pcov","pcre","pdflib","PDO","pgsql","Phar","phpdbg","posix","pq","pspell","pthreads","radius","random","rar","rdkafka","readline","recode","redis","Reflection","regex","relay","rpminfo","rrd","SaxonC","session","shmop","simdjson","simple_kafka_client","SimpleXML","snappy","snmp","soap","sockets","sodium","solr","SPL","SplType","SQLite","sqlite3","sqlsrv","ssh2","standard","stats","stomp","suhosin","superglobals","svm","svn","swoole","sybase","sync","sysvmsg","sysvsem","sysvshm","tidy","tokenizer","uopz","uploadprogress","uuid","uv","v8js","wddx","win32service","winbinder","wincache","wordpress","xcache","xdebug","xdiff","xhprof","xlswriter","xml","xmlreader","xmlrpc","xmlwriter","xsl","xxtea","yaf","yaml","yar","zend","ZendCache","ZendDebugger","Zend OPcache","ZendUtils","zip","zlib","zmq","zookeeper","zstd"]},"default":["apache","bcmath","bz2","calendar","com_dotnet","Core","ctype","curl","date","dba","dom","enchant","exif","FFI","fileinfo","filter","fpm","ftp","gd","gettext","gmp","hash","iconv","imap","intl","json","ldap","libxml","mbstring","meta","mysqli","oci8","odbc","openssl","pcntl","pcre","PDO","pgsql","Phar","posix","pspell","random","readline","Reflection","session","shmop","SimpleXML","snmp","soap","sockets","sodium","SPL","sqlite3","standard","superglobals","sysvmsg","sysvsem","sysvshm","tidy","tokenizer","xml","xmlreader","xmlrpc","xmlwriter","xsl","Zend OPcache","zip","zlib"],"description":"Configure stub files for built in symbols and common extensions. The default setting includes PHP core and all bundled extensions.","scope":"window"},"intelephense.completion.insertUseDeclaration":{"type":"boolean","default":true,"description":"Use declarations will be automatically inserted for namespaced classes, traits, interfaces, functions, and constants.","scope":"window"},"intelephense.completion.fullyQualifyGlobalConstantsAndFunctions":{"type":"boolean","default":false,"description":"Global namespace constants and functions will be fully qualified (prefixed with a backslash).","scope":"window"},"intelephense.completion.triggerParameterHints":{"type":"boolean","default":true,"description":"Method and function completions will include parentheses and trigger parameter hints.","scope":"window"},"intelephense.completion.maxItems":{"type":"number","default":100,"description":"The maximum number of completion items returned per request.","scope":"window"},"intelephense.completion.suggestObjectOperatorStaticMethods":{"type":"boolean","default":true,"description":"PHP permits the calling of static methods using the object operator eg `$obj->myStaticMethod();`. If you would prefer not to have static methods suggested in this context then set this value to `false`. Defaults to `true`.","scope":"window"},"intelephense.format.enable":{"type":"boolean","default":true,"description":"Enables formatting.","scope":"window"},"intelephense.format.braces":{"type":"string","default":"per","enum":["per","allman","k&r"],"enumDescriptions":["PHP-FIG PER-CS style. A mix of Allman and K&R. https://www.php-fig.org/per/coding-style/","Allman. Opening brace on the next line.","K&R (1TBS). Opening brace on the same line."],"description":"Controls formatting style of braces","scope":"window"},"intelephense.environment.documentRoot":{"type":"string","description":"The directory of the entry point to the application (directory of index.php). Can be absolute or relative to the workspace folder. Used for resolving script inclusion and path suggestions.","scope":"resource"},"intelephense.environment.includePaths":{"type":"array","items":{"type":"string"},"description":"The include paths (as individual path items) as defined in the include_path ini setting or paths to external libraries. Can be absolute or relative to the workspace folder. Used for resolving script inclusion and/or adding external symbols to folder.","scope":"resource"},"intelephense.environment.phpVersion":{"type":"string","default":"8.4.0","description":"A semver compatible string that represents the target PHP version. Used for providing version appropriate suggestions and diagnostics. PHP 5.3.0 and greater supported.","scope":"window"},"intelephense.environment.shortOpenTag":{"type":"boolean","default":true,"description":"When enabled '<?' will be parsed as a PHP open tag. Defaults to true.","scope":"window"},"intelephense.diagnostics.enable":{"type":"boolean","default":true,"description":"Enables diagnostics.","scope":"window"},"intelephense.diagnostics.run":{"type":"string","default":"onType","enum":["onType","onSave"],"enumDescriptions":["Diagnostics will run as changes are made to the document.","Diagnostics will run when the document is saved."],"description":"Controls when diagnostics are run.","scope":"window"},"intelephense.diagnostics.embeddedLanguages":{"type":"boolean","default":true,"description":"Enables diagnostics in embedded languages.","scope":"window"},"intelephense.diagnostics.undefinedSymbols":{"type":"boolean","default":true,"description":"DEPRECATED. Use the setting for each symbol category.","scope":"window"},"intelephense.diagnostics.undefinedVariables":{"type":"boolean","default":true,"description":"Enables undefined variable diagnostics.","scope":"window"},"intelephense.diagnostics.undefinedTypes":{"type":"boolean","default":true,"description":"Enables undefined class, interface and trait diagnostics.","scope":"window"},"intelephense.diagnostics.undefinedFunctions":{"type":"boolean","default":true,"description":"Enables undefined function diagnostics.","scope":"window"},"intelephense.diagnostics.undefinedConstants":{"type":"boolean","default":true,"description":"Enables undefined constant diagnostics.","scope":"window"},"intelephense.diagnostics.undefinedClassConstants":{"type":"boolean","default":true,"description":"Enables undefined class constant diagnostics.","scope":"window"},"intelephense.diagnostics.undefinedMethods":{"type":"boolean","default":true,"description":"Enables undefined method diagnostics.","scope":"window"},"intelephense.diagnostics.undefinedProperties":{"type":"boolean","default":true,"description":"Enables undefined property diagnostics.","scope":"window"},"intelephense.diagnostics.unusedSymbols":{"type":"boolean","default":true,"description":"Enables unused variable, private member, and import diagnostics.","scope":"window"},"intelephense.diagnostics.unexpectedTokens":{"type":"boolean","default":true,"description":"Enables unexpected token diagnostics.","scope":"window"},"intelephense.diagnostics.duplicateSymbols":{"type":"boolean","default":true,"description":"Enables duplicate symbol diagnostics.","scope":"window"},"intelephense.diagnostics.argumentCount":{"type":"boolean","default":true,"description":"Enables argument count diagnostics.","scope":"window"},"intelephense.diagnostics.typeErrors":{"type":"boolean","default":true,"description":"Enables diagnostics on type compatibility of arguments, property assignments, and return statements where types have been declared.","scope":"window"},"intelephense.diagnostics.deprecated":{"type":"boolean","default":true,"description":"Enables deprecated diagnostics.","scope":"window"},"intelephense.diagnostics.languageConstraints":{"type":"boolean","default":true,"description":"Enables reporting of various language constraint errors.","scope":"window"},"intelephense.diagnostics.implementationErrors":{"type":"boolean","default":true,"description":"Enables reporting of problems associated with method and class implementations. For example, unimplemented methods or method signature incompatibilities.","scope":"window"},"intelephense.diagnostics.relaxedTypeCheck":{"type":"boolean","default":true,"description":"This setting makes type checking less thorough by allowing contravariant (wider) types to also satisfy a type constraint. This is useful for projects that may have incomplete or innacurate typings. Set to `false` for more thorough type checks. When this setting is `true`, the `noMixedTypeCheck` setting is ignored.","scope":"window"},"intelephense.diagnostics.noMixedTypeCheck":{"type":"boolean","default":true,"description":"This setting turns off type checking for the `mixed` type. This is useful for projects that may have incomplete or innacurate typings. Set to `false` to make type checking more thorough by not allowing `mixed` to satisy any type constraint. This setting has no effect when `relaxedTypeCheck` is `true`.","scope":"window"},"intelephense.diagnostics.memberAccess":{"type":"boolean","default":true,"description":"Enables reporting of errors associated with type member access.","scope":"window"},"intelephense.runtime":{"type":"string","description":"Path to a Node.js executable. Use this if you wish to use a different version of Node.js. Defaults to Node.js shipped with VSCode.","scope":"machine"},"intelephense.maxMemory":{"type":"number","description":"Maximum memory (in MB) that the server should use. On some systems this may only have effect when runtime has been set. Minimum 256.","scope":"window"},"intelephense.licenceKey":{"type":"string","description":"DEPRECATED. Don't use this. Go to command palette and search for enter licence key.","scope":"application"},"intelephense.telemetry.enabled":{"type":["boolean","null"],"description":"Anonymous usage and crash data will be sent to Azure Application Insights. Inherits from telemetry.enableTelemetry.","scope":"window","default":null},"intelephense.rename.exclude":{"type":"array","items":{"type":"string"},"default":["**/vendor/**"],"description":"Glob patterns matching files and folders that should be excluded when renaming symbols. Rename operation will fail if the symbol definition is found in the excluded files/folders.","scope":"resource"},"intelephense.rename.namespaceMode":{"type":"string","enum":["single","all"],"default":"single","enumDescriptions":["Only symbols defined in the current file are affected. For example, this makes a rename of a namespace the equivalent of a single move class operation.","All symbols that share this namespace, not necessarily defined in the current file will be affected. For example it would move all classes that share this namespace to the new namespace."],"description":"Controls the scope of a namespace rename operation.","scope":"window"},"intelephense.references.exclude":{"type":"array","items":{"type":"string"},"default":["**/vendor/**"],"description":"Glob patterns matching files and folders that should be excluded from references search.","scope":"resource"},"intelephense.phpdoc.returnVoid":{"type":"boolean","default":true,"description":"Adds `@return void` to auto generated phpdoc for definitions that do not return a value.","scope":"window"},"intelephense.phpdoc.textFormat":{"type":"string","enum":["snippet","text"],"default":"snippet","enumDescriptions":["Auto generated phpdoc is returned in snippet format. Templates are partially resolved by evaluating phpdoc specific variables only.","Auto generated phpdoc is returned as plain text. Templates are resolved completely by the server."],"scope":"window"},"intelephense.phpdoc.classTemplate":{"type":"object","properties":{"summary":{"type":"string","description":"A snippet string representing a phpdoc summary."},"description":{"type":"string","description":"A snippet string representing a phpdoc description."},"tags":{"type":"array","items":{"type":"string"},"description":"An array of snippet strings representing phpdoc tags."}},"default":{"summary":"$1","tags":["@package ${1:$SYMBOL_NAMESPACE}"]},"description":"An object that describes the format of generated class/interface/trait phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.","scope":"window"},"intelephense.phpdoc.propertyTemplate":{"type":"object","properties":{"summary":{"type":"string","description":"A snippet string representing a phpdoc summary."},"description":{"type":"string","description":"A snippet string representing a phpdoc description."},"tags":{"type":"array","items":{"type":"string"},"description":"An array of snippet strings representing phpdoc tags."}},"default":{"summary":"$1","tags":["@var ${1:$SYMBOL_TYPE}"]},"description":"An object that describes the format of generated property phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.","scope":"window"},"intelephense.phpdoc.functionTemplate":{"type":"object","properties":{"summary":{"type":"string","description":"A snippet string representing a phpdoc summary."},"description":{"type":"string","description":"A snippet string representing a phpdoc description."},"tags":{"type":"array","items":{"type":"string"},"description":"An array of snippet strings representing phpdoc tags."}},"default":{"summary":"$1","tags":["@param ${1:$SYMBOL_TYPE} $SYMBOL_NAME $2","@return ${1:$SYMBOL_TYPE} $2","@throws ${1:$SYMBOL_TYPE} $2"]},"description":"An object that describes the format of generated function/method phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.","scope":"window"},"intelephense.phpdoc.useFullyQualifiedNames":{"type":"boolean","default":false,"description":"Fully qualified names will be used for types when true. When false short type names will be used and imported where appropriate. Overrides intelephense.completion.insertUseDeclaration.","scope":"window"},"intelephense.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the intelephense language server.","scope":"window"},"intelephense.codeLens.references.enable":{"type":"boolean","default":false,"description":"Enable a code lens that shows a reference count and command to peek locations.","scope":"window"},"intelephense.codeLens.implementations.enable":{"type":"boolean","default":false,"description":"Enable a code lens that shows an abstract and interface implementations count and command to peek locations.","scope":"window"},"intelephense.codeLens.usages.enable":{"type":"boolean","default":false,"description":"Enable a code lens that shows a trait usages count and command to peek locations.","scope":"window"},"intelephense.codeLens.overrides.enable":{"type":"boolean","default":false,"description":"Enable a code lens that shows method override count and command to peek locations.","scope":"window"},"intelephense.codeLens.parent.enable":{"type":"boolean","default":false,"description":"Enable a code lens that indicates if a method has a parent implementation and command to peek location.","scope":"window"}}}},"scripts":{"vscode:prepublish":"npm run production","compile":"rimraf out/* && tsc -p ./","production":"rimraf lib && webpack --config webpack.config.js"},"devDependencies":{"@types/fs-extra":"~11.0.4","@types/mocha":"~10.0.2","@types/node":"20.x","@types/semver":"~7.5.8","@types/vscode":"~1.82.0","@vscode/test-electron":"^2.4.0","rimraf":"~5.0.7","ts-loader":"~9.5.1","typescript":"~5.4.5","webpack":"~5.92.1","webpack-cli":"~5.1.4"},"dependencies":{"fs-extra":"~11.2.0","intelephense":"1.14.4","semver":"~7.6.2","vscode-languageclient":"9.0.1"},"private":true},"location":{"$mid":1,"path":"/Users/x0r/.vscode-oss/extensions/bmewburn.vscode-intelephense-client-1.14.4-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"bmewburn","metadata":{"installedTimestamp":1746023727642,"pinned":true,"source":"gallery","id":"ffda6552-0ad5-431b-a4fa-0905a7e4f3f0","publisherId":"3209eeb0-2b1a-4484-8c83-2627b29db88e","publisherDisplayName":"bmewburn","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":25058502},"isValid":true,"validations":[],"preRelease":false}]}
{
//! ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

//^     a88888b.              dP         888888ba                           dP
//^    d8'   `88              88         88    `8b                          88
//*    88       .d8888b..d888b88.d8888b.a88aaaa8P'.d8888b..d8888b..d8888b.d8888P
//,    88       88'  `8888'  `8888ooood8 88   `8b.88'  `8888'  `88Y8ooooo.  88
//!    Y8.   .8888.  .8888.  .8888.  ... 88    .8888.  .8888.  .88      88  88
//?     Y88888P'`88888P'`88888P8`88888P' 88888888P`88888P'`88888P'`88888P'  dP
//?                              Copyright (c) 2025 zx0r. All rights reserved.

//*     Author:        zx0r
//*     License:       MIT License
//*     Contact Info:  https:#github.com/zx0r
//*     Version: 1.0
//*     Date: 2025-01-20
//*     Description:  VSCodium: Optimized for Productivity, Privacy, and Speed

//?                                               “Stay Hungry, Stay Foolish.”
//?                                                        - Steve Job  Apple

//! ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

   // "telemetry.enableTelemetry"                     : false,    // Disable all telemetry.VSCode -> `true`
   // "telemetry.enableCrashReporter"                 : false,      // Disable crash reporting. VSCode -> `true`
    "telemetry.telemetryLevel"                      : "off",        // Completely disable telemetry
    "telemetry.enableErrorTelemetry"                : false,        // Disable error telemetry
    "aws.telemetry"                                 : false,        // Disable AWS telemetry
    "azure.telemetry.enabled"                       : false,        // Disable Azure telemetry
    "redhat.telemetry.enabled"                      : false,        // Disable Red Hat telemetry
    "docker.telemetry.enabled"                      : false,        // Disable Docker telemetry
    "git.autofetch"                                 : false,        // Disable automatic fetching of Git repositories
    "git.enableTelemetry"                           : false,        // Disable Git telemetry
    "github.telemetry.enabled"                      : false,        // Disable GitHub telemetry
    "git.autoRepositoryDetection"                   : false,        // Disable automatic fetching of remote repositories
    "gitlens.advanced.telemetry.enabled"            : false,        // Disable GitLens telemetry
    "github.copilot.advanced.telemetry.enabled"     : true,        // Disable Copilot telemetry
    "python.telemetry.enabled"                      : false,        // Disable Python telemetry
    "python.analysis.logLevel"                      : "Error",      // Disable Python language server telemetry
    "typescript.tsserver.log"                       : "off",        // Disable TypeScript server telemetry
    "typescript.tsserver.enableTelemetry"           : false,        // Disable TypeScript server telemetry
    "typescript.suggestionActions.enabled"          : false,        // Disable TypeScript suggestions
    "javascript.suggestionActions.enabled"          : false,        // Disable JavaScript suggestions
    "javascript.updateImportsOnFileMove.enabled"    : "never",      // Disable automatic import updates
    "markdown.preview.autoShowPreviewToSide"        : false,        // Disable live preview for Markdown
    "vsintellicode.sql.completionsEnabled"          : false,        // Disable IntelliCode for SQL
    "vsintellicode.java.completionsEnabled"         : false,        // Disable IntelliCode for Java
    "vsintellicode.python.completionsEnabled"       : false,        // Disable IntelliCode for Python
    "vsintellicode.features.python.deepLearning"    : "disabled",   // Disable IntelliCode telemetry
    "vsintellicode.features.apiExamples"            : "default",    // Enable API examples in IntelliCode completions (default behavior)
    "vsintellicode.features.apiExamplests"          : "default",    // Enable API examples for TypeScript in IntelliCode completions (default behavior)
    "vsintellicode.modelDownloadPath"               : null,         // Specify a custom path for IntelliCode model downloads (null uses default location)
    "vsintellicode.typescript.completionsEnabled"   : true,         // Enable IntelliCode completions for TypeScript
    "vsintellicode.modify.editor.suggestSelection"  : "enabled",    // Allow IntelliCode to modify editor suggestion behavior
    "dotnetAcquisitionExtension.enableTelemetry"    : false,        // Disable telemetry for the .NET acquisition extension
    "dotnetAcquisitionExtension.existingDotnetPath" : [],           // Specify custom paths for existing .NET installations (empty array uses default paths)
    "dotnetAcquisitionExtension.installTimeoutValue": 120,          // Set timeout (in seconds) for .NET installation
    "update.mode"                                   : "none",       // Disable automatic updates for VSCode
    "update.showReleaseNotes"                       : false,        // Disable showing release notes after an update
    "update.enableWindowsBackgroundUpdates"         : false,        // Disable background updates on Windows

    // ?═════ Extensions Settings

    "extensions.webWorker"            : false,   // Disable running extensions in a web worker (improves performance in some cases)
    "extensions.autoUpdate"           : false,   // Disable auto-updating extensions (optional, for manual control)
    "extensions.autoCheckUpdates"     : false,   // Disable auto-checking for extension updates (optional, for manual control)
    "extensions.ignoreRecommendations": false,    // Ignore all extension recommendations (optional, for privacy)

    // ?═════ Experimental Settings

    "C_Cpp.experimentalFeatures"                                 : "Disabled",                 // Disable experimental features for C/C++ extension
    "window.experimental.useSandbox"                             : false,                      // Disable shared process (reduces external connections)
    "experimental.settingsProfiles.enabled"                      : false,                      // Disable experimental settings profiles
    "notebook.experimental.useMarkdownRenderer"                  : false,                      // Disable experimental Markdown renderer for notebooks
    "bookmarks.experimental.enableNewStickyEngine"               : false,                      // Disable experimental sticky engine for bookmarks
    "workbench.experimental.editor.dragAndDropIntoEditor.enabled": false,                      // Disable experimental drag-and-drop into editor
    "workbench.enableRemoteHelp"                                 : false,                      // Disable fetching remote help content
    "workbench.enableExperiments"                                : false,                      // Disable experimental features in the workbench
    "workbench.settings.enableNaturalLanguageSearch"             : false,                      // Disable natural language search in settings
    "workbench.settings.enableNaturalLanguarosoft)geSearch"      : false,                      // Disable natural language search (prevents sending queries to Microsoft)
    "js/ts.implicitProjectConfig.experimentalDecorators"         : false,                      // Disable experimental decorators in JavaScript/TypeScript projects
    "typescript.tsserver.experimental.enableProjectDiagnostics"  : false,                      // Disable experimental project diagnostics for TypeScript
    "go.languageServerExperimentalFeatures"                      : { "diagnostics": false },   // Disable experimental diagnostics for Go language server
    "explorer.experimental.fileNesting.enabled"                  : false,                      // Disable experimental file nesting in the explorer
    "explorer.experimental.fileNesting.expand"                   : false,                      // Disable auto-expanding nested files in the explorer
    "explorer.experimental.fileNesting.operateAsGroup"           : false,                      // Disable operating on nested files as a group
    "explorer.experimental.fileNesting.patterns"                 : {
    "*.js"         : "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx"        : "${capture}.js",
    "*.ts"         : "${capture}.js",
    "*.tsx"        : "${capture}.ts",
    "package.json" : "package-lock.json, yarn.lock",
    "tsconfig.json": "tsconfig.*.json"
    },

    // ?═════ Workspace Trust Settings
    "security.workspace.trust.emptyWindow"   : false,              // Do not trust empty windows
    "security.workspace.trust.enabled"       : true,               // Enable workspace trust
    "security.workspace.trust.banner"        : "untilDismissed",   // Show trust banner until dismissed
    "security.workspace.trust.untrustedFiles": "open",             // Prompt when opening untrusted files
    "security.workspace.trust.startupPrompt" : "always",           // Always show trust prompt on startup

    // Accessibility Settings
    "accessibility.verbosity"                      : false,                 // Disable accessibility verbosity
    "accessibility.signalOptions.volume"           : 50,
    "accessibility.signals.lineHasError"           : { "sound": "auto" },
    "accessibility.signals.lineHasWarning"         : { "sound": "off" },
    "accessibility.signals.lineHasFoldedArea"      : { "sound": "auto" },
    "accessibility.signals.lineHasBreakpoint"      : { "sound": "auto" },
    "accessibility.signals.lineHasInlineSuggestion": { "sound": "auto" },
    "accessibility.signals.onDebugBreak"           : { "sound": "auto" },
    "accessibility.signals.noInlayHints": {
        "sound": "auto"
    }, // Keep breadcrumbs enabled (set to false if freezes persist)
    "breadcrumbs.filePath"          : "on",         // Show file path in breadcrumbs
    "breadcrumbs.icons"             : false,        // Disable icons to reduce rendering load
    "breadcrumbs.showArrays"        : false,        // Disable arrays (rarely needed)
    "breadcrumbs.showBooleans"      : false,        // Disable booleans (rarely needed)
    "breadcrumbs.showClasses"       : true,         // Keep classes enabled (useful for OOP)
    "breadcrumbs.showConstants"     : false,        // Disable constants (optional)
    "breadcrumbs.showConstructors"  : true,         // Keep constructors enabled (useful for OOP)
    "breadcrumbs.showEnumMembers"   : false,        // Disable enum members (optional)
    "breadcrumbs.showEnums"         : true,         // Keep enums enabled (useful for TypeScript)
    "breadcrumbs.showEvents"        : false,        // Disable events (optional)
    "breadcrumbs.showFields"        : true,         // Keep fields enabled (useful for OOP)
    "breadcrumbs.showFiles"         : true,         // Keep files enabled (essential for navigation)
    "breadcrumbs.showFunctions"     : true,         // Keep functions enabled (essential for navigation)
    "breadcrumbs.showInterfaces"    : true,         // Keep interfaces enabled (useful for TypeScript)
    "breadcrumbs.showKeys"          : false,        // Disable keys (optional)
    "breadcrumbs.showMethods"       : true,         // Keep methods enabled (useful for OOP)
    "breadcrumbs.showModules"       : true,         // Keep modules enabled (useful for modular code)
    "breadcrumbs.showNamespaces"    : true,         // Keep namespaces enabled (useful for TypeScript)
    "breadcrumbs.showNull"          : false,        // Disable null (optional)
    "breadcrumbs.showNumbers"       : false,        // Disable numbers (optional)
    "breadcrumbs.showObjects"       : false,        // Disable objects (optional)
    "breadcrumbs.showOperators"     : false,        // Disable operators (optional)
    "breadcrumbs.showPackages"      : true,         // Keep packages enabled (useful for modular code)
    "breadcrumbs.showProperties"    : true,         // Keep properties enabled (useful for OOP)
    "breadcrumbs.showStrings"       : false,        // Disable strings (optional)
    "breadcrumbs.showStructs"       : true,         // Keep structs enabled (useful for languages like Go)
    "breadcrumbs.showTypeParameters": true,         // Keep type parameters enabled (useful for TypeScript)
    "breadcrumbs.showVariables"     : false,        // Disable variables (optional)
    "breadcrumbs.symbolPath"        : "on",         // Show symbol path in breadcrumbs
    "breadcrumbs.symbolSortOrder"   : "position",   // Sort symbols by position

    // !═════ CSpell Settings ══════════════════════════════════════════════════

    "cSpell.enabled"                  : false,   // Disable spell checking (optional, to avoid external dictionaries)
    "cSpell.checkStrings"             : false,   // Enable or disable checking for spelling in strings
    "cSpell.checkComments"            : false,   // Enable or disable checking for spelling in comments
    "cSpell.checkFileNames"           : false,   // Enable or disable checking for spelling in filenames
    "cSpell.checkWorkspaceFolderNames": false,   // Enable or disable checking for spelling in workspace folder names
    "cSpell.showSuggestionsInEditor"  : false,   // Show spell-checker suggestions in the Problems panel
    "cSpell.maxNumberOfProblems"      : 100,     // Set the maximum number of spelling issues to report per file
    "cSpell.spellCheckDelay"          : 50,      // Enable spell checking in comments and strings
    "cSpell.checkHTMLAttributes"      : false,   // Enable spell checking in HTML attributes
    "cSpell.checkHTMLTextContent"     : false,   // Enable spell checking in HTML text content
    "cSpell.language"                 : "en",    // Set the language for spell checking
    "cSpell.dictionaries"             : [
    "en_US", // US English
    "en_GB", // British English
    "companies", // Common company names
    "softwareTerms", // Common software terms
    "typescript", // TypeScript-specific terms
    "node", // Node.js-specific terms
    "npm" // NPM-specific terms
    ],
    "#cSpell.enableFiletypes": [
    "markdown", // Spell-check Markdown files
    "plaintext", // Spell-check plain text files
    "python", // Spell-check Python files
    "javascript", // Spell-check JavaScript files
    "typescript", // Spell-check TypeScript files
    "html", // Spell-check HTML files
    "css", // Spell-check CSS files
    "yaml", // Spell-check YAML files
    "json" // Spell-check JSON files (optional)
    ],
    "#cSpell.enabledLanguageIds": [
    "markdown", // Spell-check Markdown files
    "plaintext", // Spell-check plain text files
    "python", // Spell-check Python files
    "javascript", // Spell-check JavaScript files
    "typescript", // Spell-check TypeScript files
    "html", // Spell-check HTML files
    "css", // Spell-check CSS files
    "yaml", // Spell-check YAML files
    "json" // Spell-check JSON files (optional)
    ],
    "cSpell.ignoreRegExpList"  : ["/[A-Z0-9_]+/g"],   // Ignore words that are in all uppercase
    "cSpell.allowCompoundWords": true,                // Ignore words that are in camelCase or PascalCase
    "cSpell.ignorePaths"       : [
    "**/node_modules/**", // Ignore node_modules
    "**/dist/**", // Ignore build/dist folders
    "**/build", // Ignore build/dist folders
    "**/.git/**", // Ignore .git folder
    "**/*.min.js", // Ignore minified JS files
    "**/*.json", // Ignore JSON files (optional)
    "**/*.sh",
    "**/*.bash",
    "**/*.zsh"
    ],
    "cSpell.userWords": [
    "VSCode",
    "VSCodium",
    "cSpell",
    "Wilfriedago"
    ],
    "cSpell.words": [
    "awk",
    "sed",
    "grep",
    "bash",
    "sh",
    "dirname",
    "basename",
    "echo",
    "export",
    "source",
    "ifconfig",
    "curl",
    "wget",
    "rsync",
    "scp",
    "ssh",
    "tar",
    "gzip",
    "chmod",
    "chown",
    "sudo",
    "env",
    "PATH",
    "HOME",
    "USER",
    "PWD"
    ],
    "cSpell.ignoreWords": [
    "**/*.sh",
    "webpack",
    "babel",
    "eslint",
    "prettier",
    "github",
    "npm",
    "yarn",
    "redux",
    "axios",
    "async",
    "await",
    "localhost",
    "camelCase",
    "PascalCase",
    "kebab-case",
    "snake_case",
    "uuid",
    "API",
    "APIs",
    "GraphQL",
    "TypeScript",
    "JavaScript",
    "NodeJS",
    "JSON",
    "YAML",
    "CSS",
    "HTML",
    "SVG",
    "CLI",
    "UI",
    "UX",
    "SEO",
    "SaaS",
    "S3",
    "EC2",
    "AWS",
    "GCP",
    "Azure",
    "Firebase",
    "Heroku",
    "Netlify",
    "Vercel",
    "NextJS",
    "NuxtJS",
    "VueJS",
    "ReactJS",
    "AngularJS",
    "Svelte",
    "TailwindCSS",
    "Bootstrap",
    "MaterialUI",
    "ChakraUI",
    "Storybook",
    "Jest",
    "Cypress",
    "Mocha",
    "Chai",
    "WebSocket",
    "RESTful",
    "GraphiQL",
    "PostgreSQL",
    "MongoDB",
    "Redis",
    "Memcached",
    "Kubernetes",
    "Docker",
    "Terraform",
    "Ansible",
    "CI/CD",
    "GitHub",
    "GitLab",
    "Bitbucket",
    "Jira",
    "Slack",
    "Zoom",
    "Discord",
    "Trello",
    "Notion",
    "Figma",
    "Sketch",
    "Photoshop",
    "Illustrator",
    "InDesign",
    "XD",
    "Zeplin",
    "InVision",
    "Lighthouse",
    "WebVitals",
    "Linting",
    "Prettier",
    "ESLint",
    "TSLint",
    "Stylelint",
    "Husky",
    "Lint-staged",
    "Commitlint",
    "Semver",
    "Changelog",
    "Roadmap",
    "Backlog",
    "Sprint",
    "Scrum",
    "Kanban",
    "Agile",
    "Waterfall",
    "DevOps",
    "SRE",
    "IaC",
    "OAuth",
    "JWT",
    "OpenID",
    "SAML",
    "LDAP",
    "SSO",
    "2FA",
    "MFA",
    "GDPR",
    "HIPAA",
    "PCI",
    "SOC2",
    "ISO27001",
    "CORS",
    "CSRF",
    "XSS",
    "SQLi",
    "DoS",
    "DDoS",
    "MITM",
    "OWASP",
    "NIST",
    "CVE",
    "CVSS",
    "Zero-day",
    "Phishing",
    "Ransomware",
    "Malware",
    "Spyware",
    "Adware",
    "Trojan",
    "Worm",
    "Botnet",
    "Firewall",
    "VPN",
    "IDS",
    "IPS",
    "SIEM",
    "DLP",
    "EDR",
    "XDR",
    "SOAR",
    "IAM",
    "RBAC",
    "ABAC",
    "PAM",
    "PKI",
    "SSL",
    "TLS",
    "HTTPS",
    "HTTP/2",
    "HTTP/3",
    "QUIC",
    "gRPC",
    "Protobuf",
    "GraphQL",
    "REST",
    "SOAP",
    "WebRTC",
    "WebAssembly",
    "WASM",
    "PWA",
    "SPA",
    "MPA",
    "SSR",
    "CSR",
    "ISR",
    "DSG",
    "SSG",
    "CMS",
    "Headless",
    "Jamstack",
    "Serverless",
    "Microservices",
    "Monorepo",
    "Polyrepo",
    "Monolith",
    "Event-driven",
    "Message-driven",
    "Streaming",
    "Batch",
    "ETL",
    "ELT",
    "Datawarehouse",
    "Data-lake",
    "Data-mart",
    "OLAP",
    "OLTP",
    "NoSQL",
    "NewSQL",
    "Time-series",
    "GraphDB",
    "VectorDB",
    "Blockchain",
    "Smart-contract",
    "NFT",
    "DeFi",
    "DAO",
    "Web3",
    "Metaverse",
    "AR",
    "VR",
    "XR",
    "IoT",
    "IIoT",
    "Edge-computing",
    "Fog-computing",
    "Quantum-computing",
    "AI",
    "ML",
    "DL",
    "NLP",
    "CV",
    "GAN",
    "RL",
    "AutoML",
    "Big-data",
    "Data-science",
    "Data-engineering",
    "Data-analytics",
    "BI",
    "ETL",
    "ELT",
    "Dataops",
    "MLOps",
    "AIOps",
    "DevSecOps",
    "FinOps",
    "GreenIT",
    "SustainableIT",
    "Carbon-footprint",
    "Circular-economy",
    "Green-cloud",
    "Green-software",
    "Green-hardware",
    "Green-data-center",
    "Green-networking",
    "Green-storage",
    "Green-computing",
    "Green-algorithms",
    "Green-AI",
    "Green-ML",
    "Green-blockchain",
    "Green-crypto",
    "Green-mining",
    "Green-NFT",
    "Green-DeFi",
    "Green-DAO",
    "Green-Web3",
    "Green-metaverse",
    "Green-AR",
    "Green-VR",
    "Green-XR",
    "Green-IoT",
    "Green-IIoT",
    "Green-edge-computing",
    "Green-fog-computing",
    "Green-quantum-computing"
    ],

    // !═══ Emmet Settings ═══════════════════════════════════════════════════════

    "emmet.extensionsPath"             : [],
    "emmet.optimizeStylesheetParsing"  : true,
    "emmet.triggerExpansionOnTab"      : true,       // Enable Tab key to expand Emmet abbreviations
    "emmet.showAbbreviationSuggestions": true,       // Show Emmet abbreviation suggestions
    "emmet.showExpandedAbbreviation"   : "always",   // Options: "always", "never", "inMarkupAndStylesheet"
    "emmet.showSuggestionsAsSnippets"  : true,
    "emmet.useInlineCompletions"       : true,
    "emmet.includeLanguages"           : {
    "twig"                  : "html",
    "njk"                   : "html",
    "blade"                 : "html",
    "javascript"            : "javascriptreact",
    "jsx-sublime-babel-tags": "javascriptreact",
    "tsx"                   : "typescriptreact",
    "postcss"               : "css"
    },
    "emmet.syntaxProfiles": {
    "html": {
    "tag_case"        : "lower",    // Use lowercase for HTML tags
    "attr_quotes"     : "double",   // Use double quotes for HTML attributes
    "self_closing_tag": true        // Use self-closing tags for void elements (e.g., <br />)
    },
    "css": {
    "keywords_case": "lower",   // Use lowercase for CSS keywords
    "unitless_zero": true       // Omit units for zero values (e.g., `0` instead of `0px`)
    }
    },
    "emmet.variables": {
    "lang"   : "en",    // Default language for HTML `lang` attribute
    "charset": "UTF-8"  // Default charset for HTML `<meta>` tag
    },
    "emmet.preferences": {
    "css.valueSeparator"     : ": ",                          // Use `: ` as the separator for CSS properties
    "css.propertyEnd"        : ";",                           // Use `;` to end CSS properties
    "filter.commentAfter"    : "\n<!-- /[#ID][.CLASS] -->",   // Add comments after HTML elements
    "output.selfClosingStyle": "xhtml"                        // Use XHTML-style self-closing tags (e.g., <br />)
    },
    "emmet.excludeLanguages": ["markdown"],   // Disable Emmet in Markdown files

    // !═════ Debug Settings ═══════════════════════════════════════════════════

    "debug.allowBreakpointsEverywhere"       : false,
    "debug.confirmOnExit"                    : "never",
    "debug.console.acceptSuggestionOnEnter"  : "off",
    "debug.console.closeOnEnd"               : false,
    "debug.console.collapseIdenticalLines"   : true,
    "debug.console.fontFamily"               : "default",
    "debug.console.fontSize"                 : 14,
    "debug.console.historySuggestions"       : true,
    "debug.console.lineHeight"               : 0,
    "debug.console.wordWrap"                 : true,
    "debug.disassemblyView.showSourceCode"   : true,
    "debug.focusWindowOnBreak"               : true,
    "debug.inlineValues"                     : "auto",
    "debug.javascript.autoAttachFilter"      : "disabled",
    "debug.javascript.autoAttachSmartPattern": [
    "${workspaceFolder}/**",
    "!**/node_modules/**",
    "**/$KNOWN_TOOLS$/**"
    ],
    "debug.javascript.automaticallyTunnelRemoteServer": true,
    "debug.javascript.breakOnConditionalError"        : false,
    "debug.javascript.codelens.npmScripts"            : "top",
    "debug.javascript.debugByLinkOptions"             : "on",
    "debug.javascript.defaultRuntimeExecutable"       : { "pwa-node": "node" },
    "debug.javascript.pickAndAttachOptions"           : {},
    "debug.javascript.resourceRequestOptions"         : {},
    "debug.javascript.suggestPrettyPrinting"          : true,
    "debug.javascript.terminalOptions"                : {},
    "debug.javascript.unmapMissingSources"            : false,
    "debug.onTaskErrors"                              : "prompt",
    "debug.openDebug"                                 : "openOnDebugBreak",
    "debug.openExplorerOnEnd"                         : false,
    "debug.saveBeforeStart"                           : "allEditorsInActiveGroup",
    "debug.showBreakpointsInOverviewRuler"            : false,
    "debug.showInStatusBar"                           : "onFirstSessionStart",
    "debug.showInlineBreakpointCandidates"            : true,
    "debug.showSubSessionsInToolBar"                  : false,
    "debug.terminal.clearBeforeReusing"               : false,
    "debug.toolBarLocation"                           : "docked",                    // Dock the debug toolbar
    "debug.internalConsoleOptions"                    : "neverOpen",                 // Disable internal debug console
    "launch"                                          : {
    "compounds"     : [],
    "configurations": []
    },

    // !═════ Editor Settings ══════════════════════════════════════════════════

    "diffEditor.renderSideBySide"            : true,
    "diffEditor.hideUnchangedRegions.enabled": true,
    "diffEditor.codeLens"                    : false,
    "diffEditor.ignoreTrimWhitespace"        : true,
    "diffEditor.maxComputationTime"          : 5000,
    "diffEditor.maxFileSize"                 : 50,
    "diffEditor.renderIndicators"            : true,
    "diffEditor.wordWrap"                    : "inherit",
    "multiDiffEditor.experimental.enabled"   : true,

    "editor.fontFamily"                             : "'FiraCode Nerd Font', 'SauceCodePro Nerd Font', 'JetBrainsMonoNL Nerd Font Mono', 'JetBrainsMono Nerd Font', 'Hack Nerd Font Mono'",
    "editor.inlayHints.fontFamily"                  : "FiraCode Nerd Font",
    "editor.codeLensFontFamily"                     : "FiraCode Nerd Font",
    "editor.tabSize"                                : 4,                                                                                                                                       // Default tab size for all languages
    "editor.fontSize"                               : 13,
    "editor.lineHeight"                             : 0,
    "editor.fontLigatures"                          : true,                                                                                                                                    // Limit minimap width
    "editor.lineNumbers"                            : "on",                                                                                                                                    // Show line numbers
    "editor.cursorStyle"                            : "underline",                                                                                                                             // Use a line cursor
    "editor.cursorBlinking"                         : "blink",                                                                                                                                 // Enable cursor blinking
    "editor.mouseWheelZoom"                         : true,                                                                                                                                    // Zoom with Ctrl/Cmd + mouse wheel
    "editor.codeLens"                               : false,                                                                                                                                   // Disable code lens
    "editor.inlineSuggest.enabled"                  : false,                                                                                                                                   // Disable inline suggestions
    "editor.ColorDecorators"                        : true,
    "editor.rulers"                                 : [80, 120],                                                                                                                               // Show rulers at columns 80 and 120
    "editor.wordWrap"                               : "off",                                                                                                                                   // Disable word wrap to prevent automatic line breaks
    "editor.renderWhitespace"                       : "all",                                                                                                                                   // Optional: Show whitespace for better visibility
    "editor.renderControlCharacters"                : true,                                                                                                                                    // Optional: Show control characters
    "editor.suggestOnTriggerCharacters"             : true,
    "editor.snippetSuggestions"                     : "inline",
    "editor.parameterHints.enabled"                 : true,
    "editor.selectionHighlight"                     : true,
    "editor.matchBrackets"                          : "always",
    "editor.suggest.matchOnWordStartOnly"           : false,
    "editor.occurrencesHighlight"                   : "multiFile",
    "editor.occurrencesHighlightMode"               : "multiFile",
    "editor.suggest.preview"                        : false,
    "editor.suggest.showStatusBar"                  : false,
    "editor.suggest.snippetsPreventQuickSuggestions": true,
    "editor.suggest.shareSuggestSelections"         : false,


    // Scrollbar settings
    "editor.scrollbar.verticalScrollbarSize"  : 12,
    "editor.scrollbar.horizontalScrollbarSize": 12,
    "editor.scrollbar.verticalHasArrows"      : false,
    "editor.scrollbar.horizontalHasArrows"    : false,
    "editor.scrollBeyondLastColumn"           : 5,        // Scroll beyond last column
    "editor.scrollBeyondLastLine"             : true,     // Scroll beyond last line
    "editor.scrollPredominantAxis"            : true,     // Scroll predominantly on the main axis
    "editor.scrollbar.horizontal"             : "auto",   // Set horizontal scrollbar behavior
    "editor.scrollbar.scrollByPage"           : false,    // Disable scrolling by page
    "editor.scrollbar.vertical"               : "auto",   // Set vertical scrollbar behavior

    // Minimap settings
    "editor.minimap.enabled"         : true,
    "editor.minimap.renderCharacters": true,
    "editor.minimap.showSlider"      : "always",         // Enable minimap for quick navigation
    "editor.minimap.maxColumn"       : 120,
    "editor.minimap.scale"           : 1,                // Set minimap scale
    "editor.minimap.side"            : "right",          // Position minimap on the right
    "editor.minimap.size"            : "proportional",   // Use proportional minimap size

    // Editor Settings
    "editor.renderLineHighlight"                                       : "line",                                // Highlight the current line
    "editor.smoothScrolling"                                           : false,                                 // Disable smooth scrolling
    "editor.copyWithSyntaxHighlighting"                                : true,                                  // Copy text with syntax highlighting
    "editor.foldingHighlight"                                          : true,                                  // Highlight folded code regions
    "editor.guides.highlightActiveIndentation"                         : true,                                  // Highlight active indentation guides
    "editor.guides.indentation"                                        : true,                                  // Show indentation guides
    "editor.overviewRulerBorder"                                       : true,                                  // Show border around the overview ruler
    "editor.multiCursorModifier"                                       : "alt",                                 // Use Alt key for multi-cursor selection
    "editor.accessibilitySupport"                                      : "auto",                                // Enable accessibility support automatically
    "editor.accessibilityPageSize"                                     : 10,                                    // Set page size for accessibility navigation
    "editor.dragAndDrop"                                               : true,                                  // Enable drag-and-drop for text
    "editor.find.addExtraSpaceOnTop"                                   : true,                                  // Add extra space at the top of the Find widget
    "editor.formatOnType"                                              : true,                                 // Disable formatting on type
    "editor.acceptSuggestionOnEnter"                                   : "on",                                  // Accept suggestions on Enter key
    "editor.autoIndent"                                                : "full",                                // Enable full auto-indentation
    "editor.codeLensFontSize"                                          : 0,                                     // Use default font size for CodeLens
    "editor.foldingStrategy"                                           : "auto",                                // Use automatic folding strategy
    "editor.inlineSuggest.suppressSuggestions"                         : true,                                  // Suppress inline suggestions
    "editor.hideCursorInOverviewRuler"                                 : false,                                 // Show cursor in the overview ruler
    "editor.linkedEditing"                                             : false,                                 // Disable linked editing
    "editor.suggest.localityBonus"                                     : false,                                 // Disable locality bonus for suggestions
    "editor.suggestSelection"                                          : "first",                               // Select the first suggestion by default
    "editor.tabCompletion"                                             : "on",                                  // Disable tab completion
    "editor.unicodeHighlight.ambiguousCharacters"                      : true,                                  // Highlight ambiguous Unicode characters
    "editor.unfoldOnClickAfterEndOfLine"                               : false,                                 // Disable unfolding on click after end of line
    "editor.wordSeparators"                                            : "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",   // Define word separators
    "editor.acceptSuggestionOnCommitCharacter"                         : true,                                  // Accept suggestions on commit character
    "editor.autoClosingBrackets"                                       : "always",                     // Auto-close brackets based on language
    "editor.autoClosingDelete"                                         : "auto",                                // Auto-delete closing brackets
    "editor.autoClosingOvertype"                                       : "auto",                                // Auto-overtype closing brackets
    "editor.autoClosingQuotes"                                         : "always",                     // Auto-close quotes based on language
    "editor.autoSurround"                                              : "languageDefined",                     // Auto-surround selections based on language
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,                                  // Use independent color pools for bracket types
    "editor.columnSelection"                                           : false,                                 // Disable column selection
    "editor.comments.ignoreEmptyLines"                                 : true,                                  // Ignore empty lines in comments
    "editor.comments.insertSpace"                                      : true,                                  // Insert space after comment markers
    "editor.cursorSurroundingLines"                                    : 0,                                     // Set number of surrounding lines for cursor
    "editor.cursorSurroundingLinesStyle"                               : "default",                             // Use default style for surrounding lines
    "editor.cursorWidth"                                               : 0,                                     // Use default cursor width
    "editor.definitionLinkOpensInPeek"                                 : false,                                 // Open definition links in peek view
    "editor.detectIndentation"                                         : true,                                  // Detect indentation automatically
    "editor.emptySelectionClipboard"                                   : true,                                  // Copy empty selection to clipboard
    "editor.fastScrollSensitivity"                                     : 5,                                     // Set fast scroll sensitivity
    "editor.find.autoFindInSelection"                                  : "never",                               // Disable auto-find in selection
    "editor.find.cursorMoveOnType"                                     : true,                                  // Move cursor while typing in Find widget
    "editor.find.loop"                                                 : true,                                  // Enable looping in Find widget
    "editor.find.seedSearchStringFromSelection"                        : "always",                              // Seed search string from selection
    "editor.folding"                                                   : true,                                  // Enable code folding
    "editor.foldingImportsByDefault"                                   : false,                                 // Disable folding imports by default
    "editor.foldingMaximumRegions"                                     : 5000,                                  // Set maximum number of folding regions
    "editor.fontWeight"                                                : "normal",                              // Use normal font weight
    "editor.glyphMargin"                                               : true,                                  // Enable glyph margin
    "editor.gotoLocation.alternativeDeclarationCommand"                : "editor.action.goToReferences",        // Set alternative command for declarations
    "editor.gotoLocation.alternativeDefinitionCommand"                 : "editor.action.goToReferences",        // Set alternative command for definitions
    "editor.gotoLocation.alternativeImplementationCommand"             : "",                                    // Set alternative command for implementations
    "editor.gotoLocation.alternativeReferenceCommand"                  : "",                                    // Set alternative command for references
    "editor.gotoLocation.alternativeTypeDefinitionCommand"             : "editor.action.goToReferences",        // Set alternative command for type definitions
    "editor.gotoLocation.multipleDeclarations"                         : "peek",                                // Use peek view for multiple declarations
    "editor.gotoLocation.multipleDefinitions"                          : "peek",                                // Use peek view for multiple definitions
    "editor.gotoLocation.multipleImplementations"                      : "peek",                                // Use peek view for multiple implementations
    "editor.gotoLocation.multipleReferences"                           : "peek",                                // Use peek view for multiple references
    "editor.gotoLocation.multipleTypeDefinitions"                      : "peek",                                // Use peek view for multiple type definitions
    "editor.guides.bracketPairs"                                       : false,                                 // Disable bracket pair guides
    "editor.guides.bracketPairsHorizontal"                             : "active",                              // Show horizontal bracket pair guides
    "editor.guides.highlightActiveBracketPair"                         : true,                                  // Highlight active bracket pair
    "editor.hover.above"                                               : true,                                  // Show hover above the line
    "editor.hover.delay"                                               : 300,                                   // Set hover delay in milliseconds
    "editor.hover.enabled"                                             : true,                                  // Enable hover
    "editor.hover.sticky"                                              : true,                                  // Enable sticky hover
    "editor.inlayHints.fontSize"                                       : 0,                                     // Use default font size for inlay hints
    "editor.largeFileOptimizations"                                    : true,                                  // Enable optimizations for large files
    "editor.letterSpacing"                                             : 0,                                     // Use default letter spacing
    "editor.links"                                                     : true,                                  // Enable clickable links
    "editor.maxTokenizationLineLength"                                 : 20000,                                 // Set maximum line length for tokenization
    "editor.mouseWheelScrollSensitivity"                               : 1,                                     // Set mouse wheel scroll sensitivity
    "editor.multiCursorMergeOverlapping"                               : true,                                  // Merge overlapping multi-cursors
    "editor.multiCursorPaste"                                          : "spread",                              // Spread multi-cursor paste
    "editor.padding.bottom"                                            : 0,                                     // Set bottom padding
    "editor.padding.top"                                               : 0,                                     // Set top padding
    "editor.parameterHints.cycle"                                      : false,                                 // Disable cycling through parameter hints
    "editor.peekWidgetDefaultFocus"                                    : "tree",                                // Set default focus for peek widget
    "editor.quickSuggestionsDelay"                                     : 10,                                    // Set delay for quick suggestions
    "editor.rename.enablePreview"                                      : true,                                  // Enable preview for renaming
    "editor.renderLineHighlightOnlyWhenFocus"                          : true,                                  // Render line highlight only when focused
    "editor.roundedSelection"                                          : true,                                  // Enable rounded selection
    "editor.semanticHighlighting.enabled"                              : "configuredByTheme",                   // Enable semantic highlighting based on theme
    "editor.semanticTokenColorCustomizations"                          : {},                                    // Customize semantic token colors
    "editor.showDeprecated"                                            : true,                                  // Show deprecated symbols
    "editor.showFoldingControls"                                       : "mouseover",                           // Show folding controls on mouseover
    "editor.showUnused"                                                : true,                                  // Show unused code
    "editor.smartSelect.selectLeadingAndTrailingWhitespace"            : true,                                  // Select leading and trailing whitespace
    "editor.stablePeek"                                                : false,                                 // Disable stable peek
    "editor.stickyTabStops"                                            : false,                                 // Disable sticky tab stops
    "editor.suggest.filterGraceful"                                    : true,                                  // Enable graceful filtering for suggestions
    "editor.suggest.showClasses"                                       : true,                                  // Show class suggestions
    "editor.suggest.showColors"                                        : true,                                  // Show color suggestions
    "editor.suggest.showConstants"                                     : true,                                  // Show constant suggestions
    "editor.suggest.showConstructors"                                  : true,                                  // Show constructor suggestions
    "editor.suggest.showCustomcolors"                                  : true,                                  // Show custom color suggestions
    "editor.suggest.showDeprecated"                                    : true,                                  // Show deprecated suggestions
    "editor.suggest.showEnumMembers"                                   : true,                                  // Show enum member suggestions
    "editor.suggest.showEnums"                                         : true,                                  // Show enum suggestions
    "editor.suggest.showEvents"                                        : true,                                  // Show event suggestions
    "editor.suggest.showFields"                                        : true,                                  // Show field suggestions
    "editor.suggest.showFiles"                                         : true,                                  // Show file suggestions
    "editor.suggest.showFolders"                                       : true,                                  // Show folder suggestions
    "editor.suggest.showFunctions"                                     : true,                                  // Show function suggestions
    "editor.suggest.showIcons"                                         : true,                                  // Show icons in suggestions
    "editor.suggest.showInlineDetails"                                 : true,                                  // Show inline details in suggestions
    "editor.suggest.showInterfaces"                                    : true,                                  // Show interface suggestions
    "editor.suggest.showIssues"                                        : true,                                  // Show issue suggestions
    "editor.suggest.showKeywords"                                      : true,                                  // Show keyword suggestions
    "editor.suggest.showMethods"                                       : true,                                  // Show method suggestions
    "editor.suggest.showModules"                                       : true,                                  // Show module suggestions
    "editor.suggest.showOperators"                                     : true,                                  // Show operator suggestions
    "editor.suggest.showProperties"                                    : true,                                  // Show property suggestions
    "editor.suggest.showReferences"                                    : true,                                  // Show reference suggestions
    "editor.suggest.showSnippets"                                      : true,                                  // Show snippet suggestions
    "editor.suggest.showStructs"                                       : true,                                  // Show struct suggestions
    "editor.suggest.showTypeParameters"                                : true,                                  // Show type parameter suggestions
    "editor.suggest.showUnits"                                         : true,                                  // Show unit suggestions
    "editor.suggest.showUsers"                                         : true,                                  // Show user suggestions
    "editor.suggest.showValues"                                        : true,                                  // Show value suggestions
    "editor.suggest.showVariables"                                     : true,                                  // Show variable suggestions
    "editor.suggest.showWords"                                         : true,                                  // Show word suggestions
    "editor.trimAutoWhitespace"                                        : true,                                  // Trim auto-inserted whitespace
    "editor.suggestFontSize"                                           : 0,                                     // Use default font size for suggestions
    "editor.suggestLineHeight"                                         : 0,                                     // Use default line height for suggestions
    "editor.unicodeHighlight.includeComments"                          : "inUntrustedWorkspace",                // Highlight Unicode in comments in untrusted workspaces
    "editor.unicodeHighlight.includeStrings"                           : true,                                  // Highlight Unicode in strings
    "editor.unicodeHighlight.invisibleCharacters"                      : true,                                  // Highlight invisible Unicode characters
    "editor.unicodeHighlight.nonBasicASCII"                            : "inUntrustedWorkspace",                // Highlight non-basic ASCII in untrusted workspaces
    "editor.unusualLineTerminators"                                    : "prompt",                              // Prompt for unusual line terminators
    "editor.useTabStops"                                               : true,                                  // Use tab stops
    "editor.wrappingIndent"                                            : "same",                                // Use same indentation for wrapped lines
    "editor.wrappingStrategy"                                          : "simple",                              // Use simple wrapping strategy

    // "vscode_custom_css.imports": [
    //     "file:///path/to/your/styles.css"
    // ],
    "editor.unicodeHighlight.allowedCharacters"                        : {},               // Define allowed Unicode characters
    "editor.unicodeHighlight.allowedLocales"                           : {
    "_os"    : true,
    "_vscode": true
    },
    // Define allowed locales for Unicode highlighting
    "editor.quickSuggestions": {
    "comments": "off",   // Disable quick suggestions in comments
    "other"   : "on",    // Enable quick suggestions in other contexts
    "strings" : "off"    // Disable quick suggestions in strings
    },

    // Editor Settings

    "editor.inlayHints.enabled"            : "on",   // Enable inlay hints in the editor
    "editor.lightbulb.enabled"             : "on",   // Enable lightbulb for code actions
    "editor.language.brackets"             : null,   // Disable language-specific brackets
    "editor.renderFinalNewline"            : "on",   // Render final newline in files
    "editor.cursorSmoothCaretAnimation"    : "on",   // Disable smooth caret animation
    "editor.language.colorizedBracketPairs": null,   // Disable colorized bracket pairs

    // !═════ Extensions Settings ══════════════════════════════════════════════

    "extensions.supportUntrustedWorkspaces"       : {},                                  // Support untrusted workspaces
    "extensions.confirmedUriHandlerExtensionIds"  : [],                                  // Confirmed URI handler extension IDs
    "extensions.closeExtensionDetailsOnViewChange": false,                               // Close extension details on view change
    "extensions.experimental.affinity"            : {
        "pub.name": 1,
        "asvetliakov.vscode-neovim": 1
    },
    "extensions.supportVirtualWorkspaces": { // Support virtual workspaces
        "pub.name": false
    },

    "vscode_vibrancy.enableAutoTheme"   : false,             // Enable automatic dark/light mode switching
    "vscode_vibrancy.preventFlash"      : true,              // Prevent flash when switching themes
    "vscode_vibrancy.refreshInterval"   : 100,                // Refresh interval for background transparency (1-1000ms, default: 10)
    "vscode_vibrancy.preferedDarkTheme" : "Default Dark",    // Preferred theme for dark mode
    "vscode_vibrancy.preferedLightTheme": "Default Light",   // Preferred theme for light mode
    "vscode_vibrancy.theme"             : "Default Dark",    // Vibrancy theme
    "vscode_vibrancy.type"              : "fullscreen-ui",   // Vibrancy type
    "vscode_vibrancy.opacity"           : -1,                // Opacity level (-1 for theme default, 0 for max transparency, 1 for no transparency)

// "editor.stickyScroll.enabled": false,
// "apc.imports": [
//     "file:///Users/x0r/.vscode-oss/extensions/brandonkirbyson.vscode-animations-2.0.1-universal/dist/updateHandler.js"
// ],

    // Animations
    //  // Enable animations globally
    //   "animations.enabled": true,
    //   "animations.Smooth-Mode": true,
    //  //   "animations.Install-Method": "Apc Customize UI++",

    //   // Command Palette Animation
    //   "animations.commandPalette": "Slide",
    //   "animations.durations.commandPalette": 300,

    //   // Tabs Animation
    //   "animations.tabs": "Slide",
    //   "animations.durations.tabs": 250,≠

    //   // Scrolling Animation
    //   "animations.scrolling": "Slide",
    //   "animations.durations.scrolling": 200,

    //   // Active Editor Animation
    //   "animations.active": "Indent",
    //   "animations.durations.active": 150,

    //   // Focus Dimming
    //   "animations.focusDimming": "Everything But Editor",
    //   "animations.focusDimmingOpacity": 0.7,
    //   "animations.durations.focusDimming": 200,

    //   // Smooth Mode
    //   "animations.smoothMode": true,

    //   // Cursor Animation
    //   "animations.cursorAnimation": true,
    //   "animations.cursorAnimationOptions": {
    //     "color": "#b7bdf8", // Custom cursor color
    //     "style": "Block",   // Cursor style
    //     "trailLength": 2    // Trail length
    //   },

    // !═══ Bash IDE Settings ══════════════════════════════════════════════════

    // Install Bash IDE: https://marketplace.visualstudio.com/items?itemName=mads-hartmann.bash-ide-vscode
    "bashIde.path"                        : "bash",         // Path to Bash executable
    "bashIde.shellcheckPath"              : "shellcheck",   // Path to ShellCheck
    "bashIde.highlightParsingErrors"      : true,           // Highlight parsing errors
    "bashIde.enableSourceErrorDiagnostics": true,           // Enable source error diagnostics

    // !═══ shfmt Bash Formatter ═══════════════════════════════════════════════

    // Install shfmt: https://marketplace.visualstudio.com/items?itemName=mkhl.shfmt
    "shfmt.flagIndent"          : 2,       // Use 2 spaces for indentation
    "shfmt.flagBinaryNextLine"  : true,    // Place binary operators on the next line
    "shfmt.flagSpaceRedirects"  : true,    // Add spaces around redirect operators
    "shfmt.flagKeepPadding"     : false,   // Do not keep padding in arrays
    "shfmt.flagFunctionNextLine": false,   // Place function opening braces on the same line

    // Better Align Configuration
    "better-align.characters": [":", "=", "+=", "-=", "*=", "/=", "=>"],
    "better-align.spaceBefore": true,
    "better-align.spaceAfter": true,

    // !═══ AI Coding Autocomplete and Chat Assistant ══════════════════════════

    // Tabnine AI
    "tabnine.experimentalAutoImports": true,

    // GitHub Copilot Settings
    "chat.commandCenter.enabled": true,
    "github.copilot.enable.instead": true,   // Enable auto-completions
    "github.copilot.editor.inlineSuggest.enable" : true,    // Show inline suggestions
    "github.copilot.editor.inlineSuggest.delay"  : 100,     // Delay for inline suggestions (ms)
    "github.copilot.statusBar.enable"            : true,    // Show Copilot status in the status bar
    "github.copilot.chat.enable"                 : true,    // Enable Copilot chat feature


    // Enable or disable Copilot globally
    "github.copilot.enable": {
        "*": true,
        "plaintext": false,
        "markdown": true,
        "scminput": false,
        "bash": true,
        "aml": true,
        "dsl": true,
        "typescriptreact": true
    },

    // Enable Copilot for specific languages
    "github.copilot.languages": {
        "python"    : true,
        "javascript": true,
        "typescript": true,
        "java"      : true,
        "go"        : true,
        "ruby"      : true,
        "php"       : true,
        "csharp"    : true,
        "cpp"       : true,
        "html"      : true,
        "css"       : true,
        "json"      : true,
        "yaml"      : true
    },

    // Enable experimental features
    "github.copilot.experimental": {
        "enable": true
    },

    // Enable Copilot for specific file paths or patterns
    "github.copilot.include": [
        "**/*.js",
        "**/*.ts",
        "**/*.py",
        "**/*.md",
        "**/*.sh"
    ],

    // Exclude Copilot for specific file paths or patterns
    "github.copilot.exclude": [
        "**/node_modules/**",
        "**/dist/**",
        "**/build/**",
        "**/vendor/**",
        "**/tests/**"
    ],

    // Enable Copilot's advanced AI features
    "github.copilot.advanced": {
        "enable": true
    },

    // Kubernetes
    "vs-kubernetes": {
        "vscode-kubernetes.minikube-path-mac": "$HOME/.vs-kubernetes/tools/minikube/darwin-amd64/minikube"
    },

    // !═══ Codeium ════════════════════════════════════════════════════════════

    "codeium.enabled"              : false,                                                 // Enable or disable Codeium
    "codeium.inlineSuggest.enabled": false,                                                 // Enable or disable inline suggestions
    "codeium.chat.enabled"         : true,                                                  // Enable or disable the chat feature
    "codeium.maxCompletions"       : 5,                                                     // Set the maximum number of suggestions
    "codeium.autoTrigger"          : true,                                                  // Enable or disable automatic triggering of suggestions
    "codeium.languages"            : [ // Specify languages where Codeium should be active
        "bash",
        "csh",
        "python",
        "javascript",
        "typescript",
        "java",
        "go",
        "html",
        "css",
        "c",
        "cpp",
        "rust",
        "ruby",
        "php",
        "shellscript"
    ],

    // !═══ Auto-Close-Tag ═════════════════════════════════════════════════════

    "auto-close-tag.enableAutoCloseTag"             : true,                                                         // Enable auto-closing for tags
    "auto-close-tag.enableAutoCloseSelfClosingTag"  : true,                                                         // Enable auto-closing for self-closing tags
    "auto-close-tag.insertSpaceBeforeSelfClosingTag": false,                                                        // Insert space before self-closing tags
    "auto-close-tag.activationOnLanguage"           : [ // Specify file types where the extension should be active
        "xml",
        "php",
        "blade",
        "ejs",
        "jinja",
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "plaintext",
        "markdown",
        "vue",
        "liquid",
        "erb",
        "lang-cfml",
        "cfml",
        "HTML (Eex)"
    ],
    "auto-close-tag.excludedTags": [ // Exclude specific tags from auto-closing
        "area",
        "base",
        "br",
        "col",
        "command",
        "embed",
        "hr",
        "img",
        "input",
        "keygen",
        "link",
        "meta",
        "param",
        "source",
        "track",
        "wbr"
    ],
    "auto-close-tag.disableOnLanguage": ["php", "python"],   // Disable auto-closing for specific languages
    "auto-close-tag.SelfClosingTags"  : true,                // Enable self-closing tags
    "auto-close-tag.enableCustomTags" : true,                // Enable custom tags

    // !═══ Auto-Rename-Tag ════════════════════════════════════════════════════

    "auto-rename-tag.SelfClosingTags"     : true,                                                         // Enable auto-renaming for self-closing tags
    "auto-rename-tag.enableCustomTags"    : true,                                                         // Enable auto-renaming for custom tags
    "auto-rename-tag.excludedTags"        : ["br", "img", "input", "meta", "link"],                       // Exclude specific tags from auto-renaming
    "auto-rename-tag.enable"              : true,                                                         // Enable auto-rename-tag
    "auto-rename-tag.activationOnLanguage": [ // Specify file types where the extension should be active
        "html",
        "xml",
        "php",
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "vue",
        "blade",
        "ejs",
        "handlebars"
    ],

    // !═══ Better Comments Extension ══════════════════════════════════════════

    "better-comments.highlightPlainText": true,                                     // Enable highlighting in plain text
    "better-comments.multilineComments" : true,                                     // Enable highlighting in multiline comments
    "better-comments.tags"              : [ // Define custom tags for highlighting
        {
        "tag"            : "FIX",
        "color"          : "#FF2D00",
        "strikethrough"  : false,
        "underline"      : false,
        "backgroundColor": "transparent",
        "bold"           : false,
        "italic"         : false
        },
        {
        "tag"            : "TODO",
        "color"          : "FFFF00",
        "strikethrough"  : false,
        "underline"      : false,
        "backgroundColor": "transparent",
        "bold"           : false,
        "italic"         : false
        },
        {
        "tag"            : ".",
        "color"          : "#FF007F",
        "strikethrough"  : false,
        "underline"      : false,
        "backgroundColor": "transparent",
        "bold"           : false,
        "italic"         : false
        },
        {
        "tag"            : "^",
        "color"          : "#00FF00",
        "strikethrough"  : false,
        "underline"      : false,
        "backgroundColor": "transparent",
        "bold"           : false,
        "italic"         : false
        },
        {
        "tag"            : "*",
        "color"          : "#FFFF00",
        "strikethrough"  : false,
        "underline"      : false,
        "backgroundColor": "transparent",
        "bold"           : false,
        "italic"         : false
        },
        {
        "tag"            : "!",
        "color"          : "#9400D3",
        "strikethrough"  : false,
        "underline"      : false,
        "backgroundColor": "transparent",
        "bold"           : false,
        "italic"         : false
        },
        {
        "tag"            : ",",
        "color"          : "#FF2D00",
        "strikethrough"  : false,
        "underline"      : false,
        "backgroundColor": "transparent",
        "bold"           : false,
        "italic"         : false
        },
        {
        "tag"            : "?",
        "color"          : "#007FFF",
        "strikethrough"  : false,
        "underline"      : false,
        "backgroundColor": "transparent",
        "bold"           : false,
        "italic"         : false
        },
        {
        "tag"            : "//",
        "color"          : "#3a2f39",
        "strikethrough"  : true,
        "underline"      : false,
        "backgroundColor": "transparent",
        "bold"           : false,
        "italic"         : false
         }
    ],

    // !═══ Bookmarks ══════════════════════════════════════════════════════════

    "bookmarks.gutterIconBorderColor"     : "#157EFB",          // Set gutter icon border color
    "bookmarks.gutterIconFillColor"       : "#157EFB",          // Set gutter icon fill color
    "bookmarks.keepBookmarksOnLineDelete" : true,               // Keep bookmarks when deleting lines
    "bookmarks.label.suggestion"          : "dontUse",          // Disable label suggestions
    "bookmarks.multicursor.toggleMode"    : "allLinesAtOnce",   // Toggle bookmarks for all lines at once
    "bookmarks.navigateThroughAllFiles"   : true,               // Navigate through bookmarks in all files
    "bookmarks.saveBookmarksInProject"    : true,               // Save bookmarks in the project
    "bookmarks.showCommandsInContextMenu" : true,               // Show bookmark commands in the context menu
    "bookmarks.showNoMoreBookmarksWarning": true,               // Show warning when no more bookmarks are found
    "bookmarks.sideBar.expanded"          : true,               // Expand the bookmarks sidebar by default
    "bookmarks.useWorkaroundForFormatters": true,               // Use workaround for formatters
    "bookmarks.wrapNavigation"            : true,               // Wrap navigation when reaching the end of the file

    // !═══ Bracket-Pair-Colorizer-2 Configuration ═════════════════════════════

    "editor.bracketPairColorization.enabled": true,                                                // Enable bracket pair colorization
    "bracket-pair-colorizer-2.active"       : true,                                                // Enable Bracket Pair Colorizer 2
    "bracket-pair-colorizer-2.colors"       : [ // Define neon Cyberpunk colors for bracket pairs
        "#FF007F", // Neon Pink
        "#00FFFF", // Cyan
        "#FF00FF", // Magenta
        "#00FF00", // Neon Green
        "#FFA500", // Neon Orange
        "#9400D3", // Neon Purple
        "#FF1493" // Deep Pink
    ],
    "bracket-pair-colorizer-2.activeScopeCSS": [ // Customize active scope CSS
        "borderStyle : solid",
        "borderWidth : 1px",
        "borderColor : {color}",
        "opacity: 0.5"
    ],
    "bracket-pair-colorizer-2.scopeLineCSS": [ // Customize scope line CSS
        "borderStyle : solid",
        "borderWidth : 1px",
        "borderColor : {color}",
        "opacity: 0.5"
    ],
    "bracket-pair-colorizer-2.excludedLanguages": [ // Exclude specific languages
        "plaintext",
        "markdown"
    ],

    // !═══ Colorizer ══════════════════════════════════════════════════════════

    // codium --install-extension kamikillerto.vscode-colorize

    "colorize.live"                         : true,                                              // Enable live updates for color backgrounds
    "colorize.colorized_background"         : true,                                              // Enable background colorization
    "colorize.colorized_background_opacity" : 0.2,                                               // Set background opacity
    "colorize.decoration_type"              : "background",                                      // Set decoration type
    "colorize.hide_current_line_decorations": true,                                              // Hide decorations for the current line
    "colorize.colorized_variables"          : ["CSS", "SASS", "LESS", "STYLUS"],                 // Enable colorization for specific variables
    "colorize.colorized_colors"             : [ // Enable colorization for specific color types
        "HEXA",
        "RGB",
        "ARGB"
        // "HSL",
        // HSL/HSLA colors (hsl(), hsla())
        // "BROWSERS_COLORS" /
        // Cross-browser colors (red, blue, green...)
        // "OKLAB",
        // OKLAB colors
        // "OKLCH"
        // OKLCH colors  ],
    ],
    "colorize.decorations": {
    "border": "2px solid #000",
    "borderRadius": "3px"
    },
    "colorize.languages": [ // Enable Colorize for specific languages
    "css",
    "scss",
    "less",
    "stylus",
    "javascript",
    "typescript",
    "html",
    "json",
    "yaml",
    "xml"
    ],
    "colorize.include": [ // Include additional files/folders for colorization
    "**/*.css",
    "**/*.scss",
    "**/*.less",
    "**/*.styl",
    "**/*.js",
    "**/*.ts",
    "**/*.html",
    "**/*.json",
    "**/*.yaml",
    "**/*.xml"
    ],
    "colorize.exclude": [ // Exclude files/folders from colorization
    "**/node_modules/**",
    "**/dist/**",
    "**/build/**"
    ],
    "colorize.ignore_files": ["**/*.min.js", "**/*.min.css"],   // Ignore specific files

    // !═══ Gitlens Configuration ══════════════════════════════════════════════

    "gitlens.codeLens.enabled"                       : true,     // Enable GitLens code lens
    "gitlens.statusBar.enabled"                      : true,     // Show GitLens status bar info
    "gitlens.views.repositories.showIncomingActivity": true,     // Show incoming activity in repositories
    "gitlens.views.repositories.branches.layout"     : "list",   // Set layout for branches
    "gitlens.graph.dimMergeCommits"                  : true,     // Dim merge commits in the graph
    "gitlens.graph.showRemoteNames"                  : true,     // Show remote names in the graph
    "gitlens.mode.statusBar.alignment"               : "left",   // Align GitLens status bar to the left
    "gitlens.hovers.avatars"                         : false,
    "gitlens.hovers.currentLine.details"             : false,
    "gitlens.views.fileHistory.avatars"              : false,
    "gitlens.views.lineHistory.avatars"              : false,
    "gitlens.currentLine.enabled"                    : false,
    "gitlens.hovers.currentLine.over"                : "line",

    // !═══ File Explorer Symbols Icons ════════════════════════════════════════

    "symbols.hidesExplorerArrows" : true,                            // Hide explorer arrows
    "symbols.folders.associations": {
        "entities": "folder-assets",
        "infra": "folder-app",
        "schemas": "folder-purple"
    },
    "symbols.files.associations": {
        "app.module.ts": "nest",
        "*.service.ts": "nest"
    },

        // !═══ Markdown All in One: All-in-one Markdown supports ══════════════

    // https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one

    // Markdown extension settings
    "markdown.extension.completion.respectVscodeSearchExclude": true,                          // Whether to consider search.exclude option when providing file path completions
    "markdown.extension.completion.root"                      : "",                            // Root folder when providing file path completions (It takes effect when the path starts with /)
    "markdown.extension.italic.indicator"                     : "*",                           // Use * or _ to wrap italic text
    "markdown.extension.bold.indicator"                       : "**",                          // Use ** or __ to wrap bold text
    "markdown.extension.katex.macros"                         : {},                            // KaTeX macros e.g. { "\\name": "expansion", ... }
    "markdown.extension.list.indentationSize"                 : "adaptive",                    // Use different indentation size for ordered and unordered list
    "markdown.extension.list.toggle.candidate-markers"        : ["-", "*", "+", "1.", "1)"],   // Use an array for toggle ordered list marker e.g. ["*", "1."]
    "markdown.extension.orderedList.autoRenumber"             : true,                          // Auto fix list markers as you edit
    "markdown.extension.orderedList.marker"                   : "ordered",                     // Or one: always use 1. as ordered list marker
    "markdown.extension.preview.autoShowPreviewToSide"        : false,                         // Automatically show preview when opening a Markdown file
    "markdown.extension.print.absoluteImgPath"                : true,                          // Convert image path to absolute path
    "markdown.extension.print.imgToBase64"                    : false,                         // Convert images to base64 when printing to HTML
    "markdown.extension.print.includeVscodeStylesheets"       : true,                          // Whether to include VS Code's default styles
    "markdown.extension.print.onFileSave"                     : false,                         // Print to HTML on file sav
    "markdown.extension.print.theme"                          : "light",                       // Theme of the exported HTML
    "markdown.extension.print.validateUrls"                   : true,                          // Enable/disable URL validation when printing
    // "markdown.extension.syntax.decorations"                   : true,                          // Add decorations to ~~strikethrough~~ and code span
    "markdown.extension.syntax.decorationFileSizeLimit"       : 50000,                         // Don't render syntax decorations if a file is larger than this size (in byte/B)
    "markdown.extension.syntax.plainTheme"                    : false,                         // A distraction-free theme
    "markdown.extension.tableFormatter.enabled"               : true,                          // Enable GFM table formatter
    "markdown.extension.toc.slugifyMode"                      : "github",                      // Slugify mode for TOC link generation (vscode, github, gitlab, or gitea)
    "markdown.extension.toc.omittedFromToc"                   : {},                            // Lists of headings to omit by project file (e.g. { "README.md": ["# Introduction"] })
    "markdown.extension.toc.levels"                           : "1..6",                        // Control the heading levels to show in the table of contents
    "markdown.extension.toc.orderedList     "                      : false,                         // Use ordered list in the table of contents
    "markdown.extension.toc.plaintext"                        : false,                         // Just plain text
    "markdown.extension.toc.unorderedList.marker"             : "-",                           // Use -, *, or + in the table of contents (for unordered list)
    "markdown.extension.toc.updateOnSave"                     : true,                          // Automatically update the table of contents on save

 // !═══ Formatting Toggle by tombonnike ═══════════════════════════════════════

    // Toggle formatting settings ON and OFF with a simple click.

    // Default configuration: Toggle all formatting settings
    // This allows you to toggle formatOnPaste, formatOnSave, and formatOnType.
    "formattingToggle.affects": [
        "editor.formatOnPaste",    // Toggle format on paste
        "editor.formatOnSave",     // Toggle format on save
        "editor.formatOnType"      // Toggle format on type
    ],

    // !═══ File Explorer Material Icons Theme ═════════════════════════════════

    // Install Material Icon Theme: `codium --install-extension pkief.material-icon-theme`
    "material-icon-theme.showReloadMessage"  : true,        // Show reload message
    "material-icon-theme.showUpdateMessage"  : false,       // Show update message
    "material-icon-theme.showWelcomeMessage" : true,        // Show welcome message
    "material-icon-theme.hidesExplorerArrows": false,       // Hide explorer arrows
    "material-icon-theme.activeIconPack"     : "angular",   // Set active icon pack

    // !═══ Indent-Rainbow Configuration ═══════════════════════════════════════

    "indentRainbow.indicatorStyle"              : "light",                            // Set indicator style
    "indentRainbow.lightIndicatorStyleLineWidth": 2,                                  // Set line width for light indicator style
    "indentRainbow.colorOnWhiteSpaceOnly"       : false,                              // Apply colors to all characters
    "indentRainbow.updateDelay"                 : 100,                                // Set update delay in milliseconds
    "indentRainbow.includedLanguages"           : [],                                 // Apply to all languages
    "indentRainbow.excludedLanguages"           : ["plaintext"],                      // Exclude plaintext
    "indentRainbow.ignoreErrorLanguages"        : ["markdown"],                       // Skip error detection for markdown
    "indentRainbow.ignoreLinePatterns"          : [ // Ignore specific line patterns
        "/[ \t]*[*]/g",
        "/[ \t]+[/]{2}/g",
        "/^\\s*#.*$/g",
        "/^\\s*<!--.*-->\\s*$/g",
        "/^\\s*\\*.*$/g",
        "/^\\s*\\/\\*.*\\*\\/\\s*$/g",
        "/^\\s*--.*$/g",
        "/^\\s*\\/\\/.*$/g",
        "/^\\s*'.*$/g",
        "/^\\s*;.*$/g"
    ],
    "indentRainbow.colors": [ // Define neon colors for indentation
        "#FF007F", // Neon Pink
        "#00FF7F", // Acid Green
        "#FF00FF", // Magenta
        "#00FFFF", // Cyan
        "#FF7F00", // Neon Orange
        "#7F00FF", // Electric Purple
        "#FFFF00", // Bright Yellow
        "#007FFF", // Electric Blue
        "#FF003F", // Hot Pink
        "#00FF3F", // Lime Green
        "#FF3F00", // Bright Red-Orange
        "#3F00FF", // Deep Purple
        "#FFBF00", // Golden Yellow
        "#00BFFF", // Sky Blue
        "#BF00FF", // Violet
        "#FF00BF", // Bright Pink
        "#00FFBF", // Aqua Green
        "#BFFF00", // Chartreuse
        "#FF005F", // Bright Pink-Red
        "#00FF5F" // Neon Lime
    ],
    "indentRainbow.tabmixColor": "#FFD700",   // Set color for mixed spaces and tabs
    "indentRainbow.errorColor" : "#FF0000",   // Set color for errors

    // !═══ ToDo Tree Extension ════════════════════════════════════════════════

    "todo-tree.general.statusBar"                        : "total",                                                     // Show total count in status bar
    "todohighlight.isCaseSensitive"                      : true,                                                        // Enable case-sensitive highlighting
    "todohighlight.isEnable"                             : true,                                                        // Enable ToDo highlighting
    "todohighlight.keywords"                             : [],                                                          // Define custom keywords
    "todohighlight.keywordsPattern"                      : "",                                                          // Define custom keyword pattern
    "todohighlight.maxFilesForSearch"                    : 5120,                                                        // Set maximum files for search
    "todohighlight.toggleURI"                            : false,                                                       // Disable URI toggling
    "todo-tree.general.enableFileWatcher"                : true,                                                        // Enable file watcher
    "todo-tree.general.showIconsInsteadOfTagsInStatusBar": true,                                                        // Show icons in status bar
    "todo-tree.highlights.enabled"                       : false,                                                       // Disable highlights
    "todo-tree.regex.regexCaseSensitive"                 : false,                                                       // Disable case-sensitive regex
    "todo-tree.tree.buttons.export"                      : true,                                                        // Enable export button
    "todo-tree.tree.buttons.groupByTag"                  : false,                                                       // Disable grouping by tag
    "todo-tree.tree.hideTreeWhenEmpty"                   : true,                                                        // Hide tree when empty
    "todo-tree.tree.labelFormat"                         : "${after}",                                                  // Set label format
    "todo-tree.tree.showCurrentScanMode"                 : false,                                                       // Disable current scan mode
    "todo-tree.regex.regex"                              : "( // |#|<!--|;|/\\*|^)\\s*($TAGS)(\\s|:|-|\\(|\\[|\\{)*",   // Define regex for ToDo comments
    "todo-tree.regex.flags"                              : "gi",                                                        // Set regex flags
    "todo-tree.tree.showCountsInTree"                    : true,                                                        // Show counts in tree
    "todo-tree.tree.expanded"                            : true,                                                        // Expand tree by default
    "todo-tree.tree.filter"                              : "all",                                                       // Show all ToDo items
    "todo-tree.tree.grouped"                             : true,                                                        // Group ToDo items by tag
    "todo-tree.general.tags"                             : [ // Define ToDo tags
        "TODO",
        "FIXME",
        "HACK",
        "NOTE",
        "BUG",
        "REVIEW",
        "OPTIMIZE",
        "CHANGED",
        "XXX"
    ],
    "todo-tree.highlights.defaultHighlight": { // Define default highlight style
        "icon"      : "checklist",
        "type"      : "text-and-comment",
        "foreground": "#11ed5e",
        "background": "#1A1B26",
        "iconColour": "#fffb00",
        "gutterIcon": true
    },
    "todohighlight.defaultStyle": {},                                  // Define default style
    "todohighlight.exclude"     : [ // Exclude specific files/folders
        "**/node_modules/**",
        "**/bower_components/**",
        "**/dist/**",
        "**/build/**",
        "**/.vscode/**",
        "**/.github/**",
        "**/_output/**",
        "**/*.min.*",
        "**/*.map",
        "**/.next/**"
    ],
    "todohighlight.include": [ // Include specific files/folders
        "**/*.js",
        "**/*.jsx",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html",
        "**/*.php",
        "**/*.css",
        "**/*.scss"
    ],
    "todo-tree.highlights.customHighlight": { // Define custom highlight styles
        "TODO": {
        "foreground": "#ad11d0",
        "icon"      : "check"
        },
        "FIXME": {
        "foreground": "#FF0000",
        "icon"      : "alert"
        },
        "HACK": {
        "foreground": "#00FF00",
        "icon"      : "tools"
        },
        "NOTE": {
        "foreground": "#00FFFF",
        "icon"      : "info"
        },
        "BUG": {
        "foreground": "#FF0000",
        "icon"      : "bug"
        },
        "REVIEW": {
        "foreground": "#00ff99",
        "icon"      : "eye"
        },
        "OPTIMIZE": {
        "foreground": "#7FFF00",
        "icon"      : "zap"
        },
        "CHANGED": {
        "foreground": "#ffffff",
        "icon"      : "pencil"
        },
        "XXX": {
        "foreground": "#3a2f39",
        "icon"      : "flame"
        }
    },

    // !═══ ErrorLens ══════════════════════════════════════════════════════════

    "errorLens.enabled"                : true,                                            // Enable ErrorLens
    "errorLens.fontStyle"              : "italic",                                        // Set font style
    "errorLens.fontSize"               : "12px",                                          // Set font size
    "errorLens.errorForeground"        : "#ff0000",                                       // Set error foreground color
    "errorLens.warningForeground"      : "#ffa500",                                       // Set warning foreground color
    "errorLens.infoForeground"         : "#00ff00",                                       // Set info foreground color
    "errorLens.excludeBySource"        : ["eslint(@typescript-eslint/no-unused-vars)"],   // Exclude specific sources
    "errorLens.statusBarMessageEnabled": false,                                           // Disable status bar messages
    "errorLens.gutterIconsEnabled"     : false,                                           // Disable gutter icons
    "errorLens.excludePatterns"        : ["**/*.{html,blade.php}"],                       // Exclude specific patterns
    "errorLens.enabledDiagnosticLevels": ["warning", "info", "hint"],                     // Enable specific diagnostic levels
    "errorLens.messageTemplate"        : "($source) $message",                            // Set message template
    "errorLens.removeLinebreaks"       : false,                                           // Disable linebreak removal

    // !═══ Project Manager Configuration ══════════════════════════════════════
    "projectManager.any.baseFolders"   : [],                           // Define base folders for any projects
    "projectManager.any.ignoredFolders": [ // Ignore specific folders
        "node_modules",
        "out",
        "typings",
        "test"
    ],
    "projectManager.any.maxDepthRecursion"         : 4,                                             // Set maximum recursion depth
    "projectManager.cacheProjectsBetweenSessions"  : true,                                          // Cache projects between sessions
    "projectManager.checkInvalidPathsBeforeListing": true,                                          // Check invalid paths before listing
    "projectManager.confirmSwitchOnActiveWindow"   : "never",                                       // Disable confirmation on switch
    "projectManager.filterOnFullPath"              : false,                                         // Disable filtering on full path
    "projectManager.git.baseFolders"               : [],                                            // Define base folders for Git projects
    "projectManager.git.ignoredFolders"            : [ // Ignore specific folders for Git projects
        "node_modules",
        "out",
        "typings",
        "test",
        ".haxelib"
    ],
    "projectManager.git.maxDepthRecursion": 4,                                                   // Set maximum recursion depth for Git projects
    "projectManager.groupList"            : false,                                               // Disable grouping in the list
    "projectManager.hg.baseFolders"       : [],                                                  // Define base folders for Mercurial projects
    "projectManager.hg.ignoredFolders"    : [ // Ignore specific folders for Mercurial projects
        "node_modules",
        "out",
        "typings",
        "test",
        ".haxelib"
    ],
    "projectManager.hg.maxDepthRecursion"                  : 4,                                             // Set maximum recursion depth for Mercurial projects
    "projectManager.ignoreProjectsWithinProjects"          : false,                                         // Disable ignoring projects within projects
    "projectManager.openInCurrentWindowIfEmpty"            : "always",                                      // Always open in current window if empty
    "projectManager.openInNewWindowWhenClickingInStatusBar": false,                                         // Disable opening in new window
    "projectManager.projectsLocation"                      : "",                                            // Set projects location
    "projectManager.removeCurrentProjectFromList"          : true,                                          // Remove current project from list
    "projectManager.showParentFolderInfoOnDuplicates"      : false,                                         // Disable parent folder info
    "projectManager.showProjectNameInStatusBar"            : true,                                          // Show project name in status bar
    "projectManager.sortList"                              : "Name",                                        // Sort list by name
    "projectManager.supportSymlinksOnBaseFolders"          : false,                                         // Disable symlink support
    "projectManager.svn.baseFolders"                       : [],                                            // Define base folders for SVN projects
    "projectManager.svn.ignoredFolders"                    : [ // Ignore specific folders for SVN projects
        "node_modules",
        "out",
        "typings",
        "test"
    ],
    "projectManager.svn.maxDepthRecursion"   : 4,                                                // Set maximum recursion depth for SVN projects
    "projectManager.tags"                    : ["Personal", "Work"],                             // Define project tags
    "projectManager.vscode.baseFolders"      : [],                                               // Define base folders for VSCode projects
    "projectManager.vscode.maxDepthRecursion": 4,                                                // Set maximum recursion depth for VSCode projects
    "projectManager.vscode.ignoredFolders"   : [ // Ignore specific folders for VSCode projects
        "node_modules",
        "out",
        "typings",
        "test"
    ],

    // !═══ DotEnv ═════════════════════════════════════════════════════════════

    // Install DotEnv: `codium --install-extension mikestead.dotenv`
    "dotenv.enableAutocloaking": false,   // Disable auto-cloaking

    // !═══ ViTest ═════════════════════════════════════════════════════════════

    // Install ViTest: `codium --install-extension zixuanchen.vitest-explorer`
    "vitest.enable": true,   // Enable ViTest

    // !═══ NameSpaceResolver ══════════════════════════════════════════════════
    "namespaceResolver.sortAlphabetically": true,   // Sort namespaces alphabetically

    // !═════ Microsoft C/C++ Extension for VS Code ════════════════════════════
    // Install C/C++ extension: https://github.com/microsoft/vscode-cpptools

    "C_Cpp.addNodeAddonIncludePaths"                                  : true,                         // Add Node addon include paths
    "C_Cpp.autoAddFileAssociations"                                   : true,                         // Automatically add file associations
    "C_Cpp.autocomplete"                                              : "Default",                    // Set autocomplete behavior
    "C_Cpp.autocompleteAddParentheses"                                : true,                         // Add parentheses to autocomplete
    "C_Cpp.codeAnalysis.clangTidy.args"                               : [],                           // Define Clang-Tidy arguments
    "C_Cpp.codeAnalysis.clangTidy.checks.disabled"                    : [],                           // Disable specific Clang-Tidy checks
    "C_Cpp.codeAnalysis.clangTidy.checks.enabled"                     : [],                           // Enable specific Clang-Tidy checks
    "C_Cpp.codeAnalysis.clangTidy.codeAction.showClear"               : "AllAndAllTypeAndThis",       // Show clear code action
    "C_Cpp.codeAnalysis.clangTidy.codeAction.showDisable"             : true,                         // Show disable code action
    "C_Cpp.codeAnalysis.clangTidy.codeAction.showDocumentation"       : true,                         // Show documentation code action
    "C_Cpp.codeAnalysis.clangTidy.config"                             : "",                           // Set Clang-Tidy config
    "C_Cpp.codeAnalysis.clangTidy.enabled"                            : true,                         // Enable Clang-Tidy
    "C_Cpp.codeAnalysis.clangTidy.fallbackConfig"                     : "",                           // Set fallback config for Clang-Tidy
    "C_Cpp.codeAnalysis.clangTidy.headerFilter"                       : null,                         // Set header filter for Clang-Tidy
    "C_Cpp.codeAnalysis.clangTidy.path"                               : "",                           // Set Clang-Tidy path
    "C_Cpp.codeAnalysis.clangTidy.useBuildPath"                       : true,                         // Use build path for Clang-Tidy
    "C_Cpp.codeAnalysis.exclude"                                      : {},                           // Exclude specific files from code analysis
    "C_Cpp.codeAnalysis.maxConcurrentThreads"                         : null,                         // Set maximum concurrent threads for code analysis
    "C_Cpp.codeAnalysis.maxMemory"                                    : null,                         // Set maximum memory for code analysis
    "C_Cpp.codeAnalysis.runAutomatically"                             : true,                         // Run code analysis automatically
    "C_Cpp.codeAnalysis.updateDelay"                                  : 2000,                         // Set update delay for code analysis
    "C_Cpp.codeFolding"                                               : "Enabled",                    // Enable code folding
    "C_Cpp.configurationWarnings"                                     : "Enabled",                    // Enable configuration warnings
    "C_Cpp.debugShortcut"                                             : true,                         // Enable debug shortcut
    "C_Cpp.debugger.useBacktickCommandSubstitution"                   : true,                         // Use backtick command substitution
    "C_Cpp.default.browse.databaseFilename"                           : "",                           // Set browse database filename
    "C_Cpp.default.browse.limitSymbolsToIncludedHeaders"              : true,                         // Limit symbols to included headers
    "C_Cpp.default.browse.path"                                       : null,                         // Set browse path
    "C_Cpp.default.cStandard"                                         : "",                           // Set default C standard
    "C_Cpp.default.compileCommands"                                   : "",                           // Set default compile commands
    "C_Cpp.default.compilerArgs"                                      : [],                           // Set default compiler arguments
    "C_Cpp.default.compilerPath"                                      : null,                         // Set default compiler path
    "C_Cpp.default.configurationProvider"                             : "",                           // Set default configuration provider
    "C_Cpp.default.cppStandard"                                       : "",                           // Set default C++ standard
    "C_Cpp.default.customConfigurationVariables"                      : null,                         // Set custom configuration variables
    "C_Cpp.default.defines"                                           : [],                           // Set default defines
    "C_Cpp.default.dotConfig"                                         : null,                         // Set default dot config
    "C_Cpp.default.enableConfigurationSquiggles"                      : true,                         // Enable configuration squiggles
    "C_Cpp.default.forcedInclude"                                     : [],                           // Set default forced includes
    "C_Cpp.default.includePath"                                       : [],                           // Set default include path
    "C_Cpp.default.intelliSenseMode"                                  : "",                           // Set default IntelliSense mode
    "C_Cpp.default.macFrameworkPath"                                  : [],                           // Set default Mac framework path
    "C_Cpp.default.mergeConfigurations"                               : true,                         // Merge configurations
    "C_Cpp.default.systemIncludePath"                                 : [],                           // Set default system include path
    "C_Cpp.default.windowsSdkVersion"                                 : "",                           // Set default Windows SDK version
    "C_Cpp.dimInactiveRegions"                                        : true,                         // Dim inactive regions
    "C_Cpp.enhancedColorization"                                      : "Enabled",                    // Enable enhanced colorization
    "C_Cpp.errorSquiggles"                                            : "EnabledIfIncludesResolve",   // Enable error squiggles
    "C_Cpp.exclusionPolicy"                                           : "checkFolders",               // Set exclusion policy
    "C_Cpp.inactiveRegionBackgroundColor"                             : "",                           // Set inactive region background color
    "C_Cpp.inactiveRegionForegroundColor"                             : "",                           // Set inactive region foreground color
    "C_Cpp.inactiveRegionOpacity"                                     : 0.55,                         // Set inactive region opacity
    "C_Cpp.inlayHints.autoDeclarationTypes.enabled"                   : true,                         // Enable auto declaration types inlay hints
    "C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft"                : true,                         // Show auto declaration types on the left
    "C_Cpp.inlayHints.parameterNames.enabled"                         : true,                         // Enable parameter names inlay hints
    "C_Cpp.inlayHints.parameterNames.hideLeadingUnderscores"          : true,                         // Hide leading underscores in parameter names
    "C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName": true,                         // Suppress parameter names when argument contains name
    "C_Cpp.inlayHints.referenceOperator.enabled"                      : true,                         // Enable reference operator inlay hints
    "C_Cpp.inlayHints.referenceOperator.showSpace"                    : true,                         // Show space in reference operator inlay hints
    "C_Cpp.intelliSense.maxCachedProcesses"                           : null,                         // Set maximum cached processes for IntelliSense
    "C_Cpp.intelliSense.maxMemory"                                    : null,                         // Set maximum memory for IntelliSense
    "C_Cpp.intelliSenseCachePath"                                     : "",                           // Set IntelliSense cache path
    "C_Cpp.intelliSenseCacheSize"                                     : 5120,                         // Set IntelliSense cache size
    "C_Cpp.intelliSenseEngine"                                        : "Default",                    // Set IntelliSense engine
    "C_Cpp.intelliSenseEngineFallback"                                : "Disabled",                   // Disable IntelliSense engine fallback
    "C_Cpp.intelliSenseMemoryLimit"                                   : 4096,                         // Set IntelliSense memory limit
    "C_Cpp.intelliSenseUpdateDelay"                                   : 2000,                         // Set IntelliSense update delay
    "C_Cpp.legacyCompilerArgsBehavior"                                : true,                         // Enable legacy compiler arguments behavior
    "C_Cpp.loggingLevel"                                              : "Error",                      // Set logging level
    "C_Cpp.maxCachedProcesses"                                        : null,                         // Set maximum cached processes
    "C_Cpp.maxConcurrentThreads"                                      : null,                         // Set maximum concurrent threads
    "C_Cpp.maxMemory"                                                 : null,                         // Set maximum memory
    "C_Cpp.preferredPathSeparator"                                    : "Forward Slash",              // Set preferred path separator
    "C_Cpp.references.maxCachedProcesses"                             : 0,                            // Set maximum cached processes for references
    "C_Cpp.references.maxConcurrentThreads"                           : null,                         // Set maximum concurrent threads for references
    "C_Cpp.references.maxMemory"                                      : null,                         // Set maximum memory for references
    "C_Cpp.renameRequiresIdentifier"                                  : true,                         // Require identifier for renaming
    "C_Cpp.simplifyStructuredComments"                                : true,                         // Simplify structured comments
    "C_Cpp.suggestSnippets"                                           : true,                         // Suggest snippets
    "C_Cpp.updateChannel"                                             : "Default",                    // Set update channel
    "C_Cpp.vcpkg.enabled"                                             : true,                         // Enable Vcpkg
    "C_Cpp.workspaceParsingPriority"                                  : "highest",                    // Set workspace parsing priority
    "C_Cpp.workspaceSymbols"                                          : "Just My Code",               // Set workspace symbols
    "C_Cpp.commentContinuationPatterns"                               : ["/**"],                      // Set comment continuation patterns
    "C_Cpp.clang_format_fallbackStyle"                                : "Visual Studio",              // Set Clang-Format fallback style
    "C_Cpp.clang_format_path"                                         : "",                           // Set Clang-Format path
    "C_Cpp.clang_format_sortIncludes"                                 : null,                         // Set Clang-Format sort includes
    "C_Cpp.clang_format_style"                                        : "file",                       // Set Clang-Format style
    "C_Cpp.formatting"                                                : "Default",                    // Set formatting behavior
    "C_Cpp.vcFormat.indent.accessSpecifiers"                          : true,                         // Indent access specifiers
    "C_Cpp.vcFormat.indent.braces"                                    : true,                         // Indent braces
    "C_Cpp.vcFormat.indent.caseContents"                              : true,                         // Indent case contents
    "C_Cpp.vcFormat.indent.caseContentsWhenBlock"                     : true,                         // Indent case contents when block
    "C_Cpp.vcFormat.indent.caseLabels"                                : true,                         // Indent case labels
    "C_Cpp.vcFormat.indent.gotoLabels"                                : "oneLeft",                    // Indent goto labels
    "C_Cpp.vcFormat.indent.lambdaBracesWhenParameter"                 : true,                         // Indent lambda braces when parameter
    "C_Cpp.vcFormat.indent.multiLineRelativeTo"                       : "innermostParenthesis",       // Indent multi-line relative to
    "C_Cpp.vcFormat.indent.namespaceContents"                         : true,                         // Indent namespace contents
    "C_Cpp.vcFormat.indent.preprocessor"                              : "leftmostColumn",             // Indent preprocessor
    "C_Cpp.vcFormat.indent.preserveComments"                          : true,                         // Preserve comments
    "C_Cpp.vcFormat.indent.preserveWithinParentheses"                 : true,                         // Preserve within parentheses
    "C_Cpp.vcFormat.indent.withinParentheses"                         : "indent",                     // Indent within parentheses
    "C_Cpp.vcFormat.newLine.beforeCatch"                              : true,                         // New line before catch
    "C_Cpp.vcFormat.newLine.beforeElse"                               : true,                         // New line before else
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.block"                    : "ignore",                     // New line before open brace for blocks
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.function"                 : "ignore",                     // New line before open brace for functions
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda"                   : "ignore",                     // New line before open brace for lambdas
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace"                : "ignore",                     // New line before open brace for namespaces
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.type"                     : "ignore",                     // New line before open brace for types
    "C_Cpp.vcFormat.newLine.beforeWhileInDoWhile"                     : true,                         // New line before while in do-while
    "C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction"         : true,                         // Close brace same line for empty functions
    "C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType"             : true,                         // Close brace same line for empty types
    "C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines"               : true,                         // Scope braces on separate lines
    "C_Cpp.vcFormat.space.afterCastCloseParenthesis"                  : true,                         // Space after cast close parenthesis
    "C_Cpp.vcFormat.space.afterComma"                                 : true,                         // Space after comma
    "C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements"       : true,                         // Space after keywords in control flow statements
    "C_Cpp.vcFormat.space.aroundAssignmentOperator"                   : "insert",                     // Space around assignment operator
    "C_Cpp.vcFormat.space.aroundBinaryOperator"                       : "insert",                     // Space around binary operator
    "C_Cpp.vcFormat.space.aroundTernaryOperator"                      : "insert",                     // Space around ternary operator
    "C_Cpp.vcFormat.space.beforeBlockOpenBrace"                       : true,                         // Space before block open brace
    "C_Cpp.vcFormat.space.beforeComma"                                : true,                         // Space before comma
    "C_Cpp.vcFormat.space.beforeConstructorColon"                     : true,                         // Space before constructor colon
    "C_Cpp.vcFormat.space.beforeEmptySquareBrackets"                  : true,                         // Space before empty square brackets
    "C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis"              : "remove",                     // Space before function open parenthesis
    "C_Cpp.vcFormat.space.beforeInheritanceColon"                     : true,                         // Space before inheritance colon
    "C_Cpp.vcFormat.space.beforeInitializerListOpenBrace"             : true,                         // Space before initializer list open brace
    "C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis"                : true,                         // Space before lambda open parenthesis
    "C_Cpp.vcFormat.space.beforeOpenSquareBracket"                    : true,                         // Space before open square bracket
    "C_Cpp.vcFormat.space.betweenEmptyBraces"                         : true,                         // Space between empty braces
    "C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets"                 : true,                         // Space between empty lambda brackets
    "C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses"       : true,                         // Space between empty parameter list parentheses
    "C_Cpp.vcFormat.space.betweenEmptySquareBrackets"                 : true,                         // Space between empty square brackets
    "C_Cpp.vcFormat.space.groupSquareBrackets"                        : true,                         // Group square brackets
    "C_Cpp.vcFormat.space.insertAfterSemicolon"                       : true,                         // Insert space after semicolon
    "C_Cpp.vcFormat.space.pointerReferenceAlignment"                  : "left",                       // Pointer reference alignment
    "C_Cpp.vcFormat.space.preserveInInitializerList"                  : true,                         // Preserve space in initializer list
    "C_Cpp.vcFormat.space.removeAroundMemberOperators"                : true,                         // Remove space around member operators
    "C_Cpp.vcFormat.space.removeAroundUnaryOperator"                  : true,                         // Remove space around unary operator
    "C_Cpp.vcFormat.space.removeBeforeSemicolon"                      : true,                         // Remove space before semicolon
    "C_Cpp.vcFormat.space.withinCastParentheses"                      : true,                         // Space within cast parentheses
    "C_Cpp.vcFormat.space.withinControlFlowStatementParentheses"      : true,                         // Space within control flow statement parentheses
    "C_Cpp.vcFormat.space.withinExpressionParentheses"                : true,                         // Space within expression parentheses
    "C_Cpp.vcFormat.space.withinInitializerListBraces"                : true,                         // Space within initializer list braces
    "C_Cpp.vcFormat.space.withinLambdaBrackets"                       : true,                         // Space within lambda brackets
    "C_Cpp.vcFormat.space.withinParameterListParentheses"             : true,                         // Space within parameter list parentheses
    "C_Cpp.vcFormat.space.withinSquareBrackets"                       : true,                         // Space within square brackets
    "C_Cpp.vcFormat.wrap.preserveBlocks"                              : "oneLiners",                  // Wrap preserve blocks

    // !═════ CMake Integration in Visual Studio Code ══════════════════════════
    // https://github.com/microsoft/vscode-cmake-tools

    "cmake.additionalKits"                        : [],
    "cmake.allowCommentsInPresetsFile"            : true,
    "cmake.autoSelectActiveFolder"                : true,
    "cmake.build.targetDependencies"              : [],
    "cmake.build.workspaceTargets"                : [],
    "cmake.buildArgs"                             : [],
    "cmake.buildArguments"                        : "",
    "cmake.buildBeforeRun"                        : true,
    "cmake.buildDirectory"                        : "${workspaceFolder}/build",
    "cmake.buildEnvironment"                      : {},
    "cmake.buildTask"                             : true,
    "cmake.buildToolArgs"                         : [],
    "cmake.cacheInit"                             : null,
    "cmake.clearOutputBeforeBuild"                : true,
    "cmake.cmakeAPI"                              : "Auto",
    "cmake.cmakeCommunicationMode"                : "automatic",
    "cmake.cmakePath"                             : "cmake",
    "cmake.configureArgs"                         : [],
    "cmake.configureArguments"                    : "",
    "cmake.configureEnvironment"                  : {},
    "cmake.configureOnEdit"                       : true,
    "cmake.configureOnOpen"                       : null,
    "cmake.configureOnStart"                      : true,
    "cmake.configureSettings"                     : {},
    "cmake.copyCompileCommands"                   : null,
    "cmake.cpptools.browseTargets"                : [],
    "cmake.cpptools.compilerPath"                 : "",
    "cmake.cpptools.globalBrowseTargets"          : [],
    "cmake.cpptools.guessSourceFileConfigurations": "true",
    "cmake.cpptools.intelliSenseMode"             : "",
    "cmake.cpptools.languageConfiguration.C"      : {},
    "cmake.cpptools.languageConfiguration.CUDA"   : {},
    "cmake.cpptools.languageConfiguration.CXX"    : {},
    "cmake.cpptools.windowsSdkVersion"            : "",
    "cmake.ctest.parallelJobs"                    : 0,
    "cmake.ctestArgs"                             : [],
    "cmake.ctestDefaultArgs"                      : ["-T", "test", "--output-on-failure"],
    "cmake.ctestPath"                             : null,
    "cmake.debugConfig"                           : {},
    "cmake.default.buildDirectory"                : "${workspaceFolder}/build",
    "cmake.default.cacheEntries"                  : [],
    "cmake.default.env"                           : {},
    "cmake.default.extraGenerator"                : "",
    "cmake.default.generator"                     : "Ninja",
    "cmake.defaultVariants"                       : {
    "buildType": {
    "choices": {
        "debug": {
        "buildType": "Debug",
        "long"     : "Disable optimizations - include debug information.",
        "short"    : "Debug"
        },
        "minsize": {
        "buildType": "MinSizeRel",
        "long"     : "Optimize for smallest binary size - exclude debug information.",
        "short"    : "MinSizeRel"
        },
        "reldeb": {
        "buildType": "RelWithDebInfo",
        "long"     : "Optimize for speed - include debug information.",
        "short"    : "RelWithDebInfo"
        },
        "release": {
        "buildType": "Release",
        "long"     : "Optimize for speed - exclude debug information.",
        "short"    : "Release"
        }
    },
    "default"    : "debug",
    "description": "The build type."
    }
    },
    "cmake.emscriptenSearchDirs"        : [],
    "cmake.enableTraceLogging"          : true,
    "cmake.enabledOutputParsers"        : ["cmake", "gcc", "gnuld", "msvc", "ghs", "diab"],
    "cmake.environment"                 : {},
    "cmake.exportCompileCommandsFile"   : true,
    "cmake.generator"                   : null,
    "cmake.ignoreCMakeListsMissing"     : true,
    "cmake.ignoreKitEnv"                : true,
    "cmake.installPrefix"               : null,
    "cmake.launchBehavior"              : "reuseTerminal",
    "cmake.loggingLevel"                : "info",
    "cmake.mergedCompileCommands"       : null,
    "cmake.mingwSearchDirs"             : ["${env:SystemDrive}/MinGW"],
    "cmake.outputLogEncoding"           : "auto",
    "cmake.parallelJobs"                : 0,
    "cmake.parseBuildDiagnostics"       : true,
    "cmake.platform"                    : null,
    "cmake.preferredGenerators"         : [],
    "cmake.reconfigureOnChange"         : true,
    "cmake.revealLog"                   : "always",
    "cmake.saveBeforeBuild"             : true,
    "cmake.setBuildTypeOnMultiConfig"   : true,
    "cmake.showConsoleAutomatically"    : true,
    "cmake.showSystemKits"              : true,
    "cmake.skipConfigureIfCachePresent" : null,
    "cmake.sourceDirectory"             : "${workspaceFolder}",
    "cmake.statusbar.advanced"          : {},
    "cmake.statusbar.visibility"        : "default",
    "cmake.testEnvironment"             : {},
    "cmake.toolset"                     : null,
    "cmake.touchbar.advanced"           : {},
    "cmake.touchbar.visibility"         : "default",
    "cmake.useCMakePresets"             : "auto",
    "cmakeLanguageSupport.enableFileAPI": true,

    // !═════ SQLTools Configuration ═══════════════════════════════════════════

    "sqltools.useNodeRuntime"                 : true,
    "sqltools.connections"                    : [],
    "workbench.panel.opensMaximized"          : "always",
    "workbench.panel.defaultLocation"         : "bottom",
    "workbench.editor.openSideBySideDirection": "right",
    "workbench.editor.openPositioning"        : "right",
    "workbench.editor.pinnedTabSizing"        : "compact",

    // !═════ Path Intellisense ════════════════════════════════════════════════

    "path-intellisense.absolutePathTo"           : "",
    "path-intellisense.absolutePathToWorkspace"  : true,
    "path-intellisense.autoSlashAfterDirectory"  : false,
    "path-intellisense.autoTriggerNextSuggestion": false,
    "path-intellisense.extensionOnImport"        : false,
    "path-intellisense.ignoreTsConfigBaseUrl"    : false,
    "path-intellisense.mappings"                 : {},
    "path-intellisense.showHiddenFiles"          : false,
    "path-intellisense.showOnAbsoluteSlash"      : true,

    // !═════ Workspace Settings ═══════════════════════════════════════════════

    "dotfiles.installCommand": "",
    "dotfiles.repository"    : "",
    "dotfiles.targetPath"    : "~/dotfiles",

    // !═════ File Handling Settings ═══════════════════════════════════════════

    "files.defaultLanguage"         : "",
    "files.enableTrash"             : true,
    "files.maxMemoryForLargeFilesMB": 4096,
    "files.participants.timeout"    : 60000,
    "files.saveConflictResolution"  : "askUser",
    "files.watcherInclude"          : [],
    "files.autoSave"                : "onFocusChange",
    "files.autoSaveDelay"           : 1000,
    "files.encoding"                : "utf8",
    "files.autoGuessEncoding"       : true,
    "files.simpleDialog.enable"     : true,
    "files.eol"                     : "\n",
    "files.trimFinalNewlines"       : true,
    "files.trimTrailingWhitespace"  : true,
    "files.insertFinalNewline"      : true,
    "files.hotExit"                 : "onExitAndWindowClose",
    "files.restoreUndoStack"        : true,
    "files.associations"            : {
    "*.toml"          : "ini",
    "*.dsl"           : "plaintext",
    "*.aml"           : "plaintext",
    "*.blade.php"     : "html",
    "*.twig"          : "html",
    "*.njk"           : "html",
    "*.env*"          : "dotenv",
    "*.mdx"           : "markdown",
    "*.fish"          : "powershell",
    "*.js"            : "javascript",
    "*.cjs"           : "javascript",
    "*.mjs"           : "javascript",
    "*.ts"            : "typescript",
    "*.tsx"           : "typescriptreact",
    "*.vue"           : "vue",
    "*.svelte"        : "svelte",
    "*.astro"         : "astro",
    "copyright"       : "json",
    "*.ipp"           : "cpp",
    "strstream"       : "cpp",
    "cerrno"          : "cpp",
    "csetjmp"         : "cpp",
    "cstdarg"         : "cpp",
    "rope"            : "cpp",
    "iostream"        : "cpp",
    "streambuf"       : "cpp",
    "*.tcc"           : "cpp",
    "regex"           : "cpp",
    "algorithm"       : "cpp",
    "array"           : "cpp",
    "atomic"          : "cpp",
    "bit"             : "cpp",
    "bitset"          : "cpp",
    "cassert"         : "cpp",
    "cctype"          : "cpp",
    "cfloat"          : "cpp",
    "chrono"          : "cpp",
    "ciso646"         : "cpp",
    "climits"         : "cpp",
    "clocale"         : "cpp",
    "cmath"           : "cpp",
    "complex"         : "cpp",
    "cstddef"         : "cpp",
    "cstdint"         : "cpp",
    "cstdio"          : "cpp",
    "cstdlib"         : "cpp",
    "cstring"         : "cpp",
    "ctime"           : "cpp",
    "cwchar"          : "cpp",
    "cwctype"         : "cpp",
    "deque"           : "cpp",
    "list"            : "cpp",
    "map"             : "cpp",
    "set"             : "cpp",
    "string"          : "cpp",
    "unordered_map"   : "cpp",
    "vector"          : "cpp",
    "exception"       : "cpp",
    "functional"      : "cpp",
    "iterator"        : "cpp",
    "memory"          : "cpp",
    "memory_resource" : "cpp",
    "numeric"         : "cpp",
    "optional"        : "cpp",
    "random"          : "cpp",
    "ratio"           : "cpp",
    "string_view"     : "cpp",
    "system_error"    : "cpp",
    "tuple"           : "cpp",
    "type_traits"     : "cpp",
    "utility"         : "cpp",
    "fstream"         : "cpp",
    "initializer_list": "cpp",
    "iomanip"         : "cpp",
    "ios"             : "cpp",
    "iosfwd"          : "cpp",
    "istream"         : "cpp",
    "limits"          : "cpp",
    "locale"          : "cpp",
    "new"             : "cpp",
    "ostream"         : "cpp",
    "queue"           : "cpp",
    "sstream"         : "cpp",
    "stdexcept"       : "cpp",
    "thread"          : "cpp",
    "cfenv"           : "cpp",
    "cinttypes"       : "cpp",
    "typeindex"       : "cpp",
    "typeinfo"        : "cpp",
    "variant"         : "cpp",
    "compare"         : "cpp"
    },
    "files.exclude": {
    "**/.git"        : true,
    "**/.DS_Store"   : true,
    "**/node_modules": true,
    "**/dist"        : true,
    "**/build"       : true,
    "**/vendor/*/**" : true
    },
    "files.watcherExclude": {
    "**/.git/objects/**"      : true,
    "**/.git/subtree-cache/**": true,
    "**/.hg/store/**"         : true,
    "**/node_modules/**"      : true,
    "**/dist/**"              : true
    },

    // !═════ File Explorer Settings ═══════════════════════════════════════════

    "explorer.confirmUndo"                  : "default",
    "explorer.enableUndo"                   : true,
    "explorer.expandSingleFolderWorkspaces" : true,
    "explorer.openEditors.sortOrder"        : "editorOrder",
    "explorer.sortOrderLexicographicOptions": "default",
    "explorer.iconTheme"                    : "symbols",
    "explorer.compactFolders"               : true,
    "explorer.decorations.badges"           : true,
    "explorer.decorations.colors"           : true,
    "explorer.sortOrder"                    : "default",
    "explorer.confirmDelete"                : false,
    "explorer.openEditors.visible"          : 10,
    "explorer.autoReveal"                   : true,
    "explorer.confirmDragAndDrop"           : true,
    "explorer.workingFiles.dynamicHeight"   : true,
    "explorer.excludeGitIgnore"             : true,
    "explorer.autoRevealExclude"            : {
    "**/node_modules": true,
    "**/dist"        : true
    },
    "explorer.incrementalNaming"        : "smart",
    "explorer.copyRelativePathSeparator": "/",
    "explorer.autoRevealOnFocus"        : true,
    "explorer.autoRevealOnSelection"    : true,
    "explorer.fileWatcherExclude"       : {
    "**/.git/objects/**": true,
    "**/node_modules/**": true,
    "**/dist/**"        : true
    },
    "explorer.fileNesting.expand"  : true,
    "explorer.fileNesting.enabled" : true,
    "explorer.fileNesting.patterns": {
    ".clang-tidy"     : ".clang-format, .clangd, compile_commands.json",
    ".env"            : "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore"      : ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project"        : ".classpath",
    "+layout.svelte"  : "+layout.ts, +layout.js, +layout.server.ts, +layout.server.js, +layout.gql",
    "+page.svelte"    : "+page.server.ts, +page.server.js, +page.ts, +page.js, +page.gql",
    "app.config.*"    : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "artisan"         : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*"  : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "BUILD.bazel"     : "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "Cargo.toml"      : ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "CMakeLists.txt"  : "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "composer.json"   : ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix"     : "shell.nix",
    "deno.json*"      : "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "Dockerfile"      : "*.dockerfile, .devcontainer.*, .dockerignore, compose.*, docker-compose.*, dockerfile*",
    "flake.nix"       : "flake.lock",
    "gatsby-config.*" : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile"         : ".ruby-version, gemfile.lock",
    "go.mod"          : ".air*, go.sum",
    "go.work"         : "go.work.sum",
    "hatch.toml"      : ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "I*.cs"           : "$(capture).cs",
    "Makefile"        : "*.mk",
    "mix.exs"         : ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*"   : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*"   : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json"    : ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "Pipfile"         : ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "pubspec.yaml"    : ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml"  : ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, tox.ini, tslint*, xo.config.*",
    "quasar.conf.js"  : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*"         : "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, RELEASE_NOTES*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, release_notes*, security.md, sponsors*",
    "remix.config.*"  : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json"       : ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "setup.cfg"       : ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py"        : ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts"      : "*.d.ts",
    "svelte.config.*" : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*"   : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*"    : "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "*.asax"          : "$(capture).*.cs, $(capture).*.vb",
    "*.ascx"          : "$(capture).*.cs, $(capture).*.vb",
    "*.ashx"          : "$(capture).*.cs, $(capture).*.vb",
    "*.aspx"          : "$(capture).*.cs, $(capture).*.vb",
    "*.axaml"         : "$(capture).axaml.cs",
    "*.bloc.dart"     : "$(capture).event.dart, $(capture).state.dart",
    "*.c"             : "$(capture).h",
    "*.cc"            : "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs"           : "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts"  : "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp"           : "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs"            : "$(capture).*.cs",
    "*.cshtml"        : "$(capture).cshtml.cs",
    "*.csproj"        : "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css"           : "$(capture).css.map, $(capture).*.css",
    "*.cxx"           : "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart"          : "$(capture).freezed.dart, $(capture).g.dart",
    "*.db"            : "*.db-shm, *.db-wal",
    "*.ex"            : "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs"            : "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go"            : "$(capture)_test.go",
    "*.java"          : "$(capture).class",
    "*.js"            : "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx"           : "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less",
    "*.master"        : "$(capture).*.cs, $(capture).*.vb",
    "*.md"            : "$(capture).*",
    "*.mjs"           : "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts"     : "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts"           : "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml"        : "$(capture).pubxml.user",
    "*.razor"         : "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx"          : "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex"           : "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts"            : "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx"           : "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).scss, $(capture).module.scss",
    "*.vbproj"        : "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue"           : "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml"          : "$(capture).xaml.cs"
    },

    // !═════ Git Integration Settings ═════════════════════════════════════════

    "merge-conflict.autoNavigateNextConflict.enabled": false,
    "merge-conflict.codeLens.enabled"                : true,
    "merge-conflict.decorators.enabled"              : true,
    "merge-conflict.diffViewPosition"                : "Current",
    "github-enterprise.uri"                          : "",
    "github.gitAuthentication"                       : true,
    "github.githubAuthentication"                    : null,
    "git.allowForcePush"                             : true,
    "git.allowNoVerifyCommit"                        : true,
    "git.alwaysShowStagedChangesResourceGroup"       : true,
    "git.alwaysSignOff"                              : true,
    "git.autoStash"                                  : true,
    "git.autorefresh"                                : true,
    "git.branchSortOrder"                            : "committerdate",
    "git.branchValidationRegex"                      : "",
    "git.branchWhitespaceChar"                       : "-",
    "git.checkoutType"                               : ["local", "remote", "tags"],
    "git.closeDiffOnOperation"                       : true,
    "git.commandsToLog"                              : [],
    "git.confirmEmptyCommits"                        : true,
    "git.confirmNoVerifyCommit"                      : true,
    "git.countBadge"                                 : "all",
    "git.defaultCloneDirectory"                      : null,
    "git.detectSubmodules"                           : true,
    "git.detectSubmodulesLimit"                      : 10,
    "git.enableSmartCommit"                          : true,
    "git.enableStatusBarSync"                        : true,
    "git.experimental.installGuide"                  : "download",
    "git.fetchOnPull"                                : true,
    "git.followTagsWhenSync"                         : true,
    "git.ignoreLimitWarning"                         : true,
    "git.ignoreWindowsGit27Warning"                  : true,
    "git.ignoredRepositories"                        : [],
    "git.openAfterClone"                             : "prompt",
    "git.openDiffOnClick"                            : true,
    "git.path"                                       : null,
    "git.postCommitCommand"                          : "none",
    "git.pruneOnFetch"                               : true,
    "git.pullTags"                                   : true,
    "git.rebaseWhenSync"                             : true,
    "git.repositoryScanIgnoredFolders"               : ["node_modules"],
    "git.repositoryScanMaxDepth"                     : 1,
    "git.requireGitUserConfig"                       : true,
    "git.scanRepositories"                           : [],
    "git.showCommitInput"                            : true,
    "git.showInlineOpenFileAction"                   : true,
    "git.showProgress"                               : true,
    "git.showPushSuccessNotification"                : true,
    "git.showUnpublishedCommitsButton"               : "whenEmpty",
    "git.smartCommitChanges"                         : "all",
    "git.statusLimit"                                : 10000,
    "git.suggestSmartCommit"                         : true,
    "git.supportCancellation"                        : true,
    "git.terminalAuthentication"                     : true,
    "git.timeline.date"                              : "committed",
    "git.timeline.showAuthor"                        : true,
    "git.untrackedChanges"                           : "mixed",
    "git.useCommitInputAsStashMessage"               : true,
    "git.useForcePushWithLease"                      : true,
    "git.useIntegratedAskPass"                       : true,
    "git.inputValidation"                            : true,
    "git.inputValidationSubjectLength"               : 50,
    "git.inputValidationLength"                      : 72,
    "git.enableCommitSigning"                        : false,
    "git.ignoreLegacyWarning"                        : true,
    "git.ignoreMissingGitWarning"                    : true,
    "git.ignoreRebaseWarning"                        : true,
    "git.ignoreSubmodules"                           : false,
    "git.promptToSaveFilesBeforeCommit"              : "always",
    "git.promptToSaveFilesBeforeStash"               : "always",
    "git.enabled"                                    : true,
    "git.autofetchPeriod"                            : 180,
    "git.confirmSync"                                : true,
    "git.confirmForcePush"                           : true,
    "git.decorations.enabled"                        : true,
    "git.showOutput"                                 : true,
    "git.statusBar.enabled"                          : true,
    "git.statusBar.count"                            : "all",
    "git.statusBar.blame.enabled"                    : true,
    "git.decorations.showUntracked"                  : true,
    "git.decorations.showChanges"                    : true,
    "git.autoRefresh"                                : true,
    "git.defaultBranchName"                          : "main",
    "git.mergeEditor"                                : true,
    "git.conflictResolution.enabled"                 : true,
    "git.rebaseEditor"                               : true,
    "git.stash.enabled"                              : true,
    "git.logNavigation"                              : true,
    "git.logDecoration"                              : true,
    "git.logFollow"                                  : true,
    "git.logShowSignature"                           : true,
    "git.logShowCommitMessage"                       : true,
    "git.logShowAuthor"                              : true,
    "git.logShowDate"                                : true,
    "git.logShowChanges"                             : true,
    "git.logShowMergeCommits"                        : true,
    "git.logShowTags"                                : true,
    "git.logShowBranches"                            : true,
    "git.logShowRemotes"                             : true,
    "git.logShowStashes"                             : true,
    "git.logShowNotes"                               : true,
    "git.logShowAll"                                 : true,
    "git.logShowGraph"                               : true,
    "git.promptToSaveFilesBeforeCheckout"            : "always",
    "git.promptToSaveFilesBeforeMerge"               : "always",
    "git.promptToSaveFilesBeforeRebase"              : "always",
    "git.promptToSaveFilesBeforeSync"                : "always",
    "git.promptToSaveFilesBeforePull"                : "always",
    "git.promptToSaveFilesBeforePush"                : "always",
    "git.promptToSaveFilesBeforeFetch"               : "always",
    "git.promptToSaveFilesBeforeReset"               : "always",
    "git.promptToSaveFilesBeforeClean"               : "always",
    "git.promptToSaveFilesBeforeRevert"              : "always",
    "git.promptToSaveFilesBeforeCherryPick"          : "always",
    "git.promptToSaveFilesBeforeApply"               : "always",
    "git.promptToSaveFilesBeforePop"                 : "always",
    "git.promptToSaveFilesBeforeBranch"              : "always",
    "git.promptToSaveFilesBeforeTag"                 : "always",
    "git.promptToSaveFilesBeforeDelete"              : "always",
    "git.promptToSaveFilesBeforeRename"              : "always",
    "git.promptToSaveFilesBeforeCheckoutCommit"      : "always",
    "git.promptToSaveFilesBeforeCheckoutTag"         : "always",
    "git.promptToSaveFilesBeforeCheckoutBranch"      : "always",
    "git.promptToSaveFilesBeforeCheckoutFile"        : "always",
    "git.promptToSaveFilesBeforeCheckoutPaths"       : "always",
    "git.promptToSaveFilesBeforeCheckoutRemote"      : "always",
    "git.promptToSaveFilesBeforeCheckoutPullRequest" : "always",

    // !═════ Remote Development Settings ══════════════════════════════════════

    "remote.downloadExtensionsLocally"                   : false,
    "remote.SSH.allowLocalServerDownload"                : true,
    "remote.SSH.configFile"                              : "",
    "remote.SSH.connectTimeout"                          : 15,
    "remote.SSH.defaultExtensions"                       : [],
    "remote.SSH.defaultForwardedPorts"                   : [],
    "remote.SSH.enableAgentForwarding"                   : true,
    "remote.SSH.enableDynamicForwarding"                 : true,
    "remote.SSH.enableRemoteCommand"                     : false,
    "remote.SSH.enableX11Forwarding"                     : true,
    "remote.SSH.externalSSH_ASKPASS"                     : false,
    "remote.SSH.localServerDownload"                     : "auto",
    "remote.SSH.lockfilesInTmp"                          : false,
    "remote.SSH.logLevel"                                : "debug",
    "remote.SSH.maxReconnectionAttempts"                 : null,
    "remote.SSH.path"                                    : "",
    "remote.SSH.remotePlatform"                          : {},
    "remote.SSH.remoteServerListenOnSocket"              : false,
    "remote.SSH.serverInstallPath"                       : {},
    "remote.SSH.serverPickPortsFromRange"                : {},
    "remote.SSH.showLoginTerminal"                       : false,
    "remote.SSH.suppressWindowsSshWarning"               : false,
    "remote.SSH.useFlock"                                : true,
    "remote.SSH.useLocalServer"                          : true,
    "remote.SSH.windowsRemotes"                          : [],
    "remote.WSL.debug"                                   : false,
    "remote.WSL.fileWatcher.polling"                     : false,
    "remote.WSL.fileWatcher.pollingInterval"             : 5000,
    "remote.WSL.server.connectThroughLocalhost"          : false,
    "remote.WSL.useShellEnvironment"                     : true,
    "remote.WSL1.connectionMethod"                       : "localhost",
    "remote.WSL2.connectionMethod"                       : "wslExeProxy",
    "remote.autoForwardPorts"                            : true,
    "remote.autoForwardPortsSource"                      : "process",
    "remote.containers.cacheVolume"                      : true,
    "remote.containers.copyGitConfig"                    : true,
    "remote.containers.defaultExtensions"                : [],
    "remote.containers.dockerComposePath"                : "docker-compose",
    "remote.containers.dockerPath"                       : "docker",
    "remote.containers.executeInWSL"                     : false,
    "remote.containers.executeInWSLDistro"               : "",
    "remote.containers.gitCredentialHelperConfigLocation": "global",
    "remote.containers.logLevel"                         : "debug",
    "remote.containers.repositoryConfigurationPaths"     : [],
    "remote.containers.workspaceMountConsistency"        : "cached",
    "remote.restoreForwardedPorts"                       : true,
    "remote.SSH.foldersSortOrder"                        : "most recently used",
    "remote.containers.dotfiles.installCommand"          : "",
    "remote.containers.dotfiles.repository"              : "",
    "remote.containers.dotfiles.targetPath"              : "",
    "remote.extensionKind"                               : {
    "pub.name": ["ui"]
    },
    "remote.localPortHost"       : "localhost",
    "remote.otherPortsAttributes": {},
    "remote.portsAttributes"     : {
    "443": {
    "protocol": "https"
    },
    "8443": {
    "protocol": "https"
    }
    },

    // !═════ Search Settings ══════════════════════════════════════════════════

    "search.mode"                                      : "view",
    "search.actionsPosition"                           : "right",
    "search.collapseResults"                           : "alwaysExpand",
    "search.maxResults"                                : 20000,
    "search.quickOpen.history.filterSortOrder"         : "default",
    "search.quickOpen.includeHistory"                  : true,
    "search.quickOpen.includeSymbols"                  : false,
    "search.searchOnType"                              : true,
    "search.searchOnTypeDebouncePeriod"                : 300,
    "search.seedOnFocus"                               : false,
    "search.seedWithNearestWord"                       : false,
    "search.showLineNumbers"                           : false,
    "search.smartCase"                                 : false,
    "search.sortOrder"                                 : "default",
    "search.useGlobalIgnoreFiles"                      : false,
    "search.useParentIgnoreFiles"                      : false,
    "search.useReplacePreview"                         : true,
    "search.searchEditor.defaultNumberOfContextLines"  : 1,
    "search.searchEditor.doubleClickBehaviour"         : "goToLocation",
    "search.searchEditor.reusePriorSearchConfiguration": false,
    "search.followSymlinks"                            : false,
    "search.useIgnoreFiles"                            : true,
    "search.exclude"                                   : {
    "**/*.code-search"   : true,
    "**/bower_components": true,
    "**/node_modules"    : true
    },

    // !═════ SCM (Source Control) Settings ════════════════════════════════════

    "scm.alwaysShowActions"           : false,
    "scm.alwaysShowRepositories"      : false,
    "scm.autoReveal"                  : true,
    "scm.countBadge"                  : "all",
    "scm.defaultViewMode"             : "list",
    "scm.defaultViewSortKey"          : "path",
    "scm.diffDecorations"             : "all",
    "scm.diffDecorationsGutterAction" : "diff",
    "scm.diffDecorationsGutterPattern": {
    "added"   : false,
    "modified": true
    },
    "scm.diffDecorationsGutterVisibility"    : "always",
    "scm.diffDecorationsGutterWidth"         : 3,
    "scm.diffDecorationsIgnoreTrimWhitespace": "false",
    "scm.inputFontFamily"                    : "default",
    "scm.inputFontSize"                      : 13,
    "scm.providerCountBadge"                 : "hidden",
    "scm.repositories.sortOrder"             : "discovery time",
    "scm.repositories.visible"               : 10,
    "scm.showActionButton"                   : true,

    // !═════ Task Runner Auto-Detection Settings ══════════════════════════════

    "task.autoDetect"                               : "on",
    "task.problemMatchers.neverPrompt"              : false,
    "task.quickOpen.detail"                         : true,
    "task.quickOpen.history"                        : 30,
    "task.quickOpen.showAll"                        : false,
    "task.quickOpen.skip"                           : false,
    "task.saveBeforeRun"                            : "always",
    "task.slowProviderWarning"                      : true,
    "grunt.autoDetect"                              : "off",
    "gulp.autoDetect"                               : "off",
    "jake.autoDetect"                               : "off",
    "testing.autoRun.delay"                         : 1000,
    "testing.gutterEnabled"                         : true,
    "testing.saveBeforeTest"                        : true,
    "testing.followRunningTest"                     : true,
    "testing.automaticallyOpenPeekViewDuringAutoRun": false,
    "testing.autoRun.mode"                          : "all",
    "testing.defaultGutterClickAction"              : "run",
    "testing.openTesting"                           : "openOnTestStart",
    "testing.automaticallyOpenTestResults"          : "openOnTestStart",
    "testing.automaticallyOpenPeekView"             : "failureInVisibleDocument",
    "timeline.excludeSources"                       : null,
    "timeline.pageOnScroll"                         : false,
    "timeline.pageSize"                             : null,
    "tabout.disableByDefault"                       : true,

    // !═════ Terminal Settings ════════════════════════════════════════════════

    "terminal.integrated.fontFamily"                            : "'FiraCode Nerd Font', 'Courier New', monospace",
    "terminal.integrated.fontSize"                              : 10,
    "terminal.integrated.lineHeight"                            : 1,
    "terminal.integrated.letterSpacing"                         : 0,
    "terminal.integrated.gpuAcceleration"                       : "off", // Do not change! This breaks fonts
    "terminal.integrated.rendererType"                          : "dom", // Options: "auto", "canvas", "dom"
    "terminal.integrated.enableEmoji"                            : true,
    "terminal.integrated.enableImages"                          : true,
    "terminal.integrated.tabStopWidth"                          : 8,
    "terminal.integrated.hideOnStartup"                         : "never",
    "terminal.integrated.persistentSessionReviveProcess"        : "onExit",
    "terminal.integrated.allowChords"                           : true,
    "terminal.integrated.confirmOnExit"                         : "hasChildProcesses",
    "terminal.integrated.confirmOnKill"                         : "editor",
    "terminal.integrated.enableFileLinks"                       : "on",
    "terminal.integrated.enableMultiLinePasteWarning"           : "always",
    "terminal.integrated.shellIntegration.decorationsEnabled"   : "gutter",
    "terminal.integrated.allowMnemonics"                        : false,
    "terminal.integrated.altClickMovesCursor"                   : true,
    "terminal.integrated.automationProfile.linux"               : null,
    "terminal.integrated.automationProfile.osx"                 : null,
    "terminal.integrated.automationProfile.windows"             : null,
    "terminal.integrated.automationShell.linux"                 : null,
    "terminal.integrated.automationShell.osx"                   : null,
    "terminal.integrated.automationShell.windows"               : null,
    "terminal.integrated.bellDuration"                          : 1000,
    "terminal.integrated.copyOnSelection"                       : true,
    "terminal.integrated.cursorBlinking"                        : true,
    "terminal.integrated.cursorStyle"                           : "underline",
    "terminal.integrated.cursorForeground"                      : "#00ff00",
    "terminal.integrated.cursorWidth"                           : 2,
    "terminal.integrated.customGlyphs"                          : true,
    "terminal.integrated.detectLocale"                          : "auto",
    "terminal.integrated.environmentChangesIndicator"           : "warnonly",
    "terminal.integrated.environmentChangesRelaunch"            : true,
    "terminal.integrated.fastScrollSensitivity"                 : 5,
    "terminal.integrated.inheritEnv"                            : true,
    "terminal.explorerKind"                                     : "integrated",
    "terminal.external.linuxExec"                               : "xterm",
    "terminal.external.osxExec"                                 : "Terminal.app",
    "terminal.external.windowsExec"                             : "C:\\WINDOWS\\System32\\cmd.exe",
    "terminal.integrated.shell.linux"                           : null,
    "terminal.integrated.shell.osx"                             : null,
    "terminal.integrated.shell.windows"                         : null,
    "terminal.integrated.shellArgs.linux"                       : [],
    "terminal.integrated.shellArgs.osx"                         : ["-l"],
    "terminal.integrated.shellArgs.windows"                     : [],
    "terminal.integrated.tabs.description"                      : "${task}${separator}${local}${separator}${cwdFolder}",
    "terminal.integrated.cwd"                                   : "",
    "terminal.integrated.defaultLocation"                       : "view",
    "terminal.integrated.enablePersistentSessions"              : true,
    "terminal.integrated.localEchoEnabled"                      : "auto",
    "terminal.integrated.localEchoLatencyThreshold"             : 30,
    "terminal.integrated.localEchoStyle"                        : "dim",
    "terminal.integrated.macOptionClickForcesSelection"         : false,
    "terminal.integrated.macOptionIsMeta"                       : false,
    "terminal.integrated.minimumContrastRatio"                  : 4.5,
    "terminal.integrated.mouseWheelScrollSensitivity"           : 1,
    "terminal.integrated.persistentSessionScrollback"           : 1000,
    "terminal.integrated.rightClickBehavior"                    : "copyPaste",
    "terminal.integrated.scrollback"                            : 1000,
    "terminal.integrated.sendKeybindingsToShell"                : false,
    "terminal.integrated.shellIntegration.decorationIcon"       : "circle-outline",
    "terminal.integrated.shellIntegration.decorationIconError"  : "error-small",
    "terminal.integrated.shellIntegration.decorationIconSuccess": "primitive-dot",
    "terminal.integrated.shellIntegration.enabled"              : false,
    "terminal.integrated.shellIntegration.history"              : 100,
    "terminal.integrated.shellIntegration.showWelcome"          : true,
    "terminal.integrated.useWslProfiles"                        : true,
    "terminal.integrated.windowsEnableConpty"                   : true,
    "terminal.integrated.showExitAlert"                         : true,
    "terminal.integrated.showLinkHover"                         : true,
    "terminal.integrated.splitCwd"                              : "inherited",
    "terminal.integrated.tabs.enableAnimation"                  : true,
    "terminal.integrated.tabs.enabled"                          : true,
    "terminal.integrated.tabs.focusMode"                        : "doubleClick",
    "terminal.integrated.tabs.hideCondition"                    : "singleTerminal",
    "terminal.integrated.tabs.location"                         : "right",
    "terminal.integrated.tabs.separator"                        : " - ",
    "terminal.integrated.tabs.showActions"                      : "singleTerminalOrNarrow",
    "terminal.integrated.tabs.showActiveTerminal"               : "singleTerminalOrNarrow",
    "terminal.integrated.tabs.title"                            : "${process}",
    "terminal.integrated.wordSeparators"                        : " ()[]{}',\"`\u2500\u2018\u2019",
    "terminal.integrated.unicodeVersion"                        : "11",
    "terminal.integrated.windowsOpacity"          : 0.1,
    "terminal.integrated.macOpacity"              : 0.1,
    "terminal.integrated.ignoreProcessNames"        : ["starship", "oh-my-posh", "bash", "zsh"],
    "terminal.integrated.localEchoExcludePrograms": ["vi", "vim", "tmux", "nano"],
    "terminal.integrated.fontWeight"                : "normal",
    "terminal.integrated.fontWeightBold"            : "bold",
    "terminal.integrated.enableVisualBell"          : true,
    "terminal.integrated.drawBoldTextInBrightColors": true,
    "terminal.integrated.defaultProfile.osx"        : "fish",
    "terminal.integrated.defaultProfile.linux"      : "bash",
    "terminal.integrated.defaultProfile.windows"    : "pwsh",
    "terminal.integrated.profiles.linux"            : {
    "bash": {
    "path": "/bin/bash",
    "icon": "terminal-bash"
    },
    "fish": {
    "path": "fish"
    },
    "pwsh": {
    "icon": "terminal-powershell",
    "path": "pwsh"
    },
    "tmux": {
    "icon": "terminal-tmux",
    "path": "tmux"
    },
     "zsh": {
        "path": "/bin/zsh",
        "icon": "add"
    }
    },
    "terminal.integrated.profiles.osx": {
    "bash": {
    "args": ["-l"],
    "icon": "terminal-bash",

    "path": "/bin/bash"
    },
    "fish": {
    "args": ["-l"],
    "path": "/usr/local/bin/fish"
    },
    "pwsh": {
    "icon": "terminal-powershell",
    "path": "pwsh"
    },
    "tmux": {
    "icon": "terminal-tmux",
    "path": "tmux"
    },
    "zsh": {
    "args": ["-l"],
    "path": "/bin/zsh"
    }
    },
    "terminal.integrated.profiles.windows": {
    "pwsh": {
        "path": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
        "icon": "terminal-powershell"
    },
    "Command Prompt": {
    "args": [],
    "icon": "terminal-cmd",
    "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
    ]
    },
    "Git Bash": {
    "source": "Git Bash"
    },
    "PowerShell": {
    "icon"  : "terminal-powershell",
    "source": "PowerShell"
    }
    },
    "terminal.integrated.commandsToSkipShell": [
        "workbench.action.toggleSidebarVisibility",
        "-workbench.action.quickOpen"
    ],
    "terminal.integrated.autoReplies": {
        "Terminate batch job (Y/N)": "Y\r"
    },
    "terminal.integrated.env"                     : {
    "TERM": "xterm-256color"
    },
    "terminal.integrated.env.linux": {
    "LANG"              : "en_US.UTF-8",
    "TZ"                : "UTC",
    "EDITOR"            : "codium",
    "PATH"              : "/usr/local/bin:${env:PATH}",
    "SHELL"             : "/bin/bash",
    "GIT_EDITOR_CONTEXT": "codium",
    "TERM"              : "xterm-256color"
    },
    "terminal.integrated.env.osx": {
    "LANG"              : "en_US.UTF-8",
    "TZ"                : "UTC",
    "EDITOR"            : "codium",
    "PATH"              : "/usr/local/bin:${env:PATH}",
    "SHELL"             : "/bin/zsh",
    "FIG_NEW_SESSION"   : "1",
    "CW_NEW_SESSION"    : "1",
    "Q_NEW_SESSION"     : "1",
    "GIT_EDITOR_CONTEXT": "codium",
    "TERM"              : "xterm-256color"
    },
    "terminal.integrated.env.windows": {
    "LANG"              : "en-US",
    "TZ"                : "UTC",
    "EDITOR"            : "codium",
    "PATH"              : "C:\\Program Files\\Git\\bin;${env:PATH}",
    "SHELL"             : "C:\\Program Files\\Git\\bin\\bash.exe",
    "GIT_EDITOR_CONTEXT": "codium",
    "TERM"              : "xterm-256color"
    },

    // !═════ Vim Mode Settings ════════════════════════════════════════════════

    "vim.debug.loggingLevelForAlert"                    : "error",
    "vim.debug.loggingLevelForConsole"                  : "error",
    "vim.debug.silent"                                  : false,
    "vim.autoSwitchInputMethod.defaultIM"               : "",
    "vim.autoSwitchInputMethod.enable"                  : false,
    "vim.autoSwitchInputMethod.obtainIMCmd"             : "/path/to/im-select",
    "vim.autoSwitchInputMethod.switchIMCmd"             : "/path/to/im-select {im}",
    "vim.autoindent"                                    : true,
    "vim.camelCaseMotion.enable"                        : false,
    "vim.changeWordIncludesWhitespace"                  : false,
    "vim.commandLineModeKeyBindings"                    : [],
    "vim.commandLineModeKeyBindingsNonRecursive"        : [],
    "vim.cursorStylePerMode.insert"                     : "",
    "vim.cursorStylePerMode.normal"                     : "",
    "vim.cursorStylePerMode.replace"                    : "",
    "vim.cursorStylePerMode.visual"                     : "",
    "vim.cursorStylePerMode.visualblock"                : "",
    "vim.cursorStylePerMode.visualline"                 : "",
    "vim.digraphs"                                      : {},
    "vim.disableExtension"                              : false,
    "vim.easymotionDimBackground"                       : true,
    "vim.easymotionDimColor"                            : "#777777",
    "vim.easymotionIncSearchForegroundColor"            : "#7fbf00",
    "vim.easymotionJumpToAnywhereRegex"                 : "\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]",
    "vim.easymotionKeys"                                : "hklyuiopnm,qwertzxcvbasdgjf;",
    "vim.easymotionMarkerBackgroundColor"               : "#0000",
    "vim.easymotionMarkerFontWeight"                    : "bold",
    "vim.easymotionMarkerForegroundColorOneChar"        : "#ff0000",
    "vim.easymotionMarkerForegroundColorTwoCharFirst"   : "#ffb400",
    "vim.easymotionMarkerForegroundColorTwoCharSecond"  : "#b98300",
    "vim.highlightedyank.color"                         : "rgba(250, 240, 170, 0.5)",
    "vim.highlightedyank.duration"                      : 200,
    "vim.highlightedyank.textColor"                     : "",
    "vim.history"                                       : 50,
    "vim.ignorecase"                                    : true,
    "vim.inccommand"                                    : "replace",
    "vim.iskeyword"                                     : "",
    "vim.joinspaces"                                    : true,
    "vim.matchpairs"                                    : "(:),{:},[:]",
    "vim.maxmapdepth"                                   : 1000,
    "vim.mouseSelectionGoesIntoVisualMode"              : true,
    "vim.neovimConfigPath"                              : "",
    "vim.neovimPath"                                    : "",
    "vim.overrideCopy"                                  : true,
    "vim.replaceWithRegister"                           : false,
    "vim.report"                                        : 2,
    "vim.scroll"                                        : 0,
    "vim.searchHighlightColor"                          : "",
    "vim.searchHighlightTextColor"                      : "",
    "vim.searchMatchColor"                              : "",
    "vim.searchMatchTextColor"                          : "",
    "vim.shell"                                         : "",
    "vim.showMarksInGutter"                             : false,
    "vim.showcmd"                                       : true,
    "vim.showmodename"                                  : true,
    "vim.smartRelativeLine"                             : false,
    "vim.smartcase"                                     : true,
    "vim.sneak"                                         : false,
    "vim.sneakReplacesF"                                : false,
    "vim.sneakUseIgnorecaseAndSmartcase"                : false,
    "vim.startInInsertMode"                             : false,
    "vim.startofline"                                   : true,
    "vim.statusBarColorControl"                         : false,
    "vim.statusBarColors.commandlineinprogress"         : "#007acc",
    "vim.statusBarColors.easymotioninputmode"           : "#007acc",
    "vim.statusBarColors.easymotionmode"                : "#007acc",
    "vim.statusBarColors.insert"                        : "#5f0000",
    "vim.statusBarColors.normal"                        : "#005f5f",
    "vim.statusBarColors.replace"                       : "#00000",
    "vim.statusBarColors.searchinprogressmode"          : "#007acc",
    "vim.statusBarColors.surroundinputmode"             : "#007acc",
    "vim.statusBarColors.visual"                        : "#5f00af",
    "vim.statusBarColors.visualblock"                   : "#86592d",
    "vim.statusBarColors.visualline"                    : "#005f5f",
    "vim.substituteGlobalFlag"                          : false,
    "vim.substitutionColor"                             : "",
    "vim.substitutionTextColor"                         : "",
    "vim.surround"                                      : true,
    "vim.targets.bracketObjects.enable"                 : true,
    "vim.targets.enable"                                : false,
    "vim.targets.smartQuotes.aIncludesSurroundingSpaces": true,
    "vim.targets.smartQuotes.breakThroughLines"         : true,
    "vim.targets.smartQuotes.enable"                    : true,
    "vim.textwidth"                                     : 80,
    "vim.timeout"                                       : 1000,
    "vim.vimrc.enable"                                  : false,
    "vim.vimrc.path"                                    : "",
    "vim.visualstar"                                    : false,
    "vim.whichwrap"                                     : "b,s",
    "vim.wrapscan"                                      : true,
    "vim.leader"                                        : "<Space>",
    "vim.hlsearch"                                      : true,
    "vim.easymotion"                                    : true,
    "vim.incsearch"                                     : true,
    "vim.useCtrlKeys"                                   : true,
    "vim.useSystemClipboard"                            : true,
    "vim.highlightedyank.enable"                        : true,
    "vim.visualModeKeyBindings"                         : [
        {
        "before"  : ["<"],
        "commands": ["editor.action.outdentLines"]
        },
        {
        "before"  : [">"],
        "commands": ["editor.action.indentLines"]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
        "before"  : ["<Tab>"],
        "commands": [":bnext"]
        },
        {
        "before"  : ["<S-Tab>"],
        "commands": [":bprev"]
        },
        {
        "before"  : ["leader", "v"],
        "commands": [":vsplit"]
        },
        {
        "before"  : ["leader", "h"],
        "commands": [":split"]
        },
        {
        "before"  : ["<C-h>"],
        "commands": ["workbench.action.navigateLeft"]
        },
        {
        "before"  : ["<C-j>"],
        "commands": ["workbench.action.navigateDown"]
        },
        {
        "before"  : ["<C-k>"],
        "commands": ["workbench.action.navigateUp"]
        },
        {
        "before"  : ["<C-l>"],
        "commands": ["workbench.action.navigateRight"]
        },
        {
        "before"  : ["leader", "E"],
        "commands": ["workbench.explorer.fileView.focus"]
        },
        {
        "before"  : ["leader", "e"],
        "commands": ["workbench.action.toggleSidebarVisibility"]
        },
        {
        "before"  : ["leader", "t"],
        "commands": ["workbench.action.togglePanel"]
        },
        {
        "before"  : ["leader", "s"],
        "commands": [":w!"]
        },
        {
        "before"  : ["leader", "q"],
        "commands": [":q!"]
        },
        {
        "before"  : ["leader", "x"],
        "commands": [":x!"]
        },
        {
        "before": ["[", "d"],
        "commands": ["editor.action.marker.prev"]
        },
        {
        "before": ["]", "d"],
        "commands": ["editor.action.marker.next"]
        },
        {
        "before"  : ["leader", "c", "a"],
        "commands": ["editor.action.quickFix"]
        },
        {
        "before"  : ["leader", "s", "f"],
        "commands": ["workbench.action.quickOpen"]
        },
        {
        "before"  : ["leader", "p"],
        "commands": ["workbench.action.showCommands"]
        },
        {
        "before"  : ["g", "d"],
        "commands": ["editor.action.showDefinitionPreviewHover"]
        },
        {
        "before"  : ["leader", "u", "a"],
        "commands": ["workbench.action.toggleActivityBarVisibility"]
        },
        {
        "before"  : ["leader", "w", "l"],
        "commands": ["workbench.action.moveActiveEditorGroupRight"]
        },
        {
        "before"  : ["leader", "w", "h"],
        "commands": ["workbench.action.moveActiveEditorGroupLeft"]
        },
        {
        "before"  : ["leader", "w", "j"],
        "commands": ["workbench.action.moveActiveEditorGroupDown"]
        },
        {
        "before"  : ["leader", "w", "k"],
        "commands": ["workbench.action.moveActiveEditorGroupUp"]
        },
        {
        "before"  : ["up"],
        "commands": ["workbench.action.increaseViewSize"]
        },
        {
        "before"  : ["down"],
        "commands": ["workbench.action.decreaseViewSize"]
        }
    ],
    "vim.enableNeovim": true,
    "vim.foldfix"     : false,
    "vim.gdefault"    : false,
    "vim.handleKeys"  : {
        "<C-d>": true,
        "<C-s>": false,
        "<C-z>": false
    },
    "vim.argumentObjectClosingDelimiters": [")", "]"],
    "vim.argumentObjectOpeningDelimiters": ["(", "["],
    "vim.argumentObjectSeparators": [","],
    "vim.insertModeKeyBindings"                         : [],
    "vim.insertModeKeyBindingsNonRecursive"             : [],
    "vim.neovimUseConfigFile"                           : false,
    "vim.normalModeKeyBindings"                         : [],
    "vim.operatorPendingModeKeyBindings"                : [],
    "vim.operatorPendingModeKeyBindingsNonRecursive"    : [],

    // !═══ Window Settings ════════════════════════════════════════════════════

    "window.autoHideMenuBar"                : true,
    "disable-hardware-acceleration"         : true,
    "workbench.editor.showTabs": "multiple",
    "window.nativeTabs"                     : false,
    "window.title"                          : "Search",
    "window.titleSeparator"                 : " • ",
    "window.zoomLevel"                      : 0,
    "window.menuBarVisibility"              : "toggle",
    "window.enableMenuBarMnemonics"         : true,
    "window.customMenuBarAltFocus"          : true,
    "window.newWindowDimensions"            : "maximized",
    "window.restoreFullscreen"              : false,
    "window.restoreWindows"                 : "all",
    "window.autoDetectColorScheme"          : true,
    "window.autoDetectHighContrast"         : true,
    "window.dialogStyle"                    : "native",
    "window.closeWhenEmpty"                 : false,
    "window.confirmBeforeClose"             : "never",
    "window.openFilesInNewWindow"           : "off",
    "window.openFoldersInNewWindow"         : "off",
    "window.reopenFolders"                  : "all",
    "window.useExperimentalProxyResolver"   : false,
    "window.nativeFullScreen"               : true,
    "window.densityAdaptive"                : false,
    "window.customTitleBarVisibility"       : "auto",
    "window.customWindowTitleBarSeparator"  : " - ",
    "window.customWindowTitleBarHeight"     : 30,
    "window.logLevel"                       : "info",
    "window.verboseLogging"                 : false,
    "window.doubleClickIconToClose"         : false,
    "window.openWithoutArgumentsInNewWindow": "on",

    // !═════ UI/UX Settings ═══════════════════════════════════════════════════

    "workbench.startupEditor"                             : "welcomePage",
    "workbench.startOnWelcomePage"                        : true,
    "workbench.activityBar.iconClickBehavior"             : "toggle",
    "workbench.commandPalette.history"                    : 50,
    "workbench.commandPalette.preserveInput"              : false,
    "workbench.editorAssociations"                        : {},
    "workbench.experimental.layoutControl.enabled"        : false,
    "workbench.experimental.layoutControl.type"           : "both",
    "workbench.externalUriOpeners"                        : {},
    "workbench.hover.delay"                               : 500,
    "workbench.layoutControl.enabled"                     : true,
    "workbench.layoutControl.type"                        : "both",
    "workbench.list.automaticKeyboardNavigation"          : true,
    "workbench.list.fastScrollSensitivity"                : 5,
    "workbench.list.horizontalScrolling"                  : false,
    "workbench.list.mouseWheelScrollSensitivity"          : 1,
    "workbench.list.multiSelectModifier"                  : "ctrlCmd",
    "workbench.list.openMode"                             : "singleClick",
    "workbench.list.smoothScrolling"                      : false,
    "workbench.localHistory.enabled"                      : true,
    "workbench.localHistory.exclude"                      : {},
    "workbench.localHistory.maxFileEntries"               : 50,
    "workbench.localHistory.maxFileSize"                  : 256,
    "workbench.localHistory.mergeWindow"                  : 10,
    "workbench.quickOpen.closeOnFocusLost"                : true,
    "workbench.quickOpen.preserveInput"                   : false,
    "workbench.reduceMotion"                              : "auto",
    "workbench.sash.hoverDelay"                           : 300,
    "workbench.sash.size"                                 : 4,
    "workbench.settings.openDefaultKeybindings"           : false,
    "workbench.settings.openDefaultSettings"              : false,
    "workbench.settings.settingsSearchTocBehavior"        : "filter",
    "workbench.settings.useSplitJSON"                     : false,
    "workbench.tips.enabled"                              : true,
    "workbench.tree.expandMode"                           : "singleClick",
    "workbench.tree.indent"                               : 8,
    "workbench.tree.renderIndentGuides"                   : "onHover",
    "workbench.trustedDomains.promptInTrustedWorkspace"   : false,
    "workbench.view.alwaysShowHeaderActions"              : false,
    "workbench.welcomePage.experimental.videoTutorials"   : "off",
    "workbench.reducedMotion"                             : false,
    "workbench.welcomePage.walkthroughs.openOnInstall"    : true,
    "workbench.editor.centeredLayoutAutoResize"           : true,
    "workbench.editor.closeEmptyGroups"                   : true,
    "workbench.editor.closeOnFileDelete"                  : false,
    "workbench.editor.decorations.badges"                 : true,
    "workbench.editor.decorations.colors"                 : true,
    "workbench.editor.defaultBinaryEditor"                : "",
    "workbench.editor.enablePreview"                      : true,
    "workbench.editor.enablePreviewFromCodeNavigation"    : false,
    "workbench.editor.enablePreviewFromQuickOpen"         : false,
    "workbench.editor.focusRecentEditorAfterClose"        : true,
    "workbench.editor.highlightModifiedTabs"              : false,
    "workbench.editor.historyBasedLanguageDetection"      : true,
    "workbench.editor.labelFormat"                        : "default",
    "workbench.editor.languageDetection"                  : true,
    "workbench.editor.limit.enabled"                      : false,
    "workbench.editor.limit.perEditorGroup"               : false,
    "workbench.editor.limit.value"                        : 10,
    "workbench.editor.mouseBackForwardToNavigate"         : true,
    "workbench.editor.navigationScope"                    : "default",
    "workbench.editor.preferHistoryBasedLanguageDetection": true,
    "workbench.editor.revealIfOpen"                       : false,
    "workbench.editor.scrollToSwitchTabs"                 : false,
    "workbench.editor.sharedViewState"                    : false,
    "workbench.editor.showIcons"                          : true,
    "workbench.editor.splitInGroupLayout"                 : "horizontal",
    "workbench.editor.splitOnDragAndDrop"                 : true,
    "workbench.editor.splitSizing"                        : "distribute",
    "workbench.editor.tabCloseButton"                     : "right",
    "workbench.editor.tabSizing"                          : "fit",
    "workbench.editor.titleScrollbarSizing"               : "default",
    "workbench.editor.untitled.hint"                      : "text",
    "workbench.editor.untitled.labelFormat"               : "content",
    "workbench.editor.wrapTabs"                           : false,
    "workbench.editor.tabActionLocation"                  : "right",
    "workbench.editor.autoLockGroups"                     : {
        "default"                   : false,
        "imagePreview.previewEditor": false,
        "terminalEditor"            : true
    },

    // Interactive settings
    "interactive"                             : true,
    "jsProfileVisualizer.cpuprofile.table"    : true,
    "jsProfileVisualizer.heapprofile.table"   : true,
    "jupyter-notebook"                        : false,
    "mainThreadWebview-markdown.preview"      : false,
    "terminalEditor"                          : true,
    "vscode.markdown.preview.editor"          : true,
    "workbench.editorinputs.searchEditorInput": true,
    "workbench.input.interactive"             : true,

    // Workbench Color Customizations
    // Custom Settings
    "outline.icons"             : true,
    "outline.problems.badges"   : true,
    "outline.problems.colors"   : true,
    "outline.problems.enabled"  : true,
    "outline.showArrays"        : true,
    "outline.showBooleans"      : true,
    "outline.showClasses"       : true,
    "outline.showConstants"     : true,
    "outline.showConstructors"  : true,
    "outline.showEnumMembers"   : true,
    "outline.showEnums"         : true,
    "outline.showEvents"        : true,
    "outline.showFields"        : true,
    "outline.showFiles"         : true,
    "outline.showFunctions"     : true,
    "outline.showInterfaces"    : true,
    "outline.showKeys"          : true,
    "outline.showMethods"       : true,
    "outline.showModules"       : true,
    "outline.showNamespaces"    : true,
    "outline.showNull"          : true,
    "outline.showNumbers"       : true,
    "outline.showObjects"       : true,
    "outline.showOperators"     : true,
    "outline.showPackages"      : true,
    "outline.showProperties"    : true,
    "outline.showStrings"       : true,
    "outline.showStructs"       : true,
    "outline.showTypeParameters": true,
    "outline.showVariables"     : true,
    "output.smartScroll.enabled": true,

    // Notebook Settings
    "maven.terminal.useJavaHome"                : false,
    "maven.executable.options"                  : "",
    "maven.executable.path"                     : "",
    "maven.executable.preferMavenWrapper"       : "true",
    "maven.explorer.projectName"                : "${project.name}",
    "maven.pomfile.autoUpdateEffectivePOM"      : false,
    "maven.pomfile.globPattern"                 : "**/pom.xml",
    "maven.pomfile.prefetchEffectivePom"        : false,
    "maven.projectOpenBehavior"                 : "Interactive",
    "maven.settingsFile"                        : null,
    "maven.showInExplorerContextMenu"           : "true",
    "maven.view"                                : "flat",
    "maven.dependency.enableConflictDiagnostics": "true",
    "maven.terminal.customEnv"                  : [],
    "maven.terminal.favorites"                  : [],
    "maven.excludedFolders"                     : [
        "**/.*",
        "**/node_modules",
        "**/target",
        "**/bin",
        "**/archetype-resources"
    ],

    // NPM Settings
    "npm.autoDetect"            : "on",
    "npm.enableRunFromFolder"   : false,
    "npm.exclude"               : "",
    "npm.fetchOnlinePackageInfo": true,
    "npm.packageManager"        : "auto",
    "npm.runSilent"             : false,
    "npm.scriptExplorerAction"  : "open",
    "npm.scriptExplorerExclude" : [],

    // Problems Settings
    "problems.autoReveal"         : true,
    "problems.decorations.enabled": true,
    "problems.showCurrentInStatus": false,
    "problems.sortOrder"          : "severity",

    // Settings Sync
    "settingsSync.ignoredExtensions"     : [],
    "settingsSync.ignoredSettings"       : [],
    "settingsSync.keybindingsPerPlatform": true,

    // Screencast Mode Settings
    "screencastMode.fontSize"               : 56,
    "screencastMode.verticalOffset"         : 20,
    "screencastMode.mouseIndicatorSize"     : 20,
    "screencastMode.keyboardOverlayTimeout" : 800,
    "screencastMode.onlyKeyboardShortcuts"  : false,
    "screencastMode.mouseIndicatorColor"    : "#FF0000",
    "screencastMode.keyboardShortcutsFormat": "commandAndKeys",

    // HTTP Settings
    "http.proxy"             : "",
    "http.proxyAuthorization": null,
    "http.proxyStrictSSL"    : true,
    "http.proxySupport"      : "override",
    "http.systemCertificates": true,

    // Other Settings
    "EnglishChineseDictionary.enableHover"    : true,
    "audioCues.enabled"                       : null,
    "simpleBrowser.focusLockIndicator.enabled": true,
    "interactiveWindow.collapseCellInputCode" : "fromEditor",

    // Markdown Settings
    "markdown.links.openLocation"                 : "currentGroup",
    "markdown.math.enabled"                       : true,
    "markdown.preview.breaks"                     : false,
    "markdown.preview.doubleClickToSwitchToEditor": true,
    "markdown.preview.fontFamily"                 : "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
    "markdown.preview.fontSize"                   : 14,
    "markdown.preview.lineHeight"                 : 1.6,
    "markdown.preview.linkify"                    : true,
    "markdown.preview.markEditorSelection"        : true,
    "markdown.preview.openMarkdownLinks"          : "inPreview",
    "markdown.preview.scrollEditorWithPreview"    : true,
    "markdown.preview.scrollPreviewWithEditor"    : true,
    "markdown.preview.typographer"                : false,
    "markdown.styles"                             : [],
    "markdown.suggest.paths.enabled"              : true,
    "markdown.trace"                              : "off",

    // Notebook Settings
    "notebook.breadcrumbs.showCodeCells"                 : true,
    "notebook.cellFocusIndicator"                        : "gutter",
    "notebook.cellToolbarLocation"                       : { "default": "right" },
    "notebook.cellToolbarVisibility"                     : "click",
    "notebook.compactView"                               : true,
    "notebook.consolidatedOutputButton"                  : true,
    "notebook.consolidatedRunButton"                     : false,
    "notebook.diff.enablePreview"                        : true,
    "notebook.diff.ignoreMetadata"                       : false,
    "notebook.diff.ignoreOutputs"                        : false,
    "notebook.displayOrder"                              : [],
    "notebook.dragAndDropEnabled"                        : true,
    "notebook.editorOptionsCustomizations"               : {},
    "notebook.globalToolbar"                             : true,
    "notebook.globalToolbarShowLabel"                    : "always",
    "notebook.insertToolbarLocation"                     : "both",
    "notebook.lineNumbers"                               : "off",
    "notebook.markup.fontSize"                           : 0,
    "notebook.navigation.allowNavigateToSurroundingCells": true,
    "notebook.outline.showCodeCells"                     : false,
    "notebook.output.textLineLimit"                      : 30,
    "notebook.showCellStatusBar"                         : "visible",
    "notebook.showFoldingControls"                       : "mouseover",
    "notebook.undoRedoPerCell"                           : true,

    // PHP Settings
    "php.suggest.basic"          : true,
    "php.validate.enable"        : true,
    "php.validate.executablePath": null,
    "php.validate.run"           : "onSave",

    // Java Settings
    "java.autobuild.enabled"                            : true,
    "java.codeGeneration.generateComments"              : false,
    "java.codeGeneration.hashCodeEquals.useInstanceof"  : false,
    "java.codeGeneration.hashCodeEquals.useJava7Objects": false,
    "java.codeGeneration.insertionLocation"             : "afterCursor",
    "java.codeGeneration.toString.codeStyle"            : "STRING_CONCATENATION",
    "java.codeGeneration.toString.limitElements"        : 0,
    "java.codeGeneration.toString.listArrayContents"    : true,
    "java.codeGeneration.toString.skipNullValues"       : false,
    "java.codeGeneration.toString.template"             : "${object.className} [${member.name()}=${member.value}, ${otherMembers}]",
    "java.codeGeneration.useBlocks"                     : false,
    "java.completion.enabled"                           : true,
    "java.completion.favoriteStaticMembers"             : [
        "org.junit.Assert.*",
        "org.junit.Assume.*",
        "org.junit.jupiter.api.Assertions.*",
        "org.junit.jupiter.api.Assumptions.*",
        "org.junit.jupiter.api.DynamicContainer.*",
        "org.junit.jupiter.api.DynamicTest.*",
        "org.mockito.Mockito.*",
        "org.mockito.ArgumentMatchers.*",
        "org.mockito.Answers.*"
    ],
    "java.completion.filteredTypes": [
        "java.awt.*",
        "com.sun.*",
        "sun.*",
        "jdk.*",
        "org.graalvm.*",
        "io.micrometer.shaded.*"
    ],
    "java.completion.guessMethodArguments"                      : false,
    "java.completion.importOrder"                               : ["java", "javax", "org", "com"],
    "java.completion.maxResults"                                : 0,
    "java.configuration.checkProjectSettingsExclusions"         : false,
    "java.configuration.maven.globalSettings"                   : null,
    "java.configuration.maven.notCoveredPluginExecutionSeverity": "warning",
    "java.configuration.maven.userSettings"                     : null,
    "java.configuration.runtimes"                               : [],
    "java.configuration.updateBuildConfiguration"               : "interactive",
    "java.configuration.workspaceCacheLimit"                    : 90,
    "java.contentProvider.preferred"                            : null,
    "java.eclipse.downloadSources"                              : false,
    "java.errors.incompleteClasspath.severity"                  : "warning",
    "java.foldingRange.enabled"                                 : true,
    "java.home"                                                 : null,
    "java.implementationsCodeLens.enabled"                      : false,
    "java.import.exclusions"                                    : [
        "**/node_modules/**",
        "**/.metadata/**",
        "**/archetype-resources/**",
        "**/META-INF/maven/**"
    ],
    "java.import.generatesMetadataFilesAtProjectRoot" : false,
    "java.import.gradle.arguments"                    : null,
    "java.import.gradle.enabled"                      : true,
    "java.import.gradle.home"                         : null,
    "java.import.gradle.java.home"                    : null,
    "java.import.gradle.jvmArguments"                 : null,
    "java.import.gradle.offline.enabled"              : false,
    "java.import.gradle.user.home"                    : null,
    "java.import.gradle.version"                      : null,
    "java.import.gradle.wrapper.enabled"              : true,
    "java.import.maven.enabled"                       : true,
    "java.imports.gradle.wrapper.checksums"           : [],
    "java.inlayHints.parameterNames.enabled"          : "literals",
    "java.inlayHints.parameterNames.exclusions"       : [],
    "java.jdt.ls.java.home"                           : null,
    "java.jdt.ls.lombokSupport.enabled"               : true,
    "java.jdt.ls.vmargs"                              : "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m",
    "java.maven.downloadSources"                      : false,
    "java.maven.updateSnapshots"                      : false,
    "java.maxConcurrentBuilds"                        : 1,
    "java.progressReports.enabled"                    : true,
    "java.project.encoding"                           : "ignore",
    "java.project.importHint"                         : true,
    "java.project.importOnFirstTimeStartup"           : "automatic",
    "java.project.outputPath"                         : "",
    "java.project.referencedLibraries"                : ["lib/**/*.jar"],
    "java.project.resourceFilters"                    : ["node_modules", ".git"],
    "java.project.sourcePaths"                        : [],
    "java.quickfix.showAt"                            : "line",
    "java.recommendations.dependency.analytics.show"  : true,
    "java.references.includeAccessors"                : true,
    "java.references.includeDecompiledSources"        : true,
    "java.referencesCodeLens.enabled"                 : false,
    "java.saveActions.organizeImports"                : false,
    "java.selectionRange.enabled"                     : true,
    "java.server.launchMode"                          : "Hybrid",
    "java.settings.url"                               : null,
    "java.showBuildStatusOnStart.enabled"             : "notification",
    "java.signatureHelp.description.enabled"          : false,
    "java.signatureHelp.enabled"                      : false,
    "java.sources.organizeImports.starThreshold"      : 99,
    "java.sources.organizeImports.staticStarThreshold": 99,
    "java.symbols.includeSourceMethodDeclarations"    : false,
    "java.templates.fileHeader"                       : [],
    "java.templates.typeComment"                      : [],
    "java.trace.server"                               : "off",
    "java.typeHierarchy.lazyLoad"                     : false,
    "java.format.comments.enabled"                    : true,
    "java.format.enabled"                             : true,
    "java.format.onType.enabled"                      : true,
    "java.format.settings.profile"                    : null,
    "java.format.settings.url"                        : null,

    // Javascript Settings
    "javascript.autoClosingTags"                                          : true,
    "javascript.inlayHints.enumMemberValues.enabled"                      : false,
    "javascript.inlayHints.functionLikeReturnTypes.enabled"               : false,
    "javascript.inlayHints.parameterNames.enabled"                        : "none",
    "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
    "javascript.inlayHints.parameterTypes.enabled"                        : false,
    "javascript.inlayHints.propertyDeclarationTypes.enabled"              : false,
    "javascript.inlayHints.variableTypes.enabled"                         : false,
    "javascript.preferences.importModuleSpecifier"                        : "shortest",
    "javascript.preferences.importModuleSpecifierEnding"                  : "auto",
    "javascript.preferences.jsxAttributeCompletionStyle"                  : "auto",
    "javascript.preferences.quoteStyle"                                   : "auto",
    "javascript.preferences.useAliasesForRenames"                         : true,
    "javascript.referencesCodeLens.enabled"                               : false,
    "javascript.referencesCodeLens.showOnAllFunctions"                    : false,
    "javascript.suggest.autoImports"                                      : true,
    "javascript.suggest.classMemberSnippets.enabled"                      : true,
    "javascript.suggest.completeFunctionCalls"                            : false,
    "javascript.suggest.completeJSDocs"                                   : true,
    "javascript.suggest.enabled"                                          : true,
    "javascript.suggest.includeAutomaticOptionalChainCompletions"         : true,
    "javascript.suggest.includeCompletionsForImportStatements"            : true,
    "javascript.suggest.jsdoc.generateReturns"                            : true,
    "javascript.suggest.names"                                            : true,
    "javascript.suggest.paths"                                            : true,
    "javascript.validate.enable"                                          : true,
    "js.implicitProjectConfig.checkJs"                                    : false,
    "js/ts.implicitProjectConfig.checkJs"                                 : false,
    "js/ts.implicitProjectConfig.module"                                  : "ESNext",
    "js/ts.implicitProjectConfig.strictFunctionTypes"                     : true,
    "js/ts.implicitProjectConfig.strictNullChecks"                        : false,
    "js/ts.implicitProjectConfig.target"                                  : "ES2020",

    // JSON Settings
    "json.maxItemsComputed"     : 5000,
    "json.schemaDownload.enable": true,
    "json.schemas"              : [],
    "json.trace.server"         : "off",

    // Jupyter Settings
    "jupyter.enableKeyboardShortcuts"           : true,
    "jupyter.addGotoCodeLenses"                 : true,
    "jupyter.allowImportFromNotebook"           : true,
    "jupyter.allowInput"                        : true,
    "jupyter.allowLiveShare"                    : true,
    "jupyter.allowUnauthorizedRemoteConnection" : false,
    "jupyter.alwaysScrollOnNewCell"             : false,
    "jupyter.askForKernelRestart"               : true,
    "jupyter.askForLargeDataFrames"             : true,
    "jupyter.changeDirOnImportExport"           : false,
    "jupyter.codeLenses"                        : "jupyter.runcell,  jupyter.runallcellsabove, jupyter.debugcell",
    "jupyter.codeRegularExpression"             : "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
    "jupyter.collapseCellInputCodeByDefault"    : true,
    "jupyter.colorizeInputBox"                  : true,
    "jupyter.debugCodeLenses"                   : "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",
    "jupyter.debugJustMyCode"                   : true,
    "jupyter.debugpyDistPath"                   : "",
    "jupyter.decorateCells"                     : true,
    "jupyter.defaultCellMarker"                 : "# %%",
    "jupyter.disableJupyterAutoStart"           : false,
    "jupyter.enableAutoMoveToNextCell"          : true,
    "jupyter.enableCellCodeLens"                : true,
    "jupyter.enableScrollingForCellOutputs"     : true,
    "jupyter.experiments.enabled"               : true,
    "jupyter.experiments.optInto"               : [],
    "jupyter.experiments.optOutFrom"            : [],
    "jupyter.exportWithOutputEnabled"           : false,
    "jupyter.generateSVGPlots"                  : false,
    "jupyter.ignoreVscodeTheme"                 : false,
    "jupyter.interactiveWindowMode"             : "multiple",
    "jupyter.jupyterCommandLineArguments"       : [],
    "jupyter.jupyterInterruptTimeout"           : 10000,
    "jupyter.jupyterLaunchRetries"              : 3,
    "jupyter.jupyterLaunchTimeout"              : 60000,
    "jupyter.jupyterServerType"                 : "",
    "jupyter.kernels.filter"                    : [],
    "jupyter.liveShareConnectionTimeout"        : 1000,
    "jupyter.logKernelOutputSeparately"         : false,
    "jupyter.logging.level"                     : "debug",
    "jupyter.magicCommandsAsComments"           : false,
    "jupyter.markdownRegularExpression"         : "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",
    "jupyter.maxOutputSize"                     : 400,
    "jupyter.newCellOnRunLast"                  : true,
    "jupyter.notebookFileRoot"                  : "${fileDirname}",
    "jupyter.pylanceHandlesNotebooks"           : false,
    "jupyter.pythonExportMethod"                : "direct",
    "jupyter.remoteDebuggerPort"                : -1,
    "jupyter.searchForJupyter"                  : true,
    "jupyter.sendSelectionToInteractiveWindow"  : false,
    "jupyter.showCellInputCode"                 : true,
    "jupyter.showOutlineButtonInNotebookToolbar": true,
    "jupyter.showVariableViewWhenDebugging"     : true,
    "jupyter.stopOnError"                       : true,
    "jupyter.stopOnFirstLineWhileDebugging"     : true,
    "jupyter.textOutputLimit"                   : 20000,
    "jupyter.themeMatplotlibPlots"              : false,
    "jupyter.useDefaultConfigForJupyter"        : true,
    "jupyter.variableExplorerExclude"           : "module;function;builtin_function_or_method;ABCMeta;type",
    "jupyter.variableQueries"                   : [],
    "jupyter.widgetScriptSources"               : [],

    // Python Settings
    "pylance.insidersChannel"                         : "on",
    "python.languageServer"                           : "Pylance",
    "python.analysis.autoSearchPaths"                 : true,
    "python.analysis.useLibraryCodeForTypes"          : true,
    "python.analysis.completeFunctionParens"          : true,
    "python.analysis.typeCheckingMode"                : "basic",
    "python.analysis.autoFormatStrings"               : true,
    "python.analysis.diagnosticMode"                  : "workspace",
    "python.analysis.inlayHints.variableTypes"        : true,
    "python.analysis.inlayHints.functionReturnTypes"  : true,
    "python.analysis.inlayHints.pytestParameters"     : true,
    "python.formatting.provider"                      : "black",
    "python.formatting.blackArgs"                     : ["--line-length", "88"],
    "python.linting.enabled"                          : true,
    "python.linting.pylintEnabled"                    : true,
    "python.linting.flake8Enabled"                    : true,
    "python.linting.mypyEnabled"                      : true,
    "python.linting.lintOnSave"                       : true,
    "python.testing.pytestEnabled"                    : true,
    "python.testing.unittestEnabled"                  : false,
    "python.testing.nosetestsEnabled"                 : false,
    "python.analysis.autoImportCompletions"           : true,
    "python.analysis.diagnosticSeverityOverrides"     : {},
    "python.analysis.extraPaths"                      : [],
    "python.analysis.stubPath"                        : "typings",
    "python.analysis.typeshedPaths"                   : [],
    "python.autoComplete.extraPaths"                  : [],
    "python.condaPath"                                : "",
    "python.defaultInterpreterPath"                   : "python",
    "python.diagnostics.sourceMapsEnabled"            : false,
    "python.disableInstallationCheck"                 : false,
    "python.envFile"                                  : "${workspaceFolder}/.env",
    "python.experiments.enabled"                      : true,
    "python.experiments.optInto"                      : [],
    "python.experiments.optOutFrom"                   : [],
    "python.globalModuleInstallation"                 : false,
    "python.linting.banditArgs"                       : [],
    "python.linting.banditEnabled"                    : false,
    "python.linting.banditPath"                       : "bandit",
    "python.linting.cwd"                              : null,
    "python.linting.flake8Args"                       : [],
    "python.linting.flake8CategorySeverity.E"         : "Error",
    "python.linting.flake8CategorySeverity.F"         : "Error",
    "python.linting.flake8CategorySeverity.W"         : "Warning",
    "python.linting.flake8Path"                       : "flake8",
    "python.linting.mypyCategorySeverity.error"       : "Error",
    "python.linting.mypyCategorySeverity.note"        : "Information",
    "python.linting.mypyPath"                         : "mypy",
    "python.linting.prospectorArgs"                   : [],
    "python.linting.prospectorEnabled"                : false,
    "python.linting.prospectorPath"                   : "prospector",
    "python.linting.pycodestyleArgs"                  : [],
    "python.linting.pycodestyleCategorySeverity.E"    : "Error",
    "python.linting.pycodestyleCategorySeverity.W"    : "Warning",
    "python.linting.pycodestyleEnabled"               : false,
    "python.linting.pycodestylePath"                  : "pycodestyle",
    "python.linting.pydocstyleArgs"                   : [],
    "python.linting.pydocstyleEnabled"                : false,
    "python.linting.pydocstylePath"                   : "pydocstyle",
    "python.linting.pylamaArgs"                       : [],
    "python.linting.pylamaEnabled"                    : false,
    "python.linting.pylamaPath"                       : "pylama",
    "python.linting.pylintArgs"                       : [],
    "python.linting.pylintCategorySeverity.convention": "Information",
    "python.linting.pylintCategorySeverity.error"     : "Error",
    "python.linting.pylintCategorySeverity.fatal"     : "Error",
    "python.linting.pylintCategorySeverity.refactor"  : "Hint",
    "python.linting.pylintCategorySeverity.warning"   : "Warning",
    "python.linting.pylintPath"                       : "pylint",
    "python.pipenvPath"                               : "pipenv",
    "python.poetryPath"                               : "poetry",
    "python.sortImports.args"                         : [],
    "python.sortImports.path"                         : "",
    "python.tensorBoard.logDirectory"                 : "",
    "python.testing.autoTestDiscoverOnSaveEnabled"    : true,
    "python.testing.cwd"                              : "",
    "python.testing.debugPort"                        : 3000,
    "python.testing.promptToConfigure"                : true,
    "python.testing.pytestArgs"                       : [],
    "python.testing.pytestPath"                       : "pytest",
    "python.formatting.autopep8Args"                  : [],
    "python.formatting.autopep8Path"                  : "autopep8",
    "python.formatting.blackPath"                     : "black",
    "python.formatting.yapfArgs"                      : [],
    "python.formatting.yapfPath"                      : "yapf",
    "python.venvFolders"                              : [],
    "python.venvPath"                                 : "",
    "python.terminal.activateEnvInCurrentTerminal"    : false,
    "python.terminal.activateEnvironment"             : true,
    "python.terminal.executeInFileDir"                : false,
    "python.terminal.launchArgs"                      : [],
    "python.testing.unittestArgs"                     : ["-v", "-s", ".", "-p", "*test*.py"],
    "python.linting.ignorePatterns"                   : ["**/site-packages/**/*.py", ".vscode/*.py"],
    "python.linting.maxNumberOfProblems"              : 100,
    "python.linting.mypyArgs"                         : [
        "--follow-imports=silent",
        "--ignore-missing-imports",
        "--show-column-numbers",
        "--no-pretty"
    ],

    // Language-Specific Settings
    // Eslint Settings
    "eslint.enable"           : true,
    "eslint.run"              : "onType",
    "editor.codeActionsOnSave": {
        "source.fixAll"         : "explicit",
        "source.organizeImports": "explicit",
        "source.fixAll.eslint"  : "always"
    },
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "markdown",
        "typescript",
        "typescriptreact",
        "yaml"
    ],
    "eslint.workingDirectories": [
        {
        "mode": "auto"
        }
    ],

    // Prettier Settings
    "prettier.enable"                  : true,
    "prettier.requireConfig"           : true,
    "prettier.useEditorConfig"         : true,
    "prettier.resolveGlobalModules"    : false,
    "prettier.ignorePath"              : ".prettierignore",
    "prettier.semi"                    : false,
    "prettier.singleQuote"             : true,
    "prettier.bracketSpacing"          : true,
    "prettier.jsxSingleQuote"          : true,
    "prettier.tabWidth"                : 2,
    "prettier.printWidth"              : 80,
    "prettier.trailingComma"           : "es5",
    "prettier.arrowParens"             : "always",
    "workbench.editor.restoreViewState": true,
    "editor.suggest.insertMode"        : "replace",
    "editor.wordBasedSuggestions"      : "matchingDocuments",
    "editor.wordBasedSuggestionsMode"  : "matchingDocuments",
    "editor.defaultFormatter"          : "esbenp.prettier-vscode",
    "editor.formatOnSave"              : true,
    "editor.formatOnPaste"             : true,
    "editor.insertSpaces"              : false, // Tab key disabled
    "editor.formatOnSaveMode"          : "file",

    // Language-specific settings

    "[shellscript]": {

        "files.eol": "\n",
        // "editor.defaultFormatter": "foxundermoon.shell-format",
        "editor.defaultFormatter": "mkhl.shfmt",
        "shellcheck.enable"      : true,
        "bashIde.path"           : "bash",
        "editor.tabSize": 2,
        "editor.formatOnSave": true,
        // "editor.defaultColorDecorators": false,
        "alignment.surroundSpace": {
            "colon": [
                0,
                1
            ],
            "assignment": [
                -1,
                -1
            ],
            "arrow": [
                1,
                1
            ],
            "comment": 2
        }
    },
    "[javascript]": {
        "editor.defaultFormatter" : "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": { "source.fixAll.eslint": "explicit" }
    },
    "[typescript]": {
        "editor.defaultFormatter" : "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": { "source.fixAll.eslint": "explicit" }
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.quickSuggestions": {
        "strings": true
        }
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[scss]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
        "editor.wordWrap"                            : "on",
        "editor.defaultFormatter"                    : "esbenp.prettier-vscode",
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false,
        "editor.codeActionsOnSave"                   : { "source.fixAll.eslint": "explicit" }
    },
    "[vue]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[yaml]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[python]": {
        "editor.tabSize"              : 4,
        "python.formatting.provider"  : "black",
        "python.linting.enabled"      : true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Enabled": true,
        "python.languageServer"       : "Pylance",
        "editor.defaultFormatter"     : "ms-python.black-formatter"
    },
    "[c]": {
        "editor.semanticHighlighting.enabled": true
    },
    "[cpp]": {
        "editor.semanticHighlighting.enabled": true
    },
    "[cuda-cpp]": {
        "editor.semanticHighlighting.enabled": true
    },
    "[dockercompose]": {
        "editor.tabSize": 2
    },
    "[dockerfile]": {
        "editor.quickSuggestions": {
        "strings": true
        }
    },
    "[git-commit]": {
        "editor.rulers": [72]
    },
    "[go]": {
        "editor.codeActionsOnSave": {
        "source.fixAll"         : "explicit",
        "source.organizeImports": "explicit"
        },
        "editor.insertSpaces"                           : false,
        "editor.suggest.snippetsPreventQuickSuggestions": false
    },
    "[jsonc]": {
        "editor.quickSuggestions": {
        "strings": true
        }
    },
    "[makefile]": {
        "editor.insertSpaces": false
    },
    "[php]": {
        "editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
    },
    "[search-result]": {
        "editor.lineNumbers": "off"
    },
    "[java]": {
        "editor.suggest.snippetsPreventQuickSuggestions": false
    },

    // Tailwind CSS settings
    "tailwindCSS.emmetCompletions": true,
    "tailwindCSS.includeLanguages": {
        "plaintext": "html",
        "blade"    : "html",
        "njk"      : "html"
    },

    // CSS Settings
    "css.completion.completePropertyWithSemicolon" : true,
    "css.completion.triggerPropertyValueCompletion": true,
    "css.customData"                               : [],
    "css.hover.documentation"                      : true,
    "css.hover.references"                         : true,
    "css.lint.argumentsInColorFunction"            : "error",
    "css.lint.boxModel"                            : "ignore",
    "css.lint.compatibleVendorPrefixes"            : "ignore",
    "css.lint.duplicateProperties"                 : "ignore",
    "css.lint.emptyRules"                          : "warning",
    "css.lint.float"                               : "ignore",
    "css.lint.fontFaceProperties"                  : "warning",
    "css.lint.hexColorLength"                      : "error",
    "css.lint.idSelector"                          : "ignore",
    "css.lint.ieHack"                              : "ignore",
    "css.lint.importStatement"                     : "ignore",
    "css.lint.important"                           : "ignore",
    "css.lint.propertyIgnoredDueToDisplay"         : "warning",
    "css.lint.universalSelector"                   : "ignore",
    "css.lint.unknownAtRules"                      : "warning",
    "css.lint.unknownProperties"                   : "warning",
    "css.lint.unknownVendorSpecificProperties"     : "ignore",
    "css.lint.validProperties"                     : [],
    "css.lint.vendorPrefix"                        : "warning",
    "css.lint.zeroUnits"                           : "ignore",
    "css.trace.server"                             : "off",
    "css.validate"                                 : true,
    "css.format.enable"                            : true,
    "css.format.newlineBetweenRules"               : true,
    "css.format.newlineBetweenSelectors"           : true,
    "css.format.spaceAroundSelectorSeparator"      : false,
    "cssCustomProperties.languages"                : ["css"],
    "cssCustomProperties.files"                    : [["src/**/*.css"]],

    // Less Settings
    "less.validate"                                 : true,
    "less.format.enable"                            : true,
    "less.format.braceStyle"                        : "collapse",
    "less.format.maxPreserveNewLines"               : null,
    "less.format.preserveNewLines"                  : true,
    "less.format.newlineBetweenRules"               : true,
    "less.format.newlineBetweenSelectors"           : true,
    "less.completion.completePropertyWithSemicolon" : true,
    "less.completion.triggerPropertyValueCompletion": true,
    "less.hover.documentation"                      : true,
    "less.hover.references"                         : true,
    "less.lint.argumentsInColorFunction"            : "error",
    "less.lint.boxModel"                            : "ignore",
    "less.lint.compatibleVendorPrefixes"            : "ignore",
    "less.lint.duplicateProperties"                 : "ignore",
    "less.lint.emptyRules"                          : "warning",
    "less.lint.float"                               : "ignore",
    "less.lint.fontFaceProperties"                  : "warning",
    "less.lint.hexColorLength"                      : "error",
    "less.lint.idSelector"                          : "ignore",
    "less.lint.ieHack"                              : "ignore",
    "less.lint.importStatement"                     : "ignore",
    "less.lint.important"                           : "ignore",
    "less.lint.propertyIgnoredDueToDisplay"         : "warning",
    "less.lint.universalSelector"                   : "ignore",
    "less.lint.unknownAtRules"                      : "warning",
    "less.lint.unknownProperties"                   : "warning",
    "less.lint.unknownVendorSpecificProperties"     : "ignore",
    "less.lint.validProperties"                     : [],
    "less.lint.vendorPrefix"                        : "warning",
    "less.lint.zeroUnits"                           : "ignore",
    "less.format.spaceAroundSelectorSeparator"      : false,

    // SCSS Settings
    "scss.format.enable"                            : true,
    "scss.format.newlineBetweenRules"               : true,
    "scss.format.newlineBetweenSelectors"           : true,
    "scss.format.spaceAroundSelectorSeparator"      : false,
    "scss.completion.completePropertyWithSemicolon" : true,
    "scss.completion.triggerPropertyValueCompletion": true,
    "scss.hover.documentation"                      : true,
    "scss.hover.references"                         : true,
    "scss.lint.argumentsInColorFunction"            : "error",
    "scss.lint.boxModel"                            : "ignore",
    "scss.lint.compatibleVendorPrefixes"            : "ignore",
    "scss.lint.duplicateProperties"                 : "ignore",
    "scss.lint.emptyRules"                          : "warning",
    "scss.lint.float"                               : "ignore",
    "scss.lint.fontFaceProperties"                  : "warning",
    "scss.lint.hexColorLength"                      : "error",
    "scss.lint.idSelector"                          : "ignore",
    "scss.lint.ieHack"                              : "ignore",
    "scss.lint.importStatement"                     : "ignore",
    "scss.lint.important"                           : "ignore",
    "scss.lint.propertyIgnoredDueToDisplay"         : "warning",
    "scss.lint.universalSelector"                   : "ignore",
    "scss.lint.unknownAtRules"                      : "warning",
    "scss.lint.unknownProperties"                   : "warning",
    "scss.lint.unknownVendorSpecificProperties"     : "ignore",
    "scss.lint.validProperties"                     : [],
    "scss.lint.vendorPrefix"                        : "warning",
    "scss.lint.zeroUnits"                           : "ignore",
    "scss.validate"                                 : true,
    "scss.format.braceStyle"                        : "collapse",
    "scss.format.maxPreserveNewLines"               : null,
    "scss.format.preserveNewLines"                  : true,

    // HTML Settings
    "html.format.contentUnformatted"         : "pre,code,textarea",
    "html.format.enable"                     : true,
    "html.format.endWithNewline"             : false,
    "html.format.extraLiners"                : "head, body, /html",
    "html.format.indentHandlebars"           : false,
    "html.format.indentInnerHtml"            : false,
    "html.format.maxPreserveNewLines"        : null,
    "html.format.preserveNewLines"           : true,
    "html.format.templating"                 : false,
    "html.format.unformatted"                : "wbr",
    "html.format.unformattedContentDelimiter": "",
    "html.format.wrapAttributes"             : "auto",
    "html.format.wrapAttributesIndentSize"   : null,
    "html.format.wrapLineLength"             : 120,
    "html.autoClosingTags"                   : true,
    "html.autoCreateQuotes"                  : true,
    "html.completion.attributeDefaultValue"  : "doublequotes",
    "html.customData"                        : [],
    "html.hover.documentation"               : true,
    "html.hover.references"                  : true,
    "html.suggest.html5"                     : true,
    "html.trace.server"                      : "off",
    "html.validate.scripts"                  : true,
    "html.validate.styles"                   : true,

    // Javascript Formatting Settings
    "javascript.format.enable"                                                     : true,
    "javascript.format.insertSpaceAfterCommaDelimiter"                             : true,
    "javascript.format.insertSpaceAfterConstructor"                                : false,
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions"       : true,
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements"            : true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces"         : true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces" : false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces"      : true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"    : false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis" : false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
    "javascript.format.insertSpaceAfterSemicolonInForStatements"                   : true,
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators"                   : true,
    "javascript.format.insertSpaceBeforeFunctionParenthesis"                       : false,
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks"                    : false,
    "javascript.format.placeOpenBraceOnNewLineForFunctions"                        : false,
    "javascript.format.semicolons"                                                 : "ignore",

    // TypeScript Formatting Settings
    "typescript.format.enable"                                                     : true,
    "typescript.format.insertSpaceAfterCommaDelimiter"                             : true,
    "typescript.format.insertSpaceAfterConstructor"                                : false,
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions"       : true,
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements"            : true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces"         : true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces" : false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces"      : true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"    : false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis" : false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
    "typescript.format.insertSpaceAfterSemicolonInForStatements"                   : true,
    "typescript.format.insertSpaceAfterTypeAssertion"                              : false,
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators"                   : true,
    "typescript.format.insertSpaceBeforeFunctionParenthesis"                       : false,
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks"                    : false,
    "typescript.format.placeOpenBraceOnNewLineForFunctions"                        : false,
    "typescript.format.semicolons"                                                 : "ignore",
    "typescript.autoClosingTags"                                                   : true,
    "typescript.check.npmIsInstalled"                                              : true,
    "typescript.disableAutomaticTypeAcquisition"                                   : false,
    "typescript.enablePromptUseWorkspaceTsdk"                                      : false,
    "typescript.implementationsCodeLens.enabled"                                   : false,
    "typescript.inlayHints.enumMemberValues.enabled"                               : false,
    "typescript.inlayHints.functionLikeReturnTypes.enabled"                        : false,
    "typescript.inlayHints.parameterNames.enabled"                                 : "none",
    "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName"         : true,
    "typescript.inlayHints.parameterTypes.enabled"                                 : false,
    "typescript.inlayHints.propertyDeclarationTypes.enabled"                       : false,
    "typescript.inlayHints.variableTypes.enabled"                                  : false,
    "typescript.locale"                                                            : "auto",
    "typescript.npm"                                                               : "",
    "typescript.preferences.importModuleSpecifier"                                 : "shortest",
    "typescript.preferences.importModuleSpecifierEnding"                           : "auto",
    "typescript.preferences.includePackageJsonAutoImports"                         : "auto",
    "typescript.preferences.jsxAttributeCompletionStyle"                           : "auto",
    "typescript.preferences.quoteStyle"                                            : "auto",
    "typescript.preferences.useAliasesForRenames"                                  : true,
    "typescript.referencesCodeLens.enabled"                                        : false,
    "typescript.referencesCodeLens.showOnAllFunctions"                             : false,
    "typescript.reportStyleChecksAsWarnings"                                       : true,
    "typescript.suggest.autoImports"                                               : true,
    "typescript.suggest.classMemberSnippets.enabled"                               : true,
    "typescript.suggest.completeFunctionCalls"                                     : false,
    "typescript.suggest.completeJSDocs"                                            : true,
    "typescript.suggest.enabled"                                                   : true,
    "typescript.suggest.includeAutomaticOptionalChainCompletions"                  : true,
    "typescript.suggest.includeCompletionsForImportStatements"                     : true,
    "typescript.suggest.includeCompletionsWithSnippetText"                         : true,
    "typescript.suggest.jsdoc.generateReturns"                                     : true,
    "typescript.suggest.objectLiteralMethodSnippets.enabled"                       : true,
    "typescript.suggest.paths"                                                     : true,
    "typescript.surveys.enabled"                                                   : true,
    "typescript.tsc.autoDetect"                                                    : "on",
    "typescript.tsdk"                                                              : "",
    "typescript.tsserver.enableTracing"                                            : false,
    "typescript.tsserver.maxTsServerMemory"                                        : 3072,
    "typescript.tsserver.pluginPaths"                                              : [],
    "typescript.tsserver.trace"                                                    : "off",
    "typescript.tsserver.tsserver.useSyntaxServer"                                 : true,
    "typescript.tsserver.useSyntaxServer"                                          : "auto",
    "typescript.tsserver.watchOptions"                                             : {},
    "typescript.updateImportsOnFileMove.enabled"                                   : "prompt",
    "typescript.validate.enable"                                                   : true,
    "typescript.workspaceSymbols.scope"                                            : "allOpenProjects",
    "totalTypeScript.hideBasicTips"                                                : true,
    "typescript.preferences.preferTypeOnlyAutoImports"                             : true,
    "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName"              : true,
    "typescript.preferences.autoImportFileExcludePatterns"                         : [],

    // GO Settings
    "go.formatFlags"                   : [],
    "go.formatTool"                    : "default",
    "go.terminal.activateEnvironment"  : true,
    "go.alternateTools"                : {},
    "go.autocompleteUnimportedPackages": false,
    "go.buildFlags"                    : [],
    "go.buildOnSave"                   : "package",
    "go.buildTags"                     : "",
    "go.coverMode"                     : "default",
    "go.coverOnSave"                   : false,
    "go.coverOnSingleTest"             : false,
    "go.coverOnSingleTestFile"         : false,
    "go.coverOnTestPackage"            : true,
    "go.coverShowCounts"               : false,
    "go.coverageDecorator"             : {
        "coveredBorderColor"     : "rgba(64,128,128,0.5)",
        "coveredGutterStyle"     : "blockblue",
        "coveredHighlightColor"  : "rgba(64,128,128,0.5)",
        "type"                   : "highlight",
        "uncoveredBorderColor"   : "rgba(128,64,64,0.25)",
        "uncoveredGutterStyle"   : "slashyellow",
        "uncoveredHighlightColor": "rgba(128,64,64,0.25)"
    },
    "go.coverageOptions"          : "showBothCoveredAndUncoveredCode",
    "go.delveConfig"              : {},
    "go.disableConcurrentTests"   : false,
    "go.docsTool"                 : "godoc",
    "go.editorContextMenuCommands": {
        "addImport"              : true,
        "addTags"                : true,
        "benchmarkAtCursor"      : false,
        "debugTestAtCursor"      : true,
        "fillStruct"             : false,
        "generateTestForFile"    : false,
        "generateTestForFunction": true,
        "generateTestForPackage" : false,
        "playground"             : true,
        "removeTags"             : false,
        "testAtCursor"           : true,
        "testCoverage"           : true,
        "testFile"               : false,
        "testPackage"            : false,
        "toggleTestFile"         : true
    },
    "go.generateTestsFlags"                         : [],
    "go.gocodeAutoBuild"                            : false,
    "go.gocodePackageLookupMode"                    : "go",
    "go.gopath"                                     : null,
    "go.goroot"                                     : null,
    "go.gotoSymbol.ignoreFolders"                   : [],
    "go.gotoSymbol.includeGoroot"                   : false,
    "go.gotoSymbol.includeImports"                  : false,
    "go.inferGopath"                                : false,
    "go.installDependenciesWhenBuilding"            : false,
    "go.languageServerFlags"                        : [],
    "go.lintFlags"                                  : [],
    "go.lintOnSave"                                 : "package",
    "go.lintTool"                                   : "staticcheck",
    "go.survey.prompt"                              : true,
    "go.testEnvFile"                                : null,
    "go.testEnvVars"                                : {},
    "go.testExplorer.alwaysRunBenchmarks"           : false,
    "go.testExplorer.concatenateMessages"           : true,
    "go.testExplorer.enable"                        : true,
    "go.testExplorer.packageDisplayMode"            : "flat",
    "go.testExplorer.showDynamicSubtestsInEditor"   : false,
    "go.testExplorer.showOutput"                    : true,
    "go.testFlags"                                  : null,
    "go.testOnSave"                                 : false,
    "go.testTags"                                   : null,
    "go.testTimeout"                                : "30s",
    "go.toolsEnvVars"                               : {},
    "go.toolsGopath"                                : null,
    "go.toolsManagement.autoUpdate"                 : false,
    "go.toolsManagement.checkForUpdates"            : "proxy",
    "go.toolsManagement.go"                         : "",
    "go.trace.server"                               : "off",
    "go.useCodeSnippetsOnFunctionSuggest"           : false,
    "go.useCodeSnippetsOnFunctionSuggestWithoutType": false,
    "go.useGoProxyToCheckForToolUpdates"            : true,
    "go.useLanguageServer"                          : true,
    "go.vetFlags"                                   : [],
    "go.vetOnSave"                                  : "package",
    "gopls"                                         : {},
    "go.addTags"                                    : {
        "options"      : "json=omitempty",
        "promptForTags": false,
        "tags"         : "json",
        "template"     : "",
        "transform"    : "snakecase"
    },
    "go.enableCodeLens": {
        "references": false,
        "runtest"   : true
    },
    "go.gocodeFlags": ["-builtin", "-ignore-case", "-unimported-packages"],
    "go.liveErrors" : {
        "delay"  : 500,
        "enabled": false
    },
    "go.logging.level": "error",
    "go.playground"   : {
        "openbrowser": true,
        "run"        : true,
        "share"      : true
    },
    "go.removeTags": {
        "options"      : "",
        "promptForTags": false,
        "tags"         : ""
    },

    // !═════ Zen Mode Settings ════════════════════════════════════════════════

    "zenMode.centerLayout"         : true,
    "zenMode.fullScreen"           : true,
    "zenMode.hideActivityBar"      : true,
    "zenMode.hideLineNumbers"      : true,
    "zenMode.hideStatusBar"        : true,
    "zenMode.restore"              : true,
    "zenMode.showTabs"             : "single",
    "zenMode.hideFolders"          : true,
    "zenMode.hideMenuBar"          : true,
    "zenMode.maximizeEditorOnStart": true,
    "zenMode.silentNotifications"  : true,

    // !═════ The End  ═════════════════════════════════════════════════════════

"animations.Install-Method": "Apc Customize UI++",
"apc.imports": [
    "file://${userHome}/.vscode-oss/extensions/brandonkirbyson.vscode-animations-2.0.7/dist/updateHandler.js"
],

// UX/UI
"window.titleBarStyle"                          : "custom",
"workbench.settings.editor"                     : "ui",
"workbench.iconTheme"                           : "symbols",
"workbench.colorTheme"                          : "Default Dark+",
"workbench.productIconTheme"                    : "fluent-icons",
"workbench.preferredLightColorTheme"            : "Default Dark+",
"workbench.preferredDarkColorTheme"             : "Default Dark+",
"workbench.preferredHighContrastColorTheme"     : "Default High Contrast",
"workbench.preferredHighContrastLightColorTheme": "Default High Contrast Light",

"workbench.settings.applyToAllProfiles": [
    "workbench.colorCustomizations"
],
"workbench.colorCustomizations": {

    // Activity Bar
    "activityBar.background": "#00000000",
    "activityBar.dropBackground": "#000000",
    "activityBar.foreground": "#000000",
    "activityBar.border": "#404040",
    "activityBarBadge.background": "#00ff00",
    "activityBarBadge.foreground": "#000000",

    // Badge
    // "badge.foreground": "#000000",
    // "badge.background": "#00000000",

    // Button Control
    "button.background": "#0011ff",
    "button.foreground": "#000000",
    "button.hoverBackground": "#00ff00",

    // Dropdown Control
    "dropdown.background": "#00000000",
    "dropdown.listBackground": "#262626",
    "dropdown.border": "#404040",
    "dropdown.foreground": "#33FFDD",

     // Debug
    "debugToolBar.background": "#00000000",
    "debugExceptionWidget.background": "#2B2B2B",
    "debugExceptionWidget.border": "#FF3333",

    // Side Bar
    "sideBar.background": "#00000000",
    "sideBar.foreground": "#909090",
    "sideBar.border": "#404040",
    "sideBar.dropBackground": "#00000000",
    "sideBarTitle.foreground": "#00ff00",
    "sideBarSectionHeader.background": "#00000000",
    "sideBarSectionHeader.foreground": "#00ffdd",

    // Scroll Bar Control
    "scrollbar.shadow": "#00000099",
    "scrollbarSlider.activeBackground": "#0aff02",
    "scrollbarSlider.background": "#606060",
    "scrollbarSlider.hoverBackground": "#4e4b4c88",

    // Progress Bar
    "progressBar.background": "#00000000",

    // Editor Groups & Tabs
    "editorGroup.background": "#00000000",
    "editorGroup.border": "#22e908",
    "editorGroup.dropBackground": "#00000000",
    "editorGroupHeader.noTabsBackground": "#00000000",
    "editorGroupHeader.tabsBackground": "#00000000",
    "editorGroupHeader.tabsBorder": "#404040",
    "tab.activeBackground": "#00000000",
    "tab.activeForeground": "#00ff00",
    "tab.border": "#00ff00",
    "tab.activeBorder": "#00ff00",
    "tab.unfocusedActiveBorder": "#33FFDD",
    "tab.inactiveBackground": "#00000000",
    "tab.inactiveForeground": "#000000",
    "tab.unfocusedActiveForeground": "#2bff00",
    "tab.unfocusedInactiveForeground": "#00000000",
    "tab.hoverBackground": "#00ff00",
    "tab.unfocusedHoverBackground": "#00000000",
    "tab.hoverBorder": "#d9ff00",
    "tab.unfocusedHoverBorder": "#33FFDD",

    // Editor Colors
    "editor.background": "#00000000",
    "editor.foreground": "#00e1ff",
    "editorLineNumber.foreground": "#777777",
    "editorLineNumber.activeForeground": "#00ff00",
    "editorCursor.background": "#00000000",
    "editorCursor.foreground": "#09ff00",
    "editor.selectionBackground": "#24ee0988",
    "editor.selectionForeground": "#070707",
    "editor.inactiveSelectionBackground": "#e5ff0033",
    "editor.selectionHighlightBackground": "#0e0d0d55",
    "editor.selectionHighlightBorder": "#15ff00",
    "editor.wordHighlightBackground": "#48c94e22",
    "editor.wordHighlightBorder": "#00ff40",
    "editor.wordHighlightStrongBackground": "#1ae44c44",
    "editor.wordHighlightStrongBorder": "#2bff00",
    "editor.findMatchBackground": "#ff0000",
    "editor.findMatchHighlightBackground": "#26ec9055",
    "editor.findRangeHighlightBackground": "#13f02622",
    "editor.findMatchBorder": "#07f844",
    "editor.findMatchHighlightBorder": "#33FFDD",
    "editor.hoverHighlightBackground": "#FF69B444",
    "editor.lineHighlightBackground": "#2B2B2B",
    "editor.lineHighlightBorder": "#00ff4c",
    "editorLink.activeForeground": "#00ff55",
    "editor.rangeHighlightBackground": "#FF69B422",
    "editor.rangeHighlightBorder": "#00ff4c",
    // "editorWhitespace.foreground": "#33FFDD",
    "editorIndentGuide.background1": "#4C566A", // Color for inactive indent guides
    "editorIndentGuide.activeBackground1": "#88C0D0", // Color for the active `indent` guide
    "editorRuler.foreground": "#303030",
    "editorCodeLens.foreground": "#33FFDD",
    "editorBracketMatch.background": "#FF69B433",
    "editorBracketMatch.border": "#101010",
    "editorOverviewRuler.border": "#101010",
    "editorOverviewRuler.findMatchForeground": "#00000000",
    "editorOverviewRuler.rangeHighlightForeground": "#00000000",
    "editorOverviewRuler.selectionHighlightForeground": "#00000000",
    "editorOverviewRuler.wordHighlightForeground": "#00000000",
    "editorOverviewRuler.wordHighlightStrongForeground": "#00000000",
    "editorOverviewRuler.modifiedForeground": "#33FFDD",
    "editorOverviewRuler.addedForeground": "#FF69B4",
    "editorOverviewRuler.deletedForeground": "#FF3333",
    "editorOverviewRuler.errorForeground": "#FF3333",
    "editorOverviewRuler.warningForeground": "#FFFF33",
    "editorOverviewRuler.infoForeground": "#33FFDD",
    "editorError.foreground": "#FF3333",
    "editorError.border": "#FF3333",
    "editorWarning.foreground": "#FFFF33",
    "editorWarning.border": "#FFFF33",
    "editorInfo.foreground": "#33FFDD",
    "editorInfo.border": "#33FFDD",
    "editorHint.foreground": "#FF69B4",
    "editorHint.border": "#FF69B4",
    "editorGutter.background": "#00000000",
    "editorGutter.modifiedBackground": "#33FFDD",
    "editorGutter.addedBackground": "#FF69B4",
    "editorGutter.deletedBackground": "#FF3333",

    // Editor Widget Colors
    "editorWidget.background": "#000000",
    "editorWidget.border": "#00000000",
    "editorSuggestWidget.background": "#000000",
    "editorSuggestWidget.border": "#463246",
    "editorSuggestWidget.foreground": "#09ff00",
    "editorSuggestWidget.highlightForeground": "#00ff22",
    "editorSuggestWidget.selectedBackground": "#000000",
    "editorHoverWidget.background": "#2B2B2B",
    "editorHoverWidget.border": "#0f0c0f",
    "editorMarkerNavigation.background": "#1E1E2E",
    "editorMarkerNavigationError.background": "#FF3333",
    "editorMarkerNavigationWarning.background": "#FFFF33",
    "editorMarkerNavigationInfo.background": "#33FFDD",
    "editorOverviewRuler.currentContentForeground": "#33FFDD",
    "editorOverviewRuler.commonContentForeground": "#00ff0d",

    // Extensions
    "extensionButton.prominentForeground": "#00000000",
    "extensionButton.prominentBackground": "#00000000",
    "extensionButton.prominentHoverBackground": "#00ff15",
    "pickerGroup.border": "#00ff40",
    "pickerGroup.foreground": "#00f7ff",

     // Input Control
    "input.background": "#00000000",
    "input.border": "#000000",
    "input.foreground": "#909090",
    "input.placeholderForeground": "#909090",
    "inputOption.activeBorder": "#000000",
    "inputValidation.errorBackground": "#00000000",
    "inputValidation.errorBorder": "#FF3333",
    "inputValidation.infoBackground": "#002B2B",
    "inputValidation.infoBorder": "#2bff00",
    "inputValidation.warningBackground": "#2B2B00",
    "inputValidation.warningBorder": "#FFFF33",

    // Panel Colors
    "panel.background": "#00000000",
    "panel.border": "#404040",
    "panel.dropBackground": "#00000000",
    "panelTitle.activeBorder": "#15ff00",
    "panelTitle.activeForeground": "#09ff00",
    "panelTitle.inactiveForeground": "#000000",

    // Peek View Colors
    "peekView.border": "#080608",
    "peekViewEditor.background": "#1E1E2E",
    "peekViewEditorGutter.background": "#1E1E2E",
    "peekViewEditor.matchHighlightBackground": "#6200ff",
    "peekViewResult.background": "#2B2B2B",
    "peekViewResult.fileForeground": "#00ff0d",
    "peekViewResult.lineForeground": "#33FFDD",
    "peekViewResult.matchHighlightBackground": "#2f00ff",
    "peekViewResult.selectionBackground": "#ffffff",
    "peekViewResult.selectionForeground": "#000000",
    "peekViewTitle.background": "#1E1E2E",
    "peekViewTitleDescription.foreground": "#33FFDD",
    "peekViewTitleLabel.foreground": "#0099ff",

    // Status Bar Colors
    "statusBar.background": "#00000000",
    "statusBar.foreground": "#000000",
    "statusBar.border": "#303030",
    "statusBar.debuggingBackground": "#FF3333",
    "statusBar.debuggingForeground": "#000000",
    "statusBar.debuggingBorder": "#FF3333",
    "statusBar.noFolderForeground": "#33FFDD",
    "statusBar.noFolderBackground": "#2B2B2B",
    "statusBar.noFolderBorder": "#000000",
    "statusBarItem.activeBackground": "#69ff71",
    "statusBarItem.hoverBackground": "#6eff6988",
    "statusBarItem.prominentBackground": "#2bff00",
    "statusBarItem.prominentHoverBackground": "#69ffda",

    // Lists and Trees
    "list.activeSelectionBackground": "#00ff00",
    "list.activeSelectionForeground": "#000000",
    "list.dropBackground": "#505050",
    "list.focusBackground": "#00ff00",
    "list.focusForeground": "#ff00ff",
    "list.highlightForeground": "#0084ff",
    "list.hoverBackground": "#00000000",
    "list.hoverForeground": "#00ff00",
    "list.inactiveSelectionBackground": "#00000000",
    "list.inactiveSelectionForeground": "#00ff00",
    "list.inactiveFocusBackground": "#00000000",
    "list.invalidItemForeground": "#FF3333",

    // Text Colors
    "textBlockQuote.background": "#2B2B2B",
    "textBlockQuote.border": "#00ff55",
    "textCodeBlock.background": "#1E1E2E",
    "textLink.activeForeground": "#00FFFF",
    "textLink.foreground": "#00fff2",
    "textPreformat.foreground": "#33FFDD",
    "textSeparator.foreground": "#00FFFF",

    // Title Bar Colors
    "titleBar.activeBackground": "#00000000",
    "titleBar.activeForeground": "#000000",
    "titleBar.inactiveBackground": "#00000000",
    "titleBar.inactiveForeground": "#606060",
    "titleBar.border": "#404040",

    // Notification Colors
    "notifications.background": "#00000000",
    "notificationLink.foreground": "#33ff00",
    "notificationCenterHeader.background": "#00000000",
    "notificationCenterHeader.foreground": "#ffff00",
    "notificationCenter.border": "#00000000",
    "notifications.border": "#00000000",
    "notificationToast.border": "#00ff22",
    "notifications.foreground": "#00f7ff",

    // Welcome Page
    "welcomePage.buttonBackground": "#000000",
    "welcomePage.buttonHoverBackground": "#FF69B4",
    "walkThrough.embeddedEditorBackground": "#1E1E2E",

    // Git Colors
    "gitDecoration.modifiedResourceForeground": "#33FFDD",
    "gitDecoration.deletedResourceForeground": "#FF0000",
    "gitDecoration.untrackedResourceForeground": "#FFC0CB",
    "gitDecoration.ignoredResourceForeground": "#666666",
    "gitDecoration.conflictingResourceForeground": "#FF69B4",

       // Merge Conflicts
    "merge.currentHeaderBackground": "#33FFDD44",
    "merge.currentContentBackground": "#33FFDD22",
    "merge.incomingHeaderBackground": "#FF69B444",
    "merge.incomingContentBackground": "#FF69B422",
    "merge.border": "#ff0000",
    "merge.commonContentBackground": "#FFC0CB22",
    "merge.commonHeaderBackground": "#FFC0CB44",

    // Diff Editor Colors
    "diffEditor.insertedTextBackground": "#33FFDD22",
    "diffEditor.insertedTextBorder": "#33FFDD",
    "diffEditor.removedTextBackground": "#FF333322",
    "diffEditor.removedTextBorder": "#FF3333",

        // Contrast Colors
    "contrastActiveBorder": "#00000000",
    "contrastBorder": "#000000",

    // Base Colors
    "focusBorder": "#000000",
    "foreground": "#a3b9b8",
    "widget.shadow": "#000000",
    "selection.background": "#00ff0d",
    "descriptionForeground": "#33FFDD",
    "errorForeground": "#FF3333",

    // Integrated Terminal Colors
    "terminal.background": "#00000000",
    "terminal.foreground": "#FFC0CB",
    "terminal.ansiBlack": "#000000",
    "terminal.ansiBlue": "#00FFFF",
    "terminal.ansiBrightBlack": "#333333",
    "terminal.ansiBrightBlue": "#00FFFF",
    "terminal.ansiBrightCyan": "#33FFDD",
    "terminal.ansiBrightGreen": "#00FF00",
    "terminal.ansiBrightMagenta": "#FF00FF",
    "terminal.ansiBrightRed": "#FF3333",
    "terminal.ansiBrightWhite": "#FFFFFF",
    "terminal.ansiBrightYellow": "#FFFF33",
    "terminal.ansiCyan": "#00FFFF",
    "terminal.ansiGreen": "#00FF00",
    "terminal.ansiMagenta": "#FF00FF",
    "terminal.ansiRed": "#FF3333",
    "terminal.ansiWhite": "#CCCCCC",
    "terminal.ansiYellow": "#FFFF33",
    "terminal.selectionBackground": "#FF69B444",
    "terminalCursor.background": "#FF00FF",
    "terminalCursor.foreground": "#FF69B4"
},

// Token Colors
    "editor.tokenColorCustomizations": {
        "comments": "#7c7c7c",
        "textMateRules": [
            {
                "scope": [
                    "string.quoted.double",
                    "punctuation.definition.string",
                    "string.quoted.other.lt-gt.include",
                    "keyword.control.c",
                    "storage.type.built-in.c",
                    "storage.type.built-in.primitive.c",
                ],
                "settings": {
                    "foreground": "#a9ff6f"
                }
            },
            {
                "scope": [
                    "variable.other.object.cs",
                    "entity.name.type.cs",
                    "entity.name.type.class",
                    "string.quoted.double.c",
                    "string.quoted.double.include.c",
                    "punctuation.definition.string.begin.c",
                    "punctuation.definition.string.end.c",
                    "string.quoted.other.lt-gt.include.c",
                ],
                "settings": {
                    "foreground": "#f6ff7b"
                }
            },
            {
                "scope": [
                    "keyword",
                    "keyword.operator.expression",
                    "storage.modifier",
                    "storage.type",
                    "entity.name.function.c",
                ],
                "settings": {
                    "foreground": "#eeff00"
                }
            },
            {
                "scope": [
                    "entity.name.function",
                ],
                "settings": {
                    "foreground": "#e2b820"
                }
            },
            {
                "scope": [
                    "keyword.control.directive",
                    "entity.name.variable.parameter",
                    "constant",
                ],
                "settings": {
                    "foreground": "#616800"
                }
            },
            {
                "scope": [
                    "entity.name.function.preprocessor",
                ],
                "settings": {
                    "foreground": "#344250"
                }
            },
            {
                "scope": [
                    "keyword.operator",
                    "variable.other.readwrite",
                ],
                "settings": {
                    "foreground": "#cfcfcf"
                }
            },
            {
                "scope": [
                    "variable",
                    "variable.parameter",
                    "entity.name.variable.local",
                    "support.type.property-name"
                ],
                "settings": {
                    "foreground": "#00ff9d"
                }
            },
            {
                "scope": [
                    "constant.numeric",
                    "constant.other.placeholder",
                    "constant.character.escape",
                ],
                "settings": {
                    "foreground": "#ff7c25"
                }
            },
            {
                "scope": [
                    "entity.other.inherited-class"
                ],
                "settings": {
                    "foreground": "#ff5f72"
                }
            }
        ]
    }

}
